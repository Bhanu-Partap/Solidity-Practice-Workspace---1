{
	"id": "cad1a9de8f59c3e00bb8efb95c3fd42e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"ICO/IcoOptimized.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.26;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\nimport \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\";\n\ncontract ICO is ReentrancyGuardUpgradeable ,OwnableUpgradeable, UUPSUpgradeable {\n    // Chainlink Price Feeds\n    AggregatorV3Interface public priceFeedBNB;\n    AggregatorV3Interface public priceFeedUSDT;\n    AggregatorV3Interface public priceFeedUSDC;\n\n    struct Sale {\n        uint256 startTime;\n        uint256 endTime;\n        uint256 tokenPriceUSD;\n        uint256 tokensSold;\n        bool isFinalized;\n    }\n\n    enum PaymentMethod {\n        BNB,\n        USDT,\n        USDC\n    }\n\n    // State variables\n    IERC20 public token;\n    uint256 public softCapInUSD;\n    uint256 public hardCapInUSD;\n    uint256 public saleCount;\n    uint256 public totalFundsRaisedUSD;\n    uint256 public totalTokensSold;\n    uint256 constant PRECISION_10 = 1e10;\n    uint256 constant PRECISION_18 = 1e18;\n    bool public isICOFinalized ;\n    bool public isTokensAirdropped;\n    bool public isFreezed ;\n\n    address[] public investors;\n    address public usdt;\n    address public usdc;\n\n    // Mappings\n    mapping(uint256 => Sale) public sales;\n    mapping(address => uint256) public contributionsInUSD;\n    mapping(address => uint256) public tokensBoughtByInvestor;\n    mapping(address => PaymentMethod) public paymentMethodForInvestor;\n    mapping(address => mapping(PaymentMethod => uint256))public investorPayments;\n\n    // Events\n    event ICOFinalized(uint256 indexed totalTokensSold);\n    event ImmediateFinalization(uint256 indexed saleId);\n    event RefundInitiated(\n        address indexed investor,\n        uint256 amount,\n        PaymentMethod paymentMethod\n    );\n    event TokenAirdropped(address indexed investor, uint256 airdroppedAmount);\n    event TokensPurchased(\n        address indexed buyer,\n        uint256 indexed saleId,\n        uint256 tokenPurchaseAmount,\n        uint256 tokenPriceUSD,\n        uint256 amountPaid,\n        PaymentMethod paymentMethod\n    );\n    event NewSaleCreated(\n        uint256 indexed saleId,\n        uint256 startTime,\n        uint256 endTime,\n        uint256 tokenPriceUSD\n    );\n\n    function initialize(\n        IERC20 _token,\n        address _usdt,\n        address _usdc,\n        uint256 _softCapInUSD,\n        uint256 _hardCapInUSD,\n        address _priceFeedBNB,\n        address _priceFeedUSDT,\n        address _priceFeedUSDC\n    ) public initializer {\n        __Ownable_init(msg.sender);\n        __UUPSUpgradeable_init(); \n        token = _token;\n        softCapInUSD = _softCapInUSD;\n        hardCapInUSD = _hardCapInUSD;\n        usdt = _usdt;\n        usdc = _usdc;\n        priceFeedBNB = AggregatorV3Interface(_priceFeedBNB);\n        priceFeedUSDT = AggregatorV3Interface(_priceFeedUSDT);\n        priceFeedUSDC = AggregatorV3Interface(_priceFeedUSDC);\n\n\n\n//         isICOFinalized = false;\n//  isTokensAirdropped = false;\n//    isFreezed = false;\n    }\n\n    modifier icoNotFinalized() {\n        require(!isICOFinalized, \"ICO already finalized\");\n        _;\n    }\n\n    modifier freezed() {\n        require(!isFreezed, \"freezed\");\n        _;\n    }\n\n    function freeze() external onlyOwner {\n        require(!isFreezed ,\"Already Freezed\");\n        isFreezed = true;\n    }\n\n    function unFreeze() external onlyOwner {\n        require(isFreezed ,\"Already UnFreezed\");\n        isFreezed = false;\n    }\n\n    function _getPriceFeed(PaymentMethod paymentMethod)\n        public\n        view\n        returns (int256)\n    {\n        if (paymentMethod == PaymentMethod.BNB) {\n            (, int256 price, , , ) = priceFeedBNB.latestRoundData();\n            return price;\n        } else if (paymentMethod == PaymentMethod.USDT) {\n            (, int256 price, , , ) = priceFeedUSDT.latestRoundData();\n            return price;\n        } else if (paymentMethod == PaymentMethod.USDC) {\n            (, int256 price, , , ) = priceFeedUSDC.latestRoundData();\n            return price;\n        } else {\n            revert(\"Unsupported payment method\");\n        }\n    }\n\n    //Constructor Data\n    // 0x1076a267f94719aD63951a75Ff99652512bb1746,\n    // 0xc2BE4Cdb8Fd577d42a0f72796b64c24A5329AEc6,\n    // 0xc6ef04Dde62982A97e1fffD47691e13dF7311683,\n    // 100000000000000000000,\n    // 200000000000000000000,\n    // 0x2514895c72f50D8bd4B4F9b1110F0D6bD2c97526,\n    // 0xEca2605f0BCF2BA5966372C99837b1F182d3D620,\n    // 0x90c069C4538adAc136E051052E14c1cD799C41B7\n\n    function createSale(\n        uint256 _startTime,\n        uint256 _endTime,\n        uint256 _tokenPriceUSD\n    ) external onlyOwner icoNotFinalized freezed {\n        require(\n            _startTime > block.timestamp,\n            \"Start time must be greater than current time\"\n        );\n        require(\n            _endTime > _startTime,\n            \"End time must be greater than start time\"\n        );\n        require(\n            block.timestamp > getLatestSaleEndTime(),\n            \"New sale must start after the last sale ends\"\n        );\n\n        saleCount++;\n        sales[saleCount] = Sale({\n            startTime: _startTime,\n            endTime: _endTime,\n            tokenPriceUSD: _tokenPriceUSD,\n            tokensSold: 0,\n            isFinalized: false\n        });\n        emit NewSaleCreated(saleCount, _startTime, _endTime, _tokenPriceUSD);\n    }\n\n    function calculateTokenAmount(\n        PaymentMethod paymentMethod,\n        uint256 paymentAmount\n    ) public view returns (uint256) {\n        int256 price = _getPriceFeed(paymentMethod) * int256(PRECISION_10);\n        require(price > 0, \"Invalid price feed\");\n\n        uint256 currentSaleId = getCurrentSaleId();\n        Sale storage sale = sales[currentSaleId];\n\n        uint256 tokenPriceInUSD = sale.tokenPriceUSD; // Token price in (18 decimals)\n\n        uint256 paymentAmountInUSD;\n\n        if (paymentMethod == PaymentMethod.BNB) {\n            paymentAmountInUSD =\n                (uint256(price) * paymentAmount) /\n                uint256(PRECISION_18);\n        } else if (\n            paymentMethod == PaymentMethod.USDC ||\n            paymentMethod == PaymentMethod.USDT\n        ) {\n            uint256 stablecoinDecimals = 6;\n            uint256 normalizedAmount = paymentAmount *\n                (10**(18 - stablecoinDecimals));\n            paymentAmountInUSD =\n                (uint256(price) * normalizedAmount) /\n                uint256(PRECISION_18);\n        } else {\n            revert(\"Unsupported payment method\");\n        }\n\n        uint256 tokenAmount = (paymentAmountInUSD * uint256(PRECISION_18)) /\n            tokenPriceInUSD;\n        return tokenAmount;\n    }\n\n    function calculatePaymentAmount(\n        PaymentMethod paymentMethod,\n        uint256 tokenAmount\n    ) public view returns (uint256) {\n        require(tokenAmount > 0, \"Token amount must be greater than zero\");\n\n        int256 price = _getPriceFeed(paymentMethod) * int256(PRECISION_10); // Price is now 18 decimals\n        require(price > 0, \"Invalid price feed\");\n\n        uint256 currentSaleId = getCurrentSaleId();\n        require(currentSaleId != 0, \"No active sale\");\n        // uint256 usdtBalance = IERC20(usdt).balanceOf(address(this));\n\n        Sale storage sale = sales[currentSaleId];\n        uint256 tokenPriceInUSD = sale.tokenPriceUSD; // Assumes token price is in 18 decimals\n        uint256 totalPaymentInUSD = (tokenAmount * tokenPriceInUSD) /\n            PRECISION_18;\n\n        uint256 paymentAmount;\n        if (paymentMethod == PaymentMethod.BNB) {\n            paymentAmount = (totalPaymentInUSD * PRECISION_18) / uint256(price);\n        } else if (\n            paymentMethod == PaymentMethod.USDT ||\n            paymentMethod == PaymentMethod.USDC\n        ) {\n            paymentAmount = (totalPaymentInUSD * (10**6)) / uint256(price);\n        } else {\n            revert(\"Unsupported payment method\");\n        }\n\n        return paymentAmount;\n    }\n\n    function buyTokens(PaymentMethod paymentMethod, uint256 paymentAmount)\n        external\n        payable\n        icoNotFinalized\n        freezed\n    {\n        require(msg.sender != owner(), \"Owner cannot buy tokens\");\n        require(saleCount != 0, \"No sale\");\n        require(!sales[saleCount].isFinalized, \"Sale already finalized\");\n        uint256 tokenAmount;\n        if (paymentMethod == PaymentMethod.BNB) {\n            // Handle native currency payments (BNB)\n            require(msg.value > 0, \"Send a valid BNB amount\");\n            tokenAmount = calculateTokenAmount(paymentMethod, msg.value);\n            investorPayments[msg.sender][paymentMethod] += msg.value;\n        } else if (\n            paymentMethod == PaymentMethod.USDT ||\n            paymentMethod == PaymentMethod.USDC\n        ) {\n            // Handle stablecoin payments\n            require(paymentAmount > 0, \"Enter a valid stablecoin amount\");\n            IERC20 stablecoin = paymentMethod == PaymentMethod.USDT\n                ? IERC20(usdt)\n                : IERC20(usdc);\n            require(\n                stablecoin.transferFrom(\n                    msg.sender,\n                    address(this),\n                    paymentAmount\n                ),\n                \"Stablecoin transfer failed\"\n            );\n            // Calculate token amount for stablecoin payment\n            tokenAmount = calculateTokenAmount(paymentMethod, paymentAmount);\n            investorPayments[msg.sender][paymentMethod] += paymentAmount;\n        } else {\n            revert(\"Unsupported payment method\");\n        }\n        require(tokenAmount > 0, \"Invalid token amount\");\n        // Ensure the purchase does not exceed the hard cap\n        uint256 totalCostInUSD = (tokenAmount *\n            sales[saleCount].tokenPriceUSD) / PRECISION_18;\n        require(\n            totalFundsRaisedUSD + totalCostInUSD <= hardCapInUSD,\n            \"Hard cap reached\"\n        );\n\n        contributionsInUSD[msg.sender] += totalCostInUSD;\n        totalFundsRaisedUSD += totalCostInUSD;\n        sales[saleCount].tokensSold += tokenAmount;\n        totalTokensSold += tokenAmount;\n\n        if (tokensBoughtByInvestor[msg.sender] == 0) {\n            investors.push(msg.sender);\n        }\n        tokensBoughtByInvestor[msg.sender] += tokenAmount;\n        paymentMethodForInvestor[msg.sender] = paymentMethod;\n\n        emit TokensPurchased(\n            msg.sender,\n            saleCount,\n            tokenAmount,\n            sales[saleCount].tokenPriceUSD,\n            paymentAmount,\n            paymentMethod\n        );\n    }\n\n    function finalizeICO()\n        public\n        nonReentrant\n        onlyOwner\n        icoNotFinalized\n        freezed\n    {\n        require(\n            totalFundsRaisedUSD >= softCapInUSD,\n            \"Cannot finalize: Soft cap not reached or sale is ongoing\"\n        );\n        require(isTokensAirdropped, \"Airdrop not completed\");\n\n        isICOFinalized = true;\n        _transferFundsToOwner();\n        emit ICOFinalized(totalTokensSold);\n    }\n\n    function _transferFundsToOwner() private {\n        uint256 nativeBalance = address(this).balance;\n        if (nativeBalance > 0) {\n            (bool success, ) = payable(owner()).call{value: nativeBalance}(\"\");\n            require(success, \"Transfer failed\");\n        }\n\n        // Transfer stablecoin funds (USDT/USDC)\n        uint256 usdtBalance = IERC20(usdt).balanceOf(address(this));\n        if (usdtBalance > 0) {\n            require(\n                IERC20(usdt).transfer(owner(), usdtBalance),\n                \"USDT transfer failed\"\n            );\n        }\n        uint256 usdcBalance = IERC20(usdc).balanceOf(address(this));\n        if (usdcBalance > 0) {\n            require(\n                IERC20(usdc).transfer(owner(), usdcBalance),\n                \"USDC transfer failed\"\n            );\n        }\n    }\n\n    function airdropTokens()\n        external\n        nonReentrant\n        onlyOwner\n        icoNotFinalized\n        freezed\n    {\n        require(!isTokensAirdropped, \"Airdrop already completed\");\n        require(\n            token.balanceOf(msg.sender) >= totalTokensSold,\n            \"Insufficient Funds\"\n        );\n        require(block.timestamp > getLatestSaleEndTime(), \"Sale ongoing\");\n\n        uint256 investorLength = investors.length;\n        uint256 investorsIterated;\n\n        if (investorLength > 10) {\n            investorsIterated = investorLength - 11;\n        } else {\n            investorsIterated = 0;\n        }\n        for (uint256 i = investorLength - 1; i >= investorsIterated; i--) {\n            address investor = investors[i];\n            uint256 tokensBought = tokensBoughtByInvestor[investor];\n            // console.log(\"tokensBought\", tokensBought);\n            // console.log(\"investor\", investor);\n\n            if (tokensBought > 0) {\n                // Transfer the calculated token amount to the investor\n                bool success = token.transferFrom(\n                    owner(),\n                    investor,\n                    tokensBought\n                );\n                require(success, \"Token transfer failed\");\n                investors.pop();\n                // Emit the token airdrop event\n                emit TokenAirdropped(investor, tokensBought);\n            }\n            if (i == 0) {\n                break;\n            }\n        }\n        if (investors.length == 0) {\n            isTokensAirdropped = true;\n        }\n    }\n\n    function initiateRefund() external nonReentrant onlyOwner icoNotFinalized {\n        require(block.timestamp > getLatestSaleEndTime(), \"Sale ongoing\");\n        require(totalFundsRaisedUSD < softCapInUSD, \"Soft cap reached\");\n\n        uint256 investorLength = investors.length;\n        uint256 investorsIterated;\n\n        if (investorLength > 10) {\n            investorsIterated = investorLength - 11;\n        } else {\n            investorsIterated = 0;\n        }\n\n        // uint256 investorLength = investors.length;\n        for (uint256 i = investorLength - 1; i >= investorsIterated; i--) {\n            address investor = investors[i];\n\n            // Refund contributions for all payment methods\n            for (uint8 j = 0; j < 3; j++) {\n                PaymentMethod paymentMethod = PaymentMethod(j);\n                uint256 amount = investorPayments[investor][paymentMethod];\n\n                if (amount > 0) {\n                    investorPayments[investor][paymentMethod] = 0;\n                    if (paymentMethod == PaymentMethod.BNB) {\n                        (bool sent, ) = payable(investor).call{value: amount}(\n                            \"\"\n                        );\n                        require(sent, \"BNB refund failed\");\n                    } else if (\n                        paymentMethod == PaymentMethod.USDT ||\n                        paymentMethod == PaymentMethod.USDC\n                    ) {\n                        IERC20 stablecoin = paymentMethod == PaymentMethod.USDT\n                            ? IERC20(usdt)\n                            : IERC20(usdc);\n                        require(\n                            stablecoin.transfer(investor, amount),\n                            \"Stablecoin refund failed\"\n                        );\n                        \n                    } else {\n                        revert(\"Unsupported payment method for refund\");\n                    }\n                    \n                    emit RefundInitiated(investor, amount, paymentMethod);\n                }\n                \n            }\n            investors.pop();\n            if (i == 0) {\n                    break;\n                }\n        }\n        if (investors.length == 0) {\n            isICOFinalized = true;\n        }\n    }\n\n    receive() external payable {\n        revert(\"Direct BNB transfers not allowed\");\n    }\n\n    function getCurrentSaleId() public view returns (uint256) {\n        return saleCount;\n    }\n\n    function getLatestSaleEndTime() internal view returns (uint256) {\n        return sales[saleCount].endTime;\n    }\n\n    function getSaleStartEndTime(uint256)\n        public\n        view\n        returns (uint256 _startTime, uint256 _endTime)\n    {\n        Sale memory sale = sales[saleCount];\n        return (sale.startTime, sale.endTime);\n    }\n\n    function getSoftCapReached() public view returns (bool) {\n        return (totalFundsRaisedUSD >= softCapInUSD);\n    }\n\n    function getHardCapReached() public view returns (bool) {\n        return (totalFundsRaisedUSD == hardCapInUSD);\n    }\n\n    function getInvestorCount() public view returns (uint256 investorCount) {\n        investorCount = investors.length;\n        return investorCount;\n    }\n     function _authorizeUpgrade(address newImplementation) internal override onlyOwner {}\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuardUpgradeable is Initializable {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.ReentrancyGuard\n    struct ReentrancyGuardStorage {\n        uint256 _status;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ReentrancyGuard\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ReentrancyGuardStorageLocation = 0x9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00;\n\n    function _getReentrancyGuardStorage() private pure returns (ReentrancyGuardStorage storage $) {\n        assembly {\n            $.slot := ReentrancyGuardStorageLocation\n        }\n    }\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    function __ReentrancyGuard_init() internal onlyInitializing {\n        __ReentrancyGuard_init_unchained();\n    }\n\n    function __ReentrancyGuard_init_unchained() internal onlyInitializing {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        $._status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if ($._status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        $._status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        $._status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        return $._status == ENTERED;\n    }\n}\n"
			},
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  function getRoundData(\n    uint80 _roundId\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n\n  function latestRoundData()\n    external\n    view\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1822Proxiable} from \"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\";\nimport {ERC1967Utils} from \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable __self = address(this);\n\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev The call is from an unauthorized context.\n     */\n    error UUPSUnauthorizedCallContext();\n\n    /**\n     * @dev The storage `slot` is unsupported as a UUID.\n     */\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        _checkProxy();\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        _checkNotDelegated();\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data);\n    }\n\n    /**\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\n     * context is not of a proxy with an ERC-1967 compliant implementation pointing to self.\n     * See {_onlyProxy}.\n     */\n    function _checkProxy() internal view virtual {\n        if (\n            address(this) == __self || // Must be called through delegatecall\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\n        ) {\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Reverts if the execution is performed via delegatecall.\n     * See {notDelegated}.\n     */\n    function _checkNotDelegated() internal view virtual {\n        if (address(this) != __self) {\n            // Must not be called through delegatecall\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n     *\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n     * is expected to be the implementation slot in ERC-1967.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\n                revert UUPSUnsupportedProxiableUUID(slot);\n            }\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\n        } catch {\n            // The implementation is not UUPS\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.21;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {IERC1967} from \"../../interfaces/IERC1967.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This library provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\n */\nlibrary ERC1967Utils {\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit IERC1967.Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit IERC1967.AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the ERC-1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit IERC1967.BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert Errors.FailedCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC1967.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n */\ninterface IERC1967 {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "london"
		}
	},
	"output": {
		"contracts": {
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"AggregatorV3Interface": {
					"abi": [
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "description",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint80",
									"name": "_roundId",
									"type": "uint80"
								}
							],
							"name": "getRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decimals()": "313ce567",
							"description()": "7284e416",
							"getRoundData(uint80)": "9a6fc8f5",
							"latestRoundData()": "feaf968c",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"UUPSUpgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"stateVariables": {
							"UPGRADE_INTERFACE_VERSION": {
								"details": "The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade."
							},
							"__self": {
								"custom:oz-upgrades-unsafe-allow": "state-variable-immutable"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"proxiableUUID()": "52d1902d",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xf72d3b11f41fccbbdcacd121f994daab8267ccfceb1fb4f247e4ba274c169d27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e46ee40ddc9e2009176ce5d76aa2c046fd68f2ed52d02d77db191365b7c5b2e\",\"dweb:/ipfs/QmZnxgPmCCHosdvbh4J65uTaFYeGtZGzQ1sXRdeh1y68Zr\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x911c3346ee26afe188f3b9dc267ef62a7ccf940aba1afa963e3922f0ca3d8a06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04539f4419e44a831807d7203375d2bc6a733da256efd02e51290f5d5015218c\",\"dweb:/ipfs/QmPZ97gsAAgaMRPiE2WJfkzRsudQnW5tPAvMgGj1jcTJtR\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol": {
				"ReentrancyGuardUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":\"ReentrancyGuardUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x361126a17677994081cd9cb69c3f50cffff6e920d25cb7e428acdb1ae41d1866\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19ae787a7dd001269cd60a394b1a5261b78925a0fc3a6f927beb2986a9aa56cf\",\"dweb:/ipfs/QmYLfXiuKmcRgTDBEDXMMjXU8t6JxsspUmjxYzqWS55oEv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"IERC1967": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":\"IERC1967\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"IERC1822Proxiable": {
					"abi": [
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.",
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"proxiableUUID()": "52d1902d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ERC1967Utils": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidAdmin",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidBeacon",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "This library provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.",
						"errors": {
							"ERC1967InvalidAdmin(address)": [
								{
									"details": "The `admin` of the proxy is invalid."
								}
							],
							"ERC1967InvalidBeacon(address)": [
								{
									"details": "The `beacon` of the proxy is invalid."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"ADMIN_SLOT": {
								"details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
							},
							"BEACON_SLOT": {
								"details": "The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
							},
							"IMPLEMENTATION_SLOT": {
								"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":496:6237  library ERC1967Utils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":496:6237  library ERC1967Utils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c51982c9aab7cf914f0c2e032275915234ad2c5fe41d9c922998618fdbfe09b864736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c51982c9aab7cf914f0c2e032275915234ad2c5fe41d9c922998618fdbfe09b864736f6c634300081a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC5 NOT DUP3 0xC9 0xAA 0xB7 0xCF SWAP2 0x4F 0xC 0x2E SUB 0x22 PUSH22 0x915234AD2C5FE41D9C922998618FDBFE09B864736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "496:5741:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;496:5741:8;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c51982c9aab7cf914f0c2e032275915234ad2c5fe41d9c922998618fdbfe09b864736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC5 NOT DUP3 0xC9 0xAA 0xB7 0xCF SWAP2 0x4F 0xC 0x2E SUB 0x22 PUSH22 0x915234AD2C5FE41D9C922998618FDBFE09B864736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "496:5741:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_checkNonPayable()": "infinite",
								"_setAdmin(address)": "infinite",
								"_setBeacon(address)": "infinite",
								"_setImplementation(address)": "infinite",
								"changeAdmin(address)": "infinite",
								"getAdmin()": "infinite",
								"getBeacon()": "infinite",
								"getImplementation()": "infinite",
								"upgradeBeaconToAndCall(address,bytes memory)": "infinite",
								"upgradeToAndCall(address,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c51982c9aab7cf914f0c2e032275915234ad2c5fe41d9c922998618fdbfe09b864736f6c634300081a0033",
									".code": [
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"ICO/IcoOptimized.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x911c3346ee26afe188f3b9dc267ef62a7ccf940aba1afa963e3922f0ca3d8a06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04539f4419e44a831807d7203375d2bc6a733da256efd02e51290f5d5015218c\",\"dweb:/ipfs/QmPZ97gsAAgaMRPiE2WJfkzRsudQnW5tPAvMgGj1jcTJtR\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"IBeacon": {
					"abi": [
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is the interface that {BeaconProxy} expects of its beacon.",
						"kind": "dev",
						"methods": {
							"implementation()": {
								"details": "Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"implementation()": "5c60da1b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":233:6032  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":233:6032  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220129a778302f59fcf270b67054afe47ab39af89add94791b3df7f53e5e449dbaf64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220129a778302f59fcf270b67054afe47ab39af89add94791b3df7f53e5e449dbaf64736f6c634300081a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT SWAP11 PUSH24 0x8302F59FCF270B67054AFE47AB39AF89ADD94791B3DF7F53 0xE5 0xE4 BLOBHASH 0xDB 0xAF PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "233:5799:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;233:5799:11;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220129a778302f59fcf270b67054afe47ab39af89add94791b3df7f53e5e449dbaf64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT SWAP11 PUSH24 0x8302F59FCF270B67054AFE47AB39AF89ADD94791B3DF7F53 0xE5 0xE4 BLOBHASH 0xDB 0xAF PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "233:5799:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220129a778302f59fcf270b67054afe47ab39af89add94791b3df7f53e5e449dbaf64736f6c634300081a0033",
									".code": [
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"ICO/IcoOptimized.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "MissingPrecompile",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._",
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"MissingPrecompile(address)": [
								{
									"details": "A necessary precompile is missing."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e9e98b185f5547b8b8cd06598a45d6ea0c207385f9637b76fa831e634031b10364736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e9e98b185f5547b8b8cd06598a45d6ea0c207385f9637b76fa831e634031b10364736f6c634300081a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 0xE9 DUP12 XOR PUSH0 SSTORE SELFBALANCE 0xB8 0xB8 0xCD MOD MSIZE DUP11 GASLIMIT 0xD6 0xEA 0xC KECCAK256 PUSH20 0x85F9637B76FA831E634031B10364736F6C634300 ADDMOD BYTE STOP CALLER ",
							"sourceMap": "411:484:12:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;411:484:12;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e9e98b185f5547b8b8cd06598a45d6ea0c207385f9637b76fa831e634031b10364736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 0xE9 DUP12 XOR PUSH0 SSTORE SELFBALANCE 0xB8 0xB8 0xCD MOD MSIZE DUP11 GASLIMIT 0xD6 0xEA 0xC KECCAK256 PUSH20 0x85F9637B76FA831E634031B10364736F6C634300 ADDMOD BYTE STOP CALLER ",
							"sourceMap": "411:484:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 411,
									"end": 895,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 411,
									"end": 895,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 411,
									"end": 895,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 411,
									"end": 895,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e9e98b185f5547b8b8cd06598a45d6ea0c207385f9637b76fa831e634031b10364736f6c634300081a0033",
									".code": [
										{
											"begin": 411,
											"end": 895,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 411,
											"end": 895,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 411,
											"end": 895,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 411,
											"end": 895,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"ICO/IcoOptimized.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1407:4181  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1407:4181  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220155c86183aebfd73871faa9870c78d275d2637d7882ad645831c7fd44dfca2c564736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220155c86183aebfd73871faa9870c78d275d2637d7882ad645831c7fd44dfca2c564736f6c634300081a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO TLOAD DUP7 XOR GASPRICE 0xEB REVERT PUSH20 0x871FAA9870C78D275D2637D7882AD645831C7FD4 0x4D 0xFC LOG2 0xC5 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "1407:2774:13:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1407:2774:13;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220155c86183aebfd73871faa9870c78d275d2637d7882ad645831c7fd44dfca2c564736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO TLOAD DUP7 XOR GASPRICE 0xEB REVERT PUSH20 0x871FAA9870C78D275D2637D7882AD645831C7FD4 0x4D 0xFC LOG2 0xC5 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "1407:2774:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getInt256Slot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220155c86183aebfd73871faa9870c78d275d2637d7882ad645831c7fd44dfca2c564736f6c634300081a0033",
									".code": [
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"ICO/IcoOptimized.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ICO/IcoOptimized.sol": {
				"ICO": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "totalTokensSold",
									"type": "uint256"
								}
							],
							"name": "ICOFinalized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "saleId",
									"type": "uint256"
								}
							],
							"name": "ImmediateFinalization",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "saleId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "startTime",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "endTime",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenPriceUSD",
									"type": "uint256"
								}
							],
							"name": "NewSaleCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "investor",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "enum ICO.PaymentMethod",
									"name": "paymentMethod",
									"type": "uint8"
								}
							],
							"name": "RefundInitiated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "investor",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "airdroppedAmount",
									"type": "uint256"
								}
							],
							"name": "TokenAirdropped",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "saleId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenPurchaseAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenPriceUSD",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountPaid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "enum ICO.PaymentMethod",
									"name": "paymentMethod",
									"type": "uint8"
								}
							],
							"name": "TokensPurchased",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "enum ICO.PaymentMethod",
									"name": "paymentMethod",
									"type": "uint8"
								}
							],
							"name": "_getPriceFeed",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "airdropTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "enum ICO.PaymentMethod",
									"name": "paymentMethod",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "paymentAmount",
									"type": "uint256"
								}
							],
							"name": "buyTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "enum ICO.PaymentMethod",
									"name": "paymentMethod",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								}
							],
							"name": "calculatePaymentAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "enum ICO.PaymentMethod",
									"name": "paymentMethod",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "paymentAmount",
									"type": "uint256"
								}
							],
							"name": "calculateTokenAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "contributionsInUSD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_startTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_endTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_tokenPriceUSD",
									"type": "uint256"
								}
							],
							"name": "createSale",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "finalizeICO",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "freeze",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurrentSaleId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getHardCapReached",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getInvestorCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "investorCount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "getSaleStartEndTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_startTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_endTime",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getSoftCapReached",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "hardCapInUSD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_usdt",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_usdc",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_softCapInUSD",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_hardCapInUSD",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_priceFeedBNB",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_priceFeedUSDT",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_priceFeedUSDC",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initiateRefund",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "enum ICO.PaymentMethod",
									"name": "",
									"type": "uint8"
								}
							],
							"name": "investorPayments",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "investors",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isFreezed",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isICOFinalized",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isTokensAirdropped",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "paymentMethodForInvestor",
							"outputs": [
								{
									"internalType": "enum ICO.PaymentMethod",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "priceFeedBNB",
							"outputs": [
								{
									"internalType": "contract AggregatorV3Interface",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "priceFeedUSDC",
							"outputs": [
								{
									"internalType": "contract AggregatorV3Interface",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "priceFeedUSDT",
							"outputs": [
								{
									"internalType": "contract AggregatorV3Interface",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "saleCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "sales",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "startTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "endTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenPriceUSD",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokensSold",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isFinalized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "softCapInUSD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "tokensBoughtByInvestor",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalFundsRaisedUSD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalTokensSold",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unFreeze",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "usdc",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "usdt",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"proxiableUUID()": {
								"details": "Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ICO/IcoOptimized.sol\":429:16896  contract ICO is ReentrancyGuardUpgradeable ,OwnableUpgradeable, UUPSUpgradeable {... */\n  mstore(0x40, 0xa0)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1171:1175  this */\n  address\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1128:1176  address private immutable __self = address(this) */\n  0x80\n  mstore\n    /* \"ICO/IcoOptimized.sol\":429:16896  contract ICO is ReentrancyGuardUpgradeable ,OwnableUpgradeable, UUPSUpgradeable {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xca4b0db001bf2677ca5ac885bd7766c7c4b4b5d0170066d4830e0728bf019f64\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"ICO/IcoOptimized.sol\":429:16896  contract ICO is ReentrancyGuardUpgradeable ,OwnableUpgradeable, UUPSUpgradeable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_45\n      jumpi\n      dup1\n      0xc1560a14\n      gt\n      tag_46\n      jumpi\n      dup1\n      0xdf4e0593\n      gt\n      tag_47\n      jumpi\n      dup1\n      0xdf4e0593\n      eq\n      tag_39\n      jumpi\n      dup1\n      0xe8e87389\n      eq\n      tag_40\n      jumpi\n      dup1\n      0xefdcdb45\n      eq\n      tag_41\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_42\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_43\n      jumpi\n      dup1\n      0xfd663da2\n      eq\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      dup1\n      0xc1560a14\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xc211e1f9\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xc81ffdea\n      eq\n      tag_36\n      jumpi\n      dup1\n      0xd1f3b23e\n      eq\n      tag_37\n      jumpi\n      dup1\n      0xd3d9d1e4\n      eq\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      dup1\n      0x99131e7e\n      gt\n      tag_48\n      jumpi\n      dup1\n      0x99131e7e\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xa1e89aec\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xad3cb1cc\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xb5f522f7\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xb9469e1a\n      eq\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x91152c5c\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x91d8730a\n      eq\n      tag_26\n      jumpi\n      dup1\n      0x940c333e\n      eq\n      tag_27\n      jumpi\n      dup1\n      0x960524e3\n      eq\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      dup1\n      0x4dee1dc3\n      gt\n      tag_49\n      jumpi\n      dup1\n      0x63b20117\n      gt\n      tag_50\n      jumpi\n      dup1\n      0x63b20117\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x6c1909ed\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x721bc38b\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x7cf12b90\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x7fb12001\n      eq\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      dup1\n      0x4dee1dc3\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x4f1ef286\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x52d1902d\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x62a469e9\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x62a5af3b\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      dup1\n      0x2151206e\n      gt\n      tag_51\n      jumpi\n      dup1\n      0x2151206e\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x23cc75a8\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x2f48ab7d\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x3e413bee\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x3feb5f2b\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      dup1\n      0x05834e67\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06e4d36f\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x115afc3a\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x117d260f\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x212ea247\n      eq\n      tag_7\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"ICO/IcoOptimized.sol\":15907:15949  revert(\"Direct BNB transfers not allowed\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":216:218   */\n      0x20\n        /* \"ICO/IcoOptimized.sol\":15907:15949  revert(\"Direct BNB transfers not allowed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":198:219   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":235:253   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":228:258   */\n      mstore\n        /* \"#utility.yul\":294:328   */\n      0x44697265637420424e42207472616e7366657273206e6f7420616c6c6f776564\n        /* \"#utility.yul\":274:292   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":267:329   */\n      mstore\n        /* \"#utility.yul\":346:364   */\n      0x64\n      add\n        /* \"ICO/IcoOptimized.sol\":15907:15949  revert(\"Direct BNB transfers not allowed\") */\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ICO/IcoOptimized.sol\":429:16896  contract ICO is ReentrancyGuardUpgradeable ,OwnableUpgradeable, UUPSUpgradeable {... */\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ICO/IcoOptimized.sol\":5590:6875  function calculateTokenAmount(... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n      tag_57\n      tag_58\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n    tag_57:\n      mload(0x40)\n        /* \"#utility.yul\":1014:1039   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1002:1004   */\n      0x20\n        /* \"#utility.yul\":987:1005   */\n      add\n        /* \"ICO/IcoOptimized.sol\":5590:6875  function calculateTokenAmount(... */\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ICO/IcoOptimized.sol\":16407:16524  function getSoftCapReached() public view returns (bool) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n        /* \"ICO/IcoOptimized.sol\":16504:16516  softCapInUSD */\n      sload(0x04)\n        /* \"ICO/IcoOptimized.sol\":16481:16500  totalFundsRaisedUSD */\n      sload(0x07)\n        /* \"ICO/IcoOptimized.sol\":16481:16516  totalFundsRaisedUSD >= softCapInUSD */\n      lt\n      iszero\n        /* \"ICO/IcoOptimized.sol\":16407:16524  function getSoftCapReached() public view returns (bool) {... */\n    tag_64:\n      mload(0x40)\n        /* \"#utility.yul\":1215:1229   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1208:1230   */\n      iszero\n        /* \"#utility.yul\":1190:1231   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1178:1180   */\n      0x20\n        /* \"#utility.yul\":1163:1181   */\n      add\n        /* \"ICO/IcoOptimized.sol\":16407:16524  function getSoftCapReached() public view returns (bool) {... */\n      tag_61\n        /* \"#utility.yul\":1050:1237   */\n      jump\n        /* \"ICO/IcoOptimized.sol\":3680:4326  function _getPriceFeed(PaymentMethod paymentMethod)... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      tag_57\n      tag_70\n      calldatasize\n      0x04\n      tag_71\n      jump\t// in\n    tag_70:\n      tag_72\n      jump\t// in\n        /* \"ICO/IcoOptimized.sol\":6881:8153  function calculatePaymentAmount(... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      pop\n      tag_57\n      tag_77\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_77:\n      tag_78\n      jump\t// in\n        /* \"ICO/IcoOptimized.sol\":15962:16053  function getCurrentSaleId() public view returns (uint256) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_80\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_80:\n      pop\n        /* \"ICO/IcoOptimized.sol\":16037:16046  saleCount */\n      sload(0x06)\n        /* \"ICO/IcoOptimized.sol\":15962:16053  function getCurrentSaleId() public view returns (uint256) {... */\n      jump(tag_57)\n        /* \"ICO/IcoOptimized.sol\":970:997  uint256 public softCapInUSD */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_84\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_84:\n      pop\n      tag_57\n      sload(0x04)\n      dup2\n      jump\n        /* \"ICO/IcoOptimized.sol\":10742:11189  function finalizeICO()... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n      pop\n      tag_89\n      tag_90\n      jump\t// in\n    tag_89:\n      stop\n        /* \"ICO/IcoOptimized.sol\":1356:1375  address public usdt */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_91\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_91:\n      pop\n      sload(0x0b)\n      tag_92\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_92:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1806:1838   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1788:1839   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1776:1778   */\n      0x20\n        /* \"#utility.yul\":1761:1779   */\n      add\n        /* \"ICO/IcoOptimized.sol\":1356:1375  address public usdt */\n      tag_61\n        /* \"#utility.yul\":1642:1845   */\n      jump\n        /* \"ICO/IcoOptimized.sol\":1381:1400  address public usdc */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_96\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_96:\n      pop\n      sload(0x0c)\n      tag_92\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"ICO/IcoOptimized.sol\":1324:1350  address[] public investors */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_100\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_100:\n      pop\n      tag_92\n      tag_102\n      calldatasize\n      0x04\n      tag_103\n      jump\t// in\n    tag_102:\n      tag_104\n      jump\t// in\n        /* \"ICO/IcoOptimized.sol\":1259:1289  bool public isTokensAirdropped */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_106\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_106:\n      pop\n      sload(0x09)\n      tag_64\n      swap1\n      0x0100\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4161:4375  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_14:\n      tag_89\n      tag_111\n      calldatasize\n      0x04\n      tag_112\n      jump\t// in\n    tag_111:\n      tag_113\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3708:3842  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_114\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_114:\n      pop\n      tag_57\n      tag_116\n      jump\t// in\n        /* \"ICO/IcoOptimized.sol\":591:633  AggregatorV3Interface public priceFeedUSDT */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_119\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_119:\n      pop\n      sload(0x01)\n      tag_92\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"ICO/IcoOptimized.sol\":3428:3546  function freeze() external onlyOwner {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_124\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_124:\n      pop\n      tag_89\n      tag_126\n      jump\t// in\n        /* \"ICO/IcoOptimized.sol\":1106:1136  uint256 public totalTokensSold */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_127\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_127:\n      pop\n      tag_57\n      sload(0x08)\n      dup2\n      jump\n        /* \"ICO/IcoOptimized.sol\":4721:5584  function createSale(... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_131\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_131:\n      pop\n      tag_89\n      tag_133\n      calldatasize\n      0x04\n      tag_134\n      jump\t// in\n    tag_133:\n      tag_135\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_136\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_136:\n      pop\n      tag_89\n      tag_138\n      jump\t// in\n        /* \"ICO/IcoOptimized.sol\":1066:1100  uint256 public totalFundsRaisedUSD */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_139\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_139:\n      pop\n      tag_57\n      sload(0x07)\n      dup2\n      jump\n        /* \"ICO/IcoOptimized.sol\":3552:3674  function unFreeze() external onlyOwner {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_143\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_143:\n      pop\n      tag_89\n      tag_145\n      jump\t// in\n        /* \"ICO/IcoOptimized.sol\":13601:15864  function initiateRefund() external nonReentrant onlyOwner icoNotFinalized {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_146\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_146:\n      pop\n      tag_89\n      tag_148\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_149\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_149:\n      pop\n      tag_92\n      tag_151\n      jump\t// in\n        /* \"ICO/IcoOptimized.sol\":12018:13595  function airdropTokens()... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_153\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_153:\n      pop\n      tag_89\n      tag_155\n      jump\t// in\n        /* \"ICO/IcoOptimized.sol\":16530:16647  function getHardCapReached() public view returns (bool) {... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_156\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_156:\n      pop\n        /* \"ICO/IcoOptimized.sol\":16627:16639  hardCapInUSD */\n      sload(0x05)\n        /* \"ICO/IcoOptimized.sol\":16604:16623  totalFundsRaisedUSD */\n      sload(0x07)\n        /* \"ICO/IcoOptimized.sol\":16604:16639  totalFundsRaisedUSD == hardCapInUSD */\n      eq\n        /* \"ICO/IcoOptimized.sol\":16530:16647  function getHardCapReached() public view returns (bool) {... */\n      jump(tag_64)\n        /* \"ICO/IcoOptimized.sol\":8159:10736  function buyTokens(PaymentMethod paymentMethod, uint256 paymentAmount)... */\n    tag_27:\n      tag_89\n      tag_161\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_161:\n      tag_162\n      jump\t// in\n        /* \"ICO/IcoOptimized.sol\":16653:16804  function getInvestorCount() public view returns (uint256 investorCount) {... */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_163\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_163:\n      pop\n        /* \"ICO/IcoOptimized.sol\":16751:16760  investors */\n      0x0a\n        /* \"ICO/IcoOptimized.sol\":16751:16767  investors.length */\n      sload\n        /* \"ICO/IcoOptimized.sol\":16653:16804  function getInvestorCount() public view returns (uint256 investorCount) {... */\n      jump(tag_57)\n        /* \"ICO/IcoOptimized.sol\":544:585  AggregatorV3Interface public priceFeedBNB */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_167\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_167:\n      pop\n      sload(0x00)\n      tag_92\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"ICO/IcoOptimized.sol\":1036:1060  uint256 public saleCount */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_171\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_171:\n      pop\n      tag_57\n      sload(0x06)\n      dup2\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1819:1877  string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\" */\n    tag_31:\n      callvalue\n      dup1\n      iszero\n      tag_175\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_175:\n      pop\n      tag_176\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xdc, 0x0352e302e3)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\n    tag_176:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_179\n      jump\t// in\n        /* \"ICO/IcoOptimized.sol\":1423:1460  mapping(uint256 => Sale) public sales */\n    tag_32:\n      callvalue\n      dup1\n      iszero\n      tag_180\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_180:\n      pop\n      tag_181\n      tag_182\n      calldatasize\n      0x04\n      tag_103\n      jump\t// in\n    tag_182:\n      mstore(0x20, 0x0d)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      dup4\n      add\n      sload\n      0x03\n      dup5\n      add\n      sload\n      0x04\n      swap1\n      swap5\n      add\n      sload\n      swap3\n      swap4\n      swap2\n      swap3\n      swap1\n      swap2\n      swap1\n      0xff\n      and\n      dup6\n      jump\n    tag_181:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":5231:5256   */\n      swap6\n      dup7\n      mstore\n        /* \"#utility.yul\":5287:5289   */\n      0x20\n        /* \"#utility.yul\":5272:5290   */\n      dup7\n      add\n        /* \"#utility.yul\":5265:5299   */\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"#utility.yul\":5315:5333   */\n      swap3\n      dup5\n      add\n        /* \"#utility.yul\":5308:5342   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":5373:5375   */\n      0x60\n        /* \"#utility.yul\":5358:5376   */\n      dup4\n      add\n        /* \"#utility.yul\":5351:5385   */\n      mstore\n        /* \"#utility.yul\":5429:5443   */\n      iszero\n        /* \"#utility.yul\":5422:5444   */\n      iszero\n        /* \"#utility.yul\":5416:5419   */\n      0x80\n        /* \"#utility.yul\":5401:5420   */\n      dup3\n      add\n        /* \"#utility.yul\":5394:5445   */\n      mstore\n        /* \"#utility.yul\":5218:5221   */\n      0xa0\n        /* \"#utility.yul\":5203:5222   */\n      add\n        /* \"ICO/IcoOptimized.sol\":1423:1460  mapping(uint256 => Sale) public sales */\n      tag_61\n        /* \"#utility.yul\":4978:5451   */\n      jump\n        /* \"ICO/IcoOptimized.sol\":1295:1316  bool public isFreezed */\n    tag_33:\n      callvalue\n      dup1\n      iszero\n      tag_186\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_186:\n      pop\n      sload(0x09)\n      tag_64\n      swap1\n      0x010000\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\n        /* \"ICO/IcoOptimized.sol\":1003:1030  uint256 public hardCapInUSD */\n    tag_34:\n      callvalue\n      dup1\n      iszero\n      tag_190\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_190:\n      pop\n      tag_57\n      sload(0x05)\n      dup2\n      jump\n        /* \"ICO/IcoOptimized.sol\":16177:16401  function getSaleStartEndTime(uint256)... */\n    tag_35:\n      callvalue\n      dup1\n      iszero\n      tag_194\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_194:\n      pop\n      tag_195\n      tag_196\n      calldatasize\n      0x04\n      tag_103\n      jump\t// in\n    tag_196:\n      pop\n        /* \"ICO/IcoOptimized.sol\":16337:16346  saleCount */\n      sload(0x06)\n        /* \"ICO/IcoOptimized.sol\":16260:16278  uint256 _startTime */\n      0x00\n        /* \"ICO/IcoOptimized.sol\":16331:16347  sales[saleCount] */\n      swap1\n      dup2\n      mstore\n        /* \"ICO/IcoOptimized.sol\":16331:16336  sales */\n      0x0d\n        /* \"ICO/IcoOptimized.sol\":16331:16347  sales[saleCount] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"ICO/IcoOptimized.sol\":16312:16347  Sale memory sale = sales[saleCount] */\n      dup3\n      mload\n      0xa0\n      dup2\n      add\n      dup5\n      mstore\n      dup2\n      sload\n      dup1\n      dup3\n      mstore\n      0x01\n      dup4\n      add\n      sload\n      swap4\n      dup3\n      add\n      dup5\n      swap1\n      mstore\n      0x02\n      dup4\n      add\n      sload\n      swap5\n      dup3\n      add\n      swap5\n      swap1\n      swap5\n      mstore\n      0x03\n      dup3\n      add\n      sload\n      0x60\n      dup3\n      add\n      mstore\n      0x04\n      swap1\n      swap2\n      add\n      sload\n      0xff\n      and\n      iszero\n      iszero\n      0x80\n      swap1\n      swap2\n      add\n      mstore\n      swap1\n      swap2\n        /* \"ICO/IcoOptimized.sol\":16177:16401  function getSaleStartEndTime(uint256)... */\n      jump\n    tag_195:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":5630:5655   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":5686:5688   */\n      0x20\n        /* \"#utility.yul\":5671:5689   */\n      dup4\n      add\n        /* \"#utility.yul\":5664:5698   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":5603:5621   */\n      add\n        /* \"ICO/IcoOptimized.sol\":16177:16401  function getSaleStartEndTime(uint256)... */\n      tag_61\n        /* \"#utility.yul\":5456:5704   */\n      jump\n        /* \"ICO/IcoOptimized.sol\":1466:1519  mapping(address => uint256) public contributionsInUSD */\n    tag_36:\n      callvalue\n      dup1\n      iszero\n      tag_200\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_200:\n      pop\n      tag_57\n      tag_202\n      calldatasize\n      0x04\n      tag_203\n      jump\t// in\n    tag_202:\n      mstore(0x20, 0x0e)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"ICO/IcoOptimized.sol\":1226:1252  bool public isICOFinalized */\n    tag_37:\n      callvalue\n      dup1\n      iszero\n      tag_206\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_206:\n      pop\n      sload(0x09)\n      tag_64\n      swap1\n      0xff\n      and\n      dup2\n      jump\n        /* \"ICO/IcoOptimized.sol\":639:681  AggregatorV3Interface public priceFeedUSDC */\n    tag_38:\n      callvalue\n      dup1\n      iszero\n      tag_210\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_210:\n      pop\n      sload(0x02)\n      tag_92\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"ICO/IcoOptimized.sol\":1588:1653  mapping(address => PaymentMethod) public paymentMethodForInvestor */\n    tag_39:\n      callvalue\n      dup1\n      iszero\n      tag_214\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_214:\n      pop\n      tag_215\n      tag_216\n      calldatasize\n      0x04\n      tag_203\n      jump\t// in\n    tag_216:\n      mstore(0x20, 0x10)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n    tag_215:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_219\n      jump\t// in\n        /* \"ICO/IcoOptimized.sol\":1525:1582  mapping(address => uint256) public tokensBoughtByInvestor */\n    tag_40:\n      callvalue\n      dup1\n      iszero\n      tag_220\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_220:\n      pop\n      tag_57\n      tag_222\n      calldatasize\n      0x04\n      tag_203\n      jump\t// in\n    tag_222:\n      mstore(0x20, 0x0f)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"ICO/IcoOptimized.sol\":1659:1735  mapping(address => mapping(PaymentMethod => uint256))public investorPayments */\n    tag_41:\n      callvalue\n      dup1\n      iszero\n      tag_225\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_225:\n      pop\n      tag_57\n      tag_227\n      calldatasize\n      0x04\n      tag_228\n      jump\t// in\n    tag_227:\n      0x11\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_42:\n      callvalue\n      dup1\n      iszero\n      tag_231\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_231:\n      pop\n      tag_89\n      tag_233\n      calldatasize\n      0x04\n      tag_203\n      jump\t// in\n    tag_233:\n      tag_234\n      jump\t// in\n        /* \"ICO/IcoOptimized.sol\":945:964  IERC20 public token */\n    tag_43:\n      callvalue\n      dup1\n      iszero\n      tag_235\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_235:\n      pop\n      sload(0x03)\n      tag_92\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"ICO/IcoOptimized.sol\":2454:3229  function initialize(... */\n    tag_44:\n      callvalue\n      dup1\n      iszero\n      tag_240\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_240:\n      pop\n      tag_89\n      tag_242\n      calldatasize\n      0x04\n      tag_243\n      jump\t// in\n    tag_242:\n      tag_244\n      jump\t// in\n        /* \"ICO/IcoOptimized.sol\":5590:6875  function calculateTokenAmount(... */\n    tag_60:\n        /* \"ICO/IcoOptimized.sol\":5715:5722  uint256 */\n      0x00\n        /* \"ICO/IcoOptimized.sol\":5734:5746  int256 price */\n      dup1\n        /* \"ICO/IcoOptimized.sol\":1174:1178  1e10 */\n      0x02540be400\n        /* \"ICO/IcoOptimized.sol\":5749:5777  _getPriceFeed(paymentMethod) */\n      tag_246\n        /* \"ICO/IcoOptimized.sol\":5763:5776  paymentMethod */\n      dup6\n        /* \"ICO/IcoOptimized.sol\":5749:5762  _getPriceFeed */\n      tag_72\n        /* \"ICO/IcoOptimized.sol\":5749:5777  _getPriceFeed(paymentMethod) */\n      jump\t// in\n    tag_246:\n        /* \"ICO/IcoOptimized.sol\":5749:5800  _getPriceFeed(paymentMethod) * int256(PRECISION_10) */\n      tag_247\n      swap2\n      swap1\n      tag_248\n      jump\t// in\n    tag_247:\n        /* \"ICO/IcoOptimized.sol\":5734:5800  int256 price = _getPriceFeed(paymentMethod) * int256(PRECISION_10) */\n      swap1\n      pop\n        /* \"ICO/IcoOptimized.sol\":5826:5827  0 */\n      0x00\n        /* \"ICO/IcoOptimized.sol\":5818:5823  price */\n      dup2\n        /* \"ICO/IcoOptimized.sol\":5818:5827  price > 0 */\n      sgt\n        /* \"ICO/IcoOptimized.sol\":5810:5850  require(price > 0, \"Invalid price feed\") */\n      tag_249\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8931:8933   */\n      0x20\n        /* \"ICO/IcoOptimized.sol\":5810:5850  require(price > 0, \"Invalid price feed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8913:8934   */\n      mstore\n        /* \"#utility.yul\":8970:8972   */\n      0x12\n        /* \"#utility.yul\":8950:8968   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8943:8973   */\n      mstore\n      shl(0x72, 0x125b9d985b1a59081c1c9a58d94819995959)\n        /* \"#utility.yul\":8989:9007   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8982:9030   */\n      mstore\n        /* \"#utility.yul\":9047:9065   */\n      0x64\n      add\n        /* \"ICO/IcoOptimized.sol\":5810:5850  require(price > 0, \"Invalid price feed\") */\n      tag_54\n        /* \"#utility.yul\":8729:9071   */\n      jump\n        /* \"ICO/IcoOptimized.sol\":5810:5850  require(price > 0, \"Invalid price feed\") */\n    tag_249:\n        /* \"ICO/IcoOptimized.sol\":5861:5882  uint256 currentSaleId */\n      0x00\n        /* \"ICO/IcoOptimized.sol\":5885:5903  getCurrentSaleId() */\n      tag_252\n        /* \"ICO/IcoOptimized.sol\":16037:16046  saleCount */\n      sload(0x06)\n      swap1\n        /* \"ICO/IcoOptimized.sol\":15962:16053  function getCurrentSaleId() public view returns (uint256) {... */\n      jump\n        /* \"ICO/IcoOptimized.sol\":5885:5903  getCurrentSaleId() */\n    tag_252:\n        /* \"ICO/IcoOptimized.sol\":5913:5930  Sale storage sale */\n      0x00\n        /* \"ICO/IcoOptimized.sol\":5933:5953  sales[currentSaleId] */\n      dup2\n      dup2\n      mstore\n        /* \"ICO/IcoOptimized.sol\":5933:5938  sales */\n      0x0d\n        /* \"ICO/IcoOptimized.sol\":5933:5953  sales[currentSaleId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"ICO/IcoOptimized.sol\":5990:6008  sale.tokenPriceUSD */\n      0x02\n      dup2\n      add\n      sload\n        /* \"ICO/IcoOptimized.sol\":5861:5903  uint256 currentSaleId = getCurrentSaleId() */\n      swap3\n      swap4\n      pop\n        /* \"ICO/IcoOptimized.sol\":5933:5953  sales[currentSaleId] */\n      swap2\n        /* \"ICO/IcoOptimized.sol\":5990:6008  sale.tokenPriceUSD */\n      swap1\n        /* \"ICO/IcoOptimized.sol\":5913:5930  Sale storage sale */\n      dup1\n        /* \"ICO/IcoOptimized.sol\":6092:6105  paymentMethod */\n      dup9\n        /* \"ICO/IcoOptimized.sol\":6092:6126  paymentMethod == PaymentMethod.BNB */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_257\n      jumpi\n      tag_257\n      tag_255\n      jump\t// in\n    tag_257:\n      sub\n        /* \"ICO/IcoOptimized.sol\":6088:6734  if (paymentMethod == PaymentMethod.BNB) {... */\n      tag_258\n      jumpi\n        /* \"ICO/IcoOptimized.sol\":1216:1220  1e18 */\n      0x0de0b6b3a7640000\n        /* \"ICO/IcoOptimized.sol\":6180:6210  uint256(price) * paymentAmount */\n      tag_259\n        /* \"ICO/IcoOptimized.sol\":6197:6210  paymentAmount */\n      dup9\n        /* \"ICO/IcoOptimized.sol\":6188:6193  price */\n      dup8\n        /* \"ICO/IcoOptimized.sol\":6180:6210  uint256(price) * paymentAmount */\n      tag_260\n      jump\t// in\n    tag_259:\n        /* \"ICO/IcoOptimized.sol\":6179:6251  (uint256(price) * paymentAmount) /... */\n      tag_261\n      swap2\n      swap1\n      tag_262\n      jump\t// in\n    tag_261:\n        /* \"ICO/IcoOptimized.sol\":6142:6251  paymentAmountInUSD =... */\n      swap1\n      pop\n        /* \"ICO/IcoOptimized.sol\":6088:6734  if (paymentMethod == PaymentMethod.BNB) {... */\n      jump(tag_281)\n    tag_258:\n        /* \"ICO/IcoOptimized.sol\":6302:6320  PaymentMethod.USDC */\n      0x02\n        /* \"ICO/IcoOptimized.sol\":6285:6298  paymentMethod */\n      dup9\n        /* \"ICO/IcoOptimized.sol\":6285:6320  paymentMethod == PaymentMethod.USDC */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_267\n      jumpi\n      tag_267\n      tag_255\n      jump\t// in\n    tag_267:\n      eq\n        /* \"ICO/IcoOptimized.sol\":6285:6371  paymentMethod == PaymentMethod.USDC ||... */\n      dup1\n      tag_268\n      jumpi\n      pop\n        /* \"ICO/IcoOptimized.sol\":6353:6371  PaymentMethod.USDT */\n      0x01\n        /* \"ICO/IcoOptimized.sol\":6336:6349  paymentMethod */\n      dup9\n        /* \"ICO/IcoOptimized.sol\":6336:6371  paymentMethod == PaymentMethod.USDT */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_272\n      jumpi\n      tag_272\n      tag_255\n      jump\t// in\n    tag_272:\n      eq\n        /* \"ICO/IcoOptimized.sol\":6285:6371  paymentMethod == PaymentMethod.USDC ||... */\n    tag_268:\n        /* \"ICO/IcoOptimized.sol\":6268:6734  if (... */\n      iszero\n      tag_273\n      jumpi\n        /* \"ICO/IcoOptimized.sol\":6425:6426  6 */\n      0x06\n        /* \"ICO/IcoOptimized.sol\":6396:6422  uint256 stablecoinDecimals */\n      0x00\n        /* \"ICO/IcoOptimized.sol\":6505:6528  18 - stablecoinDecimals */\n      tag_274\n        /* \"ICO/IcoOptimized.sol\":6425:6426  6 */\n      dup3\n        /* \"ICO/IcoOptimized.sol\":6505:6507  18 */\n      0x12\n        /* \"ICO/IcoOptimized.sol\":6505:6528  18 - stablecoinDecimals */\n      tag_275\n      jump\t// in\n    tag_274:\n        /* \"ICO/IcoOptimized.sol\":6500:6529  10**(18 - stablecoinDecimals) */\n      tag_276\n      swap1\n        /* \"ICO/IcoOptimized.sol\":6500:6502  10 */\n      0x0a\n        /* \"ICO/IcoOptimized.sol\":6500:6529  10**(18 - stablecoinDecimals) */\n      tag_277\n      jump\t// in\n    tag_276:\n        /* \"ICO/IcoOptimized.sol\":6467:6530  paymentAmount *... */\n      tag_278\n      swap1\n        /* \"ICO/IcoOptimized.sol\":6467:6480  paymentAmount */\n      dup11\n        /* \"ICO/IcoOptimized.sol\":6467:6530  paymentAmount *... */\n      tag_260\n      jump\t// in\n    tag_278:\n        /* \"ICO/IcoOptimized.sol\":6440:6530  uint256 normalizedAmount = paymentAmount *... */\n      swap1\n      pop\n        /* \"ICO/IcoOptimized.sol\":1216:1220  1e18 */\n      0x0de0b6b3a7640000\n        /* \"ICO/IcoOptimized.sol\":6582:6615  uint256(price) * normalizedAmount */\n      tag_279\n        /* \"ICO/IcoOptimized.sol\":6440:6530  uint256 normalizedAmount = paymentAmount *... */\n      dup3\n        /* \"ICO/IcoOptimized.sol\":6590:6595  price */\n      dup10\n        /* \"ICO/IcoOptimized.sol\":6582:6615  uint256(price) * normalizedAmount */\n      tag_260\n      jump\t// in\n    tag_279:\n        /* \"ICO/IcoOptimized.sol\":6581:6656  (uint256(price) * normalizedAmount) /... */\n      tag_280\n      swap2\n      swap1\n      tag_262\n      jump\t// in\n    tag_280:\n        /* \"ICO/IcoOptimized.sol\":6544:6656  paymentAmountInUSD =... */\n      swap3\n      pop\n        /* \"ICO/IcoOptimized.sol\":6382:6667  {... */\n      pop\n      pop\n        /* \"ICO/IcoOptimized.sol\":6268:6734  if (... */\n      jump(tag_281)\n    tag_273:\n        /* \"ICO/IcoOptimized.sol\":6687:6723  revert(\"Unsupported payment method\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11229:11231   */\n      0x20\n        /* \"ICO/IcoOptimized.sol\":6687:6723  revert(\"Unsupported payment method\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11211:11232   */\n      mstore\n        /* \"#utility.yul\":11268:11270   */\n      0x1a\n        /* \"#utility.yul\":11248:11266   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11241:11271   */\n      mstore\n        /* \"#utility.yul\":11307:11335   */\n      0x556e737570706f72746564207061796d656e74206d6574686f64000000000000\n        /* \"#utility.yul\":11287:11305   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11280:11336   */\n      mstore\n        /* \"#utility.yul\":11353:11371   */\n      0x64\n      add\n        /* \"ICO/IcoOptimized.sol\":6687:6723  revert(\"Unsupported payment method\") */\n      tag_54\n        /* \"#utility.yul\":11027:11377   */\n      jump\n        /* \"ICO/IcoOptimized.sol\":6268:6734  if (... */\n    tag_281:\n        /* \"ICO/IcoOptimized.sol\":6744:6763  uint256 tokenAmount */\n      0x00\n        /* \"ICO/IcoOptimized.sol\":6825:6840  tokenPriceInUSD */\n      dup3\n        /* \"ICO/IcoOptimized.sol\":6767:6809  paymentAmountInUSD * uint256(PRECISION_18) */\n      tag_284\n        /* \"ICO/IcoOptimized.sol\":1216:1220  1e18 */\n      0x0de0b6b3a7640000\n        /* \"ICO/IcoOptimized.sol\":6767:6785  paymentAmountInUSD */\n      dup5\n        /* \"ICO/IcoOptimized.sol\":6767:6809  paymentAmountInUSD * uint256(PRECISION_18) */\n      tag_260\n      jump\t// in\n    tag_284:\n        /* \"ICO/IcoOptimized.sol\":6766:6840  (paymentAmountInUSD * uint256(PRECISION_18)) /... */\n      tag_285\n      swap2\n      swap1\n      tag_262\n      jump\t// in\n    tag_285:\n        /* \"ICO/IcoOptimized.sol\":6744:6840  uint256 tokenAmount = (paymentAmountInUSD * uint256(PRECISION_18)) /... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"ICO/IcoOptimized.sol\":5590:6875  function calculateTokenAmount(... */\n    tag_245:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ICO/IcoOptimized.sol\":3680:4326  function _getPriceFeed(PaymentMethod paymentMethod)... */\n    tag_72:\n        /* \"ICO/IcoOptimized.sol\":3777:3783  int256 */\n      0x00\n      dup1\n        /* \"ICO/IcoOptimized.sol\":3803:3816  paymentMethod */\n      dup3\n        /* \"ICO/IcoOptimized.sol\":3803:3837  paymentMethod == PaymentMethod.BNB */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_291\n      jumpi\n      tag_291\n      tag_255\n      jump\t// in\n    tag_291:\n      sub\n        /* \"ICO/IcoOptimized.sol\":3799:4320  if (paymentMethod == PaymentMethod.BNB) {... */\n      tag_292\n      jumpi\n        /* \"ICO/IcoOptimized.sol\":3856:3868  int256 price */\n      0x00\n        /* \"ICO/IcoOptimized.sol\":3878:3890  priceFeedBNB */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ICO/IcoOptimized.sol\":3878:3906  priceFeedBNB.latestRoundData */\n      and\n      0xfeaf968c\n        /* \"ICO/IcoOptimized.sol\":3878:3908  priceFeedBNB.latestRoundData() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xa0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_294\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_294:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_295\n      swap2\n      swap1\n      tag_296\n      jump\t// in\n    tag_295:\n      pop\n        /* \"ICO/IcoOptimized.sol\":3853:3908  (, int256 price, , , ) = priceFeedBNB.latestRoundData() */\n      swap2\n      swap7\n        /* \"ICO/IcoOptimized.sol\":3680:4326  function _getPriceFeed(PaymentMethod paymentMethod)... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ICO/IcoOptimized.sol\":3799:4320  if (paymentMethod == PaymentMethod.BNB) {... */\n    tag_292:\n        /* \"ICO/IcoOptimized.sol\":3972:3990  PaymentMethod.USDT */\n      0x01\n        /* \"ICO/IcoOptimized.sol\":3955:3968  paymentMethod */\n      dup3\n        /* \"ICO/IcoOptimized.sol\":3955:3990  paymentMethod == PaymentMethod.USDT */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_301\n      jumpi\n      tag_301\n      tag_255\n      jump\t// in\n    tag_301:\n      sub\n        /* \"ICO/IcoOptimized.sol\":3951:4320  if (paymentMethod == PaymentMethod.USDT) {... */\n      tag_302\n      jumpi\n        /* \"ICO/IcoOptimized.sol\":4031:4044  priceFeedUSDT */\n      sload(0x01)\n        /* \"ICO/IcoOptimized.sol\":4031:4062  priceFeedUSDT.latestRoundData() */\n      0x40\n      dup1\n      mload\n      shl(0xe2, 0x3fabe5a3)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"ICO/IcoOptimized.sol\":4009:4021  int256 price */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ICO/IcoOptimized.sol\":4031:4044  priceFeedUSDT */\n      and\n      swap2\n        /* \"ICO/IcoOptimized.sol\":4031:4060  priceFeedUSDT.latestRoundData */\n      0xfeaf968c\n      swap2\n        /* \"ICO/IcoOptimized.sol\":4031:4062  priceFeedUSDT.latestRoundData() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n      0xa0\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"ICO/IcoOptimized.sol\":4031:4044  priceFeedUSDT */\n      dup7\n        /* \"ICO/IcoOptimized.sol\":4031:4062  priceFeedUSDT.latestRoundData() */\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_294\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n        /* \"ICO/IcoOptimized.sol\":3951:4320  if (paymentMethod == PaymentMethod.USDT) {... */\n    tag_302:\n        /* \"ICO/IcoOptimized.sol\":4126:4144  PaymentMethod.USDC */\n      0x02\n        /* \"ICO/IcoOptimized.sol\":4109:4122  paymentMethod */\n      dup3\n        /* \"ICO/IcoOptimized.sol\":4109:4144  paymentMethod == PaymentMethod.USDC */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_310\n      jumpi\n      tag_310\n      tag_255\n      jump\t// in\n    tag_310:\n      sub\n        /* \"ICO/IcoOptimized.sol\":4105:4320  if (paymentMethod == PaymentMethod.USDC) {... */\n      tag_273\n      jumpi\n        /* \"ICO/IcoOptimized.sol\":4185:4198  priceFeedUSDC */\n      sload(0x02)\n        /* \"ICO/IcoOptimized.sol\":4185:4216  priceFeedUSDC.latestRoundData() */\n      0x40\n      dup1\n      mload\n      shl(0xe2, 0x3fabe5a3)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"ICO/IcoOptimized.sol\":4163:4175  int256 price */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ICO/IcoOptimized.sol\":4185:4198  priceFeedUSDC */\n      and\n      swap2\n        /* \"ICO/IcoOptimized.sol\":4185:4214  priceFeedUSDC.latestRoundData */\n      0xfeaf968c\n      swap2\n        /* \"ICO/IcoOptimized.sol\":4185:4216  priceFeedUSDC.latestRoundData() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n      0xa0\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"ICO/IcoOptimized.sol\":4185:4198  priceFeedUSDC */\n      dup7\n        /* \"ICO/IcoOptimized.sol\":4185:4216  priceFeedUSDC.latestRoundData() */\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_294\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n        /* \"ICO/IcoOptimized.sol\":4105:4320  if (paymentMethod == PaymentMethod.USDC) {... */\n    tag_315:\n        /* \"ICO/IcoOptimized.sol\":3680:4326  function _getPriceFeed(PaymentMethod paymentMethod)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ICO/IcoOptimized.sol\":6881:8153  function calculatePaymentAmount(... */\n    tag_78:\n        /* \"ICO/IcoOptimized.sol\":7006:7013  uint256 */\n      0x00\n        /* \"ICO/IcoOptimized.sol\":7047:7048  0 */\n      dup1\n        /* \"ICO/IcoOptimized.sol\":7033:7044  tokenAmount */\n      dup3\n        /* \"ICO/IcoOptimized.sol\":7033:7048  tokenAmount > 0 */\n      gt\n        /* \"ICO/IcoOptimized.sol\":7025:7091  require(tokenAmount > 0, \"Token amount must be greater than zero\") */\n      tag_318\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12344:12346   */\n      0x20\n        /* \"ICO/IcoOptimized.sol\":7025:7091  require(tokenAmount > 0, \"Token amount must be greater than zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12326:12347   */\n      mstore\n        /* \"#utility.yul\":12383:12385   */\n      0x26\n        /* \"#utility.yul\":12363:12381   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12356:12386   */\n      mstore\n        /* \"#utility.yul\":12422:12456   */\n      0x546f6b656e20616d6f756e74206d757374206265206772656174657220746861\n        /* \"#utility.yul\":12402:12420   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12395:12457   */\n      mstore\n      shl(0xd0, 0x6e207a65726f)\n        /* \"#utility.yul\":12473:12491   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12466:12502   */\n      mstore\n        /* \"#utility.yul\":12519:12538   */\n      0x84\n      add\n        /* \"ICO/IcoOptimized.sol\":7025:7091  require(tokenAmount > 0, \"Token amount must be greater than zero\") */\n      tag_54\n        /* \"#utility.yul\":12142:12544   */\n      jump\n        /* \"ICO/IcoOptimized.sol\":7025:7091  require(tokenAmount > 0, \"Token amount must be greater than zero\") */\n    tag_318:\n        /* \"ICO/IcoOptimized.sol\":7102:7114  int256 price */\n      0x00\n        /* \"ICO/IcoOptimized.sol\":1174:1178  1e10 */\n      0x02540be400\n        /* \"ICO/IcoOptimized.sol\":7117:7145  _getPriceFeed(paymentMethod) */\n      tag_321\n        /* \"ICO/IcoOptimized.sol\":7131:7144  paymentMethod */\n      dup6\n        /* \"ICO/IcoOptimized.sol\":7117:7130  _getPriceFeed */\n      tag_72\n        /* \"ICO/IcoOptimized.sol\":7117:7145  _getPriceFeed(paymentMethod) */\n      jump\t// in\n    tag_321:\n        /* \"ICO/IcoOptimized.sol\":7117:7168  _getPriceFeed(paymentMethod) * int256(PRECISION_10) */\n      tag_322\n      swap2\n      swap1\n      tag_248\n      jump\t// in\n    tag_322:\n        /* \"ICO/IcoOptimized.sol\":7102:7168  int256 price = _getPriceFeed(paymentMethod) * int256(PRECISION_10) */\n      swap1\n      pop\n        /* \"ICO/IcoOptimized.sol\":7222:7223  0 */\n      0x00\n        /* \"ICO/IcoOptimized.sol\":7214:7219  price */\n      dup2\n        /* \"ICO/IcoOptimized.sol\":7214:7223  price > 0 */\n      sgt\n        /* \"ICO/IcoOptimized.sol\":7206:7246  require(price > 0, \"Invalid price feed\") */\n      tag_323\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8931:8933   */\n      0x20\n        /* \"ICO/IcoOptimized.sol\":7206:7246  require(price > 0, \"Invalid price feed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8913:8934   */\n      mstore\n        /* \"#utility.yul\":8970:8972   */\n      0x12\n        /* \"#utility.yul\":8950:8968   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8943:8973   */\n      mstore\n      shl(0x72, 0x125b9d985b1a59081c1c9a58d94819995959)\n        /* \"#utility.yul\":8989:9007   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8982:9030   */\n      mstore\n        /* \"#utility.yul\":9047:9065   */\n      0x64\n      add\n        /* \"ICO/IcoOptimized.sol\":7206:7246  require(price > 0, \"Invalid price feed\") */\n      tag_54\n        /* \"#utility.yul\":8729:9071   */\n      jump\n        /* \"ICO/IcoOptimized.sol\":7206:7246  require(price > 0, \"Invalid price feed\") */\n    tag_323:\n        /* \"ICO/IcoOptimized.sol\":7257:7278  uint256 currentSaleId */\n      0x00\n        /* \"ICO/IcoOptimized.sol\":7281:7299  getCurrentSaleId() */\n      tag_325\n        /* \"ICO/IcoOptimized.sol\":16037:16046  saleCount */\n      sload(0x06)\n      swap1\n        /* \"ICO/IcoOptimized.sol\":15962:16053  function getCurrentSaleId() public view returns (uint256) {... */\n      jump\n        /* \"ICO/IcoOptimized.sol\":7281:7299  getCurrentSaleId() */\n    tag_325:\n        /* \"ICO/IcoOptimized.sol\":7257:7299  uint256 currentSaleId = getCurrentSaleId() */\n      swap1\n      pop\n        /* \"ICO/IcoOptimized.sol\":7317:7330  currentSaleId */\n      dup1\n        /* \"ICO/IcoOptimized.sol\":7334:7335  0 */\n      0x00\n        /* \"ICO/IcoOptimized.sol\":7317:7335  currentSaleId != 0 */\n      sub\n        /* \"ICO/IcoOptimized.sol\":7309:7354  require(currentSaleId != 0, \"No active sale\") */\n      tag_326\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12751:12753   */\n      0x20\n        /* \"ICO/IcoOptimized.sol\":7309:7354  require(currentSaleId != 0, \"No active sale\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12733:12754   */\n      mstore\n        /* \"#utility.yul\":12790:12792   */\n      0x0e\n        /* \"#utility.yul\":12770:12788   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12763:12793   */\n      mstore\n      shl(0x90, 0x4e6f206163746976652073616c65)\n        /* \"#utility.yul\":12809:12827   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12802:12846   */\n      mstore\n        /* \"#utility.yul\":12863:12881   */\n      0x64\n      add\n        /* \"ICO/IcoOptimized.sol\":7309:7354  require(currentSaleId != 0, \"No active sale\") */\n      tag_54\n        /* \"#utility.yul\":12549:12887   */\n      jump\n        /* \"ICO/IcoOptimized.sol\":7309:7354  require(currentSaleId != 0, \"No active sale\") */\n    tag_326:\n        /* \"ICO/IcoOptimized.sol\":7437:7454  Sale storage sale */\n      0x00\n        /* \"ICO/IcoOptimized.sol\":7457:7477  sales[currentSaleId] */\n      dup2\n      dup2\n      mstore\n        /* \"ICO/IcoOptimized.sol\":7457:7462  sales */\n      0x0d\n        /* \"ICO/IcoOptimized.sol\":7457:7477  sales[currentSaleId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"ICO/IcoOptimized.sol\":7513:7531  sale.tokenPriceUSD */\n      0x02\n      dup2\n      add\n      sload\n        /* \"ICO/IcoOptimized.sol\":7457:7477  sales[currentSaleId] */\n      swap1\n      swap2\n        /* \"ICO/IcoOptimized.sol\":1216:1220  1e18 */\n      0x0de0b6b3a7640000\n        /* \"ICO/IcoOptimized.sol\":7611:7640  tokenAmount * tokenPriceInUSD */\n      tag_329\n        /* \"ICO/IcoOptimized.sol\":7513:7531  sale.tokenPriceUSD */\n      dup4\n        /* \"ICO/IcoOptimized.sol\":7611:7622  tokenAmount */\n      dup10\n        /* \"ICO/IcoOptimized.sol\":7611:7640  tokenAmount * tokenPriceInUSD */\n      tag_260\n      jump\t// in\n    tag_329:\n        /* \"ICO/IcoOptimized.sol\":7610:7668  (tokenAmount * tokenPriceInUSD) /... */\n      tag_330\n      swap2\n      swap1\n      tag_262\n      jump\t// in\n    tag_330:\n        /* \"ICO/IcoOptimized.sol\":7582:7668  uint256 totalPaymentInUSD = (tokenAmount * tokenPriceInUSD) /... */\n      swap1\n      pop\n        /* \"ICO/IcoOptimized.sol\":7679:7700  uint256 paymentAmount */\n      0x00\n      dup1\n        /* \"ICO/IcoOptimized.sol\":7714:7727  paymentMethod */\n      dup10\n        /* \"ICO/IcoOptimized.sol\":7714:7748  paymentMethod == PaymentMethod.BNB */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_334\n      jumpi\n      tag_334\n      tag_255\n      jump\t// in\n    tag_334:\n      sub\n        /* \"ICO/IcoOptimized.sol\":7710:8116  if (paymentMethod == PaymentMethod.BNB) {... */\n      tag_335\n      jumpi\n        /* \"ICO/IcoOptimized.sol\":7825:7830  price */\n      dup6\n        /* \"ICO/IcoOptimized.sol\":7781:7813  totalPaymentInUSD * PRECISION_18 */\n      tag_336\n        /* \"ICO/IcoOptimized.sol\":1216:1220  1e18 */\n      0x0de0b6b3a7640000\n        /* \"ICO/IcoOptimized.sol\":7781:7798  totalPaymentInUSD */\n      dup5\n        /* \"ICO/IcoOptimized.sol\":7781:7813  totalPaymentInUSD * PRECISION_18 */\n      tag_260\n      jump\t// in\n    tag_336:\n        /* \"ICO/IcoOptimized.sol\":7780:7831  (totalPaymentInUSD * PRECISION_18) / uint256(price) */\n      tag_337\n      swap2\n      swap1\n      tag_262\n      jump\t// in\n    tag_337:\n        /* \"ICO/IcoOptimized.sol\":7764:7831  paymentAmount = (totalPaymentInUSD * PRECISION_18) / uint256(price) */\n      swap1\n      pop\n        /* \"ICO/IcoOptimized.sol\":7710:8116  if (paymentMethod == PaymentMethod.BNB) {... */\n      jump(tag_351)\n    tag_335:\n        /* \"ICO/IcoOptimized.sol\":7882:7900  PaymentMethod.USDT */\n      0x01\n        /* \"ICO/IcoOptimized.sol\":7865:7878  paymentMethod */\n      dup10\n        /* \"ICO/IcoOptimized.sol\":7865:7900  paymentMethod == PaymentMethod.USDT */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_342\n      jumpi\n      tag_342\n      tag_255\n      jump\t// in\n    tag_342:\n      eq\n        /* \"ICO/IcoOptimized.sol\":7865:7951  paymentMethod == PaymentMethod.USDT ||... */\n      dup1\n      tag_343\n      jumpi\n      pop\n        /* \"ICO/IcoOptimized.sol\":7933:7951  PaymentMethod.USDC */\n      0x02\n        /* \"ICO/IcoOptimized.sol\":7916:7929  paymentMethod */\n      dup10\n        /* \"ICO/IcoOptimized.sol\":7916:7951  paymentMethod == PaymentMethod.USDC */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_347\n      jumpi\n      tag_347\n      tag_255\n      jump\t// in\n    tag_347:\n      eq\n        /* \"ICO/IcoOptimized.sol\":7865:7951  paymentMethod == PaymentMethod.USDT ||... */\n    tag_343:\n        /* \"ICO/IcoOptimized.sol\":7848:8116  if (... */\n      iszero\n      tag_273\n      jumpi\n        /* \"ICO/IcoOptimized.sol\":8032:8037  price */\n      dup6\n        /* \"ICO/IcoOptimized.sol\":7993:8020  totalPaymentInUSD * (10**6) */\n      tag_336\n        /* \"ICO/IcoOptimized.sol\":7993:8010  totalPaymentInUSD */\n      dup4\n        /* \"ICO/IcoOptimized.sol\":8014:8019  10**6 */\n      0x0f4240\n        /* \"ICO/IcoOptimized.sol\":7993:8020  totalPaymentInUSD * (10**6) */\n      tag_260\n      jump\t// in\n        /* \"ICO/IcoOptimized.sol\":7848:8116  if (... */\n    tag_351:\n        /* \"ICO/IcoOptimized.sol\":8133:8146  paymentAmount */\n      swap9\n        /* \"ICO/IcoOptimized.sol\":6881:8153  function calculatePaymentAmount(... */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ICO/IcoOptimized.sol\":10742:11189  function finalizeICO()... */\n    tag_90:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3395:3416  _nonReentrantBefore() */\n      tag_355\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3395:3414  _nonReentrantBefore */\n      tag_356\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3395:3416  _nonReentrantBefore() */\n      jump\t// in\n    tag_355:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_358\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_359\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_358:\n        /* \"ICO/IcoOptimized.sol\":3281:3295  isICOFinalized */\n      and(0xff, sload(0x09))\n        /* \"ICO/IcoOptimized.sol\":3280:3295  !isICOFinalized */\n      iszero\n        /* \"ICO/IcoOptimized.sol\":3272:3321  require(!isICOFinalized, \"ICO already finalized\") */\n      tag_361\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_54\n      swap1\n      tag_363\n      jump\t// in\n    tag_361:\n        /* \"ICO/IcoOptimized.sol\":3383:3392  isFreezed */\n      sload(0x09)\n      0x010000\n      swap1\n      div\n      0xff\n      and\n        /* \"ICO/IcoOptimized.sol\":3382:3392  !isFreezed */\n      iszero\n        /* \"ICO/IcoOptimized.sol\":3374:3404  require(!isFreezed, \"freezed\") */\n      tag_365\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_54\n      swap1\n      tag_367\n      jump\t// in\n    tag_365:\n        /* \"ICO/IcoOptimized.sol\":10917:10929  softCapInUSD */\n      sload(0x04)\n        /* \"ICO/IcoOptimized.sol\":10894:10913  totalFundsRaisedUSD */\n      sload(0x07)\n        /* \"ICO/IcoOptimized.sol\":10894:10929  totalFundsRaisedUSD >= softCapInUSD */\n      lt\n      iszero\n        /* \"ICO/IcoOptimized.sol\":10873:11011  require(... */\n      tag_369\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13779:13781   */\n      0x20\n        /* \"ICO/IcoOptimized.sol\":10873:11011  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13761:13782   */\n      mstore\n        /* \"#utility.yul\":13818:13820   */\n      0x38\n        /* \"#utility.yul\":13798:13816   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13791:13821   */\n      mstore\n        /* \"#utility.yul\":13857:13891   */\n      0x43616e6e6f742066696e616c697a653a20536f667420636170206e6f74207265\n        /* \"#utility.yul\":13837:13855   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13830:13892   */\n      mstore\n        /* \"#utility.yul\":13928:13954   */\n      0x6163686564206f722073616c65206973206f6e676f696e670000000000000000\n        /* \"#utility.yul\":13908:13926   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13901:13955   */\n      mstore\n        /* \"#utility.yul\":13972:13991   */\n      0x84\n      add\n        /* \"ICO/IcoOptimized.sol\":10873:11011  require(... */\n      tag_54\n        /* \"#utility.yul\":13577:13997   */\n      jump\n        /* \"ICO/IcoOptimized.sol\":10873:11011  require(... */\n    tag_369:\n        /* \"ICO/IcoOptimized.sol\":11029:11047  isTokensAirdropped */\n      sload(0x09)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"ICO/IcoOptimized.sol\":11021:11073  require(isTokensAirdropped, \"Airdrop not completed\") */\n      tag_372\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14204:14206   */\n      0x20\n        /* \"ICO/IcoOptimized.sol\":11021:11073  require(isTokensAirdropped, \"Airdrop not completed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14186:14207   */\n      mstore\n        /* \"#utility.yul\":14243:14245   */\n      0x15\n        /* \"#utility.yul\":14223:14241   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14216:14246   */\n      mstore\n      shl(0x5a, 0x105a5c991c9bdc081b9bdd0818dbdb5c1b195d1959)\n        /* \"#utility.yul\":14262:14280   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14255:14306   */\n      mstore\n        /* \"#utility.yul\":14323:14341   */\n      0x64\n      add\n        /* \"ICO/IcoOptimized.sol\":11021:11073  require(isTokensAirdropped, \"Airdrop not completed\") */\n      tag_54\n        /* \"#utility.yul\":14002:14347   */\n      jump\n        /* \"ICO/IcoOptimized.sol\":11021:11073  require(isTokensAirdropped, \"Airdrop not completed\") */\n    tag_372:\n        /* \"ICO/IcoOptimized.sol\":11084:11098  isICOFinalized */\n      0x09\n        /* \"ICO/IcoOptimized.sol\":11084:11105  isICOFinalized = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"ICO/IcoOptimized.sol\":11101:11105  true */\n      0x01\n        /* \"ICO/IcoOptimized.sol\":11084:11105  isICOFinalized = true */\n      or\n      swap1\n      sstore\n        /* \"ICO/IcoOptimized.sol\":11115:11138  _transferFundsToOwner() */\n      tag_375\n        /* \"ICO/IcoOptimized.sol\":11115:11136  _transferFundsToOwner */\n      tag_376\n        /* \"ICO/IcoOptimized.sol\":11115:11138  _transferFundsToOwner() */\n      jump\t// in\n    tag_375:\n        /* \"ICO/IcoOptimized.sol\":11166:11181  totalTokensSold */\n      sload(0x08)\n        /* \"ICO/IcoOptimized.sol\":11153:11182  ICOFinalized(totalTokensSold) */\n      mload(0x40)\n      0x9c4b134da32aab35252391880a9f2a3c13a760d7817ae8823f2b301d3522045a\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3437:3457  _nonReentrantAfter() */\n      tag_377\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":1949:1950  1 */\n      0x01\n      0x00\n      dup1\n      mload\n      0x20\n      data_c8669cf8eaf883002b9f48e28846a8d408c9b58ea6613bace374265e43c9bc43\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":4113:4136  $._status = NOT_ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3860:4143  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3437:3457  _nonReentrantAfter() */\n    tag_377:\n        /* \"ICO/IcoOptimized.sol\":10742:11189  function finalizeICO()... */\n      jump\t// out\n        /* \"ICO/IcoOptimized.sol\":1324:1350  address[] public investors */\n    tag_104:\n      0x0a\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_379\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_379:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4161:4375  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_113:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2655:2668  _checkProxy() */\n      tag_382\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2655:2666  _checkProxy */\n      tag_383\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2655:2668  _checkProxy() */\n      jump\t// in\n    tag_382:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4276:4312  _authorizeUpgrade(newImplementation) */\n      tag_385\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4294:4311  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4276:4293  _authorizeUpgrade */\n      tag_386\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4276:4312  _authorizeUpgrade(newImplementation) */\n      jump\t// in\n    tag_385:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4322:4368  _upgradeToAndCallUUPS(newImplementation, data) */\n      tag_387\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4344:4361  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4363:4367  data */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4322:4343  _upgradeToAndCallUUPS */\n      tag_388\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4322:4368  _upgradeToAndCallUUPS(newImplementation, data) */\n      jump\t// in\n    tag_387:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4161:4375  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3708:3842  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_116:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3777:3784  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2926:2946  _checkNotDelegated() */\n      tag_390\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2926:2944  _checkNotDelegated */\n      tag_391\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2926:2946  _checkNotDelegated() */\n      jump\t// in\n    tag_390:\n      pop\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3708:3842  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"ICO/IcoOptimized.sol\":3428:3546  function freeze() external onlyOwner {... */\n    tag_126:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_394\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_359\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_394:\n        /* \"ICO/IcoOptimized.sol\":3484:3493  isFreezed */\n      sload(0x09)\n      0x010000\n      swap1\n      div\n      0xff\n      and\n        /* \"ICO/IcoOptimized.sol\":3483:3493  !isFreezed */\n      iszero\n        /* \"ICO/IcoOptimized.sol\":3475:3513  require(!isFreezed ,\"Already Freezed\") */\n      tag_396\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14554:14556   */\n      0x20\n        /* \"ICO/IcoOptimized.sol\":3475:3513  require(!isFreezed ,\"Already Freezed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14536:14557   */\n      mstore\n        /* \"#utility.yul\":14593:14595   */\n      0x0f\n        /* \"#utility.yul\":14573:14591   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14566:14596   */\n      mstore\n      shl(0x8a, 0x105b1c9958591e48119c99595e9959)\n        /* \"#utility.yul\":14612:14630   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14605:14650   */\n      mstore\n        /* \"#utility.yul\":14667:14685   */\n      0x64\n      add\n        /* \"ICO/IcoOptimized.sol\":3475:3513  require(!isFreezed ,\"Already Freezed\") */\n      tag_54\n        /* \"#utility.yul\":14352:14691   */\n      jump\n        /* \"ICO/IcoOptimized.sol\":3475:3513  require(!isFreezed ,\"Already Freezed\") */\n    tag_396:\n        /* \"ICO/IcoOptimized.sol\":3523:3532  isFreezed */\n      0x09\n        /* \"ICO/IcoOptimized.sol\":3523:3539  isFreezed = true */\n      dup1\n      sload\n      not(0xff0000)\n      and\n      0x010000\n      or\n      swap1\n      sstore\n        /* \"ICO/IcoOptimized.sol\":3428:3546  function freeze() external onlyOwner {... */\n      jump\t// out\n        /* \"ICO/IcoOptimized.sol\":4721:5584  function createSale(... */\n    tag_135:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_400\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_359\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_400:\n        /* \"ICO/IcoOptimized.sol\":3281:3295  isICOFinalized */\n      and(0xff, sload(0x09))\n        /* \"ICO/IcoOptimized.sol\":3280:3295  !isICOFinalized */\n      iszero\n        /* \"ICO/IcoOptimized.sol\":3272:3321  require(!isICOFinalized, \"ICO already finalized\") */\n      tag_402\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_54\n      swap1\n      tag_363\n      jump\t// in\n    tag_402:\n        /* \"ICO/IcoOptimized.sol\":3383:3392  isFreezed */\n      sload(0x09)\n      0x010000\n      swap1\n      div\n      0xff\n      and\n        /* \"ICO/IcoOptimized.sol\":3382:3392  !isFreezed */\n      iszero\n        /* \"ICO/IcoOptimized.sol\":3374:3404  require(!isFreezed, \"freezed\") */\n      tag_405\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_54\n      swap1\n      tag_367\n      jump\t// in\n    tag_405:\n        /* \"ICO/IcoOptimized.sol\":4920:4935  block.timestamp */\n      timestamp\n        /* \"ICO/IcoOptimized.sol\":4907:4917  _startTime */\n      dup4\n        /* \"ICO/IcoOptimized.sol\":4907:4935  _startTime > block.timestamp */\n      gt\n        /* \"ICO/IcoOptimized.sol\":4886:5005  require(... */\n      tag_408\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14898:14900   */\n      0x20\n        /* \"ICO/IcoOptimized.sol\":4886:5005  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14880:14901   */\n      mstore\n        /* \"#utility.yul\":14937:14939   */\n      0x2c\n        /* \"#utility.yul\":14917:14935   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14910:14940   */\n      mstore\n        /* \"#utility.yul\":14976:15010   */\n      0x53746172742074696d65206d7573742062652067726561746572207468616e20\n        /* \"#utility.yul\":14956:14974   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14949:15011   */\n      mstore\n      shl(0xa0, 0x63757272656e742074696d65)\n        /* \"#utility.yul\":15027:15045   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":15020:15062   */\n      mstore\n        /* \"#utility.yul\":15079:15098   */\n      0x84\n      add\n        /* \"ICO/IcoOptimized.sol\":4886:5005  require(... */\n      tag_54\n        /* \"#utility.yul\":14696:15104   */\n      jump\n        /* \"ICO/IcoOptimized.sol\":4886:5005  require(... */\n    tag_408:\n        /* \"ICO/IcoOptimized.sol\":5047:5057  _startTime */\n      dup3\n        /* \"ICO/IcoOptimized.sol\":5036:5044  _endTime */\n      dup3\n        /* \"ICO/IcoOptimized.sol\":5036:5057  _endTime > _startTime */\n      gt\n        /* \"ICO/IcoOptimized.sol\":5015:5123  require(... */\n      tag_411\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15311:15313   */\n      0x20\n        /* \"ICO/IcoOptimized.sol\":5015:5123  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15293:15314   */\n      mstore\n        /* \"#utility.yul\":15350:15352   */\n      0x28\n        /* \"#utility.yul\":15330:15348   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15323:15353   */\n      mstore\n        /* \"#utility.yul\":15389:15423   */\n      0x456e642074696d65206d7573742062652067726561746572207468616e207374\n        /* \"#utility.yul\":15369:15387   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15362:15424   */\n      mstore\n      shl(0xc0, 0x6172742074696d65)\n        /* \"#utility.yul\":15440:15458   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":15433:15471   */\n      mstore\n        /* \"#utility.yul\":15488:15507   */\n      0x84\n      add\n        /* \"ICO/IcoOptimized.sol\":5015:5123  require(... */\n      tag_54\n        /* \"#utility.yul\":15109:15513   */\n      jump\n        /* \"ICO/IcoOptimized.sol\":5015:5123  require(... */\n    tag_411:\n        /* \"ICO/IcoOptimized.sol\":16146:16155  saleCount */\n      sload(0x06)\n        /* \"ICO/IcoOptimized.sol\":16114:16121  uint256 */\n      0x00\n        /* \"ICO/IcoOptimized.sol\":16140:16156  sales[saleCount] */\n      swap1\n      dup2\n      mstore\n        /* \"ICO/IcoOptimized.sol\":16140:16145  sales */\n      0x0d\n        /* \"ICO/IcoOptimized.sol\":16140:16156  sales[saleCount] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"ICO/IcoOptimized.sol\":16140:16164  sales[saleCount].endTime */\n      0x01\n      add\n      sload\n        /* \"ICO/IcoOptimized.sol\":5154:5169  block.timestamp */\n      timestamp\n        /* \"ICO/IcoOptimized.sol\":5154:5194  block.timestamp > getLatestSaleEndTime() */\n      gt\n        /* \"ICO/IcoOptimized.sol\":5133:5264  require(... */\n      tag_416\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15720:15722   */\n      0x20\n        /* \"ICO/IcoOptimized.sol\":5133:5264  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15702:15723   */\n      mstore\n        /* \"#utility.yul\":15759:15761   */\n      0x2c\n        /* \"#utility.yul\":15739:15757   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15732:15762   */\n      mstore\n        /* \"#utility.yul\":15798:15832   */\n      0x4e65772073616c65206d75737420737461727420616674657220746865206c61\n        /* \"#utility.yul\":15778:15796   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15771:15833   */\n      mstore\n      shl(0xa0, 0x73742073616c6520656e6473)\n        /* \"#utility.yul\":15849:15867   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":15842:15884   */\n      mstore\n        /* \"#utility.yul\":15901:15920   */\n      0x84\n      add\n        /* \"ICO/IcoOptimized.sol\":5133:5264  require(... */\n      tag_54\n        /* \"#utility.yul\":15518:15926   */\n      jump\n        /* \"ICO/IcoOptimized.sol\":5133:5264  require(... */\n    tag_416:\n        /* \"ICO/IcoOptimized.sol\":5275:5284  saleCount */\n      0x06\n        /* \"ICO/IcoOptimized.sol\":5275:5286  saleCount++ */\n      dup1\n      sload\n      swap1\n        /* \"ICO/IcoOptimized.sol\":5275:5284  saleCount */\n      0x00\n        /* \"ICO/IcoOptimized.sol\":5275:5286  saleCount++ */\n      tag_419\n      dup4\n      tag_420\n      jump\t// in\n    tag_419:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"ICO/IcoOptimized.sol\":5315:5499  Sale({... */\n      0x40\n      dup1\n      mload\n      0xa0\n      dup2\n      add\n      dup3\n      mstore\n      dup5\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      add\n      dup6\n      dup2\n      mstore\n      dup3\n      dup5\n      add\n      dup6\n      dup2\n      mstore\n      0x00\n      0x60\n      dup1\n      dup7\n      add\n      dup3\n      dup2\n      mstore\n      0x80\n      dup8\n      add\n      dup4\n      dup2\n      mstore\n        /* \"ICO/IcoOptimized.sol\":5302:5311  saleCount */\n      0x06\n      dup1\n      sload\n        /* \"ICO/IcoOptimized.sol\":5296:5312  sales[saleCount] */\n      dup6\n      mstore\n        /* \"ICO/IcoOptimized.sol\":5296:5301  sales */\n      0x0d\n        /* \"ICO/IcoOptimized.sol\":5296:5312  sales[saleCount] */\n      dup9\n      mstore\n      swap4\n      dup10\n      swap1\n      keccak256\n        /* \"ICO/IcoOptimized.sol\":5296:5499  sales[saleCount] = Sale({... */\n      swap8\n      mload\n      dup9\n      sstore\n      swap5\n      mload\n        /* \"ICO/IcoOptimized.sol\":5315:5499  Sale({... */\n      0x01\n        /* \"ICO/IcoOptimized.sol\":5296:5499  sales[saleCount] = Sale({... */\n      dup9\n      add\n      sstore\n      swap3\n      mload\n      0x02\n      dup8\n      add\n      sstore\n      swap2\n      mload\n      0x03\n      dup7\n      add\n      sstore\n      swap2\n      mload\n      0x04\n      swap1\n      swap5\n      add\n      dup1\n      sload\n      not(0xff)\n      and\n      swap5\n      iszero\n      iszero\n      swap5\n      swap1\n      swap5\n      or\n      swap1\n      swap4\n      sstore\n        /* \"ICO/IcoOptimized.sol\":5529:5538  saleCount */\n      sload\n        /* \"ICO/IcoOptimized.sol\":5514:5577  NewSaleCreated(saleCount, _startTime, _endTime, _tokenPriceUSD) */\n      dup4\n      mload\n        /* \"#utility.yul\":16273:16298   */\n      dup8\n      dup2\n      mstore\n        /* \"#utility.yul\":16314:16332   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":16307:16341   */\n      dup7\n      swap1\n      mstore\n        /* \"#utility.yul\":16357:16375   */\n      swap3\n      dup2\n      add\n        /* \"#utility.yul\":16350:16384   */\n      dup5\n      swap1\n      mstore\n        /* \"ICO/IcoOptimized.sol\":5514:5577  NewSaleCreated(saleCount, _startTime, _endTime, _tokenPriceUSD) */\n      0x63b43fa153147ade1de28ed76841cdbc34e510ed94dd1ff5a88e278b0b1ad9ba\n      swap2\n        /* \"#utility.yul\":16246:16264   */\n      add\n        /* \"ICO/IcoOptimized.sol\":5514:5577  NewSaleCreated(saleCount, _startTime, _endTime, _tokenPriceUSD) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"ICO/IcoOptimized.sol\":4721:5584  function createSale(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_138:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_424\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_359\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_424:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      tag_377\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3246:3247  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3237  _transferOwnership */\n      tag_427\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      jump\t// in\n        /* \"ICO/IcoOptimized.sol\":3552:3674  function unFreeze() external onlyOwner {... */\n    tag_145:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_429\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_359\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_429:\n        /* \"ICO/IcoOptimized.sol\":3609:3618  isFreezed */\n      sload(0x09)\n      0x010000\n      swap1\n      div\n      0xff\n      and\n        /* \"ICO/IcoOptimized.sol\":3601:3640  require(isFreezed ,\"Already UnFreezed\") */\n      tag_431\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":16597:16599   */\n      0x20\n        /* \"ICO/IcoOptimized.sol\":3601:3640  require(isFreezed ,\"Already UnFreezed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16579:16600   */\n      mstore\n        /* \"#utility.yul\":16636:16638   */\n      0x11\n        /* \"#utility.yul\":16616:16634   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":16609:16639   */\n      mstore\n      shl(0x7a, 0x105b1c9958591e48155b919c99595e9959)\n        /* \"#utility.yul\":16655:16673   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":16648:16695   */\n      mstore\n        /* \"#utility.yul\":16712:16730   */\n      0x64\n      add\n        /* \"ICO/IcoOptimized.sol\":3601:3640  require(isFreezed ,\"Already UnFreezed\") */\n      tag_54\n        /* \"#utility.yul\":16395:16736   */\n      jump\n        /* \"ICO/IcoOptimized.sol\":3601:3640  require(isFreezed ,\"Already UnFreezed\") */\n    tag_431:\n        /* \"ICO/IcoOptimized.sol\":3650:3659  isFreezed */\n      0x09\n        /* \"ICO/IcoOptimized.sol\":3650:3667  isFreezed = false */\n      dup1\n      sload\n      not(0xff0000)\n      and\n      swap1\n      sstore\n        /* \"ICO/IcoOptimized.sol\":3552:3674  function unFreeze() external onlyOwner {... */\n      jump\t// out\n        /* \"ICO/IcoOptimized.sol\":13601:15864  function initiateRefund() external nonReentrant onlyOwner icoNotFinalized {... */\n    tag_148:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3395:3416  _nonReentrantBefore() */\n      tag_435\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3395:3414  _nonReentrantBefore */\n      tag_356\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3395:3416  _nonReentrantBefore() */\n      jump\t// in\n    tag_435:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_437\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_359\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_437:\n        /* \"ICO/IcoOptimized.sol\":3281:3295  isICOFinalized */\n      and(0xff, sload(0x09))\n        /* \"ICO/IcoOptimized.sol\":3280:3295  !isICOFinalized */\n      iszero\n        /* \"ICO/IcoOptimized.sol\":3272:3321  require(!isICOFinalized, \"ICO already finalized\") */\n      tag_439\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_54\n      swap1\n      tag_363\n      jump\t// in\n    tag_439:\n        /* \"ICO/IcoOptimized.sol\":16146:16155  saleCount */\n      sload(0x06)\n        /* \"ICO/IcoOptimized.sol\":16114:16121  uint256 */\n      0x00\n        /* \"ICO/IcoOptimized.sol\":16140:16156  sales[saleCount] */\n      swap1\n      dup2\n      mstore\n        /* \"ICO/IcoOptimized.sol\":16140:16145  sales */\n      0x0d\n        /* \"ICO/IcoOptimized.sol\":16140:16156  sales[saleCount] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"ICO/IcoOptimized.sol\":16140:16164  sales[saleCount].endTime */\n      0x01\n      add\n      sload\n        /* \"ICO/IcoOptimized.sol\":13693:13708  block.timestamp */\n      timestamp\n        /* \"ICO/IcoOptimized.sol\":13693:13733  block.timestamp > getLatestSaleEndTime() */\n      gt\n        /* \"ICO/IcoOptimized.sol\":13685:13750  require(block.timestamp > getLatestSaleEndTime(), \"Sale ongoing\") */\n      tag_443\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":16943:16945   */\n      0x20\n        /* \"ICO/IcoOptimized.sol\":13685:13750  require(block.timestamp > getLatestSaleEndTime(), \"Sale ongoing\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16925:16946   */\n      mstore\n        /* \"#utility.yul\":16982:16984   */\n      0x0c\n        /* \"#utility.yul\":16962:16980   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":16955:16985   */\n      mstore\n      shl(0xa0, 0x53616c65206f6e676f696e67)\n        /* \"#utility.yul\":17001:17019   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":16994:17036   */\n      mstore\n        /* \"#utility.yul\":17053:17071   */\n      0x64\n      add\n        /* \"ICO/IcoOptimized.sol\":13685:13750  require(block.timestamp > getLatestSaleEndTime(), \"Sale ongoing\") */\n      tag_54\n        /* \"#utility.yul\":16741:17077   */\n      jump\n        /* \"ICO/IcoOptimized.sol\":13685:13750  require(block.timestamp > getLatestSaleEndTime(), \"Sale ongoing\") */\n    tag_443:\n        /* \"ICO/IcoOptimized.sol\":13790:13802  softCapInUSD */\n      sload(0x04)\n        /* \"ICO/IcoOptimized.sol\":13768:13787  totalFundsRaisedUSD */\n      sload(0x07)\n        /* \"ICO/IcoOptimized.sol\":13768:13802  totalFundsRaisedUSD < softCapInUSD */\n      lt\n        /* \"ICO/IcoOptimized.sol\":13760:13823  require(totalFundsRaisedUSD < softCapInUSD, \"Soft cap reached\") */\n      tag_446\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":17284:17286   */\n      0x20\n        /* \"ICO/IcoOptimized.sol\":13760:13823  require(totalFundsRaisedUSD < softCapInUSD, \"Soft cap reached\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":17266:17287   */\n      mstore\n        /* \"#utility.yul\":17323:17325   */\n      0x10\n        /* \"#utility.yul\":17303:17321   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":17296:17326   */\n      mstore\n      shl(0x82, 0x14dbd99d0818d85c081c995858da1959)\n        /* \"#utility.yul\":17342:17360   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":17335:17381   */\n      mstore\n        /* \"#utility.yul\":17398:17416   */\n      0x64\n      add\n        /* \"ICO/IcoOptimized.sol\":13760:13823  require(totalFundsRaisedUSD < softCapInUSD, \"Soft cap reached\") */\n      tag_54\n        /* \"#utility.yul\":17082:17422   */\n      jump\n        /* \"ICO/IcoOptimized.sol\":13760:13823  require(totalFundsRaisedUSD < softCapInUSD, \"Soft cap reached\") */\n    tag_446:\n        /* \"ICO/IcoOptimized.sol\":13859:13868  investors */\n      0x0a\n        /* \"ICO/IcoOptimized.sol\":13859:13875  investors.length */\n      dup1\n      sload\n      swap1\n        /* \"ICO/IcoOptimized.sol\":13834:13856  uint256 investorLength */\n      0x00\n      swap1\n        /* \"ICO/IcoOptimized.sol\":13925:13944  investorLength > 10 */\n      dup3\n      gt\n        /* \"ICO/IcoOptimized.sol\":13921:14062  if (investorLength > 10) {... */\n      iszero\n      tag_449\n      jumpi\n        /* \"ICO/IcoOptimized.sol\":13980:13999  investorLength - 11 */\n      tag_450\n        /* \"ICO/IcoOptimized.sol\":13997:13999  11 */\n      0x0b\n        /* \"ICO/IcoOptimized.sol\":13980:13994  investorLength */\n      dup4\n        /* \"ICO/IcoOptimized.sol\":13980:13999  investorLength - 11 */\n      tag_275\n      jump\t// in\n    tag_450:\n        /* \"ICO/IcoOptimized.sol\":13960:13999  investorsIterated = investorLength - 11 */\n      swap1\n      pop\n        /* \"ICO/IcoOptimized.sol\":13921:14062  if (investorLength > 10) {... */\n      jump(tag_451)\n    tag_449:\n      pop\n        /* \"ICO/IcoOptimized.sol\":14050:14051  0 */\n      0x00\n        /* \"ICO/IcoOptimized.sol\":13921:14062  if (investorLength > 10) {... */\n    tag_451:\n        /* \"ICO/IcoOptimized.sol\":14131:14140  uint256 i */\n      0x00\n        /* \"ICO/IcoOptimized.sol\":14143:14161  investorLength - 1 */\n      tag_455\n        /* \"ICO/IcoOptimized.sol\":14160:14161  1 */\n      0x01\n        /* \"ICO/IcoOptimized.sol\":14143:14157  investorLength */\n      dup5\n        /* \"ICO/IcoOptimized.sol\":14143:14161  investorLength - 1 */\n      tag_275\n      jump\t// in\n    tag_455:\n        /* \"ICO/IcoOptimized.sol\":14131:14161  uint256 i = investorLength - 1 */\n      swap1\n      pop\n        /* \"ICO/IcoOptimized.sol\":14126:15776  for (uint256 i = investorLength - 1; i >= investorsIterated; i--) {... */\n    tag_452:\n        /* \"ICO/IcoOptimized.sol\":14168:14185  investorsIterated */\n      dup2\n        /* \"ICO/IcoOptimized.sol\":14163:14164  i */\n      dup2\n        /* \"ICO/IcoOptimized.sol\":14163:14185  i >= investorsIterated */\n      lt\n        /* \"ICO/IcoOptimized.sol\":14126:15776  for (uint256 i = investorLength - 1; i >= investorsIterated; i--) {... */\n      tag_453\n      jumpi\n        /* \"ICO/IcoOptimized.sol\":14206:14222  address investor */\n      0x00\n        /* \"ICO/IcoOptimized.sol\":14225:14234  investors */\n      0x0a\n        /* \"ICO/IcoOptimized.sol\":14235:14236  i */\n      dup3\n        /* \"ICO/IcoOptimized.sol\":14225:14237  investors[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_457\n      jumpi\n      tag_457\n      tag_458\n      jump\t// in\n    tag_457:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap2\n      pop\n        /* \"ICO/IcoOptimized.sol\":14312:15666  for (uint8 j = 0; j < 3; j++) {... */\n    tag_460:\n        /* \"ICO/IcoOptimized.sol\":14334:14335  3 */\n      0x03\n        /* \"ICO/IcoOptimized.sol\":14330:14331  j */\n      dup2\n        /* \"ICO/IcoOptimized.sol\":14330:14335  j < 3 */\n      0xff\n      and\n      lt\n        /* \"ICO/IcoOptimized.sol\":14312:15666  for (uint8 j = 0; j < 3; j++) {... */\n      iszero\n      tag_461\n      jumpi\n        /* \"ICO/IcoOptimized.sol\":14360:14387  PaymentMethod paymentMethod */\n      0x00\n        /* \"ICO/IcoOptimized.sol\":14404:14405  j */\n      dup2\n        /* \"ICO/IcoOptimized.sol\":14390:14406  PaymentMethod(j) */\n      0xff\n      and\n      0x02\n      dup2\n      gt\n      iszero\n      tag_464\n      jumpi\n      tag_464\n      tag_255\n      jump\t// in\n    tag_464:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ICO/IcoOptimized.sol\":14441:14467  investorPayments[investor] */\n      dup5\n      and\n        /* \"ICO/IcoOptimized.sol\":14424:14438  uint256 amount */\n      0x00\n        /* \"ICO/IcoOptimized.sol\":14441:14467  investorPayments[investor] */\n      swap1\n      dup2\n      mstore\n        /* \"ICO/IcoOptimized.sol\":14441:14457  investorPayments */\n      0x11\n        /* \"ICO/IcoOptimized.sol\":14441:14467  investorPayments[investor] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"ICO/IcoOptimized.sol\":14360:14406  PaymentMethod paymentMethod = PaymentMethod(j) */\n      swap2\n      swap3\n      pop\n        /* \"ICO/IcoOptimized.sol\":14424:14438  uint256 amount */\n      swap1\n      dup2\n        /* \"ICO/IcoOptimized.sol\":14360:14406  PaymentMethod paymentMethod = PaymentMethod(j) */\n      dup4\n        /* \"ICO/IcoOptimized.sol\":14441:14482  investorPayments[investor][paymentMethod] */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_466\n      jumpi\n      tag_466\n      tag_255\n      jump\t// in\n    tag_466:\n      0x02\n      dup2\n      gt\n      iszero\n      tag_468\n      jumpi\n      tag_468\n      tag_255\n      jump\t// in\n    tag_468:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ICO/IcoOptimized.sol\":14424:14482  uint256 amount = investorPayments[investor][paymentMethod] */\n      swap1\n      pop\n        /* \"ICO/IcoOptimized.sol\":14514:14515  0 */\n      0x00\n        /* \"ICO/IcoOptimized.sol\":14505:14511  amount */\n      dup2\n        /* \"ICO/IcoOptimized.sol\":14505:14515  amount > 0 */\n      gt\n        /* \"ICO/IcoOptimized.sol\":14501:15635  if (amount > 0) {... */\n      iszero\n      tag_469\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ICO/IcoOptimized.sol\":14539:14565  investorPayments[investor] */\n      dup5\n      and\n        /* \"ICO/IcoOptimized.sol\":14583:14584  0 */\n      0x00\n        /* \"ICO/IcoOptimized.sol\":14539:14565  investorPayments[investor] */\n      swap1\n      dup2\n      mstore\n        /* \"ICO/IcoOptimized.sol\":14539:14555  investorPayments */\n      0x11\n        /* \"ICO/IcoOptimized.sol\":14539:14565  investorPayments[investor] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"ICO/IcoOptimized.sol\":14583:14584  0 */\n      dup2\n        /* \"ICO/IcoOptimized.sol\":14566:14579  paymentMethod */\n      dup5\n        /* \"ICO/IcoOptimized.sol\":14539:14580  investorPayments[investor][paymentMethod] */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_471\n      jumpi\n      tag_471\n      tag_255\n      jump\t// in\n    tag_471:\n      0x02\n      dup2\n      gt\n      iszero\n      tag_473\n      jumpi\n      tag_473\n      tag_255\n      jump\t// in\n    tag_473:\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"ICO/IcoOptimized.sol\":14539:14584  investorPayments[investor][paymentMethod] = 0 */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"ICO/IcoOptimized.sol\":14610:14623  paymentMethod */\n      dup3\n        /* \"ICO/IcoOptimized.sol\":14610:14644  paymentMethod == PaymentMethod.BNB */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_477\n      jumpi\n      tag_477\n      tag_255\n      jump\t// in\n    tag_477:\n      sub\n        /* \"ICO/IcoOptimized.sol\":14606:15521  if (paymentMethod == PaymentMethod.BNB) {... */\n      tag_478\n      jumpi\n        /* \"ICO/IcoOptimized.sol\":14673:14682  bool sent */\n      0x00\n        /* \"ICO/IcoOptimized.sol\":14696:14704  investor */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ICO/IcoOptimized.sol\":14688:14710  payable(investor).call */\n      and\n        /* \"ICO/IcoOptimized.sol\":14718:14724  amount */\n      dup3\n        /* \"ICO/IcoOptimized.sol\":14688:14783  payable(investor).call{value: amount}(... */\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_483\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_482)\n    tag_483:\n      0x60\n      swap2\n      pop\n    tag_482:\n      pop\n        /* \"ICO/IcoOptimized.sol\":14672:14783  (bool sent, ) = payable(investor).call{value: amount}(... */\n      pop\n      swap1\n      pop\n        /* \"ICO/IcoOptimized.sol\":14817:14821  sent */\n      dup1\n        /* \"ICO/IcoOptimized.sol\":14809:14843  require(sent, \"BNB refund failed\") */\n      tag_484\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":17971:17973   */\n      0x20\n        /* \"ICO/IcoOptimized.sol\":14809:14843  require(sent, \"BNB refund failed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":17953:17974   */\n      mstore\n        /* \"#utility.yul\":18010:18012   */\n      0x11\n        /* \"#utility.yul\":17990:18008   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":17983:18013   */\n      mstore\n      shl(0x7a, 0x109390881c99599d5b990819985a5b1959)\n        /* \"#utility.yul\":18029:18047   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":18022:18069   */\n      mstore\n        /* \"#utility.yul\":18086:18104   */\n      0x64\n      add\n        /* \"ICO/IcoOptimized.sol\":14809:14843  require(sent, \"BNB refund failed\") */\n      tag_54\n        /* \"#utility.yul\":17769:18110   */\n      jump\n        /* \"ICO/IcoOptimized.sol\":14809:14843  require(sent, \"BNB refund failed\") */\n    tag_484:\n        /* \"ICO/IcoOptimized.sol\":14646:14866  {... */\n      pop\n        /* \"ICO/IcoOptimized.sol\":14606:15521  if (paymentMethod == PaymentMethod.BNB) {... */\n      jump(tag_513)\n    tag_478:\n        /* \"ICO/IcoOptimized.sol\":14918:14936  PaymentMethod.USDT */\n      0x01\n        /* \"ICO/IcoOptimized.sol\":14901:14914  paymentMethod */\n      dup3\n        /* \"ICO/IcoOptimized.sol\":14901:14936  paymentMethod == PaymentMethod.USDT */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_491\n      jumpi\n      tag_491\n      tag_255\n      jump\t// in\n    tag_491:\n      eq\n        /* \"ICO/IcoOptimized.sol\":14901:14999  paymentMethod == PaymentMethod.USDT ||... */\n      dup1\n      tag_492\n      jumpi\n      pop\n        /* \"ICO/IcoOptimized.sol\":14981:14999  PaymentMethod.USDC */\n      0x02\n        /* \"ICO/IcoOptimized.sol\":14964:14977  paymentMethod */\n      dup3\n        /* \"ICO/IcoOptimized.sol\":14964:14999  paymentMethod == PaymentMethod.USDC */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_496\n      jumpi\n      tag_496\n      tag_255\n      jump\t// in\n    tag_496:\n      eq\n        /* \"ICO/IcoOptimized.sol\":14901:14999  paymentMethod == PaymentMethod.USDT ||... */\n    tag_492:\n        /* \"ICO/IcoOptimized.sol\":14872:15521  if (... */\n      iszero\n      tag_497\n      jumpi\n        /* \"ICO/IcoOptimized.sol\":15048:15065  IERC20 stablecoin */\n      0x00\n        /* \"ICO/IcoOptimized.sol\":15085:15103  PaymentMethod.USDT */\n      0x01\n        /* \"ICO/IcoOptimized.sol\":15068:15081  paymentMethod */\n      dup4\n        /* \"ICO/IcoOptimized.sol\":15068:15103  paymentMethod == PaymentMethod.USDT */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_501\n      jumpi\n      tag_501\n      tag_255\n      jump\t// in\n    tag_501:\n      eq\n        /* \"ICO/IcoOptimized.sol\":15068:15189  paymentMethod == PaymentMethod.USDT... */\n      tag_502\n      jumpi\n        /* \"ICO/IcoOptimized.sol\":15184:15188  usdc */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0c))\n        /* \"ICO/IcoOptimized.sol\":15068:15189  paymentMethod == PaymentMethod.USDT... */\n      jump(tag_503)\n    tag_502:\n        /* \"ICO/IcoOptimized.sol\":15141:15145  usdt */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0b))\n        /* \"ICO/IcoOptimized.sol\":15068:15189  paymentMethod == PaymentMethod.USDT... */\n    tag_503:\n        /* \"ICO/IcoOptimized.sol\":15252:15289  stablecoin.transfer(investor, amount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":18307:18339   */\n      dup8\n      dup2\n      and\n        /* \"ICO/IcoOptimized.sol\":15252:15289  stablecoin.transfer(investor, amount) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":18289:18340   */\n      mstore\n        /* \"#utility.yul\":18356:18374   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":18349:18383   */\n      dup6\n      swap1\n      mstore\n        /* \"ICO/IcoOptimized.sol\":15048:15189  IERC20 stablecoin = paymentMethod == PaymentMethod.USDT... */\n      swap2\n      swap3\n      pop\n        /* \"ICO/IcoOptimized.sol\":15252:15271  stablecoin.transfer */\n      swap1\n      dup3\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":18262:18280   */\n      0x44\n      add\n        /* \"ICO/IcoOptimized.sol\":15252:15289  stablecoin.transfer(investor, amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_507\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_507:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_508\n      swap2\n      swap1\n      tag_509\n      jump\t// in\n    tag_508:\n        /* \"ICO/IcoOptimized.sol\":15215:15371  require(... */\n      tag_484\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":18878:18880   */\n      0x20\n        /* \"ICO/IcoOptimized.sol\":15215:15371  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":18860:18881   */\n      mstore\n        /* \"#utility.yul\":18917:18919   */\n      0x18\n        /* \"#utility.yul\":18897:18915   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":18890:18920   */\n      mstore\n        /* \"#utility.yul\":18956:18982   */\n      0x537461626c65636f696e20726566756e64206661696c65640000000000000000\n        /* \"#utility.yul\":18936:18954   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":18929:18983   */\n      mstore\n        /* \"#utility.yul\":19000:19018   */\n      0x64\n      add\n        /* \"ICO/IcoOptimized.sol\":15215:15371  require(... */\n      tag_54\n        /* \"#utility.yul\":18676:19024   */\n      jump\n        /* \"ICO/IcoOptimized.sol\":14872:15521  if (... */\n    tag_497:\n        /* \"ICO/IcoOptimized.sol\":15451:15498  revert(\"Unsupported payment method for refund\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":19231:19233   */\n      0x20\n        /* \"ICO/IcoOptimized.sol\":15451:15498  revert(\"Unsupported payment method for refund\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":19213:19234   */\n      mstore\n        /* \"#utility.yul\":19270:19272   */\n      0x25\n        /* \"#utility.yul\":19250:19268   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":19243:19273   */\n      mstore\n        /* \"#utility.yul\":19309:19343   */\n      0x556e737570706f72746564207061796d656e74206d6574686f6420666f722072\n        /* \"#utility.yul\":19289:19307   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":19282:19344   */\n      mstore\n      shl(0xda, 0x19599d5b99)\n        /* \"#utility.yul\":19360:19378   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":19353:19388   */\n      mstore\n        /* \"#utility.yul\":19405:19424   */\n      0x84\n      add\n        /* \"ICO/IcoOptimized.sol\":15451:15498  revert(\"Unsupported payment method for refund\") */\n      tag_54\n        /* \"#utility.yul\":19029:19430   */\n      jump\n        /* \"ICO/IcoOptimized.sol\":14872:15521  if (... */\n    tag_513:\n        /* \"ICO/IcoOptimized.sol\":15584:15592  investor */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ICO/IcoOptimized.sol\":15568:15616  RefundInitiated(investor, amount, paymentMethod) */\n      and\n      0x03829ab241648d7348f97e4f77d36451330f2276ea8eeb3428e462012f9699e7\n        /* \"ICO/IcoOptimized.sol\":15594:15600  amount */\n      dup3\n        /* \"ICO/IcoOptimized.sol\":15602:15615  paymentMethod */\n      dup5\n        /* \"ICO/IcoOptimized.sol\":15568:15616  RefundInitiated(investor, amount, paymentMethod) */\n      mload(0x40)\n      tag_516\n      swap3\n      swap2\n      swap1\n      tag_517\n      jump\t// in\n    tag_516:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"ICO/IcoOptimized.sol\":14501:15635  if (amount > 0) {... */\n    tag_469:\n      pop\n      pop\n        /* \"ICO/IcoOptimized.sol\":14337:14340  j++ */\n      0x01\n      add\n        /* \"ICO/IcoOptimized.sol\":14312:15666  for (uint8 j = 0; j < 3; j++) {... */\n      jump(tag_460)\n    tag_461:\n      pop\n        /* \"ICO/IcoOptimized.sol\":15679:15688  investors */\n      0x0a\n        /* \"ICO/IcoOptimized.sol\":15679:15694  investors.pop() */\n      dup1\n      sload\n      dup1\n      tag_519\n      jumpi\n      tag_519\n      tag_520\n      jump\t// in\n    tag_519:\n      0x00\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      keccak256\n      dup3\n      add\n      not(0x00)\n      swap1\n      dup2\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n      swap1\n      swap2\n      add\n      swap1\n      swap2\n      sstore\n        /* \"ICO/IcoOptimized.sol\":15712:15718  i == 0 */\n      dup3\n      swap1\n      sub\n        /* \"ICO/IcoOptimized.sol\":15708:15766  if (i == 0) {... */\n      tag_522\n      jumpi\n        /* \"ICO/IcoOptimized.sol\":15742:15747  break */\n      pop\n      jump(tag_453)\n        /* \"ICO/IcoOptimized.sol\":15708:15766  if (i == 0) {... */\n    tag_522:\n      pop\n        /* \"ICO/IcoOptimized.sol\":14187:14190  i-- */\n      dup1\n      tag_523\n      dup2\n      tag_524\n      jump\t// in\n    tag_523:\n      swap2\n      pop\n      pop\n        /* \"ICO/IcoOptimized.sol\":14126:15776  for (uint256 i = investorLength - 1; i >= investorsIterated; i--) {... */\n      jump(tag_452)\n    tag_453:\n      pop\n        /* \"ICO/IcoOptimized.sol\":15789:15798  investors */\n      0x0a\n        /* \"ICO/IcoOptimized.sol\":15789:15805  investors.length */\n      sload\n        /* \"ICO/IcoOptimized.sol\":15809:15810  0 */\n      0x00\n        /* \"ICO/IcoOptimized.sol\":15789:15810  investors.length == 0 */\n      sub\n        /* \"ICO/IcoOptimized.sol\":15785:15858  if (investors.length == 0) {... */\n      tag_525\n      jumpi\n        /* \"ICO/IcoOptimized.sol\":15826:15840  isICOFinalized */\n      0x09\n        /* \"ICO/IcoOptimized.sol\":15826:15847  isICOFinalized = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"ICO/IcoOptimized.sol\":15843:15847  true */\n      0x01\n        /* \"ICO/IcoOptimized.sol\":15826:15847  isICOFinalized = true */\n      or\n      swap1\n      sstore\n        /* \"ICO/IcoOptimized.sol\":15785:15858  if (investors.length == 0) {... */\n    tag_525:\n        /* \"ICO/IcoOptimized.sol\":13675:15864  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3437:3457  _nonReentrantAfter() */\n      tag_377\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":1949:1950  1 */\n      0x01\n      0x00\n      dup1\n      mload\n      0x20\n      data_c8669cf8eaf883002b9f48e28846a8d408c9b58ea6613bace374265e43c9bc43\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":4113:4136  $._status = NOT_ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3860:4143  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_151:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2578  $._owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n      jump\t// out\n        /* \"ICO/IcoOptimized.sol\":12018:13595  function airdropTokens()... */\n    tag_155:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3395:3416  _nonReentrantBefore() */\n      tag_531\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3395:3414  _nonReentrantBefore */\n      tag_356\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3395:3416  _nonReentrantBefore() */\n      jump\t// in\n    tag_531:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_533\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_359\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_533:\n        /* \"ICO/IcoOptimized.sol\":3281:3295  isICOFinalized */\n      and(0xff, sload(0x09))\n        /* \"ICO/IcoOptimized.sol\":3280:3295  !isICOFinalized */\n      iszero\n        /* \"ICO/IcoOptimized.sol\":3272:3321  require(!isICOFinalized, \"ICO already finalized\") */\n      tag_535\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_54\n      swap1\n      tag_363\n      jump\t// in\n    tag_535:\n        /* \"ICO/IcoOptimized.sol\":3383:3392  isFreezed */\n      sload(0x09)\n      0x010000\n      swap1\n      div\n      0xff\n      and\n        /* \"ICO/IcoOptimized.sol\":3382:3392  !isFreezed */\n      iszero\n        /* \"ICO/IcoOptimized.sol\":3374:3404  require(!isFreezed, \"freezed\") */\n      tag_538\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_54\n      swap1\n      tag_367\n      jump\t// in\n    tag_538:\n        /* \"ICO/IcoOptimized.sol\":12162:12180  isTokensAirdropped */\n      sload(0x09)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"ICO/IcoOptimized.sol\":12161:12180  !isTokensAirdropped */\n      iszero\n        /* \"ICO/IcoOptimized.sol\":12153:12210  require(!isTokensAirdropped, \"Airdrop already completed\") */\n      tag_541\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":20202:20204   */\n      0x20\n        /* \"ICO/IcoOptimized.sol\":12153:12210  require(!isTokensAirdropped, \"Airdrop already completed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":20184:20205   */\n      mstore\n        /* \"#utility.yul\":20241:20243   */\n      0x19\n        /* \"#utility.yul\":20221:20239   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":20214:20244   */\n      mstore\n        /* \"#utility.yul\":20280:20307   */\n      0x41697264726f7020616c726561647920636f6d706c6574656400000000000000\n        /* \"#utility.yul\":20260:20278   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":20253:20308   */\n      mstore\n        /* \"#utility.yul\":20325:20343   */\n      0x64\n      add\n        /* \"ICO/IcoOptimized.sol\":12153:12210  require(!isTokensAirdropped, \"Airdrop already completed\") */\n      tag_54\n        /* \"#utility.yul\":20000:20349   */\n      jump\n        /* \"ICO/IcoOptimized.sol\":12153:12210  require(!isTokensAirdropped, \"Airdrop already completed\") */\n    tag_541:\n        /* \"ICO/IcoOptimized.sol\":12272:12287  totalTokensSold */\n      sload(0x08)\n        /* \"ICO/IcoOptimized.sol\":12241:12246  token */\n      sload(0x03)\n        /* \"ICO/IcoOptimized.sol\":12241:12268  token.balanceOf(msg.sender) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"ICO/IcoOptimized.sol\":12257:12267  msg.sender */\n      caller\n        /* \"ICO/IcoOptimized.sol\":12241:12268  token.balanceOf(msg.sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1788:1839   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ICO/IcoOptimized.sol\":12241:12246  token */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"ICO/IcoOptimized.sol\":12241:12256  token.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1761:1779   */\n      0x24\n      add\n        /* \"ICO/IcoOptimized.sol\":12241:12268  token.balanceOf(msg.sender) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_546\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_546:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_547\n      swap2\n      swap1\n      tag_548\n      jump\t// in\n    tag_547:\n        /* \"ICO/IcoOptimized.sol\":12241:12287  token.balanceOf(msg.sender) >= totalTokensSold */\n      lt\n      iszero\n        /* \"ICO/IcoOptimized.sol\":12220:12331  require(... */\n      tag_549\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":20791:20793   */\n      0x20\n        /* \"ICO/IcoOptimized.sol\":12220:12331  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":20773:20794   */\n      mstore\n        /* \"#utility.yul\":20830:20832   */\n      0x12\n        /* \"#utility.yul\":20810:20828   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":20803:20833   */\n      mstore\n      shl(0x70, 0x496e73756666696369656e742046756e6473)\n        /* \"#utility.yul\":20849:20867   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":20842:20890   */\n      mstore\n        /* \"#utility.yul\":20907:20925   */\n      0x64\n      add\n        /* \"ICO/IcoOptimized.sol\":12220:12331  require(... */\n      tag_54\n        /* \"#utility.yul\":20589:20931   */\n      jump\n        /* \"ICO/IcoOptimized.sol\":12220:12331  require(... */\n    tag_549:\n        /* \"ICO/IcoOptimized.sol\":16146:16155  saleCount */\n      sload(0x06)\n        /* \"ICO/IcoOptimized.sol\":16114:16121  uint256 */\n      0x00\n        /* \"ICO/IcoOptimized.sol\":16140:16156  sales[saleCount] */\n      swap1\n      dup2\n      mstore\n        /* \"ICO/IcoOptimized.sol\":16140:16145  sales */\n      0x0d\n        /* \"ICO/IcoOptimized.sol\":16140:16156  sales[saleCount] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"ICO/IcoOptimized.sol\":16140:16164  sales[saleCount].endTime */\n      0x01\n      add\n      sload\n        /* \"ICO/IcoOptimized.sol\":12349:12364  block.timestamp */\n      timestamp\n        /* \"ICO/IcoOptimized.sol\":12349:12389  block.timestamp > getLatestSaleEndTime() */\n      gt\n        /* \"ICO/IcoOptimized.sol\":12341:12406  require(block.timestamp > getLatestSaleEndTime(), \"Sale ongoing\") */\n      tag_553\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":16943:16945   */\n      0x20\n        /* \"ICO/IcoOptimized.sol\":12341:12406  require(block.timestamp > getLatestSaleEndTime(), \"Sale ongoing\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16925:16946   */\n      mstore\n        /* \"#utility.yul\":16982:16984   */\n      0x0c\n        /* \"#utility.yul\":16962:16980   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":16955:16985   */\n      mstore\n      shl(0xa0, 0x53616c65206f6e676f696e67)\n        /* \"#utility.yul\":17001:17019   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":16994:17036   */\n      mstore\n        /* \"#utility.yul\":17053:17071   */\n      0x64\n      add\n        /* \"ICO/IcoOptimized.sol\":12341:12406  require(block.timestamp > getLatestSaleEndTime(), \"Sale ongoing\") */\n      tag_54\n        /* \"#utility.yul\":16741:17077   */\n      jump\n        /* \"ICO/IcoOptimized.sol\":12341:12406  require(block.timestamp > getLatestSaleEndTime(), \"Sale ongoing\") */\n    tag_553:\n        /* \"ICO/IcoOptimized.sol\":12442:12451  investors */\n      0x0a\n        /* \"ICO/IcoOptimized.sol\":12442:12458  investors.length */\n      dup1\n      sload\n      swap1\n        /* \"ICO/IcoOptimized.sol\":12417:12439  uint256 investorLength */\n      0x00\n      swap1\n        /* \"ICO/IcoOptimized.sol\":12508:12527  investorLength > 10 */\n      dup3\n      gt\n        /* \"ICO/IcoOptimized.sol\":12504:12645  if (investorLength > 10) {... */\n      iszero\n      tag_555\n      jumpi\n        /* \"ICO/IcoOptimized.sol\":12563:12582  investorLength - 11 */\n      tag_556\n        /* \"ICO/IcoOptimized.sol\":12580:12582  11 */\n      0x0b\n        /* \"ICO/IcoOptimized.sol\":12563:12577  investorLength */\n      dup4\n        /* \"ICO/IcoOptimized.sol\":12563:12582  investorLength - 11 */\n      tag_275\n      jump\t// in\n    tag_556:\n        /* \"ICO/IcoOptimized.sol\":12543:12582  investorsIterated = investorLength - 11 */\n      swap1\n      pop\n        /* \"ICO/IcoOptimized.sol\":12504:12645  if (investorLength > 10) {... */\n      jump(tag_557)\n    tag_555:\n      pop\n        /* \"ICO/IcoOptimized.sol\":12633:12634  0 */\n      0x00\n        /* \"ICO/IcoOptimized.sol\":12504:12645  if (investorLength > 10) {... */\n    tag_557:\n        /* \"ICO/IcoOptimized.sol\":12659:12668  uint256 i */\n      0x00\n        /* \"ICO/IcoOptimized.sol\":12671:12689  investorLength - 1 */\n      tag_561\n        /* \"ICO/IcoOptimized.sol\":12688:12689  1 */\n      0x01\n        /* \"ICO/IcoOptimized.sol\":12671:12685  investorLength */\n      dup5\n        /* \"ICO/IcoOptimized.sol\":12671:12689  investorLength - 1 */\n      tag_275\n      jump\t// in\n    tag_561:\n        /* \"ICO/IcoOptimized.sol\":12659:12689  uint256 i = investorLength - 1 */\n      swap1\n      pop\n        /* \"ICO/IcoOptimized.sol\":12654:13503  for (uint256 i = investorLength - 1; i >= investorsIterated; i--) {... */\n    tag_558:\n        /* \"ICO/IcoOptimized.sol\":12696:12713  investorsIterated */\n      dup2\n        /* \"ICO/IcoOptimized.sol\":12691:12692  i */\n      dup2\n        /* \"ICO/IcoOptimized.sol\":12691:12713  i >= investorsIterated */\n      lt\n        /* \"ICO/IcoOptimized.sol\":12654:13503  for (uint256 i = investorLength - 1; i >= investorsIterated; i--) {... */\n      tag_559\n      jumpi\n        /* \"ICO/IcoOptimized.sol\":12734:12750  address investor */\n      0x00\n        /* \"ICO/IcoOptimized.sol\":12753:12762  investors */\n      0x0a\n        /* \"ICO/IcoOptimized.sol\":12763:12764  i */\n      dup3\n        /* \"ICO/IcoOptimized.sol\":12753:12765  investors[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_563\n      jumpi\n      tag_563\n      tag_458\n      jump\t// in\n    tag_563:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"ICO/IcoOptimized.sol\":12802:12834  tokensBoughtByInvestor[investor] */\n      dup1\n      dup4\n      mstore\n        /* \"ICO/IcoOptimized.sol\":12802:12824  tokensBoughtByInvestor */\n      0x0f\n        /* \"ICO/IcoOptimized.sol\":12802:12834  tokensBoughtByInvestor[investor] */\n      swap1\n      swap2\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"ICO/IcoOptimized.sol\":12753:12765  investors[i] */\n      swap1\n      swap2\n      pop\n        /* \"ICO/IcoOptimized.sol\":12961:12977  tokensBought > 0 */\n      dup1\n      iszero\n        /* \"ICO/IcoOptimized.sol\":12957:13430  if (tokensBought > 0) {... */\n      tag_565\n      jumpi\n        /* \"ICO/IcoOptimized.sol\":13084:13089  token */\n      sload(0x03)\n        /* \"ICO/IcoOptimized.sol\":13069:13081  bool success */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ICO/IcoOptimized.sol\":13084:13089  token */\n      and\n        /* \"ICO/IcoOptimized.sol\":13084:13102  token.transferFrom */\n      0x23b872dd\n        /* \"ICO/IcoOptimized.sol\":13124:13131  owner() */\n      tag_566\n        /* \"ICO/IcoOptimized.sol\":13124:13129  owner */\n      tag_151\n        /* \"ICO/IcoOptimized.sol\":13124:13131  owner() */\n      jump\t// in\n    tag_566:\n        /* \"ICO/IcoOptimized.sol\":13084:13213  token.transferFrom(... */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup5\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":21156:21188   */\n      swap2\n      dup3\n      and\n        /* \"ICO/IcoOptimized.sol\":13084:13213  token.transferFrom(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":21138:21189   */\n      mstore\n        /* \"#utility.yul\":21225:21257   */\n      swap1\n      dup7\n      and\n        /* \"#utility.yul\":21205:21223   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":21198:21258   */\n      mstore\n        /* \"#utility.yul\":21274:21292   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":21267:21301   */\n      dup6\n      swap1\n      mstore\n        /* \"#utility.yul\":21111:21129   */\n      0x64\n      add\n        /* \"ICO/IcoOptimized.sol\":13084:13213  token.transferFrom(... */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_570\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_570:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_571\n      swap2\n      swap1\n      tag_509\n      jump\t// in\n    tag_571:\n        /* \"ICO/IcoOptimized.sol\":13069:13213  bool success = token.transferFrom(... */\n      swap1\n      pop\n        /* \"ICO/IcoOptimized.sol\":13239:13246  success */\n      dup1\n        /* \"ICO/IcoOptimized.sol\":13231:13272  require(success, \"Token transfer failed\") */\n      tag_572\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":21514:21516   */\n      0x20\n        /* \"ICO/IcoOptimized.sol\":13231:13272  require(success, \"Token transfer failed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":21496:21517   */\n      mstore\n        /* \"#utility.yul\":21553:21555   */\n      0x15\n        /* \"#utility.yul\":21533:21551   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":21526:21556   */\n      mstore\n      shl(0x5a, 0x151bdad95b881d1c985b9cd9995c8819985a5b1959)\n        /* \"#utility.yul\":21572:21590   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":21565:21616   */\n      mstore\n        /* \"#utility.yul\":21633:21651   */\n      0x64\n      add\n        /* \"ICO/IcoOptimized.sol\":13231:13272  require(success, \"Token transfer failed\") */\n      tag_54\n        /* \"#utility.yul\":21312:21657   */\n      jump\n        /* \"ICO/IcoOptimized.sol\":13231:13272  require(success, \"Token transfer failed\") */\n    tag_572:\n        /* \"ICO/IcoOptimized.sol\":13290:13299  investors */\n      0x0a\n        /* \"ICO/IcoOptimized.sol\":13290:13305  investors.pop() */\n      dup1\n      sload\n      dup1\n      tag_576\n      jumpi\n      tag_576\n      tag_520\n      jump\t// in\n    tag_576:\n      0x00\n      dup3\n      dup2\n      mstore\n      0x20\n      swap1\n      keccak256\n      dup2\n      add\n      not(0x00)\n      swap1\n      dup2\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n      add\n      swap1\n      sstore\n        /* \"ICO/IcoOptimized.sol\":13376:13415  TokenAirdropped(investor, tokensBought) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      swap1\n      0x9bdcd0cc5503fb9a8dd7311d9617e33108c4b7c8948cc544b16c1fd63c6f475b\n      swap1\n      tag_578\n      swap1\n        /* \"ICO/IcoOptimized.sol\":13402:13414  tokensBought */\n      dup6\n        /* \"#utility.yul\":1014:1039   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1002:1004   */\n      0x20\n        /* \"#utility.yul\":987:1005   */\n      add\n      swap1\n        /* \"#utility.yul\":868:1045   */\n      jump\n        /* \"ICO/IcoOptimized.sol\":13376:13415  TokenAirdropped(investor, tokensBought) */\n    tag_578:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"ICO/IcoOptimized.sol\":12979:13430  {... */\n      pop\n        /* \"ICO/IcoOptimized.sol\":12957:13430  if (tokensBought > 0) {... */\n    tag_565:\n        /* \"ICO/IcoOptimized.sol\":13447:13448  i */\n      dup3\n        /* \"ICO/IcoOptimized.sol\":13452:13453  0 */\n      0x00\n        /* \"ICO/IcoOptimized.sol\":13447:13453  i == 0 */\n      sub\n        /* \"ICO/IcoOptimized.sol\":13443:13493  if (i == 0) {... */\n      tag_579\n      jumpi\n        /* \"ICO/IcoOptimized.sol\":13473:13478  break */\n      pop\n      pop\n      jump(tag_559)\n        /* \"ICO/IcoOptimized.sol\":13443:13493  if (i == 0) {... */\n    tag_579:\n        /* \"ICO/IcoOptimized.sol\":12720:13503  {... */\n      pop\n      pop\n        /* \"ICO/IcoOptimized.sol\":12715:12718  i-- */\n      dup1\n      dup1\n      tag_580\n      swap1\n      tag_524\n      jump\t// in\n    tag_580:\n      swap2\n      pop\n      pop\n        /* \"ICO/IcoOptimized.sol\":12654:13503  for (uint256 i = investorLength - 1; i >= investorsIterated; i--) {... */\n      jump(tag_558)\n    tag_559:\n      pop\n        /* \"ICO/IcoOptimized.sol\":13516:13525  investors */\n      0x0a\n        /* \"ICO/IcoOptimized.sol\":13516:13532  investors.length */\n      sload\n        /* \"ICO/IcoOptimized.sol\":13536:13537  0 */\n      0x00\n        /* \"ICO/IcoOptimized.sol\":13516:13537  investors.length == 0 */\n      sub\n        /* \"ICO/IcoOptimized.sol\":13512:13589  if (investors.length == 0) {... */\n      tag_525\n      jumpi\n        /* \"ICO/IcoOptimized.sol\":13553:13571  isTokensAirdropped */\n      0x09\n        /* \"ICO/IcoOptimized.sol\":13553:13578  isTokensAirdropped = true */\n      dup1\n      sload\n      not(0xff00)\n      and\n      0x0100\n      or\n      swap1\n      sstore\n        /* \"ICO/IcoOptimized.sol\":12143:13595  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3437:3457  _nonReentrantAfter() */\n      tag_377\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":1949:1950  1 */\n      0x01\n      0x00\n      dup1\n      mload\n      0x20\n      data_c8669cf8eaf883002b9f48e28846a8d408c9b58ea6613bace374265e43c9bc43\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":4113:4136  $._status = NOT_ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3860:4143  function _nonReentrantAfter() private {... */\n      jump\n        /* \"ICO/IcoOptimized.sol\":8159:10736  function buyTokens(PaymentMethod paymentMethod, uint256 paymentAmount)... */\n    tag_162:\n        /* \"ICO/IcoOptimized.sol\":3281:3295  isICOFinalized */\n      and(0xff, sload(0x09))\n        /* \"ICO/IcoOptimized.sol\":3280:3295  !isICOFinalized */\n      iszero\n        /* \"ICO/IcoOptimized.sol\":3272:3321  require(!isICOFinalized, \"ICO already finalized\") */\n      tag_585\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_54\n      swap1\n      tag_363\n      jump\t// in\n    tag_585:\n        /* \"ICO/IcoOptimized.sol\":3383:3392  isFreezed */\n      sload(0x09)\n      0x010000\n      swap1\n      div\n      0xff\n      and\n        /* \"ICO/IcoOptimized.sol\":3382:3392  !isFreezed */\n      iszero\n        /* \"ICO/IcoOptimized.sol\":3374:3404  require(!isFreezed, \"freezed\") */\n      tag_588\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_54\n      swap1\n      tag_367\n      jump\t// in\n    tag_588:\n        /* \"ICO/IcoOptimized.sol\":8339:8346  owner() */\n      tag_591\n        /* \"ICO/IcoOptimized.sol\":8339:8344  owner */\n      tag_151\n        /* \"ICO/IcoOptimized.sol\":8339:8346  owner() */\n      jump\t// in\n    tag_591:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ICO/IcoOptimized.sol\":8325:8346  msg.sender != owner() */\n      and\n        /* \"ICO/IcoOptimized.sol\":8325:8335  msg.sender */\n      caller\n        /* \"ICO/IcoOptimized.sol\":8325:8346  msg.sender != owner() */\n      sub\n        /* \"ICO/IcoOptimized.sol\":8317:8374  require(msg.sender != owner(), \"Owner cannot buy tokens\") */\n      tag_592\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":21864:21866   */\n      0x20\n        /* \"ICO/IcoOptimized.sol\":8317:8374  require(msg.sender != owner(), \"Owner cannot buy tokens\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":21846:21867   */\n      mstore\n        /* \"#utility.yul\":21903:21905   */\n      0x17\n        /* \"#utility.yul\":21883:21901   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":21876:21906   */\n      mstore\n        /* \"#utility.yul\":21942:21967   */\n      0x4f776e65722063616e6e6f742062757920746f6b656e73000000000000000000\n        /* \"#utility.yul\":21922:21940   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":21915:21968   */\n      mstore\n        /* \"#utility.yul\":21985:22003   */\n      0x64\n      add\n        /* \"ICO/IcoOptimized.sol\":8317:8374  require(msg.sender != owner(), \"Owner cannot buy tokens\") */\n      tag_54\n        /* \"#utility.yul\":21662:22009   */\n      jump\n        /* \"ICO/IcoOptimized.sol\":8317:8374  require(msg.sender != owner(), \"Owner cannot buy tokens\") */\n    tag_592:\n        /* \"ICO/IcoOptimized.sol\":8392:8401  saleCount */\n      sload(0x06)\n        /* \"ICO/IcoOptimized.sol\":8405:8406  0 */\n      0x00\n        /* \"ICO/IcoOptimized.sol\":8392:8406  saleCount != 0 */\n      sub\n        /* \"ICO/IcoOptimized.sol\":8384:8418  require(saleCount != 0, \"No sale\") */\n      tag_595\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":22216:22218   */\n      0x20\n        /* \"ICO/IcoOptimized.sol\":8384:8418  require(saleCount != 0, \"No sale\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":22198:22219   */\n      mstore\n        /* \"#utility.yul\":22255:22256   */\n      0x07\n        /* \"#utility.yul\":22235:22253   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":22228:22257   */\n      mstore\n      shl(0xc8, 0x4e6f2073616c65)\n        /* \"#utility.yul\":22273:22291   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":22266:22303   */\n      mstore\n        /* \"#utility.yul\":22320:22338   */\n      0x64\n      add\n        /* \"ICO/IcoOptimized.sol\":8384:8418  require(saleCount != 0, \"No sale\") */\n      tag_54\n        /* \"#utility.yul\":22014:22344   */\n      jump\n        /* \"ICO/IcoOptimized.sol\":8384:8418  require(saleCount != 0, \"No sale\") */\n    tag_595:\n        /* \"ICO/IcoOptimized.sol\":8443:8452  saleCount */\n      sload(0x06)\n        /* \"ICO/IcoOptimized.sol\":8437:8453  sales[saleCount] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ICO/IcoOptimized.sol\":8437:8442  sales */\n      0x0d\n        /* \"ICO/IcoOptimized.sol\":8437:8453  sales[saleCount] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"ICO/IcoOptimized.sol\":8437:8465  sales[saleCount].isFinalized */\n      0x04\n      add\n      sload\n      0xff\n      and\n        /* \"ICO/IcoOptimized.sol\":8436:8465  !sales[saleCount].isFinalized */\n      iszero\n        /* \"ICO/IcoOptimized.sol\":8428:8492  require(!sales[saleCount].isFinalized, \"Sale already finalized\") */\n      tag_598\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":22551:22553   */\n      0x20\n        /* \"ICO/IcoOptimized.sol\":8428:8492  require(!sales[saleCount].isFinalized, \"Sale already finalized\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":22533:22554   */\n      mstore\n        /* \"#utility.yul\":22590:22592   */\n      0x16\n        /* \"#utility.yul\":22570:22588   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":22563:22593   */\n      mstore\n      shl(0x52, 0x14d85b1948185b1c9958591e48199a5b985b1a5e9959)\n        /* \"#utility.yul\":22609:22627   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":22602:22654   */\n      mstore\n        /* \"#utility.yul\":22671:22689   */\n      0x64\n      add\n        /* \"ICO/IcoOptimized.sol\":8428:8492  require(!sales[saleCount].isFinalized, \"Sale already finalized\") */\n      tag_54\n        /* \"#utility.yul\":22349:22695   */\n      jump\n        /* \"ICO/IcoOptimized.sol\":8428:8492  require(!sales[saleCount].isFinalized, \"Sale already finalized\") */\n    tag_598:\n        /* \"ICO/IcoOptimized.sol\":8502:8521  uint256 tokenAmount */\n      0x00\n      dup1\n        /* \"ICO/IcoOptimized.sol\":8535:8548  paymentMethod */\n      dup4\n        /* \"ICO/IcoOptimized.sol\":8535:8569  paymentMethod == PaymentMethod.BNB */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_604\n      jumpi\n      tag_604\n      tag_255\n      jump\t// in\n    tag_604:\n      sub\n        /* \"ICO/IcoOptimized.sol\":8531:9743  if (paymentMethod == PaymentMethod.BNB) {... */\n      tag_605\n      jumpi\n        /* \"ICO/IcoOptimized.sol\":8658:8659  0 */\n      0x00\n        /* \"ICO/IcoOptimized.sol\":8646:8655  msg.value */\n      callvalue\n        /* \"ICO/IcoOptimized.sol\":8646:8659  msg.value > 0 */\n      gt\n        /* \"ICO/IcoOptimized.sol\":8638:8687  require(msg.value > 0, \"Send a valid BNB amount\") */\n      tag_606\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":22902:22904   */\n      0x20\n        /* \"ICO/IcoOptimized.sol\":8638:8687  require(msg.value > 0, \"Send a valid BNB amount\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":22884:22905   */\n      mstore\n        /* \"#utility.yul\":22941:22943   */\n      0x17\n        /* \"#utility.yul\":22921:22939   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":22914:22944   */\n      mstore\n        /* \"#utility.yul\":22980:23005   */\n      0x53656e6420612076616c696420424e4220616d6f756e74000000000000000000\n        /* \"#utility.yul\":22960:22978   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":22953:23006   */\n      mstore\n        /* \"#utility.yul\":23023:23041   */\n      0x64\n      add\n        /* \"ICO/IcoOptimized.sol\":8638:8687  require(msg.value > 0, \"Send a valid BNB amount\") */\n      tag_54\n        /* \"#utility.yul\":22700:23047   */\n      jump\n        /* \"ICO/IcoOptimized.sol\":8638:8687  require(msg.value > 0, \"Send a valid BNB amount\") */\n    tag_606:\n        /* \"ICO/IcoOptimized.sol\":8715:8761  calculateTokenAmount(paymentMethod, msg.value) */\n      tag_609\n        /* \"ICO/IcoOptimized.sol\":8736:8749  paymentMethod */\n      dup4\n        /* \"ICO/IcoOptimized.sol\":8751:8760  msg.value */\n      callvalue\n        /* \"ICO/IcoOptimized.sol\":8715:8735  calculateTokenAmount */\n      tag_60\n        /* \"ICO/IcoOptimized.sol\":8715:8761  calculateTokenAmount(paymentMethod, msg.value) */\n      jump\t// in\n    tag_609:\n        /* \"ICO/IcoOptimized.sol\":8792:8802  msg.sender */\n      caller\n        /* \"ICO/IcoOptimized.sol\":8775:8803  investorPayments[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ICO/IcoOptimized.sol\":8775:8791  investorPayments */\n      0x11\n        /* \"ICO/IcoOptimized.sol\":8775:8803  investorPayments[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"ICO/IcoOptimized.sol\":8701:8761  tokenAmount = calculateTokenAmount(paymentMethod, msg.value) */\n      swap2\n      swap3\n      pop\n        /* \"ICO/IcoOptimized.sol\":8822:8831  msg.value */\n      callvalue\n      swap2\n        /* \"ICO/IcoOptimized.sol\":8775:8803  investorPayments[msg.sender] */\n      swap1\n        /* \"ICO/IcoOptimized.sol\":8804:8817  paymentMethod */\n      dup6\n        /* \"ICO/IcoOptimized.sol\":8775:8818  investorPayments[msg.sender][paymentMethod] */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_611\n      jumpi\n      tag_611\n      tag_255\n      jump\t// in\n    tag_611:\n      0x02\n      dup2\n      gt\n      iszero\n      tag_613\n      jumpi\n      tag_613\n      tag_255\n      jump\t// in\n    tag_613:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"ICO/IcoOptimized.sol\":8775:8831  investorPayments[msg.sender][paymentMethod] += msg.value */\n      dup3\n      dup3\n      sload\n      tag_614\n      swap2\n      swap1\n      tag_615\n      jump\t// in\n    tag_614:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"ICO/IcoOptimized.sol\":8531:9743  if (paymentMethod == PaymentMethod.BNB) {... */\n      tag_649\n      swap1\n      pop\n      jump\n    tag_605:\n        /* \"ICO/IcoOptimized.sol\":8882:8900  PaymentMethod.USDT */\n      0x01\n        /* \"ICO/IcoOptimized.sol\":8865:8878  paymentMethod */\n      dup4\n        /* \"ICO/IcoOptimized.sol\":8865:8900  paymentMethod == PaymentMethod.USDT */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_620\n      jumpi\n      tag_620\n      tag_255\n      jump\t// in\n    tag_620:\n      eq\n        /* \"ICO/IcoOptimized.sol\":8865:8951  paymentMethod == PaymentMethod.USDT ||... */\n      dup1\n      tag_621\n      jumpi\n      pop\n        /* \"ICO/IcoOptimized.sol\":8933:8951  PaymentMethod.USDC */\n      0x02\n        /* \"ICO/IcoOptimized.sol\":8916:8929  paymentMethod */\n      dup4\n        /* \"ICO/IcoOptimized.sol\":8916:8951  paymentMethod == PaymentMethod.USDC */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_625\n      jumpi\n      tag_625\n      tag_255\n      jump\t// in\n    tag_625:\n      eq\n        /* \"ICO/IcoOptimized.sol\":8865:8951  paymentMethod == PaymentMethod.USDT ||... */\n    tag_621:\n        /* \"ICO/IcoOptimized.sol\":8848:9743  if (... */\n      iszero\n      tag_273\n      jumpi\n        /* \"ICO/IcoOptimized.sol\":9042:9043  0 */\n      0x00\n        /* \"ICO/IcoOptimized.sol\":9026:9039  paymentAmount */\n      dup3\n        /* \"ICO/IcoOptimized.sol\":9026:9043  paymentAmount > 0 */\n      gt\n        /* \"ICO/IcoOptimized.sol\":9018:9079  require(paymentAmount > 0, \"Enter a valid stablecoin amount\") */\n      tag_627\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":23384:23386   */\n      0x20\n        /* \"ICO/IcoOptimized.sol\":9018:9079  require(paymentAmount > 0, \"Enter a valid stablecoin amount\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":23366:23387   */\n      mstore\n        /* \"#utility.yul\":23423:23425   */\n      0x1f\n        /* \"#utility.yul\":23403:23421   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":23396:23426   */\n      mstore\n        /* \"#utility.yul\":23462:23495   */\n      0x456e74657220612076616c696420737461626c65636f696e20616d6f756e7400\n        /* \"#utility.yul\":23442:23460   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":23435:23496   */\n      mstore\n        /* \"#utility.yul\":23513:23531   */\n      0x64\n      add\n        /* \"ICO/IcoOptimized.sol\":9018:9079  require(paymentAmount > 0, \"Enter a valid stablecoin amount\") */\n      tag_54\n        /* \"#utility.yul\":23182:23537   */\n      jump\n        /* \"ICO/IcoOptimized.sol\":9018:9079  require(paymentAmount > 0, \"Enter a valid stablecoin amount\") */\n    tag_627:\n        /* \"ICO/IcoOptimized.sol\":9093:9110  IERC20 stablecoin */\n      0x00\n        /* \"ICO/IcoOptimized.sol\":9130:9148  PaymentMethod.USDT */\n      0x01\n        /* \"ICO/IcoOptimized.sol\":9113:9126  paymentMethod */\n      dup5\n        /* \"ICO/IcoOptimized.sol\":9113:9148  paymentMethod == PaymentMethod.USDT */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_633\n      jumpi\n      tag_633\n      tag_255\n      jump\t// in\n    tag_633:\n      eq\n        /* \"ICO/IcoOptimized.sol\":9113:9210  paymentMethod == PaymentMethod.USDT... */\n      tag_634\n      jumpi\n        /* \"ICO/IcoOptimized.sol\":9205:9209  usdc */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0c))\n        /* \"ICO/IcoOptimized.sol\":9113:9210  paymentMethod == PaymentMethod.USDT... */\n      jump(tag_635)\n    tag_634:\n        /* \"ICO/IcoOptimized.sol\":9174:9178  usdt */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0b))\n        /* \"ICO/IcoOptimized.sol\":9113:9210  paymentMethod == PaymentMethod.USDT... */\n    tag_635:\n        /* \"ICO/IcoOptimized.sol\":9249:9392  stablecoin.transferFrom(... */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"ICO/IcoOptimized.sol\":9294:9304  msg.sender */\n      caller\n        /* \"ICO/IcoOptimized.sol\":9249:9392  stablecoin.transferFrom(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":21138:21189   */\n      mstore\n        /* \"ICO/IcoOptimized.sol\":9334:9338  this */\n      address\n        /* \"#utility.yul\":21205:21223   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":21198:21258   */\n      mstore\n        /* \"#utility.yul\":21274:21292   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":21267:21301   */\n      dup6\n      swap1\n      mstore\n        /* \"ICO/IcoOptimized.sol\":9093:9210  IERC20 stablecoin = paymentMethod == PaymentMethod.USDT... */\n      swap1\n      swap2\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ICO/IcoOptimized.sol\":9249:9272  stablecoin.transferFrom */\n      dup3\n      and\n      swap1\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":21111:21129   */\n      0x64\n      add\n        /* \"ICO/IcoOptimized.sol\":9249:9392  stablecoin.transferFrom(... */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_638\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_638:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_639\n      swap2\n      swap1\n      tag_509\n      jump\t// in\n    tag_639:\n        /* \"ICO/IcoOptimized.sol\":9224:9452  require(... */\n      tag_640\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":23744:23746   */\n      0x20\n        /* \"ICO/IcoOptimized.sol\":9224:9452  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":23726:23747   */\n      mstore\n        /* \"#utility.yul\":23783:23785   */\n      0x1a\n        /* \"#utility.yul\":23763:23781   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":23756:23786   */\n      mstore\n        /* \"#utility.yul\":23822:23850   */\n      0x537461626c65636f696e207472616e73666572206661696c6564000000000000\n        /* \"#utility.yul\":23802:23820   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":23795:23851   */\n      mstore\n        /* \"#utility.yul\":23868:23886   */\n      0x64\n      add\n        /* \"ICO/IcoOptimized.sol\":9224:9452  require(... */\n      tag_54\n        /* \"#utility.yul\":23542:23892   */\n      jump\n        /* \"ICO/IcoOptimized.sol\":9224:9452  require(... */\n    tag_640:\n        /* \"ICO/IcoOptimized.sol\":9541:9591  calculateTokenAmount(paymentMethod, paymentAmount) */\n      tag_643\n        /* \"ICO/IcoOptimized.sol\":9562:9575  paymentMethod */\n      dup5\n        /* \"ICO/IcoOptimized.sol\":9577:9590  paymentAmount */\n      dup5\n        /* \"ICO/IcoOptimized.sol\":9541:9561  calculateTokenAmount */\n      tag_60\n        /* \"ICO/IcoOptimized.sol\":9541:9591  calculateTokenAmount(paymentMethod, paymentAmount) */\n      jump\t// in\n    tag_643:\n        /* \"ICO/IcoOptimized.sol\":9622:9632  msg.sender */\n      caller\n        /* \"ICO/IcoOptimized.sol\":9605:9633  investorPayments[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ICO/IcoOptimized.sol\":9605:9621  investorPayments */\n      0x11\n        /* \"ICO/IcoOptimized.sol\":9605:9633  investorPayments[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"ICO/IcoOptimized.sol\":9527:9591  tokenAmount = calculateTokenAmount(paymentMethod, paymentAmount) */\n      swap2\n      swap4\n      pop\n        /* \"ICO/IcoOptimized.sol\":9652:9665  paymentAmount */\n      dup5\n      swap2\n        /* \"ICO/IcoOptimized.sol\":9605:9633  investorPayments[msg.sender] */\n      swap1\n        /* \"ICO/IcoOptimized.sol\":9634:9647  paymentMethod */\n      dup7\n        /* \"ICO/IcoOptimized.sol\":9605:9648  investorPayments[msg.sender][paymentMethod] */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_645\n      jumpi\n      tag_645\n      tag_255\n      jump\t// in\n    tag_645:\n      0x02\n      dup2\n      gt\n      iszero\n      tag_647\n      jumpi\n      tag_647\n      tag_255\n      jump\t// in\n    tag_647:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"ICO/IcoOptimized.sol\":9605:9665  investorPayments[msg.sender][paymentMethod] += paymentAmount */\n      dup3\n      dup3\n      sload\n      tag_648\n      swap2\n      swap1\n      tag_615\n      jump\t// in\n    tag_648:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"ICO/IcoOptimized.sol\":8848:9743  if (... */\n      tag_649\n      swap2\n      pop\n      pop\n      jump\n    tag_649:\n        /* \"ICO/IcoOptimized.sol\":9774:9775  0 */\n      0x00\n        /* \"ICO/IcoOptimized.sol\":9760:9771  tokenAmount */\n      dup2\n        /* \"ICO/IcoOptimized.sol\":9760:9775  tokenAmount > 0 */\n      gt\n        /* \"ICO/IcoOptimized.sol\":9752:9800  require(tokenAmount > 0, \"Invalid token amount\") */\n      tag_651\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":24099:24101   */\n      0x20\n        /* \"ICO/IcoOptimized.sol\":9752:9800  require(tokenAmount > 0, \"Invalid token amount\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":24081:24102   */\n      mstore\n        /* \"#utility.yul\":24138:24140   */\n      0x14\n        /* \"#utility.yul\":24118:24136   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":24111:24141   */\n      mstore\n      shl(0x62, 0x125b9d985b1a59081d1bdad95b88185b5bdd5b9d)\n        /* \"#utility.yul\":24157:24175   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":24150:24200   */\n      mstore\n        /* \"#utility.yul\":24217:24235   */\n      0x64\n      add\n        /* \"ICO/IcoOptimized.sol\":9752:9800  require(tokenAmount > 0, \"Invalid token amount\") */\n      tag_54\n        /* \"#utility.yul\":23897:24241   */\n      jump\n        /* \"ICO/IcoOptimized.sol\":9752:9800  require(tokenAmount > 0, \"Invalid token amount\") */\n    tag_651:\n        /* \"ICO/IcoOptimized.sol\":9928:9937  saleCount */\n      sload(0x06)\n        /* \"ICO/IcoOptimized.sol\":9870:9892  uint256 totalCostInUSD */\n      0x00\n        /* \"ICO/IcoOptimized.sol\":9922:9938  sales[saleCount] */\n      swap1\n      dup2\n      mstore\n        /* \"ICO/IcoOptimized.sol\":9922:9927  sales */\n      0x0d\n        /* \"ICO/IcoOptimized.sol\":9922:9938  sales[saleCount] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"ICO/IcoOptimized.sol\":9922:9952  sales[saleCount].tokenPriceUSD */\n      0x02\n      add\n      sload\n        /* \"ICO/IcoOptimized.sol\":1216:1220  1e18 */\n      0x0de0b6b3a7640000\n      swap1\n        /* \"ICO/IcoOptimized.sol\":9896:9952  tokenAmount *... */\n      tag_654\n      swap1\n        /* \"ICO/IcoOptimized.sol\":9896:9907  tokenAmount */\n      dup5\n        /* \"ICO/IcoOptimized.sol\":9896:9952  tokenAmount *... */\n      tag_260\n      jump\t// in\n    tag_654:\n        /* \"ICO/IcoOptimized.sol\":9895:9968  (tokenAmount *... */\n      tag_655\n      swap2\n      swap1\n      tag_262\n      jump\t// in\n    tag_655:\n        /* \"ICO/IcoOptimized.sol\":9870:9968  uint256 totalCostInUSD = (tokenAmount *... */\n      swap1\n      pop\n        /* \"ICO/IcoOptimized.sol\":10039:10051  hardCapInUSD */\n      sload(0x05)\n        /* \"ICO/IcoOptimized.sol\":10021:10035  totalCostInUSD */\n      dup2\n        /* \"ICO/IcoOptimized.sol\":9999:10018  totalFundsRaisedUSD */\n      sload(0x07)\n        /* \"ICO/IcoOptimized.sol\":9999:10035  totalFundsRaisedUSD + totalCostInUSD */\n      tag_656\n      swap2\n      swap1\n      tag_615\n      jump\t// in\n    tag_656:\n        /* \"ICO/IcoOptimized.sol\":9999:10051  totalFundsRaisedUSD + totalCostInUSD <= hardCapInUSD */\n      gt\n      iszero\n        /* \"ICO/IcoOptimized.sol\":9978:10093  require(... */\n      tag_657\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":24448:24450   */\n      0x20\n        /* \"ICO/IcoOptimized.sol\":9978:10093  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":24430:24451   */\n      mstore\n        /* \"#utility.yul\":24487:24489   */\n      0x10\n        /* \"#utility.yul\":24467:24485   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":24460:24490   */\n      mstore\n      shl(0x82, 0x12185c990818d85c081c995858da1959)\n        /* \"#utility.yul\":24506:24524   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":24499:24545   */\n      mstore\n        /* \"#utility.yul\":24562:24580   */\n      0x64\n      add\n        /* \"ICO/IcoOptimized.sol\":9978:10093  require(... */\n      tag_54\n        /* \"#utility.yul\":24246:24586   */\n      jump\n        /* \"ICO/IcoOptimized.sol\":9978:10093  require(... */\n    tag_657:\n        /* \"ICO/IcoOptimized.sol\":10123:10133  msg.sender */\n      caller\n        /* \"ICO/IcoOptimized.sol\":10104:10134  contributionsInUSD[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ICO/IcoOptimized.sol\":10104:10122  contributionsInUSD */\n      0x0e\n        /* \"ICO/IcoOptimized.sol\":10104:10134  contributionsInUSD[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"ICO/IcoOptimized.sol\":10104:10152  contributionsInUSD[msg.sender] += totalCostInUSD */\n      dup1\n      sload\n        /* \"ICO/IcoOptimized.sol\":10138:10152  totalCostInUSD */\n      dup4\n      swap3\n        /* \"ICO/IcoOptimized.sol\":10104:10134  contributionsInUSD[msg.sender] */\n      swap1\n        /* \"ICO/IcoOptimized.sol\":10104:10152  contributionsInUSD[msg.sender] += totalCostInUSD */\n      tag_660\n      swap1\n        /* \"ICO/IcoOptimized.sol\":10138:10152  totalCostInUSD */\n      dup5\n      swap1\n        /* \"ICO/IcoOptimized.sol\":10104:10152  contributionsInUSD[msg.sender] += totalCostInUSD */\n      tag_615\n      jump\t// in\n    tag_660:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ICO/IcoOptimized.sol\":10185:10199  totalCostInUSD */\n      dup1\n        /* \"ICO/IcoOptimized.sol\":10162:10181  totalFundsRaisedUSD */\n      0x07\n      0x00\n        /* \"ICO/IcoOptimized.sol\":10162:10199  totalFundsRaisedUSD += totalCostInUSD */\n      dup3\n      dup3\n      sload\n      tag_661\n      swap2\n      swap1\n      tag_615\n      jump\t// in\n    tag_661:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"ICO/IcoOptimized.sol\":10215:10224  saleCount */\n      sload(0x06)\n        /* \"ICO/IcoOptimized.sol\":10209:10225  sales[saleCount] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ICO/IcoOptimized.sol\":10209:10214  sales */\n      0x0d\n        /* \"ICO/IcoOptimized.sol\":10209:10225  sales[saleCount] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"ICO/IcoOptimized.sol\":10209:10236  sales[saleCount].tokensSold */\n      0x03\n      add\n        /* \"ICO/IcoOptimized.sol\":10209:10251  sales[saleCount].tokensSold += tokenAmount */\n      dup1\n      sload\n        /* \"ICO/IcoOptimized.sol\":10240:10251  tokenAmount */\n      dup5\n      swap3\n        /* \"ICO/IcoOptimized.sol\":10209:10225  sales[saleCount] */\n      swap1\n        /* \"ICO/IcoOptimized.sol\":10209:10251  sales[saleCount].tokensSold += tokenAmount */\n      tag_662\n      swap1\n        /* \"ICO/IcoOptimized.sol\":10240:10251  tokenAmount */\n      dup5\n      swap1\n        /* \"ICO/IcoOptimized.sol\":10209:10251  sales[saleCount].tokensSold += tokenAmount */\n      tag_615\n      jump\t// in\n    tag_662:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ICO/IcoOptimized.sol\":10280:10291  tokenAmount */\n      dup2\n        /* \"ICO/IcoOptimized.sol\":10261:10276  totalTokensSold */\n      0x08\n      0x00\n        /* \"ICO/IcoOptimized.sol\":10261:10291  totalTokensSold += tokenAmount */\n      dup3\n      dup3\n      sload\n      tag_663\n      swap2\n      swap1\n      tag_615\n      jump\t// in\n    tag_663:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"ICO/IcoOptimized.sol\":10329:10339  msg.sender */\n      caller\n        /* \"ICO/IcoOptimized.sol\":10306:10340  tokensBoughtByInvestor[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ICO/IcoOptimized.sol\":10306:10328  tokensBoughtByInvestor */\n      0x0f\n        /* \"ICO/IcoOptimized.sol\":10306:10340  tokensBoughtByInvestor[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"ICO/IcoOptimized.sol\":10306:10345  tokensBoughtByInvestor[msg.sender] == 0 */\n      swap1\n      sub\n        /* \"ICO/IcoOptimized.sol\":10302:10398  if (tokensBoughtByInvestor[msg.sender] == 0) {... */\n      tag_664\n      jumpi\n        /* \"ICO/IcoOptimized.sol\":10361:10370  investors */\n      0x0a\n        /* \"ICO/IcoOptimized.sol\":10361:10387  investors.push(msg.sender) */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      dup3\n      sstore\n      0x00\n      swap2\n      swap1\n      swap2\n      mstore\n      0xc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a8\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n        /* \"ICO/IcoOptimized.sol\":10376:10386  msg.sender */\n      caller\n        /* \"ICO/IcoOptimized.sol\":10361:10387  investors.push(msg.sender) */\n      or\n      swap1\n      sstore\n        /* \"ICO/IcoOptimized.sol\":10302:10398  if (tokensBoughtByInvestor[msg.sender] == 0) {... */\n    tag_664:\n        /* \"ICO/IcoOptimized.sol\":10430:10440  msg.sender */\n      caller\n        /* \"ICO/IcoOptimized.sol\":10407:10441  tokensBoughtByInvestor[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ICO/IcoOptimized.sol\":10407:10429  tokensBoughtByInvestor */\n      0x0f\n        /* \"ICO/IcoOptimized.sol\":10407:10441  tokensBoughtByInvestor[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"ICO/IcoOptimized.sol\":10407:10456  tokensBoughtByInvestor[msg.sender] += tokenAmount */\n      dup1\n      sload\n        /* \"ICO/IcoOptimized.sol\":10445:10456  tokenAmount */\n      dup5\n      swap3\n        /* \"ICO/IcoOptimized.sol\":10407:10441  tokensBoughtByInvestor[msg.sender] */\n      swap1\n        /* \"ICO/IcoOptimized.sol\":10407:10456  tokensBoughtByInvestor[msg.sender] += tokenAmount */\n      tag_666\n      swap1\n        /* \"ICO/IcoOptimized.sol\":10445:10456  tokenAmount */\n      dup5\n      swap1\n        /* \"ICO/IcoOptimized.sol\":10407:10456  tokensBoughtByInvestor[msg.sender] += tokenAmount */\n      tag_615\n      jump\t// in\n    tag_666:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"ICO/IcoOptimized.sol\":10491:10501  msg.sender */\n      caller\n        /* \"ICO/IcoOptimized.sol\":10466:10502  paymentMethodForInvestor[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ICO/IcoOptimized.sol\":10466:10490  paymentMethodForInvestor */\n      0x10\n        /* \"ICO/IcoOptimized.sol\":10466:10502  paymentMethodForInvestor[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"ICO/IcoOptimized.sol\":10466:10518  paymentMethodForInvestor[msg.sender] = paymentMethod */\n      dup1\n      sload\n        /* \"ICO/IcoOptimized.sol\":10505:10518  paymentMethod */\n      dup6\n      swap2\n        /* \"ICO/IcoOptimized.sol\":10466:10502  paymentMethodForInvestor[msg.sender] */\n      swap1\n      not(0xff)\n        /* \"ICO/IcoOptimized.sol\":10466:10518  paymentMethodForInvestor[msg.sender] = paymentMethod */\n      and\n      0x01\n        /* \"ICO/IcoOptimized.sol\":10505:10518  paymentMethod */\n      dup4\n        /* \"ICO/IcoOptimized.sol\":10466:10518  paymentMethodForInvestor[msg.sender] = paymentMethod */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_668\n      jumpi\n      tag_668\n      tag_255\n      jump\t// in\n    tag_668:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ICO/IcoOptimized.sol\":10587:10596  saleCount */\n      sload(0x06)\n        /* \"ICO/IcoOptimized.sol\":10635:10651  sales[saleCount] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"ICO/IcoOptimized.sol\":10635:10640  sales */\n      0x0d\n        /* \"ICO/IcoOptimized.sol\":10635:10651  sales[saleCount] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"ICO/IcoOptimized.sol\":10635:10665  sales[saleCount].tokenPriceUSD */\n      0x02\n      add\n      sload\n        /* \"ICO/IcoOptimized.sol\":10534:10729  TokensPurchased(... */\n      swap1\n      mload\n        /* \"ICO/IcoOptimized.sol\":10563:10573  msg.sender */\n      caller\n      swap2\n        /* \"ICO/IcoOptimized.sol\":10534:10729  TokensPurchased(... */\n      0xdbcef474a632721725d49e3f35d9defe0257100b01d1e4b4b135b14d6fe296e8\n      swap2\n      tag_669\n      swap2\n        /* \"ICO/IcoOptimized.sol\":10610:10621  tokenAmount */\n      dup8\n      swap2\n        /* \"ICO/IcoOptimized.sol\":10679:10692  paymentAmount */\n      dup10\n      swap1\n        /* \"ICO/IcoOptimized.sol\":10706:10719  paymentMethod */\n      dup12\n      swap1\n        /* \"ICO/IcoOptimized.sol\":10534:10729  TokensPurchased(... */\n      tag_670\n      jump\t// in\n    tag_669:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ICO/IcoOptimized.sol\":8307:10736  {... */\n      pop\n      pop\n        /* \"ICO/IcoOptimized.sol\":8159:10736  function buyTokens(PaymentMethod paymentMethod, uint256 paymentAmount)... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_234:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_674\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_359\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_674:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n      tag_676\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3562:3563  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1788:1839   */\n      mstore\n        /* \"#utility.yul\":1761:1779   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      tag_54\n        /* \"#utility.yul\":1642:1845   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n    tag_676:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      tag_678\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3604:3612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3603  _transferOwnership */\n      tag_427\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_678:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"ICO/IcoOptimized.sol\":2454:3229  function initialize(... */\n    tag_244:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      dup1\n      sload\n      shl(0x40, 0x01)\n      dup2\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4742  initialized == 0 */\n      dup2\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_682\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4746:4760  isTopLevelCall */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n    tag_682:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4760  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4787  bool construction */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4801  initialized */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4805:4806  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_683\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4818:4822  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4835  address(this).code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4840  address(this).code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n    tag_683:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4840  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4856:4868  initialSetup */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4868  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_684\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4873:4885  construction */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4872:4885  !construction */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n    tag_684:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n      iszero\n      tag_685\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4908:4931  InvalidInitialization() */\n      mload(0x40)\n      shl(0xe0, 0xf92ee8a9)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n    tag_685:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      dup5\n      sload\n      not(0xffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4968:4969  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      or\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n      dup4\n      iszero\n      tag_686\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5035  $._initializing = true */\n      dup5\n      sload\n      not(shl(0x40, 0xff))\n      and\n      shl(0x40, 0x01)\n      or\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n    tag_686:\n        /* \"ICO/IcoOptimized.sol\":2735:2761  __Ownable_init(msg.sender) */\n      tag_688\n        /* \"ICO/IcoOptimized.sol\":2750:2760  msg.sender */\n      caller\n        /* \"ICO/IcoOptimized.sol\":2735:2749  __Ownable_init */\n      tag_689\n        /* \"ICO/IcoOptimized.sol\":2735:2761  __Ownable_init(msg.sender) */\n      jump\t// in\n    tag_688:\n        /* \"ICO/IcoOptimized.sol\":2771:2795  __UUPSUpgradeable_init() */\n      tag_690\n        /* \"ICO/IcoOptimized.sol\":2771:2793  __UUPSUpgradeable_init */\n      tag_691\n        /* \"ICO/IcoOptimized.sol\":2771:2795  __UUPSUpgradeable_init() */\n      jump\t// in\n    tag_690:\n        /* \"ICO/IcoOptimized.sol\":2814:2820  _token */\n      dup13\n        /* \"ICO/IcoOptimized.sol\":2806:2811  token */\n      0x03\n      0x00\n        /* \"ICO/IcoOptimized.sol\":2806:2820  token = _token */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      mul\n      not\n      and\n      swap1\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ICO/IcoOptimized.sol\":2845:2858  _softCapInUSD */\n      dup10\n        /* \"ICO/IcoOptimized.sol\":2830:2842  softCapInUSD */\n      0x04\n        /* \"ICO/IcoOptimized.sol\":2830:2858  softCapInUSD = _softCapInUSD */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ICO/IcoOptimized.sol\":2883:2896  _hardCapInUSD */\n      dup9\n        /* \"ICO/IcoOptimized.sol\":2868:2880  hardCapInUSD */\n      0x05\n        /* \"ICO/IcoOptimized.sol\":2868:2896  hardCapInUSD = _hardCapInUSD */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ICO/IcoOptimized.sol\":2913:2918  _usdt */\n      dup12\n        /* \"ICO/IcoOptimized.sol\":2906:2910  usdt */\n      0x0b\n      0x00\n        /* \"ICO/IcoOptimized.sol\":2906:2918  usdt = _usdt */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      mul\n      not\n      and\n      swap1\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ICO/IcoOptimized.sol\":2935:2940  _usdc */\n      dup11\n        /* \"ICO/IcoOptimized.sol\":2928:2932  usdc */\n      0x0c\n      0x00\n        /* \"ICO/IcoOptimized.sol\":2928:2940  usdc = _usdc */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      mul\n      not\n      and\n      swap1\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ICO/IcoOptimized.sol\":2987:3000  _priceFeedBNB */\n      dup8\n        /* \"ICO/IcoOptimized.sol\":2950:2962  priceFeedBNB */\n      0x00\n      dup1\n        /* \"ICO/IcoOptimized.sol\":2950:3001  priceFeedBNB = AggregatorV3Interface(_priceFeedBNB) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      mul\n      not\n      and\n      swap1\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ICO/IcoOptimized.sol\":3049:3063  _priceFeedUSDT */\n      dup7\n        /* \"ICO/IcoOptimized.sol\":3011:3024  priceFeedUSDT */\n      0x01\n      0x00\n        /* \"ICO/IcoOptimized.sol\":3011:3064  priceFeedUSDT = AggregatorV3Interface(_priceFeedUSDT) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      mul\n      not\n      and\n      swap1\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ICO/IcoOptimized.sol\":3112:3126  _priceFeedUSDC */\n      dup6\n        /* \"ICO/IcoOptimized.sol\":3074:3087  priceFeedUSDC */\n      0x02\n      0x00\n        /* \"ICO/IcoOptimized.sol\":3074:3127  priceFeedUSDC = AggregatorV3Interface(_priceFeedUSDC) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      mul\n      not\n      and\n      swap1\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5070:5084  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n      iszero\n      tag_692\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5123  $._initializing = false */\n      dup5\n      sload\n      not(shl(0x40, 0xff))\n      and\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      0x01\n        /* \"#utility.yul\":25179:25229   */\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n      swap1\n        /* \"#utility.yul\":25167:25169   */\n      0x20\n        /* \"#utility.yul\":25152:25170   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n    tag_692:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4092:5173  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"ICO/IcoOptimized.sol\":2454:3229  function initialize(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3470:3854  function _nonReentrantBefore() private {... */\n    tag_356:\n      0x00\n      dup1\n      mload\n      0x20\n      data_c8669cf8eaf883002b9f48e28846a8d408c9b58ea6613bace374265e43c9bc43\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3670:3679  $._status */\n      dup1\n      sload\n      not(0x01)\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3670:3690  $._status == ENTERED */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3666:3754  if ($._status == ENTERED) {... */\n      tag_698\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3713:3743  ReentrancyGuardReentrantCall() */\n      mload(0x40)\n      shl(0xe0, 0x3ee5aeb5)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3666:3754  if ($._status == ENTERED) {... */\n    tag_698:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":1991:1992  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3828:3847  $._status = ENTERED */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3470:3854  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n    tag_359:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      tag_702\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2722  owner */\n      tag_151\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      jump\t// in\n    tag_702:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n      tag_377\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1788:1839   */\n      mstore\n        /* \"#utility.yul\":1761:1779   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_54\n        /* \"#utility.yul\":1642:1845   */\n      jump\n        /* \"ICO/IcoOptimized.sol\":11195:12012  function _transferFundsToOwner() private {... */\n    tag_376:\n        /* \"ICO/IcoOptimized.sol\":11270:11291  address(this).balance */\n      selfbalance\n        /* \"ICO/IcoOptimized.sol\":11305:11322  nativeBalance > 0 */\n      dup1\n      iszero\n        /* \"ICO/IcoOptimized.sol\":11301:11464  if (nativeBalance > 0) {... */\n      tag_707\n      jumpi\n        /* \"ICO/IcoOptimized.sol\":11339:11351  bool success */\n      0x00\n        /* \"ICO/IcoOptimized.sol\":11365:11372  owner() */\n      tag_708\n        /* \"ICO/IcoOptimized.sol\":11365:11370  owner */\n      tag_151\n        /* \"ICO/IcoOptimized.sol\":11365:11372  owner() */\n      jump\t// in\n    tag_708:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ICO/IcoOptimized.sol\":11357:11378  payable(owner()).call */\n      and\n        /* \"ICO/IcoOptimized.sol\":11386:11399  nativeBalance */\n      dup3\n        /* \"ICO/IcoOptimized.sol\":11357:11404  payable(owner()).call{value: nativeBalance}(\"\") */\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_712\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_711)\n    tag_712:\n      0x60\n      swap2\n      pop\n    tag_711:\n      pop\n        /* \"ICO/IcoOptimized.sol\":11338:11404  (bool success, ) = payable(owner()).call{value: nativeBalance}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"ICO/IcoOptimized.sol\":11426:11433  success */\n      dup1\n        /* \"ICO/IcoOptimized.sol\":11418:11453  require(success, \"Transfer failed\") */\n      tag_713\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":25442:25444   */\n      0x20\n        /* \"ICO/IcoOptimized.sol\":11418:11453  require(success, \"Transfer failed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":25424:25445   */\n      mstore\n        /* \"#utility.yul\":25481:25483   */\n      0x0f\n        /* \"#utility.yul\":25461:25479   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":25454:25484   */\n      mstore\n      shl(0x8a, 0x151c985b9cd9995c8819985a5b1959)\n        /* \"#utility.yul\":25500:25518   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":25493:25538   */\n      mstore\n        /* \"#utility.yul\":25555:25573   */\n      0x64\n      add\n        /* \"ICO/IcoOptimized.sol\":11418:11453  require(success, \"Transfer failed\") */\n      tag_54\n        /* \"#utility.yul\":25240:25579   */\n      jump\n        /* \"ICO/IcoOptimized.sol\":11418:11453  require(success, \"Transfer failed\") */\n    tag_713:\n        /* \"ICO/IcoOptimized.sol\":11324:11464  {... */\n      pop\n        /* \"ICO/IcoOptimized.sol\":11301:11464  if (nativeBalance > 0) {... */\n    tag_707:\n        /* \"ICO/IcoOptimized.sol\":11552:11556  usdt */\n      sload(0x0b)\n        /* \"ICO/IcoOptimized.sol\":11545:11582  IERC20(usdt).balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"ICO/IcoOptimized.sol\":11576:11580  this */\n      address\n        /* \"ICO/IcoOptimized.sol\":11545:11582  IERC20(usdt).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1788:1839   */\n      mstore\n        /* \"ICO/IcoOptimized.sol\":11523:11542  uint256 usdtBalance */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ICO/IcoOptimized.sol\":11552:11556  usdt */\n      and\n      swap1\n        /* \"ICO/IcoOptimized.sol\":11545:11567  IERC20(usdt).balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1761:1779   */\n      0x24\n      add\n        /* \"ICO/IcoOptimized.sol\":11545:11582  IERC20(usdt).balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_718\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_718:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_719\n      swap2\n      swap1\n      tag_548\n      jump\t// in\n    tag_719:\n        /* \"ICO/IcoOptimized.sol\":11523:11582  uint256 usdtBalance = IERC20(usdt).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"ICO/IcoOptimized.sol\":11596:11611  usdtBalance > 0 */\n      dup1\n      iszero\n        /* \"ICO/IcoOptimized.sol\":11592:11760  if (usdtBalance > 0) {... */\n      tag_726\n      jumpi\n        /* \"ICO/IcoOptimized.sol\":11659:11663  usdt */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0b))\n        /* \"ICO/IcoOptimized.sol\":11652:11673  IERC20(usdt).transfer */\n      0xa9059cbb\n        /* \"ICO/IcoOptimized.sol\":11674:11681  owner() */\n      tag_721\n        /* \"ICO/IcoOptimized.sol\":11674:11679  owner */\n      tag_151\n        /* \"ICO/IcoOptimized.sol\":11674:11681  owner() */\n      jump\t// in\n    tag_721:\n        /* \"ICO/IcoOptimized.sol\":11652:11695  IERC20(usdt).transfer(owner(), usdtBalance) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup5\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":18307:18339   */\n      swap1\n      swap2\n      and\n        /* \"ICO/IcoOptimized.sol\":11652:11695  IERC20(usdt).transfer(owner(), usdtBalance) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":18289:18340   */\n      mstore\n        /* \"#utility.yul\":18356:18374   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":18349:18383   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":18262:18280   */\n      0x44\n      add\n        /* \"ICO/IcoOptimized.sol\":11652:11695  IERC20(usdt).transfer(owner(), usdtBalance) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_724\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_724:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_725\n      swap2\n      swap1\n      tag_509\n      jump\t// in\n    tag_725:\n        /* \"ICO/IcoOptimized.sol\":11627:11749  require(... */\n      tag_726\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":25786:25788   */\n      0x20\n        /* \"ICO/IcoOptimized.sol\":11627:11749  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":25768:25789   */\n      mstore\n        /* \"#utility.yul\":25825:25827   */\n      0x14\n        /* \"#utility.yul\":25805:25823   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":25798:25828   */\n      mstore\n      shl(0x62, 0x1554d115081d1c985b9cd9995c8819985a5b1959)\n        /* \"#utility.yul\":25844:25862   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":25837:25887   */\n      mstore\n        /* \"#utility.yul\":25904:25922   */\n      0x64\n      add\n        /* \"ICO/IcoOptimized.sol\":11627:11749  require(... */\n      tag_54\n        /* \"#utility.yul\":25584:25928   */\n      jump\n        /* \"ICO/IcoOptimized.sol\":11627:11749  require(... */\n    tag_726:\n        /* \"ICO/IcoOptimized.sol\":11798:11802  usdc */\n      sload(0x0c)\n        /* \"ICO/IcoOptimized.sol\":11791:11828  IERC20(usdc).balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"ICO/IcoOptimized.sol\":11822:11826  this */\n      address\n        /* \"ICO/IcoOptimized.sol\":11791:11828  IERC20(usdc).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1788:1839   */\n      mstore\n        /* \"ICO/IcoOptimized.sol\":11769:11788  uint256 usdcBalance */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ICO/IcoOptimized.sol\":11798:11802  usdc */\n      and\n      swap1\n        /* \"ICO/IcoOptimized.sol\":11791:11813  IERC20(usdc).balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1761:1779   */\n      0x24\n      add\n        /* \"ICO/IcoOptimized.sol\":11791:11828  IERC20(usdc).balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_731\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_731:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_732\n      swap2\n      swap1\n      tag_548\n      jump\t// in\n    tag_732:\n        /* \"ICO/IcoOptimized.sol\":11769:11828  uint256 usdcBalance = IERC20(usdc).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"ICO/IcoOptimized.sol\":11842:11857  usdcBalance > 0 */\n      dup1\n      iszero\n        /* \"ICO/IcoOptimized.sol\":11838:12006  if (usdcBalance > 0) {... */\n      tag_739\n      jumpi\n        /* \"ICO/IcoOptimized.sol\":11905:11909  usdc */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0c))\n        /* \"ICO/IcoOptimized.sol\":11898:11919  IERC20(usdc).transfer */\n      0xa9059cbb\n        /* \"ICO/IcoOptimized.sol\":11920:11927  owner() */\n      tag_734\n        /* \"ICO/IcoOptimized.sol\":11920:11925  owner */\n      tag_151\n        /* \"ICO/IcoOptimized.sol\":11920:11927  owner() */\n      jump\t// in\n    tag_734:\n        /* \"ICO/IcoOptimized.sol\":11898:11941  IERC20(usdc).transfer(owner(), usdcBalance) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup5\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":18307:18339   */\n      swap1\n      swap2\n      and\n        /* \"ICO/IcoOptimized.sol\":11898:11941  IERC20(usdc).transfer(owner(), usdcBalance) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":18289:18340   */\n      mstore\n        /* \"#utility.yul\":18356:18374   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":18349:18383   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":18262:18280   */\n      0x44\n      add\n        /* \"ICO/IcoOptimized.sol\":11898:11941  IERC20(usdc).transfer(owner(), usdcBalance) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_737\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_737:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_738\n      swap2\n      swap1\n      tag_509\n      jump\t// in\n    tag_738:\n        /* \"ICO/IcoOptimized.sol\":11873:11995  require(... */\n      tag_739\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":26135:26137   */\n      0x20\n        /* \"ICO/IcoOptimized.sol\":11873:11995  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":26117:26138   */\n      mstore\n        /* \"#utility.yul\":26174:26176   */\n      0x14\n        /* \"#utility.yul\":26154:26172   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":26147:26177   */\n      mstore\n      shl(0x62, 0x1554d110c81d1c985b9cd9995c8819985a5b1959)\n        /* \"#utility.yul\":26193:26211   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":26186:26236   */\n      mstore\n        /* \"#utility.yul\":26253:26271   */\n      0x64\n      add\n        /* \"ICO/IcoOptimized.sol\":11873:11995  require(... */\n      tag_54\n        /* \"#utility.yul\":25933:26277   */\n      jump\n        /* \"ICO/IcoOptimized.sol\":11873:11995  require(... */\n    tag_739:\n        /* \"ICO/IcoOptimized.sol\":11236:12012  {... */\n      pop\n      pop\n      pop\n        /* \"ICO/IcoOptimized.sol\":11195:12012  function _transferFundsToOwner() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4603:4915  function _checkProxy() internal view virtual {... */\n    tag_383:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4683:4687  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4692:4698  __self */\n      immutable(\"0xca4b0db001bf2677ca5ac885bd7766c7c4b4b5d0170066d4830e0728bf019f64\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4675:4698  address(this) == __self */\n      and\n      eq\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4675:4795  address(this) == __self || // Must be called through delegatecall... */\n      tag_745\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4789:4795  __self */\n      immutable(\"0xca4b0db001bf2677ca5ac885bd7766c7c4b4b5d0170066d4830e0728bf019f64\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4753:4795  ERC1967Utils.getImplementation() != __self */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4753:4785  ERC1967Utils.getImplementation() */\n      tag_746\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1519:1572  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1441:1579  function getImplementation() internal view returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4753:4785  ERC1967Utils.getImplementation() */\n    tag_746:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4753:4795  ERC1967Utils.getImplementation() != __self */\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4675:4795  address(this) == __self || // Must be called through delegatecall... */\n    tag_745:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4658:4909  if (... */\n      iszero\n      tag_377\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4869:4898  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      shl(0xe1, 0x703e46dd)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ICO/IcoOptimized.sol\":16810:16894  function _authorizeUpgrade(address newImplementation) internal override onlyOwner {} */\n    tag_386:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_678\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_359\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6057:6595  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {... */\n    tag_388:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6174:6191  newImplementation */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6156:6206  IERC1822Proxiable(newImplementation).proxiableUUID */\n      and\n      0x52d1902d\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6156:6208  IERC1822Proxiable(newImplementation).proxiableUUID() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_753\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_754\n      swap2\n      dup2\n      add\n      swap1\n      tag_548\n      jump\t// in\n    tag_754:\n      0x01\n    tag_753:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6152:6589  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n      tag_756\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6518:6578  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      shl(0xe0, 0x4c9c8ce3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1806:1838   */\n      dup4\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6518:6578  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1788:1839   */\n      mstore\n        /* \"#utility.yul\":1761:1779   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6518:6578  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      tag_54\n        /* \"#utility.yul\":1642:1845   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6152:6589  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n    tag_756:\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6250:6290  slot != ERC1967Utils.IMPLEMENTATION_SLOT */\n      dup2\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6246:6366  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n      tag_762\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6317:6351  UUPSUnsupportedProxiableUUID(slot) */\n      mload(0x40)\n      shl(0xe2, 0x2a875269)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":1014:1039   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":987:1005   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6317:6351  UUPSUnsupportedProxiableUUID(slot) */\n      tag_54\n        /* \"#utility.yul\":868:1045   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6246:6366  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n    tag_762:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6379:6433  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      tag_739\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6409:6426  newImplementation */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6428:6432  data */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6379:6408  ERC1967Utils.upgradeToAndCall */\n      tag_765\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6379:6433  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5032:5245  function _checkNotDelegated() internal view virtual {... */\n    tag_391:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5106:5110  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5115:5121  __self */\n      immutable(\"0xca4b0db001bf2677ca5ac885bd7766c7c4b4b5d0170066d4830e0728bf019f64\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5098:5121  address(this) != __self */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5094:5239  if (address(this) != __self) {... */\n      tag_377\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5199:5228  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      shl(0xe1, 0x703e46dd)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_427:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3931  $._owner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3960  $._owner = newOwner */\n      dup2\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      dup2\n      and\n      swap2\n      dup3\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3931  $._owner */\n      swap3\n      and\n      swap2\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3871  OwnableStorage storage $ */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3837:4022  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n    tag_689:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_774\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_775\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_774:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      tag_678\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1954:1966  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1953  __Ownable_init_unchained */\n      tag_778\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2970:3037  function __UUPSUpgradeable_init() internal onlyInitializing {... */\n    tag_691:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_377\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_775\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2264:2608  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n    tag_765:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2392  _setImplementation(newImplementation) */\n      tag_788\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2374:2391  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2373  _setImplementation */\n      tag_789\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2392  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_788:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2407:2443  IERC1967.Upgraded(newImplementation) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2458:2469  data.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2458:2473  data.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2454:2602  if (data.length > 0) {... */\n      tag_790\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2542  Address.functionDelegateCall(newImplementation, data) */\n      tag_739\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2518:2535  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2537:2541  data */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2517  Address.functionDelegateCall */\n      tag_792\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2542  Address.functionDelegateCall(newImplementation, data) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2454:2602  if (data.length > 0) {... */\n    tag_790:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2591  _checkNonPayable() */\n      tag_387\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2589  _checkNonPayable */\n      tag_795\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2591  _checkNonPayable() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n    tag_775:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8600  _getInitializableStorage()._initializing */\n      sload\n      shl(0x40, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n      tag_377\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7191:7208  NotInitializing() */\n      mload(0x40)\n      shl(0xe3, 0x1afcd79f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n    tag_778:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_674\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_775\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1671:1952  function _setImplementation(address newImplementation) private {... */\n    tag_789:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1765  newImplementation */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1777  newImplementation.code.length */\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1781:1782  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1782  newImplementation.code.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1744:1863  if (newImplementation.code.length == 0) {... */\n      tag_808\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1805:1852  ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      shl(0xe0, 0x4c9c8ce3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1806:1838   */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1805:1852  ERC1967InvalidImplementation(newImplementation) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1788:1839   */\n      mstore\n        /* \"#utility.yul\":1761:1779   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1805:1852  ERC1967InvalidImplementation(newImplementation) */\n      tag_54\n        /* \"#utility.yul\":1642:1845   */\n      jump\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1744:1863  if (newImplementation.code.length == 0) {... */\n    tag_808:\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1872:1945  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1671:1952  function _setImplementation(address newImplementation) private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3900:4153  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_792:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3983:3995  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4008:4020  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4022:4045  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4049:4055  target */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4049:4068  target.delegatecall */\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4069:4073  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4049:4074  target.delegatecall(data) */\n      mload(0x40)\n      tag_812\n      swap2\n      swap1\n      tag_813\n      jump\t// in\n    tag_812:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_816\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_815)\n    tag_816:\n      0x60\n      swap2\n      pop\n    tag_815:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4007:4074  (bool success, bytes memory returndata) = target.delegatecall(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4091:4146  verifyCallResultFromTarget(target, success, returndata) */\n      tag_817\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4118:4124  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4126:4133  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4135:4145  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4091:4117  verifyCallResultFromTarget */\n      tag_818\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4091:4146  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_817:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4084:4146  return verifyCallResultFromTarget(target, success, returndata) */\n      swap6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3900:4153  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6113:6235  function _checkNonPayable() private {... */\n    tag_795:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6163:6172  msg.value */\n      callvalue\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6163:6176  msg.value > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6159:6229  if (msg.value > 0) {... */\n      tag_377\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6199:6218  ERC1967NonPayable() */\n      mload(0x40)\n      shl(0xe0, 0xb398979f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4421:5003  function verifyCallResultFromTarget(... */\n    tag_818:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4565:4577  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4594:4601  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4589:4997  if (!success) {... */\n      tag_824\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4617:4636  _revert(returndata) */\n      tag_825\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:4635  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4617:4624  _revert */\n      tag_826\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4617:4636  _revert(returndata) */\n      jump\t// in\n    tag_825:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4589:4997  if (!success) {... */\n      jump(tag_827)\n    tag_824:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4841:4858  returndata.length */\n      dup2\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4841:4863  returndata.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4841:4890  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_828\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4867:4885  target.code.length */\n      dup5\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4867:4890  target.code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4841:4890  returndata.length == 0 && target.code.length == 0 */\n    tag_828:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4837:4956  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_829\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4917:4941  AddressEmptyCode(target) */\n      mload(0x40)\n      shl(0xe0, 0x9996b315)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1806:1838   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4917:4941  AddressEmptyCode(target) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1788:1839   */\n      mstore\n        /* \"#utility.yul\":1761:1779   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4917:4941  AddressEmptyCode(target) */\n      tag_54\n        /* \"#utility.yul\":1642:1845   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4837:4956  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_829:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4976:4986  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4589:4997  if (!success) {... */\n    tag_827:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4421:5003  function verifyCallResultFromTarget(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5543:6030  function _revert(bytes memory returndata) private pure {... */\n    tag_826:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5674:5691  returndata.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5674:5695  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5670:6024  if (returndata.length > 0) {... */\n      tag_832\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5871:5881  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5865:5882  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5927:5942  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5914:5924  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5910:5912  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5906:5925  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5899:5943  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5670:6024  if (returndata.length > 0) {... */\n    tag_832:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5994:6013  Errors.FailedCall() */\n      mload(0x40)\n      shl(0xe0, 0xd6bda275)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":375:529   */\n    tag_834:\n        /* \"#utility.yul\":454:474   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":503:504   */\n      0x03\n        /* \"#utility.yul\":493:505   */\n      dup2\n      lt\n        /* \"#utility.yul\":483:523   */\n      tag_315\n      jumpi\n        /* \"#utility.yul\":519:520   */\n      0x00\n        /* \"#utility.yul\":516:517   */\n      dup1\n        /* \"#utility.yul\":509:521   */\n      revert\n        /* \"#utility.yul\":534:863   */\n    tag_59:\n        /* \"#utility.yul\":620:626   */\n      0x00\n        /* \"#utility.yul\":628:634   */\n      dup1\n        /* \"#utility.yul\":681:683   */\n      0x40\n        /* \"#utility.yul\":669:678   */\n      dup4\n        /* \"#utility.yul\":660:667   */\n      dup6\n        /* \"#utility.yul\":656:679   */\n      sub\n        /* \"#utility.yul\":652:684   */\n      slt\n        /* \"#utility.yul\":649:701   */\n      iszero\n      tag_848\n      jumpi\n        /* \"#utility.yul\":697:698   */\n      0x00\n        /* \"#utility.yul\":694:695   */\n      dup1\n        /* \"#utility.yul\":687:699   */\n      revert\n        /* \"#utility.yul\":649:701   */\n    tag_848:\n        /* \"#utility.yul\":720:760   */\n      tag_849\n        /* \"#utility.yul\":750:759   */\n      dup4\n        /* \"#utility.yul\":720:760   */\n      tag_834\n      jump\t// in\n    tag_849:\n        /* \"#utility.yul\":710:760   */\n      swap5\n        /* \"#utility.yul\":829:831   */\n      0x20\n        /* \"#utility.yul\":814:832   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":801:833   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":534:863   */\n      jump\t// out\n        /* \"#utility.yul\":1242:1457   */\n    tag_71:\n        /* \"#utility.yul\":1319:1325   */\n      0x00\n        /* \"#utility.yul\":1372:1374   */\n      0x20\n        /* \"#utility.yul\":1360:1369   */\n      dup3\n        /* \"#utility.yul\":1351:1358   */\n      dup5\n        /* \"#utility.yul\":1347:1370   */\n      sub\n        /* \"#utility.yul\":1343:1375   */\n      slt\n        /* \"#utility.yul\":1340:1392   */\n      iszero\n      tag_853\n      jumpi\n        /* \"#utility.yul\":1388:1389   */\n      0x00\n        /* \"#utility.yul\":1385:1386   */\n      dup1\n        /* \"#utility.yul\":1378:1390   */\n      revert\n        /* \"#utility.yul\":1340:1392   */\n    tag_853:\n        /* \"#utility.yul\":1411:1451   */\n      tag_827\n        /* \"#utility.yul\":1441:1450   */\n      dup3\n        /* \"#utility.yul\":1411:1451   */\n      tag_834\n      jump\t// in\n        /* \"#utility.yul\":1850:2076   */\n    tag_103:\n        /* \"#utility.yul\":1909:1915   */\n      0x00\n        /* \"#utility.yul\":1962:1964   */\n      0x20\n        /* \"#utility.yul\":1950:1959   */\n      dup3\n        /* \"#utility.yul\":1941:1948   */\n      dup5\n        /* \"#utility.yul\":1937:1960   */\n      sub\n        /* \"#utility.yul\":1933:1965   */\n      slt\n        /* \"#utility.yul\":1930:1982   */\n      iszero\n      tag_858\n      jumpi\n        /* \"#utility.yul\":1978:1979   */\n      0x00\n        /* \"#utility.yul\":1975:1976   */\n      dup1\n        /* \"#utility.yul\":1968:1980   */\n      revert\n        /* \"#utility.yul\":1930:1982   */\n    tag_858:\n      pop\n        /* \"#utility.yul\":2023:2046   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1850:2076   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2081:2212   */\n    tag_835:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2156:2187   */\n      dup2\n      and\n        /* \"#utility.yul\":2146:2188   */\n      dup2\n      eq\n        /* \"#utility.yul\":2136:2206   */\n      tag_678\n      jumpi\n        /* \"#utility.yul\":2202:2203   */\n      0x00\n        /* \"#utility.yul\":2199:2200   */\n      dup1\n        /* \"#utility.yul\":2192:2204   */\n      revert\n        /* \"#utility.yul\":2217:2344   */\n    tag_836:\n        /* \"#utility.yul\":2278:2288   */\n      0x4e487b71\n        /* \"#utility.yul\":2273:2276   */\n      0xe0\n        /* \"#utility.yul\":2269:2289   */\n      shl\n        /* \"#utility.yul\":2266:2267   */\n      0x00\n        /* \"#utility.yul\":2259:2290   */\n      mstore\n        /* \"#utility.yul\":2309:2313   */\n      0x41\n        /* \"#utility.yul\":2306:2307   */\n      0x04\n        /* \"#utility.yul\":2299:2314   */\n      mstore\n        /* \"#utility.yul\":2333:2337   */\n      0x24\n        /* \"#utility.yul\":2330:2331   */\n      0x00\n        /* \"#utility.yul\":2323:2338   */\n      revert\n        /* \"#utility.yul\":2349:3428   */\n    tag_112:\n        /* \"#utility.yul\":2426:2432   */\n      0x00\n        /* \"#utility.yul\":2434:2440   */\n      dup1\n        /* \"#utility.yul\":2487:2489   */\n      0x40\n        /* \"#utility.yul\":2475:2484   */\n      dup4\n        /* \"#utility.yul\":2466:2473   */\n      dup6\n        /* \"#utility.yul\":2462:2485   */\n      sub\n        /* \"#utility.yul\":2458:2490   */\n      slt\n        /* \"#utility.yul\":2455:2507   */\n      iszero\n      tag_863\n      jumpi\n        /* \"#utility.yul\":2503:2504   */\n      0x00\n        /* \"#utility.yul\":2500:2501   */\n      dup1\n        /* \"#utility.yul\":2493:2505   */\n      revert\n        /* \"#utility.yul\":2455:2507   */\n    tag_863:\n        /* \"#utility.yul\":2542:2551   */\n      dup3\n        /* \"#utility.yul\":2529:2552   */\n      calldataload\n        /* \"#utility.yul\":2561:2592   */\n      tag_864\n        /* \"#utility.yul\":2586:2591   */\n      dup2\n        /* \"#utility.yul\":2561:2592   */\n      tag_835\n      jump\t// in\n    tag_864:\n        /* \"#utility.yul\":2611:2616   */\n      swap2\n      pop\n        /* \"#utility.yul\":2667:2669   */\n      0x20\n        /* \"#utility.yul\":2652:2670   */\n      dup4\n      add\n        /* \"#utility.yul\":2639:2671   */\n      calldataload\n        /* \"#utility.yul\":2694:2712   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2683:2713   */\n      dup2\n      gt\n        /* \"#utility.yul\":2680:2730   */\n      iszero\n      tag_865\n      jumpi\n        /* \"#utility.yul\":2726:2727   */\n      0x00\n        /* \"#utility.yul\":2723:2724   */\n      dup1\n        /* \"#utility.yul\":2716:2728   */\n      revert\n        /* \"#utility.yul\":2680:2730   */\n    tag_865:\n        /* \"#utility.yul\":2749:2771   */\n      dup4\n      add\n        /* \"#utility.yul\":2802:2806   */\n      0x1f\n        /* \"#utility.yul\":2794:2807   */\n      dup2\n      add\n        /* \"#utility.yul\":2790:2817   */\n      dup6\n      sgt\n        /* \"#utility.yul\":2780:2835   */\n      tag_866\n      jumpi\n        /* \"#utility.yul\":2831:2832   */\n      0x00\n        /* \"#utility.yul\":2828:2829   */\n      dup1\n        /* \"#utility.yul\":2821:2833   */\n      revert\n        /* \"#utility.yul\":2780:2835   */\n    tag_866:\n        /* \"#utility.yul\":2871:2873   */\n      dup1\n        /* \"#utility.yul\":2858:2874   */\n      calldataload\n        /* \"#utility.yul\":2897:2915   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2889:2895   */\n      dup2\n        /* \"#utility.yul\":2886:2916   */\n      gt\n        /* \"#utility.yul\":2883:2939   */\n      iszero\n      tag_868\n      jumpi\n        /* \"#utility.yul\":2919:2937   */\n      tag_868\n      tag_836\n      jump\t// in\n    tag_868:\n        /* \"#utility.yul\":2968:2970   */\n      0x40\n        /* \"#utility.yul\":2962:2971   */\n      mload\n        /* \"#utility.yul\":3060:3062   */\n      0x1f\n        /* \"#utility.yul\":3022:3039   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3018:3049   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":3051:3053   */\n      0x3f\n        /* \"#utility.yul\":3014:3054   */\n      add\n        /* \"#utility.yul\":3010:3064   */\n      and\n        /* \"#utility.yul\":2998:3065   */\n      dup2\n      add\n        /* \"#utility.yul\":3095:3113   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3080:3114   */\n      dup2\n      gt\n        /* \"#utility.yul\":3116:3138   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":3077:3139   */\n      or\n        /* \"#utility.yul\":3074:3162   */\n      iszero\n      tag_870\n      jumpi\n        /* \"#utility.yul\":3142:3160   */\n      tag_870\n      tag_836\n      jump\t// in\n    tag_870:\n        /* \"#utility.yul\":3178:3180   */\n      0x40\n        /* \"#utility.yul\":3171:3193   */\n      mstore\n        /* \"#utility.yul\":3202:3224   */\n      dup2\n      dup2\n      mstore\n        /* \"#utility.yul\":3243:3258   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":3260:3262   */\n      0x20\n        /* \"#utility.yul\":3239:3263   */\n      add\n        /* \"#utility.yul\":3236:3273   */\n      dup8\n      lt\n        /* \"#utility.yul\":3233:3290   */\n      iszero\n      tag_871\n      jumpi\n        /* \"#utility.yul\":3286:3287   */\n      0x00\n        /* \"#utility.yul\":3283:3284   */\n      dup1\n        /* \"#utility.yul\":3276:3288   */\n      revert\n        /* \"#utility.yul\":3233:3290   */\n    tag_871:\n        /* \"#utility.yul\":3342:3348   */\n      dup2\n        /* \"#utility.yul\":3337:3339   */\n      0x20\n        /* \"#utility.yul\":3333:3335   */\n      dup5\n        /* \"#utility.yul\":3329:3340   */\n      add\n        /* \"#utility.yul\":3324:3326   */\n      0x20\n        /* \"#utility.yul\":3316:3322   */\n      dup4\n        /* \"#utility.yul\":3312:3327   */\n      add\n        /* \"#utility.yul\":3299:3349   */\n      calldatacopy\n        /* \"#utility.yul\":3395:3396   */\n      0x00\n        /* \"#utility.yul\":3390:3392   */\n      0x20\n        /* \"#utility.yul\":3381:3387   */\n      dup4\n        /* \"#utility.yul\":3373:3379   */\n      dup4\n        /* \"#utility.yul\":3369:3388   */\n      add\n        /* \"#utility.yul\":3365:3393   */\n      add\n        /* \"#utility.yul\":3358:3397   */\n      mstore\n        /* \"#utility.yul\":3416:3422   */\n      dup1\n        /* \"#utility.yul\":3406:3422   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2349:3428   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3851:4317   */\n    tag_134:\n        /* \"#utility.yul\":3928:3934   */\n      0x00\n        /* \"#utility.yul\":3936:3942   */\n      dup1\n        /* \"#utility.yul\":3944:3950   */\n      0x00\n        /* \"#utility.yul\":3997:3999   */\n      0x60\n        /* \"#utility.yul\":3985:3994   */\n      dup5\n        /* \"#utility.yul\":3976:3983   */\n      dup7\n        /* \"#utility.yul\":3972:3995   */\n      sub\n        /* \"#utility.yul\":3968:4000   */\n      slt\n        /* \"#utility.yul\":3965:4017   */\n      iszero\n      tag_875\n      jumpi\n        /* \"#utility.yul\":4013:4014   */\n      0x00\n        /* \"#utility.yul\":4010:4011   */\n      dup1\n        /* \"#utility.yul\":4003:4015   */\n      revert\n        /* \"#utility.yul\":3965:4017   */\n    tag_875:\n      pop\n      pop\n        /* \"#utility.yul\":4058:4081   */\n      dup2\n      calldataload\n      swap4\n        /* \"#utility.yul\":4178:4180   */\n      0x20\n        /* \"#utility.yul\":4163:4181   */\n      dup4\n      add\n        /* \"#utility.yul\":4150:4182   */\n      calldataload\n      swap4\n      pop\n        /* \"#utility.yul\":4281:4283   */\n      0x40\n        /* \"#utility.yul\":4266:4284   */\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":4253:4285   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":3851:4317   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4322:4572   */\n    tag_837:\n        /* \"#utility.yul\":4407:4408   */\n      0x00\n        /* \"#utility.yul\":4417:4530   */\n    tag_877:\n        /* \"#utility.yul\":4431:4437   */\n      dup4\n        /* \"#utility.yul\":4428:4429   */\n      dup2\n        /* \"#utility.yul\":4425:4438   */\n      lt\n        /* \"#utility.yul\":4417:4530   */\n      iszero\n      tag_879\n      jumpi\n        /* \"#utility.yul\":4507:4518   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":4501:4519   */\n      mload\n        /* \"#utility.yul\":4488:4499   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":4481:4520   */\n      mstore\n        /* \"#utility.yul\":4453:4455   */\n      0x20\n        /* \"#utility.yul\":4446:4456   */\n      add\n        /* \"#utility.yul\":4417:4530   */\n      jump(tag_877)\n    tag_879:\n      pop\n      pop\n        /* \"#utility.yul\":4564:4565   */\n      0x00\n        /* \"#utility.yul\":4546:4562   */\n      swap2\n      add\n        /* \"#utility.yul\":4539:4566   */\n      mstore\n        /* \"#utility.yul\":4322:4572   */\n      jump\t// out\n        /* \"#utility.yul\":4577:4973   */\n    tag_179:\n        /* \"#utility.yul\":4726:4728   */\n      0x20\n        /* \"#utility.yul\":4715:4724   */\n      dup2\n        /* \"#utility.yul\":4708:4729   */\n      mstore\n        /* \"#utility.yul\":4689:4693   */\n      0x00\n        /* \"#utility.yul\":4758:4764   */\n      dup3\n        /* \"#utility.yul\":4752:4765   */\n      mload\n        /* \"#utility.yul\":4801:4807   */\n      dup1\n        /* \"#utility.yul\":4796:4798   */\n      0x20\n        /* \"#utility.yul\":4785:4794   */\n      dup5\n        /* \"#utility.yul\":4781:4799   */\n      add\n        /* \"#utility.yul\":4774:4808   */\n      mstore\n        /* \"#utility.yul\":4817:4896   */\n      tag_881\n        /* \"#utility.yul\":4889:4895   */\n      dup2\n        /* \"#utility.yul\":4884:4886   */\n      0x40\n        /* \"#utility.yul\":4873:4882   */\n      dup6\n        /* \"#utility.yul\":4869:4887   */\n      add\n        /* \"#utility.yul\":4864:4866   */\n      0x20\n        /* \"#utility.yul\":4856:4862   */\n      dup8\n        /* \"#utility.yul\":4852:4867   */\n      add\n        /* \"#utility.yul\":4817:4896   */\n      tag_837\n      jump\t// in\n    tag_881:\n        /* \"#utility.yul\":4957:4959   */\n      0x1f\n        /* \"#utility.yul\":4936:4951   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":4932:4961   */\n      and\n        /* \"#utility.yul\":4917:4962   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":4964:4966   */\n      0x40\n        /* \"#utility.yul\":4913:4967   */\n      add\n      swap3\n        /* \"#utility.yul\":4577:4973   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5709:5956   */\n    tag_203:\n        /* \"#utility.yul\":5768:5774   */\n      0x00\n        /* \"#utility.yul\":5821:5823   */\n      0x20\n        /* \"#utility.yul\":5809:5818   */\n      dup3\n        /* \"#utility.yul\":5800:5807   */\n      dup5\n        /* \"#utility.yul\":5796:5819   */\n      sub\n        /* \"#utility.yul\":5792:5824   */\n      slt\n        /* \"#utility.yul\":5789:5841   */\n      iszero\n      tag_885\n      jumpi\n        /* \"#utility.yul\":5837:5838   */\n      0x00\n        /* \"#utility.yul\":5834:5835   */\n      dup1\n        /* \"#utility.yul\":5827:5839   */\n      revert\n        /* \"#utility.yul\":5789:5841   */\n    tag_885:\n        /* \"#utility.yul\":5876:5885   */\n      dup2\n        /* \"#utility.yul\":5863:5886   */\n      calldataload\n        /* \"#utility.yul\":5895:5926   */\n      tag_827\n        /* \"#utility.yul\":5920:5925   */\n      dup2\n        /* \"#utility.yul\":5895:5926   */\n      tag_835\n      jump\t// in\n        /* \"#utility.yul\":5961:6088   */\n    tag_255:\n        /* \"#utility.yul\":6022:6032   */\n      0x4e487b71\n        /* \"#utility.yul\":6017:6020   */\n      0xe0\n        /* \"#utility.yul\":6013:6033   */\n      shl\n        /* \"#utility.yul\":6010:6011   */\n      0x00\n        /* \"#utility.yul\":6003:6034   */\n      mstore\n        /* \"#utility.yul\":6053:6057   */\n      0x21\n        /* \"#utility.yul\":6050:6051   */\n      0x04\n        /* \"#utility.yul\":6043:6058   */\n      mstore\n        /* \"#utility.yul\":6077:6081   */\n      0x24\n        /* \"#utility.yul\":6074:6075   */\n      0x00\n        /* \"#utility.yul\":6067:6082   */\n      revert\n        /* \"#utility.yul\":6093:6334   */\n    tag_838:\n        /* \"#utility.yul\":6178:6179   */\n      0x03\n        /* \"#utility.yul\":6171:6176   */\n      dup2\n        /* \"#utility.yul\":6168:6180   */\n      lt\n        /* \"#utility.yul\":6158:6301   */\n      tag_889\n      jumpi\n        /* \"#utility.yul\":6223:6233   */\n      0x4e487b71\n        /* \"#utility.yul\":6218:6221   */\n      0xe0\n        /* \"#utility.yul\":6214:6234   */\n      shl\n        /* \"#utility.yul\":6211:6212   */\n      0x00\n        /* \"#utility.yul\":6204:6235   */\n      mstore\n        /* \"#utility.yul\":6258:6262   */\n      0x21\n        /* \"#utility.yul\":6255:6256   */\n      0x04\n        /* \"#utility.yul\":6248:6263   */\n      mstore\n        /* \"#utility.yul\":6286:6290   */\n      0x24\n        /* \"#utility.yul\":6283:6284   */\n      0x00\n        /* \"#utility.yul\":6276:6291   */\n      revert\n        /* \"#utility.yul\":6158:6301   */\n    tag_889:\n        /* \"#utility.yul\":6310:6328   */\n      swap1\n      mstore\n        /* \"#utility.yul\":6093:6334   */\n      jump\t// out\n        /* \"#utility.yul\":6339:6555   */\n    tag_219:\n        /* \"#utility.yul\":6489:6491   */\n      0x20\n        /* \"#utility.yul\":6474:6492   */\n      dup2\n      add\n        /* \"#utility.yul\":6501:6549   */\n      tag_245\n        /* \"#utility.yul\":6478:6487   */\n      dup3\n        /* \"#utility.yul\":6531:6537   */\n      dup5\n        /* \"#utility.yul\":6501:6549   */\n      tag_838\n      jump\t// in\n        /* \"#utility.yul\":6560:6910   */\n    tag_228:\n        /* \"#utility.yul\":6646:6652   */\n      0x00\n        /* \"#utility.yul\":6654:6660   */\n      dup1\n        /* \"#utility.yul\":6707:6709   */\n      0x40\n        /* \"#utility.yul\":6695:6704   */\n      dup4\n        /* \"#utility.yul\":6686:6693   */\n      dup6\n        /* \"#utility.yul\":6682:6705   */\n      sub\n        /* \"#utility.yul\":6678:6710   */\n      slt\n        /* \"#utility.yul\":6675:6727   */\n      iszero\n      tag_893\n      jumpi\n        /* \"#utility.yul\":6723:6724   */\n      0x00\n        /* \"#utility.yul\":6720:6721   */\n      dup1\n        /* \"#utility.yul\":6713:6725   */\n      revert\n        /* \"#utility.yul\":6675:6727   */\n    tag_893:\n        /* \"#utility.yul\":6762:6771   */\n      dup3\n        /* \"#utility.yul\":6749:6772   */\n      calldataload\n        /* \"#utility.yul\":6781:6812   */\n      tag_894\n        /* \"#utility.yul\":6806:6811   */\n      dup2\n        /* \"#utility.yul\":6781:6812   */\n      tag_835\n      jump\t// in\n    tag_894:\n        /* \"#utility.yul\":6831:6836   */\n      swap2\n      pop\n        /* \"#utility.yul\":6855:6904   */\n      tag_895\n        /* \"#utility.yul\":6900:6902   */\n      0x20\n        /* \"#utility.yul\":6885:6903   */\n      dup5\n      add\n        /* \"#utility.yul\":6855:6904   */\n      tag_834\n      jump\t// in\n    tag_895:\n        /* \"#utility.yul\":6845:6904   */\n      swap1\n      pop\n        /* \"#utility.yul\":6560:6910   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7138:8350   */\n    tag_243:\n        /* \"#utility.yul\":7275:7281   */\n      0x00\n        /* \"#utility.yul\":7283:7289   */\n      dup1\n        /* \"#utility.yul\":7291:7297   */\n      0x00\n        /* \"#utility.yul\":7299:7305   */\n      dup1\n        /* \"#utility.yul\":7307:7313   */\n      0x00\n        /* \"#utility.yul\":7315:7321   */\n      dup1\n        /* \"#utility.yul\":7323:7329   */\n      0x00\n        /* \"#utility.yul\":7331:7337   */\n      dup1\n        /* \"#utility.yul\":7384:7387   */\n      0x0100\n        /* \"#utility.yul\":7372:7381   */\n      dup10\n        /* \"#utility.yul\":7363:7370   */\n      dup12\n        /* \"#utility.yul\":7359:7382   */\n      sub\n        /* \"#utility.yul\":7355:7388   */\n      slt\n        /* \"#utility.yul\":7352:7405   */\n      iszero\n      tag_898\n      jumpi\n        /* \"#utility.yul\":7401:7402   */\n      0x00\n        /* \"#utility.yul\":7398:7399   */\n      dup1\n        /* \"#utility.yul\":7391:7403   */\n      revert\n        /* \"#utility.yul\":7352:7405   */\n    tag_898:\n        /* \"#utility.yul\":7440:7449   */\n      dup9\n        /* \"#utility.yul\":7427:7450   */\n      calldataload\n        /* \"#utility.yul\":7459:7490   */\n      tag_899\n        /* \"#utility.yul\":7484:7489   */\n      dup2\n        /* \"#utility.yul\":7459:7490   */\n      tag_835\n      jump\t// in\n    tag_899:\n        /* \"#utility.yul\":7509:7514   */\n      swap8\n      pop\n        /* \"#utility.yul\":7566:7568   */\n      0x20\n        /* \"#utility.yul\":7551:7569   */\n      dup10\n      add\n        /* \"#utility.yul\":7538:7570   */\n      calldataload\n        /* \"#utility.yul\":7579:7612   */\n      tag_900\n        /* \"#utility.yul\":7538:7570   */\n      dup2\n        /* \"#utility.yul\":7579:7612   */\n      tag_835\n      jump\t// in\n    tag_900:\n        /* \"#utility.yul\":7631:7638   */\n      swap7\n      pop\n        /* \"#utility.yul\":7690:7692   */\n      0x40\n        /* \"#utility.yul\":7675:7693   */\n      dup10\n      add\n        /* \"#utility.yul\":7662:7694   */\n      calldataload\n        /* \"#utility.yul\":7703:7736   */\n      tag_901\n        /* \"#utility.yul\":7662:7694   */\n      dup2\n        /* \"#utility.yul\":7703:7736   */\n      tag_835\n      jump\t// in\n    tag_901:\n        /* \"#utility.yul\":7755:7762   */\n      swap6\n      pop\n        /* \"#utility.yul\":7835:7837   */\n      0x60\n        /* \"#utility.yul\":7820:7838   */\n      dup10\n      add\n        /* \"#utility.yul\":7807:7839   */\n      calldataload\n      swap5\n      pop\n        /* \"#utility.yul\":7938:7941   */\n      0x80\n        /* \"#utility.yul\":7923:7942   */\n      dup10\n      add\n        /* \"#utility.yul\":7910:7943   */\n      calldataload\n      swap4\n      pop\n        /* \"#utility.yul\":8021:8024   */\n      0xa0\n        /* \"#utility.yul\":8006:8025   */\n      dup10\n      add\n        /* \"#utility.yul\":7993:8026   */\n      calldataload\n        /* \"#utility.yul\":8035:8068   */\n      tag_902\n        /* \"#utility.yul\":7993:8026   */\n      dup2\n        /* \"#utility.yul\":8035:8068   */\n      tag_835\n      jump\t// in\n    tag_902:\n        /* \"#utility.yul\":8087:8094   */\n      swap3\n      pop\n        /* \"#utility.yul\":8146:8149   */\n      0xc0\n        /* \"#utility.yul\":8131:8150   */\n      dup10\n      add\n        /* \"#utility.yul\":8118:8151   */\n      calldataload\n        /* \"#utility.yul\":8160:8193   */\n      tag_903\n        /* \"#utility.yul\":8118:8151   */\n      dup2\n        /* \"#utility.yul\":8160:8193   */\n      tag_835\n      jump\t// in\n    tag_903:\n        /* \"#utility.yul\":8212:8219   */\n      swap2\n      pop\n        /* \"#utility.yul\":8271:8274   */\n      0xe0\n        /* \"#utility.yul\":8256:8275   */\n      dup10\n      add\n        /* \"#utility.yul\":8243:8276   */\n      calldataload\n        /* \"#utility.yul\":8285:8318   */\n      tag_904\n        /* \"#utility.yul\":8243:8276   */\n      dup2\n        /* \"#utility.yul\":8285:8318   */\n      tag_835\n      jump\t// in\n    tag_904:\n        /* \"#utility.yul\":8337:8344   */\n      dup1\n        /* \"#utility.yul\":8327:8344   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":7138:8350   */\n      swap3\n      swap6\n      swap9\n      pop\n      swap3\n      swap6\n      swap9\n      swap1\n      swap4\n      swap7\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8355:8482   */\n    tag_839:\n        /* \"#utility.yul\":8416:8426   */\n      0x4e487b71\n        /* \"#utility.yul\":8411:8414   */\n      0xe0\n        /* \"#utility.yul\":8407:8427   */\n      shl\n        /* \"#utility.yul\":8404:8405   */\n      0x00\n        /* \"#utility.yul\":8397:8428   */\n      mstore\n        /* \"#utility.yul\":8447:8451   */\n      0x11\n        /* \"#utility.yul\":8444:8445   */\n      0x04\n        /* \"#utility.yul\":8437:8452   */\n      mstore\n        /* \"#utility.yul\":8471:8475   */\n      0x24\n        /* \"#utility.yul\":8468:8469   */\n      0x00\n        /* \"#utility.yul\":8461:8476   */\n      revert\n        /* \"#utility.yul\":8487:8724   */\n    tag_248:\n        /* \"#utility.yul\":8559:8568   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":8526:8533   */\n      0x00\n        /* \"#utility.yul\":8584:8593   */\n      dup3\n      slt\n      shl(0xff, 0x01)\n        /* \"#utility.yul\":8595:8613   */\n      dup5\n      eq\n        /* \"#utility.yul\":8580:8614   */\n      and\n        /* \"#utility.yul\":8577:8637   */\n      iszero\n      tag_908\n      jumpi\n        /* \"#utility.yul\":8617:8635   */\n      tag_908\n      tag_839\n      jump\t// in\n    tag_908:\n        /* \"#utility.yul\":8690:8691   */\n      dup2\n        /* \"#utility.yul\":8681:8688   */\n      dup2\n        /* \"#utility.yul\":8676:8692   */\n      sdiv\n        /* \"#utility.yul\":8673:8674   */\n      dup4\n        /* \"#utility.yul\":8670:8693   */\n      eq\n        /* \"#utility.yul\":8666:8667   */\n      dup3\n        /* \"#utility.yul\":8659:8668   */\n      iszero\n        /* \"#utility.yul\":8656:8694   */\n      or\n        /* \"#utility.yul\":8646:8718   */\n      tag_245\n      jumpi\n        /* \"#utility.yul\":8698:8716   */\n      tag_245\n      tag_839\n      jump\t// in\n        /* \"#utility.yul\":9076:9244   */\n    tag_260:\n        /* \"#utility.yul\":9149:9158   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":9180:9189   */\n      dup2\n      iszero\n        /* \"#utility.yul\":9197:9212   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":9191:9213   */\n      dup5\n      eq\n        /* \"#utility.yul\":9177:9214   */\n      or\n        /* \"#utility.yul\":9167:9238   */\n      tag_245\n      jumpi\n        /* \"#utility.yul\":9218:9236   */\n      tag_245\n      tag_839\n      jump\t// in\n        /* \"#utility.yul\":9249:9466   */\n    tag_262:\n        /* \"#utility.yul\":9289:9290   */\n      0x00\n        /* \"#utility.yul\":9315:9316   */\n      dup3\n        /* \"#utility.yul\":9305:9437   */\n      tag_916\n      jumpi\n        /* \"#utility.yul\":9359:9369   */\n      0x4e487b71\n        /* \"#utility.yul\":9354:9357   */\n      0xe0\n        /* \"#utility.yul\":9350:9370   */\n      shl\n        /* \"#utility.yul\":9347:9348   */\n      0x00\n        /* \"#utility.yul\":9340:9371   */\n      mstore\n        /* \"#utility.yul\":9394:9398   */\n      0x12\n        /* \"#utility.yul\":9391:9392   */\n      0x04\n        /* \"#utility.yul\":9384:9399   */\n      mstore\n        /* \"#utility.yul\":9422:9426   */\n      0x24\n        /* \"#utility.yul\":9419:9420   */\n      0x00\n        /* \"#utility.yul\":9412:9427   */\n      revert\n        /* \"#utility.yul\":9305:9437   */\n    tag_916:\n      pop\n        /* \"#utility.yul\":9451:9460   */\n      div\n      swap1\n        /* \"#utility.yul\":9249:9466   */\n      jump\t// out\n        /* \"#utility.yul\":9471:9599   */\n    tag_275:\n        /* \"#utility.yul\":9538:9547   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":9559:9570   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":9556:9593   */\n      iszero\n      tag_245\n      jumpi\n        /* \"#utility.yul\":9573:9591   */\n      tag_245\n      tag_839\n      jump\t// in\n        /* \"#utility.yul\":9604:9979   */\n    tag_840:\n        /* \"#utility.yul\":9692:9693   */\n      0x01\n        /* \"#utility.yul\":9710:9715   */\n      dup2\n        /* \"#utility.yul\":9724:9973   */\n    tag_921:\n        /* \"#utility.yul\":9745:9746   */\n      0x01\n        /* \"#utility.yul\":9735:9743   */\n      dup5\n        /* \"#utility.yul\":9732:9747   */\n      gt\n        /* \"#utility.yul\":9724:9973   */\n      iszero\n      tag_923\n      jumpi\n        /* \"#utility.yul\":9795:9799   */\n      dup1\n        /* \"#utility.yul\":9790:9793   */\n      dup6\n        /* \"#utility.yul\":9786:9800   */\n      div\n        /* \"#utility.yul\":9780:9784   */\n      dup2\n        /* \"#utility.yul\":9777:9801   */\n      gt\n        /* \"#utility.yul\":9774:9824   */\n      iszero\n      tag_925\n      jumpi\n        /* \"#utility.yul\":9804:9822   */\n      tag_925\n      tag_839\n      jump\t// in\n    tag_925:\n        /* \"#utility.yul\":9854:9855   */\n      0x01\n        /* \"#utility.yul\":9844:9852   */\n      dup5\n        /* \"#utility.yul\":9840:9856   */\n      and\n        /* \"#utility.yul\":9837:9886   */\n      iszero\n      tag_926\n      jumpi\n        /* \"#utility.yul\":9868:9884   */\n      swap1\n      dup2\n      mul\n      swap1\n        /* \"#utility.yul\":9837:9886   */\n    tag_926:\n        /* \"#utility.yul\":9951:9952   */\n      0x01\n        /* \"#utility.yul\":9947:9963   */\n      swap4\n      swap1\n      swap4\n      shr\n      swap3\n        /* \"#utility.yul\":9907:9922   */\n      dup1\n      mul\n        /* \"#utility.yul\":9724:9973   */\n      jump(tag_921)\n    tag_923:\n        /* \"#utility.yul\":9604:9979   */\n      swap4\n      pop\n      swap4\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9984:10886   */\n    tag_841:\n        /* \"#utility.yul\":10033:10038   */\n      0x00\n        /* \"#utility.yul\":10063:10071   */\n      dup3\n        /* \"#utility.yul\":10053:10133   */\n      tag_928\n      jumpi\n      pop\n        /* \"#utility.yul\":10104:10105   */\n      0x01\n        /* \"#utility.yul\":10118:10123   */\n      jump(tag_245)\n        /* \"#utility.yul\":10053:10133   */\n    tag_928:\n        /* \"#utility.yul\":10152:10156   */\n      dup2\n        /* \"#utility.yul\":10142:10218   */\n      tag_929\n      jumpi\n      pop\n        /* \"#utility.yul\":10189:10190   */\n      0x00\n        /* \"#utility.yul\":10203:10208   */\n      jump(tag_245)\n        /* \"#utility.yul\":10142:10218   */\n    tag_929:\n        /* \"#utility.yul\":10234:10238   */\n      dup2\n        /* \"#utility.yul\":10252:10253   */\n      0x01\n        /* \"#utility.yul\":10247:10306   */\n      dup2\n      eq\n      tag_931\n      jumpi\n        /* \"#utility.yul\":10320:10321   */\n      0x02\n        /* \"#utility.yul\":10315:10489   */\n      dup2\n      eq\n      tag_932\n      jumpi\n        /* \"#utility.yul\":10227:10489   */\n      jump(tag_930)\n        /* \"#utility.yul\":10247:10306   */\n    tag_931:\n        /* \"#utility.yul\":10277:10278   */\n      0x01\n        /* \"#utility.yul\":10268:10278   */\n      swap2\n      pop\n        /* \"#utility.yul\":10291:10296   */\n      pop\n      jump(tag_245)\n        /* \"#utility.yul\":10315:10489   */\n    tag_932:\n        /* \"#utility.yul\":10352:10355   */\n      0xff\n        /* \"#utility.yul\":10342:10350   */\n      dup5\n        /* \"#utility.yul\":10339:10356   */\n      gt\n        /* \"#utility.yul\":10336:10379   */\n      iszero\n      tag_934\n      jumpi\n        /* \"#utility.yul\":10359:10377   */\n      tag_934\n      tag_839\n      jump\t// in\n    tag_934:\n      pop\n      pop\n        /* \"#utility.yul\":10415:10416   */\n      0x01\n        /* \"#utility.yul\":10401:10417   */\n      dup3\n      shl\n        /* \"#utility.yul\":10474:10479   */\n      jump(tag_245)\n        /* \"#utility.yul\":10227:10489   */\n    tag_930:\n      pop\n        /* \"#utility.yul\":10573:10575   */\n      0x20\n        /* \"#utility.yul\":10563:10571   */\n      dup4\n        /* \"#utility.yul\":10560:10576   */\n      lt\n        /* \"#utility.yul\":10554:10557   */\n      0x0133\n        /* \"#utility.yul\":10548:10552   */\n      dup4\n        /* \"#utility.yul\":10545:10558   */\n      lt\n        /* \"#utility.yul\":10541:10577   */\n      and\n        /* \"#utility.yul\":10535:10537   */\n      0x4e\n        /* \"#utility.yul\":10525:10533   */\n      dup5\n        /* \"#utility.yul\":10522:10538   */\n      lt\n        /* \"#utility.yul\":10517:10519   */\n      0x0b\n        /* \"#utility.yul\":10511:10515   */\n      dup5\n        /* \"#utility.yul\":10508:10520   */\n      lt\n        /* \"#utility.yul\":10504:10539   */\n      and\n        /* \"#utility.yul\":10501:10578   */\n      or\n        /* \"#utility.yul\":10498:10701   */\n      iszero\n      tag_935\n      jumpi\n      pop\n        /* \"#utility.yul\":10610:10629   */\n      dup2\n      dup2\n      exp\n        /* \"#utility.yul\":10686:10691   */\n      jump(tag_245)\n        /* \"#utility.yul\":10498:10701   */\n    tag_935:\n        /* \"#utility.yul\":10733:10775   */\n      tag_936\n      not(0x00)\n        /* \"#utility.yul\":10758:10766   */\n      dup5\n        /* \"#utility.yul\":10752:10756   */\n      dup5\n        /* \"#utility.yul\":10733:10775   */\n      tag_840\n      jump\t// in\n    tag_936:\n        /* \"#utility.yul\":10811:10817   */\n      dup1\n        /* \"#utility.yul\":10807:10808   */\n      0x00\n        /* \"#utility.yul\":10803:10809   */\n      not\n        /* \"#utility.yul\":10799:10818   */\n      div\n        /* \"#utility.yul\":10790:10797   */\n      dup3\n        /* \"#utility.yul\":10787:10819   */\n      gt\n        /* \"#utility.yul\":10784:10842   */\n      iszero\n      tag_938\n      jumpi\n        /* \"#utility.yul\":10822:10840   */\n      tag_938\n      tag_839\n      jump\t// in\n    tag_938:\n        /* \"#utility.yul\":10860:10880   */\n      mul\n      swap4\n        /* \"#utility.yul\":9984:10886   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10891:11022   */\n    tag_277:\n        /* \"#utility.yul\":10951:10956   */\n      0x00\n        /* \"#utility.yul\":10980:11016   */\n      tag_827\n        /* \"#utility.yul\":11007:11015   */\n      dup4\n        /* \"#utility.yul\":11001:11005   */\n      dup4\n        /* \"#utility.yul\":10980:11016   */\n      tag_841\n      jump\t// in\n        /* \"#utility.yul\":11382:11561   */\n    tag_842:\n        /* \"#utility.yul\":11460:11473   */\n      dup1\n      mload\n        /* \"#utility.yul\":11513:11535   */\n      0xffffffffffffffffffff\n        /* \"#utility.yul\":11502:11536   */\n      dup2\n      and\n        /* \"#utility.yul\":11492:11537   */\n      dup2\n      eq\n        /* \"#utility.yul\":11482:11555   */\n      tag_315\n      jumpi\n        /* \"#utility.yul\":11551:11552   */\n      0x00\n        /* \"#utility.yul\":11548:11549   */\n      dup1\n        /* \"#utility.yul\":11541:11553   */\n      revert\n        /* \"#utility.yul\":11566:12137   */\n    tag_296:\n        /* \"#utility.yul\":11669:11675   */\n      0x00\n        /* \"#utility.yul\":11677:11683   */\n      dup1\n        /* \"#utility.yul\":11685:11691   */\n      0x00\n        /* \"#utility.yul\":11693:11699   */\n      dup1\n        /* \"#utility.yul\":11701:11707   */\n      0x00\n        /* \"#utility.yul\":11754:11757   */\n      0xa0\n        /* \"#utility.yul\":11742:11751   */\n      dup7\n        /* \"#utility.yul\":11733:11740   */\n      dup9\n        /* \"#utility.yul\":11729:11752   */\n      sub\n        /* \"#utility.yul\":11725:11758   */\n      slt\n        /* \"#utility.yul\":11722:11775   */\n      iszero\n      tag_945\n      jumpi\n        /* \"#utility.yul\":11771:11772   */\n      0x00\n        /* \"#utility.yul\":11768:11769   */\n      dup1\n        /* \"#utility.yul\":11761:11773   */\n      revert\n        /* \"#utility.yul\":11722:11775   */\n    tag_945:\n        /* \"#utility.yul\":11794:11833   */\n      tag_946\n        /* \"#utility.yul\":11823:11832   */\n      dup7\n        /* \"#utility.yul\":11794:11833   */\n      tag_842\n      jump\t// in\n    tag_946:\n        /* \"#utility.yul\":11873:11875   */\n      0x20\n        /* \"#utility.yul\":11858:11876   */\n      dup8\n      add\n        /* \"#utility.yul\":11852:11877   */\n      mload\n        /* \"#utility.yul\":11939:11941   */\n      0x40\n        /* \"#utility.yul\":11924:11942   */\n      dup9\n      add\n        /* \"#utility.yul\":11918:11943   */\n      mload\n        /* \"#utility.yul\":12033:12035   */\n      0x60\n        /* \"#utility.yul\":12018:12036   */\n      dup10\n      add\n        /* \"#utility.yul\":12012:12037   */\n      mload\n        /* \"#utility.yul\":11784:11833   */\n      swap3\n      swap8\n      pop\n        /* \"#utility.yul\":11852:11877   */\n      swap1\n      swap6\n      pop\n        /* \"#utility.yul\":11918:11943   */\n      swap4\n      pop\n        /* \"#utility.yul\":12012:12037   */\n      swap2\n      pop\n        /* \"#utility.yul\":12082:12131   */\n      tag_947\n        /* \"#utility.yul\":12126:12129   */\n      0x80\n        /* \"#utility.yul\":12111:12130   */\n      dup8\n      add\n        /* \"#utility.yul\":12082:12131   */\n      tag_842\n      jump\t// in\n    tag_947:\n        /* \"#utility.yul\":12072:12131   */\n      swap1\n      pop\n        /* \"#utility.yul\":11566:12137   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12892:13237   */\n    tag_363:\n        /* \"#utility.yul\":13094:13096   */\n      0x20\n        /* \"#utility.yul\":13076:13097   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":13133:13135   */\n      0x15\n        /* \"#utility.yul\":13113:13131   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":13106:13136   */\n      mstore\n      shl(0x5a, 0x1250d3c8185b1c9958591e48199a5b985b1a5e9959)\n        /* \"#utility.yul\":13167:13169   */\n      0x40\n        /* \"#utility.yul\":13152:13170   */\n      dup3\n      add\n        /* \"#utility.yul\":13145:13196   */\n      mstore\n        /* \"#utility.yul\":13228:13230   */\n      0x60\n        /* \"#utility.yul\":13213:13231   */\n      add\n      swap1\n        /* \"#utility.yul\":12892:13237   */\n      jump\t// out\n        /* \"#utility.yul\":13242:13572   */\n    tag_367:\n        /* \"#utility.yul\":13444:13446   */\n      0x20\n        /* \"#utility.yul\":13426:13447   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":13483:13484   */\n      0x07\n        /* \"#utility.yul\":13463:13481   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":13456:13485   */\n      mstore\n      shl(0xca, 0x199c99595e9959)\n        /* \"#utility.yul\":13516:13518   */\n      0x40\n        /* \"#utility.yul\":13501:13519   */\n      dup3\n      add\n        /* \"#utility.yul\":13494:13531   */\n      mstore\n        /* \"#utility.yul\":13563:13565   */\n      0x60\n        /* \"#utility.yul\":13548:13566   */\n      add\n      swap1\n        /* \"#utility.yul\":13242:13572   */\n      jump\t// out\n        /* \"#utility.yul\":15931:16066   */\n    tag_420:\n        /* \"#utility.yul\":15970:15973   */\n      0x00\n        /* \"#utility.yul\":15991:16008   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":15988:16031   */\n      tag_960\n      jumpi\n        /* \"#utility.yul\":16011:16029   */\n      tag_960\n      tag_839\n      jump\t// in\n    tag_960:\n      pop\n        /* \"#utility.yul\":16058:16059   */\n      0x01\n        /* \"#utility.yul\":16047:16060   */\n      add\n      swap1\n        /* \"#utility.yul\":15931:16066   */\n      jump\t// out\n        /* \"#utility.yul\":17427:17554   */\n    tag_458:\n        /* \"#utility.yul\":17488:17498   */\n      0x4e487b71\n        /* \"#utility.yul\":17483:17486   */\n      0xe0\n        /* \"#utility.yul\":17479:17499   */\n      shl\n        /* \"#utility.yul\":17476:17477   */\n      0x00\n        /* \"#utility.yul\":17469:17500   */\n      mstore\n        /* \"#utility.yul\":17519:17523   */\n      0x32\n        /* \"#utility.yul\":17516:17517   */\n      0x04\n        /* \"#utility.yul\":17509:17524   */\n      mstore\n        /* \"#utility.yul\":17543:17547   */\n      0x24\n        /* \"#utility.yul\":17540:17541   */\n      0x00\n        /* \"#utility.yul\":17533:17548   */\n      revert\n        /* \"#utility.yul\":18394:18671   */\n    tag_509:\n        /* \"#utility.yul\":18461:18467   */\n      0x00\n        /* \"#utility.yul\":18514:18516   */\n      0x20\n        /* \"#utility.yul\":18502:18511   */\n      dup3\n        /* \"#utility.yul\":18493:18500   */\n      dup5\n        /* \"#utility.yul\":18489:18512   */\n      sub\n        /* \"#utility.yul\":18485:18517   */\n      slt\n        /* \"#utility.yul\":18482:18534   */\n      iszero\n      tag_970\n      jumpi\n        /* \"#utility.yul\":18530:18531   */\n      0x00\n        /* \"#utility.yul\":18527:18528   */\n      dup1\n        /* \"#utility.yul\":18520:18532   */\n      revert\n        /* \"#utility.yul\":18482:18534   */\n    tag_970:\n        /* \"#utility.yul\":18562:18571   */\n      dup2\n        /* \"#utility.yul\":18556:18572   */\n      mload\n        /* \"#utility.yul\":18615:18620   */\n      dup1\n        /* \"#utility.yul\":18608:18621   */\n      iszero\n        /* \"#utility.yul\":18601:18622   */\n      iszero\n        /* \"#utility.yul\":18594:18599   */\n      dup2\n        /* \"#utility.yul\":18591:18623   */\n      eq\n        /* \"#utility.yul\":18581:18641   */\n      tag_827\n      jumpi\n        /* \"#utility.yul\":18637:18638   */\n      0x00\n        /* \"#utility.yul\":18634:18635   */\n      dup1\n        /* \"#utility.yul\":18627:18639   */\n      revert\n        /* \"#utility.yul\":19435:19722   */\n    tag_517:\n        /* \"#utility.yul\":19625:19650   */\n      dup3\n      dup2\n      mstore\n        /* \"#utility.yul\":19613:19615   */\n      0x40\n        /* \"#utility.yul\":19598:19616   */\n      dup2\n      add\n        /* \"#utility.yul\":19659:19716   */\n      tag_827\n        /* \"#utility.yul\":19712:19714   */\n      0x20\n        /* \"#utility.yul\":19697:19715   */\n      dup4\n      add\n        /* \"#utility.yul\":19689:19695   */\n      dup5\n        /* \"#utility.yul\":19659:19716   */\n      tag_838\n      jump\t// in\n        /* \"#utility.yul\":19727:19854   */\n    tag_520:\n        /* \"#utility.yul\":19788:19798   */\n      0x4e487b71\n        /* \"#utility.yul\":19783:19786   */\n      0xe0\n        /* \"#utility.yul\":19779:19799   */\n      shl\n        /* \"#utility.yul\":19776:19777   */\n      0x00\n        /* \"#utility.yul\":19769:19800   */\n      mstore\n        /* \"#utility.yul\":19819:19823   */\n      0x31\n        /* \"#utility.yul\":19816:19817   */\n      0x04\n        /* \"#utility.yul\":19809:19824   */\n      mstore\n        /* \"#utility.yul\":19843:19847   */\n      0x24\n        /* \"#utility.yul\":19840:19841   */\n      0x00\n        /* \"#utility.yul\":19833:19848   */\n      revert\n        /* \"#utility.yul\":19859:19995   */\n    tag_524:\n        /* \"#utility.yul\":19898:19901   */\n      0x00\n        /* \"#utility.yul\":19926:19931   */\n      dup2\n        /* \"#utility.yul\":19916:19955   */\n      tag_979\n      jumpi\n        /* \"#utility.yul\":19935:19953   */\n      tag_979\n      tag_839\n      jump\t// in\n    tag_979:\n      pop\n      not(0x00)\n        /* \"#utility.yul\":19971:19989   */\n      add\n      swap1\n        /* \"#utility.yul\":19859:19995   */\n      jump\t// out\n        /* \"#utility.yul\":20354:20584   */\n    tag_548:\n        /* \"#utility.yul\":20424:20430   */\n      0x00\n        /* \"#utility.yul\":20477:20479   */\n      0x20\n        /* \"#utility.yul\":20465:20474   */\n      dup3\n        /* \"#utility.yul\":20456:20463   */\n      dup5\n        /* \"#utility.yul\":20452:20475   */\n      sub\n        /* \"#utility.yul\":20448:20480   */\n      slt\n        /* \"#utility.yul\":20445:20497   */\n      iszero\n      tag_982\n      jumpi\n        /* \"#utility.yul\":20493:20494   */\n      0x00\n        /* \"#utility.yul\":20490:20491   */\n      dup1\n        /* \"#utility.yul\":20483:20495   */\n      revert\n        /* \"#utility.yul\":20445:20497   */\n    tag_982:\n      pop\n        /* \"#utility.yul\":20538:20554   */\n      mload\n      swap2\n        /* \"#utility.yul\":20354:20584   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23052:23177   */\n    tag_615:\n        /* \"#utility.yul\":23117:23126   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":23138:23148   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":23135:23171   */\n      iszero\n      tag_245\n      jumpi\n        /* \"#utility.yul\":23151:23169   */\n      tag_245\n      tag_839\n      jump\t// in\n        /* \"#utility.yul\":24591:25021   */\n    tag_670:\n        /* \"#utility.yul\":24838:24863   */\n      dup5\n      dup2\n      mstore\n        /* \"#utility.yul\":24894:24896   */\n      0x20\n        /* \"#utility.yul\":24879:24897   */\n      dup2\n      add\n        /* \"#utility.yul\":24872:24906   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":24937:24939   */\n      0x40\n        /* \"#utility.yul\":24922:24940   */\n      dup2\n      add\n        /* \"#utility.yul\":24915:24949   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":24825:24828   */\n      0x80\n        /* \"#utility.yul\":24810:24829   */\n      dup2\n      add\n        /* \"#utility.yul\":24958:25015   */\n      tag_817\n        /* \"#utility.yul\":25011:25013   */\n      0x60\n        /* \"#utility.yul\":24996:25014   */\n      dup4\n      add\n        /* \"#utility.yul\":24988:24994   */\n      dup5\n        /* \"#utility.yul\":24958:25015   */\n      tag_838\n      jump\t// in\n        /* \"#utility.yul\":26471:26758   */\n    tag_813:\n        /* \"#utility.yul\":26600:26603   */\n      0x00\n        /* \"#utility.yul\":26638:26644   */\n      dup3\n        /* \"#utility.yul\":26632:26645   */\n      mload\n        /* \"#utility.yul\":26654:26720   */\n      tag_1006\n        /* \"#utility.yul\":26713:26719   */\n      dup2\n        /* \"#utility.yul\":26708:26711   */\n      dup5\n        /* \"#utility.yul\":26701:26705   */\n      0x20\n        /* \"#utility.yul\":26693:26699   */\n      dup8\n        /* \"#utility.yul\":26689:26706   */\n      add\n        /* \"#utility.yul\":26654:26720   */\n      tag_837\n      jump\t// in\n    tag_1006:\n        /* \"#utility.yul\":26736:26752   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":26471:26758   */\n      swap2\n      pop\n      pop\n      jump\t// out\n    stop\n    data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d 360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n    data_c8669cf8eaf883002b9f48e28846a8d408c9b58ea6613bace374265e43c9bc43 9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00\n\n    auxdata: 0xa2646970667358221220dc5b9644602b5da834f3dd21d5c9d0cc5e3d7a96d8538e314a4535f3ddb49ac664736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60a060405230608052348015601357600080fd5b5060805161332961003d600039600081816128050152818161282e015261296f01526133296000f3fe6080604052600436106102555760003560e01c80638da5cb5b11610139578063c1560a14116100b6578063df4e05931161007a578063df4e059314610782578063e8e87389146107bf578063efdcdb45146107ec578063f2fde38b14610824578063fc0c546a14610844578063fd663da21461086457600080fd5b8063c1560a141461067c578063c211e1f914610692578063c81ffdea1461071b578063d1f3b23e14610748578063d3d9d1e41461076257600080fd5b806399131e7e116100fd57806399131e7e14610571578063a1e89aec14610591578063ad3cb1cc146105a7578063b5f522f7146105e5578063b9469e1a1461065c57600080fd5b80638da5cb5b1461050657806391152c5c1461051b57806391d8730a14610530578063940c333e14610549578063960524e31461055c57600080fd5b80634dee1dc3116101d257806363b201171161019657806363b201171461047b5780636c1909ed14610491578063715018a6146104b1578063721bc38b146104c65780637cf12b90146104dc5780637fb12001146104f157600080fd5b80634dee1dc3146103ff5780634f1ef2861461041e57806352d1902d1461043157806362a469e91461044657806362a5af3b1461046657600080fd5b80632151206e116102195780632151206e1461035a57806323cc75a8146103705780632f48ab7d146103875780633e413bee146103bf5780633feb5f2b146103df57600080fd5b806305834e67146102ac57806306e4d36f146102df578063115afc3a14610305578063117d260f14610325578063212ea2471461034557600080fd5b366102a75760405162461bcd60e51b815260206004820181905260248201527f44697265637420424e42207472616e7366657273206e6f7420616c6c6f77656460448201526064015b60405180910390fd5b600080fd5b3480156102b857600080fd5b506102cc6102c7366004612c6f565b610884565b6040519081526020015b60405180910390f35b3480156102eb57600080fd5b5060045460075410155b60405190151581526020016102d6565b34801561031157600080fd5b506102cc610320366004612c99565b610a3e565b34801561033157600080fd5b506102cc610340366004612c6f565b610ba7565b34801561035157600080fd5b506006546102cc565b34801561036657600080fd5b506102cc60045481565b34801561037c57600080fd5b50610385610d79565b005b34801561039357600080fd5b50600b546103a7906001600160a01b031681565b6040516001600160a01b0390911681526020016102d6565b3480156103cb57600080fd5b50600c546103a7906001600160a01b031681565b3480156103eb57600080fd5b506103a76103fa366004612cb4565b610ef8565b34801561040b57600080fd5b506009546102f590610100900460ff1681565b61038561042c366004612cf8565b610f22565b34801561043d57600080fd5b506102cc610f41565b34801561045257600080fd5b506001546103a7906001600160a01b031681565b34801561047257600080fd5b50610385610f5e565b34801561048757600080fd5b506102cc60085481565b34801561049d57600080fd5b506103856104ac366004612dc4565b610fc4565b3480156104bd57600080fd5b50610385611215565b3480156104d257600080fd5b506102cc60075481565b3480156104e857600080fd5b50610385611227565b3480156104fd57600080fd5b50610385611289565b34801561051257600080fd5b506103a761179e565b34801561052757600080fd5b506103856117cc565b34801561053c57600080fd5b50600554600754146102f5565b610385610557366004612c6f565b611bb0565b34801561056857600080fd5b50600a546102cc565b34801561057d57600080fd5b506000546103a7906001600160a01b031681565b34801561059d57600080fd5b506102cc60065481565b3480156105b357600080fd5b506105d8604051806040016040528060058152602001640352e302e360dc1b81525081565b6040516102d69190612e14565b3480156105f157600080fd5b50610632610600366004612cb4565b600d60205260009081526040902080546001820154600283015460038401546004909401549293919290919060ff1685565b6040805195865260208601949094529284019190915260608301521515608082015260a0016102d6565b34801561066857600080fd5b506009546102f59062010000900460ff1681565b34801561068857600080fd5b506102cc60055481565b34801561069e57600080fd5b506107066106ad366004612cb4565b506006546000908152600d6020908152604091829020825160a081018452815480825260018301549382018490526002830154948201949094526003820154606082015260049091015460ff1615156080909101529091565b604080519283526020830191909152016102d6565b34801561072757600080fd5b506102cc610736366004612e47565b600e6020526000908152604090205481565b34801561075457600080fd5b506009546102f59060ff1681565b34801561076e57600080fd5b506002546103a7906001600160a01b031681565b34801561078e57600080fd5b506107b261079d366004612e47565b60106020526000908152604090205460ff1681565b6040516102d69190612e9c565b3480156107cb57600080fd5b506102cc6107da366004612e47565b600f6020526000908152604090205481565b3480156107f857600080fd5b506102cc610807366004612eaa565b601160209081526000928352604080842090915290825290205481565b34801561083057600080fd5b5061038561083f366004612e47565b61220e565b34801561085057600080fd5b506003546103a7906001600160a01b031681565b34801561087057600080fd5b5061038561087f366004612edf565b61224c565b6000806402540be40061089685610a3e565b6108a09190612f8c565b9050600081136108e75760405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a59081c1c9a58d9481999595960721b604482015260640161029e565b60006108f260065490565b6000818152600d60205260408120600281015492935091908088600281111561091d5761091d612e64565b0361094657670de0b6b3a76400006109358887612fbc565b61093f9190612fd3565b9050610a10565b600288600281111561095a5761095a612e64565b14806109775750600188600281111561097557610975612e64565b145b156109c8576006600061098b826012612ff5565b61099690600a6130ef565b6109a0908a612fbc565b9050670de0b6b3a76400006109b58289612fbc565b6109bf9190612fd3565b92505050610a10565b60405162461bcd60e51b815260206004820152601a60248201527f556e737570706f72746564207061796d656e74206d6574686f64000000000000604482015260640161029e565b600082610a25670de0b6b3a764000084612fbc565b610a2f9190612fd3565b96505050505050505b92915050565b600080826002811115610a5357610a53612e64565b03610adc5760008060009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610aac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad09190613115565b50919695505050505050565b6001826002811115610af057610af0612e64565b03610b3f5760015460408051633fabe5a360e21b815290516000926001600160a01b03169163feaf968c9160048083019260a09291908290030181865afa158015610aac573d6000803e3d6000fd5b6002826002811115610b5357610b53612e64565b036109c85760025460408051633fabe5a360e21b815290516000926001600160a01b03169163feaf968c9160048083019260a09291908290030181865afa158015610aac573d6000803e3d6000fd5b919050565b6000808211610c075760405162461bcd60e51b815260206004820152602660248201527f546f6b656e20616d6f756e74206d7573742062652067726561746572207468616044820152656e207a65726f60d01b606482015260840161029e565b60006402540be400610c1885610a3e565b610c229190612f8c565b905060008113610c695760405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a59081c1c9a58d9481999595960721b604482015260640161029e565b6000610c7460065490565b905080600003610cb75760405162461bcd60e51b815260206004820152600e60248201526d4e6f206163746976652073616c6560901b604482015260640161029e565b6000818152600d6020526040812060028101549091670de0b6b3a7640000610cdf8389612fbc565b610ce99190612fd3565b9050600080896002811115610d0057610d00612e64565b03610d295785610d18670de0b6b3a764000084612fbc565b610d229190612fd3565b9050610d6d565b6001896002811115610d3d57610d3d612e64565b1480610d5a57506002896002811115610d5857610d58612e64565b145b156109c85785610d1883620f4240612fbc565b98975050505050505050565b610d81612462565b610d8961249a565b60095460ff1615610dac5760405162461bcd60e51b815260040161029e90613167565b60095462010000900460ff1615610dd55760405162461bcd60e51b815260040161029e90613196565b6004546007541015610e4f5760405162461bcd60e51b815260206004820152603860248201527f43616e6e6f742066696e616c697a653a20536f667420636170206e6f7420726560448201527f6163686564206f722073616c65206973206f6e676f696e670000000000000000606482015260840161029e565b600954610100900460ff16610e9e5760405162461bcd60e51b8152602060048201526015602482015274105a5c991c9bdc081b9bdd0818dbdb5c1b195d1959605a1b604482015260640161029e565b6009805460ff19166001179055610eb36124cc565b6008546040517f9c4b134da32aab35252391880a9f2a3c13a760d7817ae8823f2b301d3522045a90600090a2610ef660016000805160206132d483398151915255565b565b600a8181548110610f0857600080fd5b6000918252602090912001546001600160a01b0316905081565b610f2a6127fa565b610f338261289f565b610f3d82826128a7565b5050565b6000610f4b612964565b506000805160206132b483398151915290565b610f6661249a565b60095462010000900460ff1615610fb15760405162461bcd60e51b815260206004820152600f60248201526e105b1c9958591e48119c99595e9959608a1b604482015260640161029e565b6009805462ff0000191662010000179055565b610fcc61249a565b60095460ff1615610fef5760405162461bcd60e51b815260040161029e90613167565b60095462010000900460ff16156110185760405162461bcd60e51b815260040161029e90613196565b42831161107c5760405162461bcd60e51b815260206004820152602c60248201527f53746172742074696d65206d7573742062652067726561746572207468616e2060448201526b63757272656e742074696d6560a01b606482015260840161029e565b8282116110dc5760405162461bcd60e51b815260206004820152602860248201527f456e642074696d65206d7573742062652067726561746572207468616e2073746044820152676172742074696d6560c01b606482015260840161029e565b6006546000908152600d602052604090206001015442116111545760405162461bcd60e51b815260206004820152602c60248201527f4e65772073616c65206d75737420737461727420616674657220746865206c6160448201526b73742073616c6520656e647360a01b606482015260840161029e565b60068054906000611164836131b7565b90915550506040805160a08101825284815260208082018581528284018581526000606080860182815260808701838152600680548552600d8852938990209751885594516001880155925160028701559151600386015591516004909401805460ff1916941515949094179093555483518781529182018690529281018490527f63b43fa153147ade1de28ed76841cdbc34e510ed94dd1ff5a88e278b0b1ad9ba910160405180910390a2505050565b61121d61249a565b610ef660006129ad565b61122f61249a565b60095462010000900460ff1661127b5760405162461bcd60e51b8152602060048201526011602482015270105b1c9958591e48155b919c99595e9959607a1b604482015260640161029e565b6009805462ff000019169055565b611291612462565b61129961249a565b60095460ff16156112bc5760405162461bcd60e51b815260040161029e90613167565b6006546000908152600d6020526040902060010154421161130e5760405162461bcd60e51b815260206004820152600c60248201526b53616c65206f6e676f696e6760a01b604482015260640161029e565b600454600754106113545760405162461bcd60e51b815260206004820152601060248201526f14dbd99d0818d85c081c995858da195960821b604482015260640161029e565b600a8054906000908211156113755761136e600b83612ff5565b9050611379565b5060005b6000611386600184612ff5565b90505b81811061176c576000600a82815481106113a5576113a56131d0565b60009182526020822001546001600160a01b031691505b60038160ff1610156117155760008160ff1660028111156113df576113df612e64565b6001600160a01b0384166000908152601160205260408120919250908183600281111561140e5761140e612e64565b600281111561141f5761141f612e64565b8152602001908152602001600020549050600081111561170b576001600160a01b03841660009081526011602052604081208184600281111561146457611464612e64565b600281111561147557611475612e64565b8152602081019190915260400160009081209190915582600281111561149d5761149d612e64565b0361153f576000846001600160a01b03168260405160006040518083038185875af1925050503d80600081146114ef576040519150601f19603f3d011682016040523d82523d6000602084013e6114f4565b606091505b50509050806115395760405162461bcd60e51b8152602060048201526011602482015270109390881c99599d5b990819985a5b1959607a1b604482015260640161029e565b506116c7565b600182600281111561155357611553612e64565b14806115705750600282600281111561156e5761156e612e64565b145b15611671576000600183600281111561158b5761158b612e64565b146115a157600c546001600160a01b03166115ae565b600b546001600160a01b03165b60405163a9059cbb60e01b81526001600160a01b038781166004830152602482018590529192509082169063a9059cbb906044016020604051808303816000875af1158015611601573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061162591906131e6565b6115395760405162461bcd60e51b815260206004820152601860248201527f537461626c65636f696e20726566756e64206661696c65640000000000000000604482015260640161029e565b60405162461bcd60e51b815260206004820152602560248201527f556e737570706f72746564207061796d656e74206d6574686f6420666f72207260448201526419599d5b9960da1b606482015260840161029e565b836001600160a01b03167f03829ab241648d7348f97e4f77d36451330f2276ea8eeb3428e462012f9699e78284604051611702929190613208565b60405180910390a25b50506001016113bc565b50600a8054806117275761172761321c565b600082815260208120820160001990810180546001600160a01b0319169055909101909155829003611759575061176c565b508061176481613232565b915050611389565b50600a54600003611785576009805460ff191660011790555b5050610ef660016000805160206132d483398151915255565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6117d4612462565b6117dc61249a565b60095460ff16156117ff5760405162461bcd60e51b815260040161029e90613167565b60095462010000900460ff16156118285760405162461bcd60e51b815260040161029e90613196565b600954610100900460ff16156118805760405162461bcd60e51b815260206004820152601960248201527f41697264726f7020616c726561647920636f6d706c6574656400000000000000604482015260640161029e565b6008546003546040516370a0823160e01b81523360048201526001600160a01b03909116906370a0823190602401602060405180830381865afa1580156118cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118ef9190613249565b10156119325760405162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e742046756e647360701b604482015260640161029e565b6006546000908152600d602052604090206001015442116119845760405162461bcd60e51b815260206004820152600c60248201526b53616c65206f6e676f696e6760a01b604482015260640161029e565b600a8054906000908211156119a55761199e600b83612ff5565b90506119a9565b5060005b60006119b6600184612ff5565b90505b818110611b7d576000600a82815481106119d5576119d56131d0565b60009182526020808320909101546001600160a01b0316808352600f9091526040909120549091508015611b59576003546000906001600160a01b03166323b872dd611a1f61179e565b6040516001600160e01b031960e084901b1681526001600160a01b0391821660048201529086166024820152604481018590526064016020604051808303816000875af1158015611a74573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a9891906131e6565b905080611adf5760405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b604482015260640161029e565b600a805480611af057611af061321c565b600082815260209020810160001990810180546001600160a01b03191690550190556040516001600160a01b038416907f9bdcd0cc5503fb9a8dd7311d9617e33108c4b7c8948cc544b16c1fd63c6f475b90611b4f9085815260200190565b60405180910390a2505b82600003611b68575050611b7d565b50508080611b7590613232565b9150506119b9565b50600a54600003611785576009805461ff0019166101001790555050610ef660016000805160206132d483398151915255565b60095460ff1615611bd35760405162461bcd60e51b815260040161029e90613167565b60095462010000900460ff1615611bfc5760405162461bcd60e51b815260040161029e90613196565b611c0461179e565b6001600160a01b03163303611c5b5760405162461bcd60e51b815260206004820152601760248201527f4f776e65722063616e6e6f742062757920746f6b656e73000000000000000000604482015260640161029e565b600654600003611c975760405162461bcd60e51b81526020600482015260076024820152664e6f2073616c6560c81b604482015260640161029e565b6006546000908152600d602052604090206004015460ff1615611cf55760405162461bcd60e51b815260206004820152601660248201527514d85b1948185b1c9958591e48199a5b985b1a5e995960521b604482015260640161029e565b600080836002811115611d0a57611d0a612e64565b03611dc95760003411611d5f5760405162461bcd60e51b815260206004820152601760248201527f53656e6420612076616c696420424e4220616d6f756e74000000000000000000604482015260640161029e565b611d698334610884565b336000908152601160205260408120919250349190856002811115611d9057611d90612e64565b6002811115611da157611da1612e64565b81526020019081526020016000206000828254611dbe9190613262565b90915550611fb99050565b6001836002811115611ddd57611ddd612e64565b1480611dfa57506002836002811115611df857611df8612e64565b145b156109c85760008211611e4f5760405162461bcd60e51b815260206004820152601f60248201527f456e74657220612076616c696420737461626c65636f696e20616d6f756e7400604482015260640161029e565b60006001846002811115611e6557611e65612e64565b14611e7b57600c546001600160a01b0316611e88565b600b546001600160a01b03165b6040516323b872dd60e01b8152336004820152306024820152604481018590529091506001600160a01b038216906323b872dd906064016020604051808303816000875af1158015611ede573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f0291906131e6565b611f4e5760405162461bcd60e51b815260206004820152601a60248201527f537461626c65636f696e207472616e73666572206661696c6564000000000000604482015260640161029e565b611f588484610884565b336000908152601160205260408120919350849190866002811115611f7f57611f7f612e64565b6002811115611f9057611f90612e64565b81526020019081526020016000206000828254611fad9190613262565b90915550611fb9915050565b600081116120005760405162461bcd60e51b8152602060048201526014602482015273125b9d985b1a59081d1bdad95b88185b5bdd5b9d60621b604482015260640161029e565b6006546000908152600d6020526040812060020154670de0b6b3a7640000906120299084612fbc565b6120339190612fd3565b9050600554816007546120469190613262565b11156120875760405162461bcd60e51b815260206004820152601060248201526f12185c990818d85c081c995858da195960821b604482015260640161029e565b336000908152600e6020526040812080548392906120a6908490613262565b9250508190555080600760008282546120bf9190613262565b90915550506006546000908152600d6020526040812060030180548492906120e8908490613262565b9250508190555081600860008282546121019190613262565b9091555050336000908152600f6020526040812054900361215f57600a80546001810182556000919091527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80180546001600160a01b031916331790555b336000908152600f60205260408120805484929061217e908490613262565b9091555050336000908152601060205260409020805485919060ff191660018360028111156121af576121af612e64565b02179055506006546000818152600d60205260409081902060020154905133917fdbcef474a632721725d49e3f35d9defe0257100b01d1e4b4b135b14d6fe296e89161220091879189908b90613275565b60405180910390a350505050565b61221661249a565b6001600160a01b03811661224057604051631e4fbdf760e01b81526000600482015260240161029e565b612249816129ad565b50565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff166000811580156122925750825b905060008267ffffffffffffffff1660011480156122af5750303b155b9050811580156122bd575080155b156122db5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561230557845460ff60401b1916600160401b1785555b61230e33612a1e565b612316612a2f565b8c600360006101000a8154816001600160a01b0302191690836001600160a01b0316021790555089600481905550886005819055508b600b60006101000a8154816001600160a01b0302191690836001600160a01b031602179055508a600c60006101000a8154816001600160a01b0302191690836001600160a01b03160217905550876000806101000a8154816001600160a01b0302191690836001600160a01b0316021790555086600160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555085600260006101000a8154816001600160a01b0302191690836001600160a01b03160217905550831561245357845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050505050505050565b6000805160206132d483398151915280546001190161249457604051633ee5aeb560e01b815260040160405180910390fd5b60029055565b336124a361179e565b6001600160a01b031614610ef65760405163118cdaa760e01b815233600482015260240161029e565b4780156125715760006124dd61179e565b6001600160a01b03168260405160006040518083038185875af1925050503d8060008114612527576040519150601f19603f3d011682016040523d82523d6000602084013e61252c565b606091505b505090508061256f5760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b604482015260640161029e565b505b600b546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156125ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125de9190613249565b905080156126b357600b546001600160a01b031663a9059cbb6125ff61179e565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af115801561264c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061267091906131e6565b6126b35760405162461bcd60e51b81526020600482015260146024820152731554d115081d1c985b9cd9995c8819985a5b195960621b604482015260640161029e565b600c546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156126fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127209190613249565b905080156127f557600c546001600160a01b031663a9059cbb61274161179e565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af115801561278e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127b291906131e6565b6127f55760405162461bcd60e51b81526020600482015260146024820152731554d110c81d1c985b9cd9995c8819985a5b195960621b604482015260640161029e565b505050565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148061288157507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166128756000805160206132b4833981519152546001600160a01b031690565b6001600160a01b031614155b15610ef65760405163703e46dd60e11b815260040160405180910390fd5b61224961249a565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015612901575060408051601f3d908101601f191682019092526128fe91810190613249565b60015b61292957604051634c9c8ce360e01b81526001600160a01b038316600482015260240161029e565b6000805160206132b4833981519152811461295a57604051632a87526960e21b81526004810182905260240161029e565b6127f58383612a37565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610ef65760405163703e46dd60e11b815260040160405180910390fd5b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b612a26612a8d565b61224981612ad6565b610ef6612a8d565b612a4082612ade565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a2805115612a85576127f58282612b43565b610f3d612bb9565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff16610ef657604051631afcd79f60e31b815260040160405180910390fd5b612216612a8d565b806001600160a01b03163b600003612b1457604051634c9c8ce360e01b81526001600160a01b038216600482015260240161029e565b6000805160206132b483398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6060600080846001600160a01b031684604051612b609190613297565b600060405180830381855af49150503d8060008114612b9b576040519150601f19603f3d011682016040523d82523d6000602084013e612ba0565b606091505b5091509150612bb0858383612bd8565b95945050505050565b3415610ef65760405163b398979f60e01b815260040160405180910390fd5b606082612bed57612be882612c37565b612c30565b8151158015612c0457506001600160a01b0384163b155b15612c2d57604051639996b31560e01b81526001600160a01b038516600482015260240161029e565b50805b9392505050565b805115612c475780518082602001fd5b60405163d6bda27560e01b815260040160405180910390fd5b803560038110610ba257600080fd5b60008060408385031215612c8257600080fd5b612c8b83612c60565b946020939093013593505050565b600060208284031215612cab57600080fd5b612c3082612c60565b600060208284031215612cc657600080fd5b5035919050565b6001600160a01b038116811461224957600080fd5b634e487b7160e01b600052604160045260246000fd5b60008060408385031215612d0b57600080fd5b8235612d1681612ccd565b9150602083013567ffffffffffffffff811115612d3257600080fd5b8301601f81018513612d4357600080fd5b803567ffffffffffffffff811115612d5d57612d5d612ce2565b604051601f8201601f19908116603f0116810167ffffffffffffffff81118282101715612d8c57612d8c612ce2565b604052818152828201602001871015612da457600080fd5b816020840160208301376000602083830101528093505050509250929050565b600080600060608486031215612dd957600080fd5b505081359360208301359350604090920135919050565b60005b83811015612e0b578181015183820152602001612df3565b50506000910152565b6020815260008251806020840152612e33816040850160208701612df0565b601f01601f19169190910160400192915050565b600060208284031215612e5957600080fd5b8135612c3081612ccd565b634e487b7160e01b600052602160045260246000fd5b60038110612e9857634e487b7160e01b600052602160045260246000fd5b9052565b60208101610a388284612e7a565b60008060408385031215612ebd57600080fd5b8235612ec881612ccd565b9150612ed660208401612c60565b90509250929050565b600080600080600080600080610100898b031215612efc57600080fd5b8835612f0781612ccd565b97506020890135612f1781612ccd565b96506040890135612f2781612ccd565b9550606089013594506080890135935060a0890135612f4581612ccd565b925060c0890135612f5581612ccd565b915060e0890135612f6581612ccd565b809150509295985092959890939650565b634e487b7160e01b600052601160045260246000fd5b80820260008212600160ff1b84141615612fa857612fa8612f76565b8181058314821517610a3857610a38612f76565b8082028115828204841417610a3857610a38612f76565b600082612ff057634e487b7160e01b600052601260045260246000fd5b500490565b81810381811115610a3857610a38612f76565b6001815b60018411156130435780850481111561302757613027612f76565b600184161561303557908102905b60019390931c92800261300c565b935093915050565b60008261305a57506001610a38565b8161306757506000610a38565b816001811461307d5760028114613087576130a3565b6001915050610a38565b60ff84111561309857613098612f76565b50506001821b610a38565b5060208310610133831016604e8410600b84101617156130c6575081810a610a38565b6130d36000198484613008565b80600019048211156130e7576130e7612f76565b029392505050565b6000612c30838361304b565b805169ffffffffffffffffffff81168114610ba257600080fd5b600080600080600060a0868803121561312d57600080fd5b613136866130fb565b6020870151604088015160608901519297509095509350915061315b608087016130fb565b90509295509295909350565b6020808252601590820152741250d3c8185b1c9958591e48199a5b985b1a5e9959605a1b604082015260600190565b602080825260079082015266199c99595e995960ca1b604082015260600190565b6000600182016131c9576131c9612f76565b5060010190565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156131f857600080fd5b81518015158114612c3057600080fd5b82815260408101612c306020830184612e7a565b634e487b7160e01b600052603160045260246000fd5b60008161324157613241612f76565b506000190190565b60006020828403121561325b57600080fd5b5051919050565b80820180821115610a3857610a38612f76565b848152602081018490526040810183905260808101612bb06060830184612e7a565b600082516132a9818460208701612df0565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00a2646970667358221220dc5b9644602b5da834f3dd21d5c9d0cc5e3d7a96d8538e314a4535f3ddb49ac664736f6c634300081a0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH1 0x80 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x80 MLOAD PUSH2 0x3329 PUSH2 0x3D PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x2805 ADD MSTORE DUP2 DUP2 PUSH2 0x282E ADD MSTORE PUSH2 0x296F ADD MSTORE PUSH2 0x3329 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x255 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x139 JUMPI DUP1 PUSH4 0xC1560A14 GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xDF4E0593 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xDF4E0593 EQ PUSH2 0x782 JUMPI DUP1 PUSH4 0xE8E87389 EQ PUSH2 0x7BF JUMPI DUP1 PUSH4 0xEFDCDB45 EQ PUSH2 0x7EC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x824 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x844 JUMPI DUP1 PUSH4 0xFD663DA2 EQ PUSH2 0x864 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC1560A14 EQ PUSH2 0x67C JUMPI DUP1 PUSH4 0xC211E1F9 EQ PUSH2 0x692 JUMPI DUP1 PUSH4 0xC81FFDEA EQ PUSH2 0x71B JUMPI DUP1 PUSH4 0xD1F3B23E EQ PUSH2 0x748 JUMPI DUP1 PUSH4 0xD3D9D1E4 EQ PUSH2 0x762 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x99131E7E GT PUSH2 0xFD JUMPI DUP1 PUSH4 0x99131E7E EQ PUSH2 0x571 JUMPI DUP1 PUSH4 0xA1E89AEC EQ PUSH2 0x591 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x5A7 JUMPI DUP1 PUSH4 0xB5F522F7 EQ PUSH2 0x5E5 JUMPI DUP1 PUSH4 0xB9469E1A EQ PUSH2 0x65C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x506 JUMPI DUP1 PUSH4 0x91152C5C EQ PUSH2 0x51B JUMPI DUP1 PUSH4 0x91D8730A EQ PUSH2 0x530 JUMPI DUP1 PUSH4 0x940C333E EQ PUSH2 0x549 JUMPI DUP1 PUSH4 0x960524E3 EQ PUSH2 0x55C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4DEE1DC3 GT PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x63B20117 GT PUSH2 0x196 JUMPI DUP1 PUSH4 0x63B20117 EQ PUSH2 0x47B JUMPI DUP1 PUSH4 0x6C1909ED EQ PUSH2 0x491 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4B1 JUMPI DUP1 PUSH4 0x721BC38B EQ PUSH2 0x4C6 JUMPI DUP1 PUSH4 0x7CF12B90 EQ PUSH2 0x4DC JUMPI DUP1 PUSH4 0x7FB12001 EQ PUSH2 0x4F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4DEE1DC3 EQ PUSH2 0x3FF JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x41E JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x431 JUMPI DUP1 PUSH4 0x62A469E9 EQ PUSH2 0x446 JUMPI DUP1 PUSH4 0x62A5AF3B EQ PUSH2 0x466 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2151206E GT PUSH2 0x219 JUMPI DUP1 PUSH4 0x2151206E EQ PUSH2 0x35A JUMPI DUP1 PUSH4 0x23CC75A8 EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0x2F48AB7D EQ PUSH2 0x387 JUMPI DUP1 PUSH4 0x3E413BEE EQ PUSH2 0x3BF JUMPI DUP1 PUSH4 0x3FEB5F2B EQ PUSH2 0x3DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5834E67 EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0x6E4D36F EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0x115AFC3A EQ PUSH2 0x305 JUMPI DUP1 PUSH4 0x117D260F EQ PUSH2 0x325 JUMPI DUP1 PUSH4 0x212EA247 EQ PUSH2 0x345 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x2A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x44697265637420424E42207472616E7366657273206E6F7420616C6C6F776564 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CC PUSH2 0x2C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C6F JUMP JUMPDEST PUSH2 0x884 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH1 0x7 SLOAD LT ISZERO JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2D6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x311 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CC PUSH2 0x320 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C99 JUMP JUMPDEST PUSH2 0xA3E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x331 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CC PUSH2 0x340 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C6F JUMP JUMPDEST PUSH2 0xBA7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x351 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH2 0x2CC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x366 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CC PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x385 PUSH2 0xD79 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x393 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH2 0x3A7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2D6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xC SLOAD PUSH2 0x3A7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A7 PUSH2 0x3FA CALLDATASIZE PUSH1 0x4 PUSH2 0x2CB4 JUMP JUMPDEST PUSH2 0xEF8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH2 0x2F5 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x385 PUSH2 0x42C CALLDATASIZE PUSH1 0x4 PUSH2 0x2CF8 JUMP JUMPDEST PUSH2 0xF22 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CC PUSH2 0xF41 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x452 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x3A7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x472 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x385 PUSH2 0xF5E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x487 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CC PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x385 PUSH2 0x4AC CALLDATASIZE PUSH1 0x4 PUSH2 0x2DC4 JUMP JUMPDEST PUSH2 0xFC4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x385 PUSH2 0x1215 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CC PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x385 PUSH2 0x1227 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x385 PUSH2 0x1289 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x512 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A7 PUSH2 0x179E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x527 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x385 PUSH2 0x17CC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH1 0x7 SLOAD EQ PUSH2 0x2F5 JUMP JUMPDEST PUSH2 0x385 PUSH2 0x557 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C6F JUMP JUMPDEST PUSH2 0x1BB0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x568 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xA SLOAD PUSH2 0x2CC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x3A7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x59D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CC PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5D8 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x352E302E3 PUSH1 0xDC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D6 SWAP2 SWAP1 PUSH2 0x2E14 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x632 PUSH2 0x600 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CB4 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 SWAP1 SWAP5 ADD SLOAD SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x2D6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x668 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH2 0x2F5 SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x688 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CC PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x69E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x706 PUSH2 0x6AD CALLDATASIZE PUSH1 0x4 PUSH2 0x2CB4 JUMP JUMPDEST POP PUSH1 0x6 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0xA0 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP1 DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD SWAP4 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x2 DUP4 ADD SLOAD SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x80 SWAP1 SWAP2 ADD MSTORE SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x2D6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x727 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CC PUSH2 0x736 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E47 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x754 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH2 0x2F5 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x76E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x3A7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x78E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7B2 PUSH2 0x79D CALLDATASIZE PUSH1 0x4 PUSH2 0x2E47 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D6 SWAP2 SWAP1 PUSH2 0x2E9C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CC PUSH2 0x7DA CALLDATASIZE PUSH1 0x4 PUSH2 0x2E47 JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CC PUSH2 0x807 CALLDATASIZE PUSH1 0x4 PUSH2 0x2EAA JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x830 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x385 PUSH2 0x83F CALLDATASIZE PUSH1 0x4 PUSH2 0x2E47 JUMP JUMPDEST PUSH2 0x220E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x850 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x3A7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x870 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x385 PUSH2 0x87F CALLDATASIZE PUSH1 0x4 PUSH2 0x2EDF JUMP JUMPDEST PUSH2 0x224C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH5 0x2540BE400 PUSH2 0x896 DUP6 PUSH2 0xA3E JUMP JUMPDEST PUSH2 0x8A0 SWAP2 SWAP1 PUSH2 0x2F8C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SGT PUSH2 0x8E7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x125B9D985B1A59081C1C9A58D94819995959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F2 PUSH1 0x6 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD SWAP3 SWAP4 POP SWAP2 SWAP1 DUP1 DUP9 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x91D JUMPI PUSH2 0x91D PUSH2 0x2E64 JUMP JUMPDEST SUB PUSH2 0x946 JUMPI PUSH8 0xDE0B6B3A7640000 PUSH2 0x935 DUP9 DUP8 PUSH2 0x2FBC JUMP JUMPDEST PUSH2 0x93F SWAP2 SWAP1 PUSH2 0x2FD3 JUMP JUMPDEST SWAP1 POP PUSH2 0xA10 JUMP JUMPDEST PUSH1 0x2 DUP9 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x95A JUMPI PUSH2 0x95A PUSH2 0x2E64 JUMP JUMPDEST EQ DUP1 PUSH2 0x977 JUMPI POP PUSH1 0x1 DUP9 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x975 JUMPI PUSH2 0x975 PUSH2 0x2E64 JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x9C8 JUMPI PUSH1 0x6 PUSH1 0x0 PUSH2 0x98B DUP3 PUSH1 0x12 PUSH2 0x2FF5 JUMP JUMPDEST PUSH2 0x996 SWAP1 PUSH1 0xA PUSH2 0x30EF JUMP JUMPDEST PUSH2 0x9A0 SWAP1 DUP11 PUSH2 0x2FBC JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 PUSH2 0x9B5 DUP3 DUP10 PUSH2 0x2FBC JUMP JUMPDEST PUSH2 0x9BF SWAP2 SWAP1 PUSH2 0x2FD3 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0xA10 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E737570706F72746564207061796D656E74206D6574686F64000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29E JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xA25 PUSH8 0xDE0B6B3A7640000 DUP5 PUSH2 0x2FBC JUMP JUMPDEST PUSH2 0xA2F SWAP2 SWAP1 PUSH2 0x2FD3 JUMP JUMPDEST SWAP7 POP POP POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xA53 JUMPI PUSH2 0xA53 PUSH2 0x2E64 JUMP JUMPDEST SUB PUSH2 0xADC JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAAC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAD0 SWAP2 SWAP1 PUSH2 0x3115 JUMP JUMPDEST POP SWAP2 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xAF0 JUMPI PUSH2 0xAF0 PUSH2 0x2E64 JUMP JUMPDEST SUB PUSH2 0xB3F JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x3FABE5A3 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xFEAF968C SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0xA0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAAC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xB53 JUMPI PUSH2 0xB53 PUSH2 0x2E64 JUMP JUMPDEST SUB PUSH2 0x9C8 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x3FABE5A3 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xFEAF968C SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0xA0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAAC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0xC07 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E20616D6F756E74206D757374206265206772656174657220746861 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x6E207A65726F PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x29E JUMP JUMPDEST PUSH1 0x0 PUSH5 0x2540BE400 PUSH2 0xC18 DUP6 PUSH2 0xA3E JUMP JUMPDEST PUSH2 0xC22 SWAP2 SWAP1 PUSH2 0x2F8C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SGT PUSH2 0xC69 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x125B9D985B1A59081C1C9A58D94819995959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29E JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC74 PUSH1 0x6 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 SUB PUSH2 0xCB7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x4E6F206163746976652073616C65 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29E JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD SWAP1 SWAP2 PUSH8 0xDE0B6B3A7640000 PUSH2 0xCDF DUP4 DUP10 PUSH2 0x2FBC JUMP JUMPDEST PUSH2 0xCE9 SWAP2 SWAP1 PUSH2 0x2FD3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP10 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xD00 JUMPI PUSH2 0xD00 PUSH2 0x2E64 JUMP JUMPDEST SUB PUSH2 0xD29 JUMPI DUP6 PUSH2 0xD18 PUSH8 0xDE0B6B3A7640000 DUP5 PUSH2 0x2FBC JUMP JUMPDEST PUSH2 0xD22 SWAP2 SWAP1 PUSH2 0x2FD3 JUMP JUMPDEST SWAP1 POP PUSH2 0xD6D JUMP JUMPDEST PUSH1 0x1 DUP10 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xD3D JUMPI PUSH2 0xD3D PUSH2 0x2E64 JUMP JUMPDEST EQ DUP1 PUSH2 0xD5A JUMPI POP PUSH1 0x2 DUP10 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xD58 JUMPI PUSH2 0xD58 PUSH2 0x2E64 JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x9C8 JUMPI DUP6 PUSH2 0xD18 DUP4 PUSH3 0xF4240 PUSH2 0x2FBC JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xD81 PUSH2 0x2462 JUMP JUMPDEST PUSH2 0xD89 PUSH2 0x249A JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xDAC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29E SWAP1 PUSH2 0x3167 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xDD5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29E SWAP1 PUSH2 0x3196 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x7 SLOAD LT ISZERO PUSH2 0xE4F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742066696E616C697A653A20536F667420636170206E6F74207265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6163686564206F722073616C65206973206F6E676F696E670000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x29E JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xE9E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x105A5C991C9BDC081B9BDD0818DBDB5C1B195D1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29E JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xEB3 PUSH2 0x24CC JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH32 0x9C4B134DA32AAB35252391880A9F2A3C13A760D7817AE8823F2B301D3522045A SWAP1 PUSH1 0x0 SWAP1 LOG2 PUSH2 0xEF6 PUSH1 0x1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x32D4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xA DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xF08 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0xF2A PUSH2 0x27FA JUMP JUMPDEST PUSH2 0xF33 DUP3 PUSH2 0x289F JUMP JUMPDEST PUSH2 0xF3D DUP3 DUP3 PUSH2 0x28A7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF4B PUSH2 0x2964 JUMP JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x32B4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0xF66 PUSH2 0x249A JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xFB1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x105B1C9958591E48119C99595E9959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29E JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH3 0xFF0000 NOT AND PUSH3 0x10000 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xFCC PUSH2 0x249A JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xFEF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29E SWAP1 PUSH2 0x3167 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1018 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29E SWAP1 PUSH2 0x3196 JUMP JUMPDEST TIMESTAMP DUP4 GT PUSH2 0x107C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53746172742074696D65206D7573742062652067726561746572207468616E20 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x63757272656E742074696D65 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x29E JUMP JUMPDEST DUP3 DUP3 GT PUSH2 0x10DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456E642074696D65206D7573742062652067726561746572207468616E207374 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6172742074696D65 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x29E JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD TIMESTAMP GT PUSH2 0x1154 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E65772073616C65206D75737420737461727420616674657220746865206C61 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x73742073616C6520656E6473 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x29E JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x1164 DUP4 PUSH2 0x31B7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP6 DUP2 MSTORE DUP3 DUP5 ADD DUP6 DUP2 MSTORE PUSH1 0x0 PUSH1 0x60 DUP1 DUP7 ADD DUP3 DUP2 MSTORE PUSH1 0x80 DUP8 ADD DUP4 DUP2 MSTORE PUSH1 0x6 DUP1 SLOAD DUP6 MSTORE PUSH1 0xD DUP9 MSTORE SWAP4 DUP10 SWAP1 KECCAK256 SWAP8 MLOAD DUP9 SSTORE SWAP5 MLOAD PUSH1 0x1 DUP9 ADD SSTORE SWAP3 MLOAD PUSH1 0x2 DUP8 ADD SSTORE SWAP2 MLOAD PUSH1 0x3 DUP7 ADD SSTORE SWAP2 MLOAD PUSH1 0x4 SWAP1 SWAP5 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP5 ISZERO ISZERO SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE SLOAD DUP4 MLOAD DUP8 DUP2 MSTORE SWAP2 DUP3 ADD DUP7 SWAP1 MSTORE SWAP3 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x63B43FA153147ADE1DE28ED76841CDBC34E510ED94DD1FF5A88E278B0B1AD9BA SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0x121D PUSH2 0x249A JUMP JUMPDEST PUSH2 0xEF6 PUSH1 0x0 PUSH2 0x29AD JUMP JUMPDEST PUSH2 0x122F PUSH2 0x249A JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x127B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x105B1C9958591E48155B919C99595E9959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29E JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH3 0xFF0000 NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1291 PUSH2 0x2462 JUMP JUMPDEST PUSH2 0x1299 PUSH2 0x249A JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x12BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29E SWAP1 PUSH2 0x3167 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD TIMESTAMP GT PUSH2 0x130E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x53616C65206F6E676F696E67 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29E JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x7 SLOAD LT PUSH2 0x1354 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14DBD99D0818D85C081C995858DA1959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29E JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD SWAP1 PUSH1 0x0 SWAP1 DUP3 GT ISZERO PUSH2 0x1375 JUMPI PUSH2 0x136E PUSH1 0xB DUP4 PUSH2 0x2FF5 JUMP JUMPDEST SWAP1 POP PUSH2 0x1379 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x0 PUSH2 0x1386 PUSH1 0x1 DUP5 PUSH2 0x2FF5 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP2 DUP2 LT PUSH2 0x176C JUMPI PUSH1 0x0 PUSH1 0xA DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x13A5 JUMPI PUSH2 0x13A5 PUSH2 0x31D0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP JUMPDEST PUSH1 0x3 DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x1715 JUMPI PUSH1 0x0 DUP2 PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x13DF JUMPI PUSH2 0x13DF PUSH2 0x2E64 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP3 POP SWAP1 DUP2 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x140E JUMPI PUSH2 0x140E PUSH2 0x2E64 JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x141F JUMPI PUSH2 0x141F PUSH2 0x2E64 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x170B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1464 JUMPI PUSH2 0x1464 PUSH2 0x2E64 JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1475 JUMPI PUSH2 0x1475 PUSH2 0x2E64 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x149D JUMPI PUSH2 0x149D PUSH2 0x2E64 JUMP JUMPDEST SUB PUSH2 0x153F JUMPI PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x14EF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x14F4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1539 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x109390881C99599D5B990819985A5B1959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29E JUMP JUMPDEST POP PUSH2 0x16C7 JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1553 JUMPI PUSH2 0x1553 PUSH2 0x2E64 JUMP JUMPDEST EQ DUP1 PUSH2 0x1570 JUMPI POP PUSH1 0x2 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x156E JUMPI PUSH2 0x156E PUSH2 0x2E64 JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x1671 JUMPI PUSH1 0x0 PUSH1 0x1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x158B JUMPI PUSH2 0x158B PUSH2 0x2E64 JUMP JUMPDEST EQ PUSH2 0x15A1 JUMPI PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x15AE JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 SWAP3 POP SWAP1 DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1601 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1625 SWAP2 SWAP1 PUSH2 0x31E6 JUMP JUMPDEST PUSH2 0x1539 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537461626C65636F696E20726566756E64206661696C65640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E737570706F72746564207061796D656E74206D6574686F6420666F722072 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x19599D5B99 PUSH1 0xDA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x29E JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x3829AB241648D7348F97E4F77D36451330F2276EA8EEB3428E462012F9699E7 DUP3 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1702 SWAP3 SWAP2 SWAP1 PUSH2 0x3208 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x13BC JUMP JUMPDEST POP PUSH1 0xA DUP1 SLOAD DUP1 PUSH2 0x1727 JUMPI PUSH2 0x1727 PUSH2 0x321C JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 DUP3 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE SWAP1 SWAP2 ADD SWAP1 SWAP2 SSTORE DUP3 SWAP1 SUB PUSH2 0x1759 JUMPI POP PUSH2 0x176C JUMP JUMPDEST POP DUP1 PUSH2 0x1764 DUP2 PUSH2 0x3232 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1389 JUMP JUMPDEST POP PUSH1 0xA SLOAD PUSH1 0x0 SUB PUSH2 0x1785 JUMPI PUSH1 0x9 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST POP POP PUSH2 0xEF6 PUSH1 0x1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x32D4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x17D4 PUSH2 0x2462 JUMP JUMPDEST PUSH2 0x17DC PUSH2 0x249A JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x17FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29E SWAP1 PUSH2 0x3167 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1828 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29E SWAP1 PUSH2 0x3196 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1880 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41697264726F7020616C726561647920636F6D706C6574656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29E JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18CB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18EF SWAP2 SWAP1 PUSH2 0x3249 JUMP JUMPDEST LT ISZERO PUSH2 0x1932 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x496E73756666696369656E742046756E6473 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29E JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD TIMESTAMP GT PUSH2 0x1984 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x53616C65206F6E676F696E67 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29E JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD SWAP1 PUSH1 0x0 SWAP1 DUP3 GT ISZERO PUSH2 0x19A5 JUMPI PUSH2 0x199E PUSH1 0xB DUP4 PUSH2 0x2FF5 JUMP JUMPDEST SWAP1 POP PUSH2 0x19A9 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x0 PUSH2 0x19B6 PUSH1 0x1 DUP5 PUSH2 0x2FF5 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP2 DUP2 LT PUSH2 0x1B7D JUMPI PUSH1 0x0 PUSH1 0xA DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x19D5 JUMPI PUSH2 0x19D5 PUSH2 0x31D0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 DUP4 MSTORE PUSH1 0xF SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP1 ISZERO PUSH2 0x1B59 JUMPI PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD PUSH2 0x1A1F PUSH2 0x179E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP7 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A74 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A98 SWAP2 SWAP1 PUSH2 0x31E6 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x1ADF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x151BDAD95B881D1C985B9CD9995C8819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29E JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD DUP1 PUSH2 0x1AF0 JUMPI PUSH2 0x1AF0 PUSH2 0x321C JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0x9BDCD0CC5503FB9A8DD7311D9617E33108C4B7C8948CC544B16C1FD63C6F475B SWAP1 PUSH2 0x1B4F SWAP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMPDEST DUP3 PUSH1 0x0 SUB PUSH2 0x1B68 JUMPI POP POP PUSH2 0x1B7D JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x1B75 SWAP1 PUSH2 0x3232 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x19B9 JUMP JUMPDEST POP PUSH1 0xA SLOAD PUSH1 0x0 SUB PUSH2 0x1785 JUMPI PUSH1 0x9 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE POP POP PUSH2 0xEF6 PUSH1 0x1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x32D4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1BD3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29E SWAP1 PUSH2 0x3167 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1BFC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29E SWAP1 PUSH2 0x3196 JUMP JUMPDEST PUSH2 0x1C04 PUSH2 0x179E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1C5B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E65722063616E6E6F742062757920746F6B656E73000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29E JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x0 SUB PUSH2 0x1C97 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x24 DUP3 ADD MSTORE PUSH7 0x4E6F2073616C65 PUSH1 0xC8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29E JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1CF5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x14D85B1948185B1C9958591E48199A5B985B1A5E9959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29E JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1D0A JUMPI PUSH2 0x1D0A PUSH2 0x2E64 JUMP JUMPDEST SUB PUSH2 0x1DC9 JUMPI PUSH1 0x0 CALLVALUE GT PUSH2 0x1D5F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656E6420612076616C696420424E4220616D6F756E74000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29E JUMP JUMPDEST PUSH2 0x1D69 DUP4 CALLVALUE PUSH2 0x884 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP3 POP CALLVALUE SWAP2 SWAP1 DUP6 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1D90 JUMPI PUSH2 0x1D90 PUSH2 0x2E64 JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1DA1 JUMPI PUSH2 0x1DA1 PUSH2 0x2E64 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1DBE SWAP2 SWAP1 PUSH2 0x3262 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1FB9 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1DDD JUMPI PUSH2 0x1DDD PUSH2 0x2E64 JUMP JUMPDEST EQ DUP1 PUSH2 0x1DFA JUMPI POP PUSH1 0x2 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1DF8 JUMPI PUSH2 0x1DF8 PUSH2 0x2E64 JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x9C8 JUMPI PUSH1 0x0 DUP3 GT PUSH2 0x1E4F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456E74657220612076616C696420737461626C65636F696E20616D6F756E7400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1E65 JUMPI PUSH2 0x1E65 PUSH2 0x2E64 JUMP JUMPDEST EQ PUSH2 0x1E7B JUMPI PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1E88 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1EDE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F02 SWAP2 SWAP1 PUSH2 0x31E6 JUMP JUMPDEST PUSH2 0x1F4E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537461626C65636F696E207472616E73666572206661696C6564000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29E JUMP JUMPDEST PUSH2 0x1F58 DUP5 DUP5 PUSH2 0x884 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP4 POP DUP5 SWAP2 SWAP1 DUP7 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1F7F JUMPI PUSH2 0x1F7F PUSH2 0x2E64 JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1F90 JUMPI PUSH2 0x1F90 PUSH2 0x2E64 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1FAD SWAP2 SWAP1 PUSH2 0x3262 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1FB9 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x2000 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x125B9D985B1A59081D1BDAD95B88185B5BDD5B9D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29E JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH2 0x2029 SWAP1 DUP5 PUSH2 0x2FBC JUMP JUMPDEST PUSH2 0x2033 SWAP2 SWAP1 PUSH2 0x2FD3 JUMP JUMPDEST SWAP1 POP PUSH1 0x5 SLOAD DUP2 PUSH1 0x7 SLOAD PUSH2 0x2046 SWAP2 SWAP1 PUSH2 0x3262 JUMP JUMPDEST GT ISZERO PUSH2 0x2087 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x12185C990818D85C081C995858DA1959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29E JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x20A6 SWAP1 DUP5 SWAP1 PUSH2 0x3262 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x20BF SWAP2 SWAP1 PUSH2 0x3262 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x6 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x20E8 SWAP1 DUP5 SWAP1 PUSH2 0x3262 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x8 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2101 SWAP2 SWAP1 PUSH2 0x3262 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x215F JUMPI PUSH1 0xA DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x217E SWAP1 DUP5 SWAP1 PUSH2 0x3262 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP6 SWAP2 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x21AF JUMPI PUSH2 0x21AF PUSH2 0x2E64 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x6 SLOAD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 MLOAD CALLER SWAP2 PUSH32 0xDBCEF474A632721725D49E3F35D9DEFE0257100B01D1E4B4B135B14D6FE296E8 SWAP2 PUSH2 0x2200 SWAP2 DUP8 SWAP2 DUP10 SWAP1 DUP12 SWAP1 PUSH2 0x3275 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0x2216 PUSH2 0x249A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2240 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x29E JUMP JUMPDEST PUSH2 0x2249 DUP2 PUSH2 0x29AD JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x2292 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x22AF JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x22BD JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x22DB JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x2305 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0x230E CALLER PUSH2 0x2A1E JUMP JUMPDEST PUSH2 0x2316 PUSH2 0x2A2F JUMP JUMPDEST DUP13 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP10 PUSH1 0x4 DUP2 SWAP1 SSTORE POP DUP9 PUSH1 0x5 DUP2 SWAP1 SSTORE POP DUP12 PUSH1 0xB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP11 PUSH1 0xC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP8 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP7 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x2453 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x32D4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 NOT ADD PUSH2 0x2494 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH2 0x24A3 PUSH2 0x179E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xEF6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x29E JUMP JUMPDEST SELFBALANCE DUP1 ISZERO PUSH2 0x2571 JUMPI PUSH1 0x0 PUSH2 0x24DD PUSH2 0x179E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2527 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x252C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x256F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29E JUMP JUMPDEST POP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x25BA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x25DE SWAP2 SWAP1 PUSH2 0x3249 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x26B3 JUMPI PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x25FF PUSH2 0x179E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x264C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2670 SWAP2 SWAP1 PUSH2 0x31E6 JUMP JUMPDEST PUSH2 0x26B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x1554D115081D1C985B9CD9995C8819985A5B1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29E JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x26FC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2720 SWAP2 SWAP1 PUSH2 0x3249 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x27F5 JUMPI PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x2741 PUSH2 0x179E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x278E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x27B2 SWAP2 SWAP1 PUSH2 0x31E6 JUMP JUMPDEST PUSH2 0x27F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x1554D110C81D1C985B9CD9995C8819985A5B1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29E JUMP JUMPDEST POP POP POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0x2881 JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2875 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x32B4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xEF6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2249 PUSH2 0x249A JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x2901 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x28FE SWAP2 DUP2 ADD SWAP1 PUSH2 0x3249 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2929 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x29E JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x32B4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0x295A JUMPI PUSH1 0x40 MLOAD PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x29E JUMP JUMPDEST PUSH2 0x27F5 DUP4 DUP4 PUSH2 0x2A37 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0xEF6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP3 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x2A26 PUSH2 0x2A8D JUMP JUMPDEST PUSH2 0x2249 DUP2 PUSH2 0x2AD6 JUMP JUMPDEST PUSH2 0xEF6 PUSH2 0x2A8D JUMP JUMPDEST PUSH2 0x2A40 DUP3 PUSH2 0x2ADE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x2A85 JUMPI PUSH2 0x27F5 DUP3 DUP3 PUSH2 0x2B43 JUMP JUMPDEST PUSH2 0xF3D PUSH2 0x2BB9 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0xEF6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2216 PUSH2 0x2A8D JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH1 0x0 SUB PUSH2 0x2B14 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x29E JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x32B4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x2B60 SWAP2 SWAP1 PUSH2 0x3297 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2B9B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2BA0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2BB0 DUP6 DUP4 DUP4 PUSH2 0x2BD8 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0xEF6 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x2BED JUMPI PUSH2 0x2BE8 DUP3 PUSH2 0x2C37 JUMP JUMPDEST PUSH2 0x2C30 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x2C04 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x2C2D JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x29E JUMP JUMPDEST POP DUP1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x2C47 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD6BDA275 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0xBA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2C82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C8B DUP4 PUSH2 0x2C60 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C30 DUP3 PUSH2 0x2C60 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2D0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2D16 DUP2 PUSH2 0x2CCD JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x2D43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D5D JUMPI PUSH2 0x2D5D PUSH2 0x2CE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x2D8C JUMPI PUSH2 0x2D8C PUSH2 0x2CE2 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 ADD PUSH1 0x20 ADD DUP8 LT ISZERO PUSH2 0x2DA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP4 DUP4 ADD ADD MSTORE DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2DD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2E0B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2DF3 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2E33 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x2DF0 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2C30 DUP2 PUSH2 0x2CCD JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x2E98 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0xA38 DUP3 DUP5 PUSH2 0x2E7A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2EBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2EC8 DUP2 PUSH2 0x2CCD JUMP JUMPDEST SWAP2 POP PUSH2 0x2ED6 PUSH1 0x20 DUP5 ADD PUSH2 0x2C60 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x2EFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 CALLDATALOAD PUSH2 0x2F07 DUP2 PUSH2 0x2CCD JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD PUSH2 0x2F17 DUP2 PUSH2 0x2CCD JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH2 0x2F27 DUP2 PUSH2 0x2CCD JUMP JUMPDEST SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD SWAP4 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD PUSH2 0x2F45 DUP2 PUSH2 0x2CCD JUMP JUMPDEST SWAP3 POP PUSH1 0xC0 DUP10 ADD CALLDATALOAD PUSH2 0x2F55 DUP2 PUSH2 0x2CCD JUMP JUMPDEST SWAP2 POP PUSH1 0xE0 DUP10 ADD CALLDATALOAD PUSH2 0x2F65 DUP2 PUSH2 0x2CCD JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL PUSH1 0x0 DUP3 SLT PUSH1 0x1 PUSH1 0xFF SHL DUP5 EQ AND ISZERO PUSH2 0x2FA8 JUMPI PUSH2 0x2FA8 PUSH2 0x2F76 JUMP JUMPDEST DUP2 DUP2 SDIV DUP4 EQ DUP3 ISZERO OR PUSH2 0xA38 JUMPI PUSH2 0xA38 PUSH2 0x2F76 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xA38 JUMPI PUSH2 0xA38 PUSH2 0x2F76 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2FF0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xA38 JUMPI PUSH2 0xA38 PUSH2 0x2F76 JUMP JUMPDEST PUSH1 0x1 DUP2 JUMPDEST PUSH1 0x1 DUP5 GT ISZERO PUSH2 0x3043 JUMPI DUP1 DUP6 DIV DUP2 GT ISZERO PUSH2 0x3027 JUMPI PUSH2 0x3027 PUSH2 0x2F76 JUMP JUMPDEST PUSH1 0x1 DUP5 AND ISZERO PUSH2 0x3035 JUMPI SWAP1 DUP2 MUL SWAP1 JUMPDEST PUSH1 0x1 SWAP4 SWAP1 SWAP4 SHR SWAP3 DUP1 MUL PUSH2 0x300C JUMP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x305A JUMPI POP PUSH1 0x1 PUSH2 0xA38 JUMP JUMPDEST DUP2 PUSH2 0x3067 JUMPI POP PUSH1 0x0 PUSH2 0xA38 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x307D JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x3087 JUMPI PUSH2 0x30A3 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xA38 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x3098 JUMPI PUSH2 0x3098 PUSH2 0x2F76 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0xA38 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x30C6 JUMPI POP DUP2 DUP2 EXP PUSH2 0xA38 JUMP JUMPDEST PUSH2 0x30D3 PUSH1 0x0 NOT DUP5 DUP5 PUSH2 0x3008 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x30E7 JUMPI PUSH2 0x30E7 PUSH2 0x2F76 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C30 DUP4 DUP4 PUSH2 0x304B JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xBA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x312D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3136 DUP7 PUSH2 0x30FB JUMP JUMPDEST PUSH1 0x20 DUP8 ADD MLOAD PUSH1 0x40 DUP9 ADD MLOAD PUSH1 0x60 DUP10 ADD MLOAD SWAP3 SWAP8 POP SWAP1 SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0x315B PUSH1 0x80 DUP8 ADD PUSH2 0x30FB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x1250D3C8185B1C9958591E48199A5B985B1A5E9959 PUSH1 0x5A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x7 SWAP1 DUP3 ADD MSTORE PUSH7 0x199C99595E9959 PUSH1 0xCA SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x31C9 JUMPI PUSH2 0x31C9 PUSH2 0x2F76 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x31F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2C30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 DUP2 ADD PUSH2 0x2C30 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2E7A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x3241 JUMPI PUSH2 0x3241 PUSH2 0x2F76 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x325B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xA38 JUMPI PUSH2 0xA38 PUSH2 0x2F76 JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD PUSH2 0x2BB0 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2E7A JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x32A9 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x2DF0 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC9B779B17422D0DF9222301 DUP12 ORIGIN 0xB4 0xD1 STATICCALL CHAINID 0xE0 PUSH18 0x723D6817E2486D003BECC55F00A264697066 PUSH20 0x58221220DC5B9644602B5DA834F3DD21D5C9D0CC MCOPY RETURNDATASIZE PUSH27 0x96D8538E314A4535F3DDB49AC664736F6C634300081A0033000000 ",
							"sourceMap": "429:16467:14:-:0;;;1171:4:3;1128:48;;429:16467:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@UPGRADE_INTERFACE_VERSION_518": {
									"entryPoint": null,
									"id": 518,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_3006": {
									"entryPoint": null,
									"id": 3006,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Ownable_init_100": {
									"entryPoint": 10782,
									"id": 100,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_127": {
									"entryPoint": 10966,
									"id": 127,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__UUPSUpgradeable_init_548": {
									"entryPoint": 10799,
									"id": 548,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_authorizeUpgrade_3092": {
									"entryPoint": 10399,
									"id": 3092,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkInitializing_416": {
									"entryPoint": 10893,
									"id": 416,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkNonPayable_1175": {
									"entryPoint": 11193,
									"id": 1175,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkNotDelegated_624": {
									"entryPoint": 10596,
									"id": 624,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_168": {
									"entryPoint": 9370,
									"id": 168,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkProxy_608": {
									"entryPoint": 10234,
									"id": 608,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getInitializableStorage_493": {
									"entryPoint": null,
									"id": 493,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getOwnableStorage_71": {
									"entryPoint": null,
									"id": 71,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getPriceFeed_1987": {
									"entryPoint": 2622,
									"id": 1987,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_getReentrancyGuardStorage_750": {
									"entryPoint": null,
									"id": 750,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_isInitializing_484": {
									"entryPoint": null,
									"id": 484,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_704": {
									"entryPoint": null,
									"id": 704,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_832": {
									"entryPoint": null,
									"id": 832,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_816": {
									"entryPoint": 9314,
									"id": 816,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revert_1522": {
									"entryPoint": 11319,
									"id": 1522,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setImplementation_955": {
									"entryPoint": 10974,
									"id": 955,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferFundsToOwner_2664": {
									"entryPoint": 9420,
									"id": 2664,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_239": {
									"entryPoint": 10669,
									"id": 239,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_upgradeToAndCallUUPS_675": {
									"entryPoint": 10407,
									"id": 675,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@airdropTokens_2798": {
									"entryPoint": 6092,
									"id": 2798,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@buyTokens_2536": {
									"entryPoint": 7088,
									"id": 2536,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@calculatePaymentAmount_2303": {
									"entryPoint": 2983,
									"id": 2303,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@calculateTokenAmount_2180": {
									"entryPoint": 2180,
									"id": 2180,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@contributionsInUSD_1747": {
									"entryPoint": null,
									"id": 1747,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@createSale_2049": {
									"entryPoint": 4036,
									"id": 2049,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@finalizeICO_2571": {
									"entryPoint": 3449,
									"id": 2571,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@freeze_1916": {
									"entryPoint": 3934,
									"id": 1916,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@functionDelegateCall_1440": {
									"entryPoint": 11075,
									"id": 1440,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getAddressSlot_1580": {
									"entryPoint": null,
									"id": 1580,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getCurrentSaleId_3014": {
									"entryPoint": null,
									"id": 3014,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getHardCapReached_3070": {
									"entryPoint": null,
									"id": 3070,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getImplementation_928": {
									"entryPoint": null,
									"id": 928,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getInvestorCount_3083": {
									"entryPoint": null,
									"id": 3083,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getLatestSaleEndTime_3025": {
									"entryPoint": null,
									"id": 3025,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getSaleStartEndTime_3048": {
									"entryPoint": null,
									"id": 3048,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@getSoftCapReached_3059": {
									"entryPoint": null,
									"id": 3059,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hardCapInUSD_1713": {
									"entryPoint": null,
									"id": 1713,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@initialize_1880": {
									"entryPoint": 8780,
									"id": 1880,
									"parameterSlots": 8,
									"returnSlots": 0
								},
								"@initiateRefund_2998": {
									"entryPoint": 4745,
									"id": 2998,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@investorPayments_1763": {
									"entryPoint": null,
									"id": 1763,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@investors_1734": {
									"entryPoint": 3832,
									"id": 1734,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isFreezed_1731": {
									"entryPoint": null,
									"id": 1731,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isICOFinalized_1727": {
									"entryPoint": null,
									"id": 1727,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isTokensAirdropped_1729": {
									"entryPoint": null,
									"id": 1729,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_151": {
									"entryPoint": 6046,
									"id": 151,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@paymentMethodForInvestor_1756": {
									"entryPoint": null,
									"id": 1756,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@priceFeedBNB_1685": {
									"entryPoint": null,
									"id": 1685,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@priceFeedUSDC_1691": {
									"entryPoint": null,
									"id": 1691,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@priceFeedUSDT_1688": {
									"entryPoint": null,
									"id": 1688,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@proxiableUUID_566": {
									"entryPoint": 3905,
									"id": 566,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_182": {
									"entryPoint": 4629,
									"id": 182,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@saleCount_1715": {
									"entryPoint": null,
									"id": 1715,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sales_1743": {
									"entryPoint": null,
									"id": 1743,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@softCapInUSD_1711": {
									"entryPoint": null,
									"id": 1711,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@token_1709": {
									"entryPoint": null,
									"id": 1709,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokensBoughtByInvestor_1751": {
									"entryPoint": null,
									"id": 1751,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalFundsRaisedUSD_1717": {
									"entryPoint": null,
									"id": 1717,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalTokensSold_1719": {
									"entryPoint": null,
									"id": 1719,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_210": {
									"entryPoint": 8718,
									"id": 210,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unFreeze_1931": {
									"entryPoint": 4647,
									"id": 1931,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@upgradeToAndCall_586": {
									"entryPoint": 3874,
									"id": 586,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@upgradeToAndCall_991": {
									"entryPoint": 10807,
									"id": 991,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@usdc_1738": {
									"entryPoint": null,
									"id": 1738,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@usdt_1736": {
									"entryPoint": null,
									"id": 1736,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_1480": {
									"entryPoint": 11224,
									"id": 1480,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_enum_PaymentMethod": {
									"entryPoint": 11360,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 11847,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_bytes_memory_ptr": {
									"entryPoint": 11512,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_enum$_PaymentMethod_$1706": {
									"entryPoint": 11946,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 12774,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32_fromMemory": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$1264t_addresst_addresst_uint256t_uint256t_addresst_addresst_address": {
									"entryPoint": 11999,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 8
								},
								"abi_decode_tuple_t_enum$_PaymentMethod_$1706": {
									"entryPoint": 11417,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_enum$_PaymentMethod_$1706t_uint256": {
									"entryPoint": 11375,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 11444,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 12873,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256": {
									"entryPoint": 11716,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory": {
									"entryPoint": 12565,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_uint80_fromMemory": {
									"entryPoint": 12539,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_enum_PaymentMethod": {
									"entryPoint": 11898,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 12951,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_AggregatorV3Interface_$45__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$1264__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_enum$_PaymentMethod_$1706__to_t_uint8__fromStack_reversed": {
									"entryPoint": 11932,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11796,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_032fb3428477d66798bdf7801f58a252d723dc1362b9dfac5726f85f81cca815__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_17550aa7e27a420bf678ad118b2de30f8f99747e4dbc150a39e97cdeb8fb8119__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1a4430203dcf8abbbd3446dbfc36d404c15a36b152eee41d8f82843f3bcf306f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_20a9374871eda95a21489d37b12097781d38e0ea68a5e5d037a1b2c3ea6a8c04__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_35194372afc15163c58aa5af5530ba0e7f2576a9d985e6f8d166066860d6966a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_37095db391cf553f65f0eddf201a3c7bc5118c1120fca6827815be26758eff4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4c76e179fd3981278de294ff97a7ccb030d7577d0e7f55ac3f87e02e3abaa726__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_51e395ccdea9060dec5fa8fca2f2563cffa61f9f6f61f3f9c9b3895fa879ed58__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_52e3d128a4ea4439173e3f4b78f0e12548c2c4449a80c4b2fbefb1fd3e6a7665__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5e1a07520dc062ba4ff449fce67822fde8495347c7d50898a83b1dfb63596097__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12694,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6074d909f1c7eb2393bdf1029d0b7e2b2329445b551a02e61050a4a408023785__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_745b7c27209a9df0afa3e1a0af6f3a48dc087e43ee7b30261a0fc4b9578e75a7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7c68e13a7a3bf736cdb65f14ebef38f840872b490e156aead879b05f23b99d80__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_825884e5cff514634aaaba9e58516f6d797b9a08503c5bf1af68f19c16208f73__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9061bb5d1762fde4c9d1190b8ce0bd989de0debb196be3c053155f36b52a6ce0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_96b145fdc05e3ce6aa7fad5e89550d457f70c47d1f8d674ad654a917590143f7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a1853a89cde833d839c669d1204571d26b8c616e74d14665150a1c9f7535c8f5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a7a44f673ae2e9df66fb923331ae1450d004d9638562a05cc232389560dd7c4d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_aff7558382c088943ad2bf11af33e010b3e0eab9fe7e943d464ecefccf0c4c65__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_badbb5a205346d66e56ea98c8f2b97ccc2298baa0d8bcc43f8c5fabbf405c834__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c07dacc766697a4a5558e08455451d0672777bb5104aed3615bc1964c00cc795__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c4187a1289740d8ffce3bb99c104d1df31ca9848a3a5aafe5f4d5ecd5e91ee9b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c62da71e519c5f2bf89b59327b7f977696c4a0042adb3aafb9f068ba780f8ac7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c84bd9c4652ced38c134ab47300145495de9d5aff68e1b658cc1dca99fef7eb7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d894807d07a4878944df72000c35a26fc670b7c15dedc34156876b2464e1fd23__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12647,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_dbf071520f0a95e05bb16da9ebcd49bf0ac91e963647b14497245101e3db79a3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e1a05a85d6c11679f33a730fbeebefa1f4b9de0998aad7aecca4e9ec70fa59da__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ed7f84a1977812752f8d634cbdcf2a56f893383408b8dd546c270e5d913f5d28__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f6ac058ffe09b3bbdfae8372cf9a39f7a49f0de9dc3487048e08f88e8c7cd81d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_enum$_PaymentMethod_$1706__to_t_uint256_t_uint8__fromStack_reversed": {
									"entryPoint": 12808,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_enum$_PaymentMethod_$1706__to_t_uint256_t_uint256_t_uint256_t_uint8__fromStack_reversed": {
									"entryPoint": 12917,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 12898,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 12243,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 12296,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint256": {
									"entryPoint": 12527,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 12363,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_int256": {
									"entryPoint": 12172,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 12220,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 12277,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 11760,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 12850,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 12727,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 12150,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 11876,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 12828,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 12752,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 11490,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 11469,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:26760:15",
										"nodeType": "YulBlock",
										"src": "0:26760:15",
										"statements": [
											{
												"nativeSrc": "6:3:15",
												"nodeType": "YulBlock",
												"src": "6:3:15",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "188:182:15",
													"nodeType": "YulBlock",
													"src": "188:182:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "205:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "205:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "216:2:15",
																		"nodeType": "YulLiteral",
																		"src": "216:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "198:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "198:6:15"
																},
																"nativeSrc": "198:21:15",
																"nodeType": "YulFunctionCall",
																"src": "198:21:15"
															},
															"nativeSrc": "198:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "198:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "239:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "239:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "250:2:15",
																				"nodeType": "YulLiteral",
																				"src": "250:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "235:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:15"
																		},
																		"nativeSrc": "235:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "235:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "255:2:15",
																		"nodeType": "YulLiteral",
																		"src": "255:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "228:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "228:6:15"
																},
																"nativeSrc": "228:30:15",
																"nodeType": "YulFunctionCall",
																"src": "228:30:15"
															},
															"nativeSrc": "228:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "228:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "278:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "278:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "289:2:15",
																				"nodeType": "YulLiteral",
																				"src": "289:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "274:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "274:3:15"
																		},
																		"nativeSrc": "274:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "274:18:15"
																	},
																	{
																		"hexValue": "44697265637420424e42207472616e7366657273206e6f7420616c6c6f776564",
																		"kind": "string",
																		"nativeSrc": "294:34:15",
																		"nodeType": "YulLiteral",
																		"src": "294:34:15",
																		"type": "",
																		"value": "Direct BNB transfers not allowed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "267:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "267:6:15"
																},
																"nativeSrc": "267:62:15",
																"nodeType": "YulFunctionCall",
																"src": "267:62:15"
															},
															"nativeSrc": "267:62:15",
															"nodeType": "YulExpressionStatement",
															"src": "267:62:15"
														},
														{
															"nativeSrc": "338:26:15",
															"nodeType": "YulAssignment",
															"src": "338:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "350:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "350:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "361:2:15",
																		"nodeType": "YulLiteral",
																		"src": "361:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "346:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "346:3:15"
																},
																"nativeSrc": "346:18:15",
																"nodeType": "YulFunctionCall",
																"src": "346:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "338:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "338:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_17550aa7e27a420bf678ad118b2de30f8f99747e4dbc150a39e97cdeb8fb8119__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:356:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "165:9:15",
														"nodeType": "YulTypedName",
														"src": "165:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "179:4:15",
														"nodeType": "YulTypedName",
														"src": "179:4:15",
														"type": ""
													}
												],
												"src": "14:356:15"
											},
											{
												"body": {
													"nativeSrc": "435:94:15",
													"nodeType": "YulBlock",
													"src": "435:94:15",
													"statements": [
														{
															"nativeSrc": "445:29:15",
															"nodeType": "YulAssignment",
															"src": "445:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "467:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "467:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "454:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "454:12:15"
																},
																"nativeSrc": "454:20:15",
																"nodeType": "YulFunctionCall",
																"src": "454:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "445:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "445:5:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "507:16:15",
																"nodeType": "YulBlock",
																"src": "507:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "516:1:15",
																					"nodeType": "YulLiteral",
																					"src": "516:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "519:1:15",
																					"nodeType": "YulLiteral",
																					"src": "519:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "509:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "509:6:15"
																			},
																			"nativeSrc": "509:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "509:12:15"
																		},
																		"nativeSrc": "509:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "509:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "496:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "496:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "503:1:15",
																				"nodeType": "YulLiteral",
																				"src": "503:1:15",
																				"type": "",
																				"value": "3"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "493:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "493:2:15"
																		},
																		"nativeSrc": "493:12:15",
																		"nodeType": "YulFunctionCall",
																		"src": "493:12:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "486:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "486:6:15"
																},
																"nativeSrc": "486:20:15",
																"nodeType": "YulFunctionCall",
																"src": "486:20:15"
															},
															"nativeSrc": "483:40:15",
															"nodeType": "YulIf",
															"src": "483:40:15"
														}
													]
												},
												"name": "abi_decode_enum_PaymentMethod",
												"nativeSrc": "375:154:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "414:6:15",
														"nodeType": "YulTypedName",
														"src": "414:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "425:5:15",
														"nodeType": "YulTypedName",
														"src": "425:5:15",
														"type": ""
													}
												],
												"src": "375:154:15"
											},
											{
												"body": {
													"nativeSrc": "639:224:15",
													"nodeType": "YulBlock",
													"src": "639:224:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "685:16:15",
																"nodeType": "YulBlock",
																"src": "685:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "694:1:15",
																					"nodeType": "YulLiteral",
																					"src": "694:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "697:1:15",
																					"nodeType": "YulLiteral",
																					"src": "697:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "687:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "687:6:15"
																			},
																			"nativeSrc": "687:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "687:12:15"
																		},
																		"nativeSrc": "687:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "687:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "660:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "660:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "669:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "669:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "656:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "656:3:15"
																		},
																		"nativeSrc": "656:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "656:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "681:2:15",
																		"nodeType": "YulLiteral",
																		"src": "681:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "652:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "652:3:15"
																},
																"nativeSrc": "652:32:15",
																"nodeType": "YulFunctionCall",
																"src": "652:32:15"
															},
															"nativeSrc": "649:52:15",
															"nodeType": "YulIf",
															"src": "649:52:15"
														},
														{
															"nativeSrc": "710:50:15",
															"nodeType": "YulAssignment",
															"src": "710:50:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "750:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "750:9:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_enum_PaymentMethod",
																	"nativeSrc": "720:29:15",
																	"nodeType": "YulIdentifier",
																	"src": "720:29:15"
																},
																"nativeSrc": "720:40:15",
																"nodeType": "YulFunctionCall",
																"src": "720:40:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "710:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "710:6:15"
																}
															]
														},
														{
															"nativeSrc": "769:14:15",
															"nodeType": "YulVariableDeclaration",
															"src": "769:14:15",
															"value": {
																"kind": "number",
																"nativeSrc": "782:1:15",
																"nodeType": "YulLiteral",
																"src": "782:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "773:5:15",
																	"nodeType": "YulTypedName",
																	"src": "773:5:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "792:41:15",
															"nodeType": "YulAssignment",
															"src": "792:41:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "818:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "818:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "829:2:15",
																				"nodeType": "YulLiteral",
																				"src": "829:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "814:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "814:3:15"
																		},
																		"nativeSrc": "814:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "814:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "801:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "801:12:15"
																},
																"nativeSrc": "801:32:15",
																"nodeType": "YulFunctionCall",
																"src": "801:32:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "792:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "792:5:15"
																}
															]
														},
														{
															"nativeSrc": "842:15:15",
															"nodeType": "YulAssignment",
															"src": "842:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "852:5:15",
																"nodeType": "YulIdentifier",
																"src": "852:5:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "842:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "842:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_enum$_PaymentMethod_$1706t_uint256",
												"nativeSrc": "534:329:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "597:9:15",
														"nodeType": "YulTypedName",
														"src": "597:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "608:7:15",
														"nodeType": "YulTypedName",
														"src": "608:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "620:6:15",
														"nodeType": "YulTypedName",
														"src": "620:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "628:6:15",
														"nodeType": "YulTypedName",
														"src": "628:6:15",
														"type": ""
													}
												],
												"src": "534:329:15"
											},
											{
												"body": {
													"nativeSrc": "969:76:15",
													"nodeType": "YulBlock",
													"src": "969:76:15",
													"statements": [
														{
															"nativeSrc": "979:26:15",
															"nodeType": "YulAssignment",
															"src": "979:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "991:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "991:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1002:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1002:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "987:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "987:3:15"
																},
																"nativeSrc": "987:18:15",
																"nodeType": "YulFunctionCall",
																"src": "987:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "979:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "979:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1021:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "1021:9:15"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1032:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1032:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1014:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1014:6:15"
																},
																"nativeSrc": "1014:25:15",
																"nodeType": "YulFunctionCall",
																"src": "1014:25:15"
															},
															"nativeSrc": "1014:25:15",
															"nodeType": "YulExpressionStatement",
															"src": "1014:25:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "868:177:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "938:9:15",
														"nodeType": "YulTypedName",
														"src": "938:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "949:6:15",
														"nodeType": "YulTypedName",
														"src": "949:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "960:4:15",
														"nodeType": "YulTypedName",
														"src": "960:4:15",
														"type": ""
													}
												],
												"src": "868:177:15"
											},
											{
												"body": {
													"nativeSrc": "1145:92:15",
													"nodeType": "YulBlock",
													"src": "1145:92:15",
													"statements": [
														{
															"nativeSrc": "1155:26:15",
															"nodeType": "YulAssignment",
															"src": "1155:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1167:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "1167:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1178:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1178:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1163:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1163:3:15"
																},
																"nativeSrc": "1163:18:15",
																"nodeType": "YulFunctionCall",
																"src": "1163:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1155:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "1155:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1197:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "1197:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1222:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "1222:6:15"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1215:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "1215:6:15"
																				},
																				"nativeSrc": "1215:14:15",
																				"nodeType": "YulFunctionCall",
																				"src": "1215:14:15"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1208:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "1208:6:15"
																		},
																		"nativeSrc": "1208:22:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1208:22:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1190:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1190:6:15"
																},
																"nativeSrc": "1190:41:15",
																"nodeType": "YulFunctionCall",
																"src": "1190:41:15"
															},
															"nativeSrc": "1190:41:15",
															"nodeType": "YulExpressionStatement",
															"src": "1190:41:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1050:187:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1114:9:15",
														"nodeType": "YulTypedName",
														"src": "1114:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1125:6:15",
														"nodeType": "YulTypedName",
														"src": "1125:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1136:4:15",
														"nodeType": "YulTypedName",
														"src": "1136:4:15",
														"type": ""
													}
												],
												"src": "1050:187:15"
											},
											{
												"body": {
													"nativeSrc": "1330:127:15",
													"nodeType": "YulBlock",
													"src": "1330:127:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "1376:16:15",
																"nodeType": "YulBlock",
																"src": "1376:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1385:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1385:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1388:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1388:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1378:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1378:6:15"
																			},
																			"nativeSrc": "1378:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1378:12:15"
																		},
																		"nativeSrc": "1378:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "1378:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1351:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "1351:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1360:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "1360:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1347:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1347:3:15"
																		},
																		"nativeSrc": "1347:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1347:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1372:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1372:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1343:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1343:3:15"
																},
																"nativeSrc": "1343:32:15",
																"nodeType": "YulFunctionCall",
																"src": "1343:32:15"
															},
															"nativeSrc": "1340:52:15",
															"nodeType": "YulIf",
															"src": "1340:52:15"
														},
														{
															"nativeSrc": "1401:50:15",
															"nodeType": "YulAssignment",
															"src": "1401:50:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1441:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "1441:9:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_enum_PaymentMethod",
																	"nativeSrc": "1411:29:15",
																	"nodeType": "YulIdentifier",
																	"src": "1411:29:15"
																},
																"nativeSrc": "1411:40:15",
																"nodeType": "YulFunctionCall",
																"src": "1411:40:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1401:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1401:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_enum$_PaymentMethod_$1706",
												"nativeSrc": "1242:215:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1296:9:15",
														"nodeType": "YulTypedName",
														"src": "1296:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1307:7:15",
														"nodeType": "YulTypedName",
														"src": "1307:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1319:6:15",
														"nodeType": "YulTypedName",
														"src": "1319:6:15",
														"type": ""
													}
												],
												"src": "1242:215:15"
											},
											{
												"body": {
													"nativeSrc": "1561:76:15",
													"nodeType": "YulBlock",
													"src": "1561:76:15",
													"statements": [
														{
															"nativeSrc": "1571:26:15",
															"nodeType": "YulAssignment",
															"src": "1571:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1583:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "1583:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1594:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1594:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1579:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1579:3:15"
																},
																"nativeSrc": "1579:18:15",
																"nodeType": "YulFunctionCall",
																"src": "1579:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1571:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "1571:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1613:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "1613:9:15"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1624:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1624:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1606:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1606:6:15"
																},
																"nativeSrc": "1606:25:15",
																"nodeType": "YulFunctionCall",
																"src": "1606:25:15"
															},
															"nativeSrc": "1606:25:15",
															"nodeType": "YulExpressionStatement",
															"src": "1606:25:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed",
												"nativeSrc": "1462:175:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1530:9:15",
														"nodeType": "YulTypedName",
														"src": "1530:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1541:6:15",
														"nodeType": "YulTypedName",
														"src": "1541:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1552:4:15",
														"nodeType": "YulTypedName",
														"src": "1552:4:15",
														"type": ""
													}
												],
												"src": "1462:175:15"
											},
											{
												"body": {
													"nativeSrc": "1743:102:15",
													"nodeType": "YulBlock",
													"src": "1743:102:15",
													"statements": [
														{
															"nativeSrc": "1753:26:15",
															"nodeType": "YulAssignment",
															"src": "1753:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1765:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "1765:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1776:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1776:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1761:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1761:3:15"
																},
																"nativeSrc": "1761:18:15",
																"nodeType": "YulFunctionCall",
																"src": "1761:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1753:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "1753:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1795:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "1795:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1810:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1810:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1826:3:15",
																								"nodeType": "YulLiteral",
																								"src": "1826:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1831:1:15",
																								"nodeType": "YulLiteral",
																								"src": "1831:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1822:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "1822:3:15"
																						},
																						"nativeSrc": "1822:11:15",
																						"nodeType": "YulFunctionCall",
																						"src": "1822:11:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1835:1:15",
																						"nodeType": "YulLiteral",
																						"src": "1835:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1818:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "1818:3:15"
																				},
																				"nativeSrc": "1818:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "1818:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1806:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1806:3:15"
																		},
																		"nativeSrc": "1806:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1806:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1788:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1788:6:15"
																},
																"nativeSrc": "1788:51:15",
																"nodeType": "YulFunctionCall",
																"src": "1788:51:15"
															},
															"nativeSrc": "1788:51:15",
															"nodeType": "YulExpressionStatement",
															"src": "1788:51:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1642:203:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1712:9:15",
														"nodeType": "YulTypedName",
														"src": "1712:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1723:6:15",
														"nodeType": "YulTypedName",
														"src": "1723:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1734:4:15",
														"nodeType": "YulTypedName",
														"src": "1734:4:15",
														"type": ""
													}
												],
												"src": "1642:203:15"
											},
											{
												"body": {
													"nativeSrc": "1920:156:15",
													"nodeType": "YulBlock",
													"src": "1920:156:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "1966:16:15",
																"nodeType": "YulBlock",
																"src": "1966:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1975:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1975:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1978:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1978:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1968:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1968:6:15"
																			},
																			"nativeSrc": "1968:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1968:12:15"
																		},
																		"nativeSrc": "1968:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "1968:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1941:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "1941:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1950:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "1950:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1937:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1937:3:15"
																		},
																		"nativeSrc": "1937:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1937:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1962:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1962:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1933:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1933:3:15"
																},
																"nativeSrc": "1933:32:15",
																"nodeType": "YulFunctionCall",
																"src": "1933:32:15"
															},
															"nativeSrc": "1930:52:15",
															"nodeType": "YulIf",
															"src": "1930:52:15"
														},
														{
															"nativeSrc": "1991:14:15",
															"nodeType": "YulVariableDeclaration",
															"src": "1991:14:15",
															"value": {
																"kind": "number",
																"nativeSrc": "2004:1:15",
																"nodeType": "YulLiteral",
																"src": "2004:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1995:5:15",
																	"nodeType": "YulTypedName",
																	"src": "1995:5:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2014:32:15",
															"nodeType": "YulAssignment",
															"src": "2014:32:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2036:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "2036:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2023:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "2023:12:15"
																},
																"nativeSrc": "2023:23:15",
																"nodeType": "YulFunctionCall",
																"src": "2023:23:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2014:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "2014:5:15"
																}
															]
														},
														{
															"nativeSrc": "2055:15:15",
															"nodeType": "YulAssignment",
															"src": "2055:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "2065:5:15",
																"nodeType": "YulIdentifier",
																"src": "2065:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2055:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2055:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1850:226:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1886:9:15",
														"nodeType": "YulTypedName",
														"src": "1886:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1897:7:15",
														"nodeType": "YulTypedName",
														"src": "1897:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1909:6:15",
														"nodeType": "YulTypedName",
														"src": "1909:6:15",
														"type": ""
													}
												],
												"src": "1850:226:15"
											},
											{
												"body": {
													"nativeSrc": "2126:86:15",
													"nodeType": "YulBlock",
													"src": "2126:86:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "2190:16:15",
																"nodeType": "YulBlock",
																"src": "2190:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2199:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2199:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2202:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2202:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2192:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "2192:6:15"
																			},
																			"nativeSrc": "2192:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2192:12:15"
																		},
																		"nativeSrc": "2192:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "2192:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2149:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "2149:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2160:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "2160:5:15"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2175:3:15",
																										"nodeType": "YulLiteral",
																										"src": "2175:3:15",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2180:1:15",
																										"nodeType": "YulLiteral",
																										"src": "2180:1:15",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "2171:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "2171:3:15"
																								},
																								"nativeSrc": "2171:11:15",
																								"nodeType": "YulFunctionCall",
																								"src": "2171:11:15"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2184:1:15",
																								"nodeType": "YulLiteral",
																								"src": "2184:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "2167:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "2167:3:15"
																						},
																						"nativeSrc": "2167:19:15",
																						"nodeType": "YulFunctionCall",
																						"src": "2167:19:15"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "2156:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "2156:3:15"
																				},
																				"nativeSrc": "2156:31:15",
																				"nodeType": "YulFunctionCall",
																				"src": "2156:31:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2146:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "2146:2:15"
																		},
																		"nativeSrc": "2146:42:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2146:42:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2139:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2139:6:15"
																},
																"nativeSrc": "2139:50:15",
																"nodeType": "YulFunctionCall",
																"src": "2139:50:15"
															},
															"nativeSrc": "2136:70:15",
															"nodeType": "YulIf",
															"src": "2136:70:15"
														}
													]
												},
												"name": "validator_revert_address",
												"nativeSrc": "2081:131:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2115:5:15",
														"nodeType": "YulTypedName",
														"src": "2115:5:15",
														"type": ""
													}
												],
												"src": "2081:131:15"
											},
											{
												"body": {
													"nativeSrc": "2249:95:15",
													"nodeType": "YulBlock",
													"src": "2249:95:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2266:1:15",
																		"nodeType": "YulLiteral",
																		"src": "2266:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2273:3:15",
																				"nodeType": "YulLiteral",
																				"src": "2273:3:15",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2278:10:15",
																				"nodeType": "YulLiteral",
																				"src": "2278:10:15",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2269:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2269:3:15"
																		},
																		"nativeSrc": "2269:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2269:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2259:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2259:6:15"
																},
																"nativeSrc": "2259:31:15",
																"nodeType": "YulFunctionCall",
																"src": "2259:31:15"
															},
															"nativeSrc": "2259:31:15",
															"nodeType": "YulExpressionStatement",
															"src": "2259:31:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2306:1:15",
																		"nodeType": "YulLiteral",
																		"src": "2306:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2309:4:15",
																		"nodeType": "YulLiteral",
																		"src": "2309:4:15",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2299:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2299:6:15"
																},
																"nativeSrc": "2299:15:15",
																"nodeType": "YulFunctionCall",
																"src": "2299:15:15"
															},
															"nativeSrc": "2299:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "2299:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2330:1:15",
																		"nodeType": "YulLiteral",
																		"src": "2330:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2333:4:15",
																		"nodeType": "YulLiteral",
																		"src": "2333:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2323:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2323:6:15"
																},
																"nativeSrc": "2323:15:15",
																"nodeType": "YulFunctionCall",
																"src": "2323:15:15"
															},
															"nativeSrc": "2323:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "2323:15:15"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "2217:127:15",
												"nodeType": "YulFunctionDefinition",
												"src": "2217:127:15"
											},
											{
												"body": {
													"nativeSrc": "2445:983:15",
													"nodeType": "YulBlock",
													"src": "2445:983:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "2491:16:15",
																"nodeType": "YulBlock",
																"src": "2491:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2500:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2500:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2503:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2503:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2493:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "2493:6:15"
																			},
																			"nativeSrc": "2493:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2493:12:15"
																		},
																		"nativeSrc": "2493:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "2493:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2466:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "2466:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2475:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "2475:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2462:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2462:3:15"
																		},
																		"nativeSrc": "2462:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2462:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2487:2:15",
																		"nodeType": "YulLiteral",
																		"src": "2487:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2458:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2458:3:15"
																},
																"nativeSrc": "2458:32:15",
																"nodeType": "YulFunctionCall",
																"src": "2458:32:15"
															},
															"nativeSrc": "2455:52:15",
															"nodeType": "YulIf",
															"src": "2455:52:15"
														},
														{
															"nativeSrc": "2516:36:15",
															"nodeType": "YulVariableDeclaration",
															"src": "2516:36:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2542:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "2542:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2529:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "2529:12:15"
																},
																"nativeSrc": "2529:23:15",
																"nodeType": "YulFunctionCall",
																"src": "2529:23:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2520:5:15",
																	"nodeType": "YulTypedName",
																	"src": "2520:5:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2586:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "2586:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "2561:24:15",
																	"nodeType": "YulIdentifier",
																	"src": "2561:24:15"
																},
																"nativeSrc": "2561:31:15",
																"nodeType": "YulFunctionCall",
																"src": "2561:31:15"
															},
															"nativeSrc": "2561:31:15",
															"nodeType": "YulExpressionStatement",
															"src": "2561:31:15"
														},
														{
															"nativeSrc": "2601:15:15",
															"nodeType": "YulAssignment",
															"src": "2601:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "2611:5:15",
																"nodeType": "YulIdentifier",
																"src": "2611:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2601:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2601:6:15"
																}
															]
														},
														{
															"nativeSrc": "2625:46:15",
															"nodeType": "YulVariableDeclaration",
															"src": "2625:46:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2656:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "2656:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2667:2:15",
																				"nodeType": "YulLiteral",
																				"src": "2667:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2652:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2652:3:15"
																		},
																		"nativeSrc": "2652:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2652:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2639:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "2639:12:15"
																},
																"nativeSrc": "2639:32:15",
																"nodeType": "YulFunctionCall",
																"src": "2639:32:15"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "2629:6:15",
																	"nodeType": "YulTypedName",
																	"src": "2629:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2714:16:15",
																"nodeType": "YulBlock",
																"src": "2714:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2723:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2723:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2726:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2726:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2716:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "2716:6:15"
																			},
																			"nativeSrc": "2716:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2716:12:15"
																		},
																		"nativeSrc": "2716:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "2716:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2686:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2686:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2694:18:15",
																		"nodeType": "YulLiteral",
																		"src": "2694:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2683:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "2683:2:15"
																},
																"nativeSrc": "2683:30:15",
																"nodeType": "YulFunctionCall",
																"src": "2683:30:15"
															},
															"nativeSrc": "2680:50:15",
															"nodeType": "YulIf",
															"src": "2680:50:15"
														},
														{
															"nativeSrc": "2739:32:15",
															"nodeType": "YulVariableDeclaration",
															"src": "2739:32:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2753:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "2753:9:15"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2764:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2764:6:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2749:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2749:3:15"
																},
																"nativeSrc": "2749:22:15",
																"nodeType": "YulFunctionCall",
																"src": "2749:22:15"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "2743:2:15",
																	"nodeType": "YulTypedName",
																	"src": "2743:2:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2819:16:15",
																"nodeType": "YulBlock",
																"src": "2819:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2828:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2828:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2831:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2831:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2821:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "2821:6:15"
																			},
																			"nativeSrc": "2821:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2821:12:15"
																		},
																		"nativeSrc": "2821:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "2821:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "2798:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "2798:2:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2802:4:15",
																						"nodeType": "YulLiteral",
																						"src": "2802:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2794:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "2794:3:15"
																				},
																				"nativeSrc": "2794:13:15",
																				"nodeType": "YulFunctionCall",
																				"src": "2794:13:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2809:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "2809:7:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2790:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2790:3:15"
																		},
																		"nativeSrc": "2790:27:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2790:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2783:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2783:6:15"
																},
																"nativeSrc": "2783:35:15",
																"nodeType": "YulFunctionCall",
																"src": "2783:35:15"
															},
															"nativeSrc": "2780:55:15",
															"nodeType": "YulIf",
															"src": "2780:55:15"
														},
														{
															"nativeSrc": "2844:30:15",
															"nodeType": "YulVariableDeclaration",
															"src": "2844:30:15",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "2871:2:15",
																		"nodeType": "YulIdentifier",
																		"src": "2871:2:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2858:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "2858:12:15"
																},
																"nativeSrc": "2858:16:15",
																"nodeType": "YulFunctionCall",
																"src": "2858:16:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2848:6:15",
																	"nodeType": "YulTypedName",
																	"src": "2848:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2917:22:15",
																"nodeType": "YulBlock",
																"src": "2917:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2919:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "2919:16:15"
																			},
																			"nativeSrc": "2919:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2919:18:15"
																		},
																		"nativeSrc": "2919:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "2919:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2889:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2889:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2897:18:15",
																		"nodeType": "YulLiteral",
																		"src": "2897:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2886:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "2886:2:15"
																},
																"nativeSrc": "2886:30:15",
																"nodeType": "YulFunctionCall",
																"src": "2886:30:15"
															},
															"nativeSrc": "2883:56:15",
															"nodeType": "YulIf",
															"src": "2883:56:15"
														},
														{
															"nativeSrc": "2948:23:15",
															"nodeType": "YulVariableDeclaration",
															"src": "2948:23:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2968:2:15",
																		"nodeType": "YulLiteral",
																		"src": "2968:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2962:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "2962:5:15"
																},
																"nativeSrc": "2962:9:15",
																"nodeType": "YulFunctionCall",
																"src": "2962:9:15"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "2952:6:15",
																	"nodeType": "YulTypedName",
																	"src": "2952:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2980:85:15",
															"nodeType": "YulVariableDeclaration",
															"src": "2980:85:15",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "3002:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "3002:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nativeSrc": "3026:6:15",
																										"nodeType": "YulIdentifier",
																										"src": "3026:6:15"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3034:4:15",
																										"nodeType": "YulLiteral",
																										"src": "3034:4:15",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3022:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "3022:3:15"
																								},
																								"nativeSrc": "3022:17:15",
																								"nodeType": "YulFunctionCall",
																								"src": "3022:17:15"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "3045:2:15",
																										"nodeType": "YulLiteral",
																										"src": "3045:2:15",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "3041:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "3041:3:15"
																								},
																								"nativeSrc": "3041:7:15",
																								"nodeType": "YulFunctionCall",
																								"src": "3041:7:15"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "3018:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "3018:3:15"
																						},
																						"nativeSrc": "3018:31:15",
																						"nodeType": "YulFunctionCall",
																						"src": "3018:31:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3051:2:15",
																						"nodeType": "YulLiteral",
																						"src": "3051:2:15",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3014:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3014:3:15"
																				},
																				"nativeSrc": "3014:40:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3014:40:15"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3060:2:15",
																						"nodeType": "YulLiteral",
																						"src": "3060:2:15",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3056:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3056:3:15"
																				},
																				"nativeSrc": "3056:7:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3056:7:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3010:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3010:3:15"
																		},
																		"nativeSrc": "3010:54:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3010:54:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2998:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2998:3:15"
																},
																"nativeSrc": "2998:67:15",
																"nodeType": "YulFunctionCall",
																"src": "2998:67:15"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "2984:10:15",
																	"nodeType": "YulTypedName",
																	"src": "2984:10:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3140:22:15",
																"nodeType": "YulBlock",
																"src": "3140:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "3142:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "3142:16:15"
																			},
																			"nativeSrc": "3142:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3142:18:15"
																		},
																		"nativeSrc": "3142:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "3142:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "3083:10:15",
																				"nodeType": "YulIdentifier",
																				"src": "3083:10:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3095:18:15",
																				"nodeType": "YulLiteral",
																				"src": "3095:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3080:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "3080:2:15"
																		},
																		"nativeSrc": "3080:34:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3080:34:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "3119:10:15",
																				"nodeType": "YulIdentifier",
																				"src": "3119:10:15"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "3131:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "3131:6:15"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3116:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "3116:2:15"
																		},
																		"nativeSrc": "3116:22:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3116:22:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3077:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "3077:2:15"
																},
																"nativeSrc": "3077:62:15",
																"nodeType": "YulFunctionCall",
																"src": "3077:62:15"
															},
															"nativeSrc": "3074:88:15",
															"nodeType": "YulIf",
															"src": "3074:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3178:2:15",
																		"nodeType": "YulLiteral",
																		"src": "3178:2:15",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "3182:10:15",
																		"nodeType": "YulIdentifier",
																		"src": "3182:10:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3171:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3171:6:15"
																},
																"nativeSrc": "3171:22:15",
																"nodeType": "YulFunctionCall",
																"src": "3171:22:15"
															},
															"nativeSrc": "3171:22:15",
															"nodeType": "YulExpressionStatement",
															"src": "3171:22:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "3209:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "3209:6:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3217:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "3217:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3202:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3202:6:15"
																},
																"nativeSrc": "3202:22:15",
																"nodeType": "YulFunctionCall",
																"src": "3202:22:15"
															},
															"nativeSrc": "3202:22:15",
															"nodeType": "YulExpressionStatement",
															"src": "3202:22:15"
														},
														{
															"body": {
																"nativeSrc": "3274:16:15",
																"nodeType": "YulBlock",
																"src": "3274:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3283:1:15",
																					"nodeType": "YulLiteral",
																					"src": "3283:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3286:1:15",
																					"nodeType": "YulLiteral",
																					"src": "3286:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3276:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "3276:6:15"
																			},
																			"nativeSrc": "3276:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3276:12:15"
																		},
																		"nativeSrc": "3276:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "3276:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "3247:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "3247:2:15"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "3251:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "3251:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3243:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3243:3:15"
																				},
																				"nativeSrc": "3243:15:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3243:15:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3260:2:15",
																				"nodeType": "YulLiteral",
																				"src": "3260:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3239:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3239:3:15"
																		},
																		"nativeSrc": "3239:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3239:24:15"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "3265:7:15",
																		"nodeType": "YulIdentifier",
																		"src": "3265:7:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3236:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "3236:2:15"
																},
																"nativeSrc": "3236:37:15",
																"nodeType": "YulFunctionCall",
																"src": "3236:37:15"
															},
															"nativeSrc": "3233:57:15",
															"nodeType": "YulIf",
															"src": "3233:57:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3316:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "3316:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3324:2:15",
																				"nodeType": "YulLiteral",
																				"src": "3324:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3312:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3312:3:15"
																		},
																		"nativeSrc": "3312:15:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3312:15:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "3333:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "3333:2:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3337:2:15",
																				"nodeType": "YulLiteral",
																				"src": "3337:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3329:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3329:3:15"
																		},
																		"nativeSrc": "3329:11:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3329:11:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3342:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "3342:6:15"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "3299:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "3299:12:15"
																},
																"nativeSrc": "3299:50:15",
																"nodeType": "YulFunctionCall",
																"src": "3299:50:15"
															},
															"nativeSrc": "3299:50:15",
															"nodeType": "YulExpressionStatement",
															"src": "3299:50:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "3373:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "3373:6:15"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "3381:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "3381:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3369:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3369:3:15"
																				},
																				"nativeSrc": "3369:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3369:19:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3390:2:15",
																				"nodeType": "YulLiteral",
																				"src": "3390:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3365:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3365:3:15"
																		},
																		"nativeSrc": "3365:28:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3365:28:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3395:1:15",
																		"nodeType": "YulLiteral",
																		"src": "3395:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3358:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3358:6:15"
																},
																"nativeSrc": "3358:39:15",
																"nodeType": "YulFunctionCall",
																"src": "3358:39:15"
															},
															"nativeSrc": "3358:39:15",
															"nodeType": "YulExpressionStatement",
															"src": "3358:39:15"
														},
														{
															"nativeSrc": "3406:16:15",
															"nodeType": "YulAssignment",
															"src": "3406:16:15",
															"value": {
																"name": "memPtr",
																"nativeSrc": "3416:6:15",
																"nodeType": "YulIdentifier",
																"src": "3416:6:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3406:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3406:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_memory_ptr",
												"nativeSrc": "2349:1079:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2403:9:15",
														"nodeType": "YulTypedName",
														"src": "2403:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2414:7:15",
														"nodeType": "YulTypedName",
														"src": "2414:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2426:6:15",
														"nodeType": "YulTypedName",
														"src": "2426:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2434:6:15",
														"nodeType": "YulTypedName",
														"src": "2434:6:15",
														"type": ""
													}
												],
												"src": "2349:1079:15"
											},
											{
												"body": {
													"nativeSrc": "3534:76:15",
													"nodeType": "YulBlock",
													"src": "3534:76:15",
													"statements": [
														{
															"nativeSrc": "3544:26:15",
															"nodeType": "YulAssignment",
															"src": "3544:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3556:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "3556:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3567:2:15",
																		"nodeType": "YulLiteral",
																		"src": "3567:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3552:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3552:3:15"
																},
																"nativeSrc": "3552:18:15",
																"nodeType": "YulFunctionCall",
																"src": "3552:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3544:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "3544:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3586:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "3586:9:15"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "3597:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "3597:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3579:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3579:6:15"
																},
																"nativeSrc": "3579:25:15",
																"nodeType": "YulFunctionCall",
																"src": "3579:25:15"
															},
															"nativeSrc": "3579:25:15",
															"nodeType": "YulExpressionStatement",
															"src": "3579:25:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "3433:177:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3503:9:15",
														"nodeType": "YulTypedName",
														"src": "3503:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3514:6:15",
														"nodeType": "YulTypedName",
														"src": "3514:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3525:4:15",
														"nodeType": "YulTypedName",
														"src": "3525:4:15",
														"type": ""
													}
												],
												"src": "3433:177:15"
											},
											{
												"body": {
													"nativeSrc": "3744:102:15",
													"nodeType": "YulBlock",
													"src": "3744:102:15",
													"statements": [
														{
															"nativeSrc": "3754:26:15",
															"nodeType": "YulAssignment",
															"src": "3754:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3766:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "3766:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3777:2:15",
																		"nodeType": "YulLiteral",
																		"src": "3777:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3762:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3762:3:15"
																},
																"nativeSrc": "3762:18:15",
																"nodeType": "YulFunctionCall",
																"src": "3762:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3754:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "3754:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3796:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "3796:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3811:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "3811:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3827:3:15",
																								"nodeType": "YulLiteral",
																								"src": "3827:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3832:1:15",
																								"nodeType": "YulLiteral",
																								"src": "3832:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3823:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "3823:3:15"
																						},
																						"nativeSrc": "3823:11:15",
																						"nodeType": "YulFunctionCall",
																						"src": "3823:11:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3836:1:15",
																						"nodeType": "YulLiteral",
																						"src": "3836:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3819:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3819:3:15"
																				},
																				"nativeSrc": "3819:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3819:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3807:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3807:3:15"
																		},
																		"nativeSrc": "3807:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3807:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3789:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3789:6:15"
																},
																"nativeSrc": "3789:51:15",
																"nodeType": "YulFunctionCall",
																"src": "3789:51:15"
															},
															"nativeSrc": "3789:51:15",
															"nodeType": "YulExpressionStatement",
															"src": "3789:51:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_AggregatorV3Interface_$45__to_t_address__fromStack_reversed",
												"nativeSrc": "3615:231:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3713:9:15",
														"nodeType": "YulTypedName",
														"src": "3713:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3724:6:15",
														"nodeType": "YulTypedName",
														"src": "3724:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3735:4:15",
														"nodeType": "YulTypedName",
														"src": "3735:4:15",
														"type": ""
													}
												],
												"src": "3615:231:15"
											},
											{
												"body": {
													"nativeSrc": "3955:362:15",
													"nodeType": "YulBlock",
													"src": "3955:362:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "4001:16:15",
																"nodeType": "YulBlock",
																"src": "4001:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4010:1:15",
																					"nodeType": "YulLiteral",
																					"src": "4010:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4013:1:15",
																					"nodeType": "YulLiteral",
																					"src": "4013:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4003:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "4003:6:15"
																			},
																			"nativeSrc": "4003:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4003:12:15"
																		},
																		"nativeSrc": "4003:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "4003:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3976:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "3976:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3985:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "3985:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3972:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3972:3:15"
																		},
																		"nativeSrc": "3972:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3972:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3997:2:15",
																		"nodeType": "YulLiteral",
																		"src": "3997:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3968:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3968:3:15"
																},
																"nativeSrc": "3968:32:15",
																"nodeType": "YulFunctionCall",
																"src": "3968:32:15"
															},
															"nativeSrc": "3965:52:15",
															"nodeType": "YulIf",
															"src": "3965:52:15"
														},
														{
															"nativeSrc": "4026:14:15",
															"nodeType": "YulVariableDeclaration",
															"src": "4026:14:15",
															"value": {
																"kind": "number",
																"nativeSrc": "4039:1:15",
																"nodeType": "YulLiteral",
																"src": "4039:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "4030:5:15",
																	"nodeType": "YulTypedName",
																	"src": "4030:5:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4049:32:15",
															"nodeType": "YulAssignment",
															"src": "4049:32:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4071:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "4071:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4058:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "4058:12:15"
																},
																"nativeSrc": "4058:23:15",
																"nodeType": "YulFunctionCall",
																"src": "4058:23:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4049:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "4049:5:15"
																}
															]
														},
														{
															"nativeSrc": "4090:15:15",
															"nodeType": "YulAssignment",
															"src": "4090:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "4100:5:15",
																"nodeType": "YulIdentifier",
																"src": "4100:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4090:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4090:6:15"
																}
															]
														},
														{
															"nativeSrc": "4114:16:15",
															"nodeType": "YulVariableDeclaration",
															"src": "4114:16:15",
															"value": {
																"kind": "number",
																"nativeSrc": "4129:1:15",
																"nodeType": "YulLiteral",
																"src": "4129:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "4118:7:15",
																	"nodeType": "YulTypedName",
																	"src": "4118:7:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4139:43:15",
															"nodeType": "YulAssignment",
															"src": "4139:43:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4167:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "4167:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4178:2:15",
																				"nodeType": "YulLiteral",
																				"src": "4178:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4163:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4163:3:15"
																		},
																		"nativeSrc": "4163:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4163:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4150:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "4150:12:15"
																},
																"nativeSrc": "4150:32:15",
																"nodeType": "YulFunctionCall",
																"src": "4150:32:15"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "4139:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "4139:7:15"
																}
															]
														},
														{
															"nativeSrc": "4191:17:15",
															"nodeType": "YulAssignment",
															"src": "4191:17:15",
															"value": {
																"name": "value_1",
																"nativeSrc": "4201:7:15",
																"nodeType": "YulIdentifier",
																"src": "4201:7:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4191:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4191:6:15"
																}
															]
														},
														{
															"nativeSrc": "4217:16:15",
															"nodeType": "YulVariableDeclaration",
															"src": "4217:16:15",
															"value": {
																"kind": "number",
																"nativeSrc": "4232:1:15",
																"nodeType": "YulLiteral",
																"src": "4232:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "4221:7:15",
																	"nodeType": "YulTypedName",
																	"src": "4221:7:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4242:43:15",
															"nodeType": "YulAssignment",
															"src": "4242:43:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4270:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "4270:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4281:2:15",
																				"nodeType": "YulLiteral",
																				"src": "4281:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4266:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4266:3:15"
																		},
																		"nativeSrc": "4266:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4266:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4253:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "4253:12:15"
																},
																"nativeSrc": "4253:32:15",
																"nodeType": "YulFunctionCall",
																"src": "4253:32:15"
															},
															"variableNames": [
																{
																	"name": "value_2",
																	"nativeSrc": "4242:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "4242:7:15"
																}
															]
														},
														{
															"nativeSrc": "4294:17:15",
															"nodeType": "YulAssignment",
															"src": "4294:17:15",
															"value": {
																"name": "value_2",
																"nativeSrc": "4304:7:15",
																"nodeType": "YulIdentifier",
																"src": "4304:7:15"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "4294:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4294:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256",
												"nativeSrc": "3851:466:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3905:9:15",
														"nodeType": "YulTypedName",
														"src": "3905:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3916:7:15",
														"nodeType": "YulTypedName",
														"src": "3916:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3928:6:15",
														"nodeType": "YulTypedName",
														"src": "3928:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3936:6:15",
														"nodeType": "YulTypedName",
														"src": "3936:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3944:6:15",
														"nodeType": "YulTypedName",
														"src": "3944:6:15",
														"type": ""
													}
												],
												"src": "3851:466:15"
											},
											{
												"body": {
													"nativeSrc": "4388:184:15",
													"nodeType": "YulBlock",
													"src": "4388:184:15",
													"statements": [
														{
															"nativeSrc": "4398:10:15",
															"nodeType": "YulVariableDeclaration",
															"src": "4398:10:15",
															"value": {
																"kind": "number",
																"nativeSrc": "4407:1:15",
																"nodeType": "YulLiteral",
																"src": "4407:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "4402:1:15",
																	"nodeType": "YulTypedName",
																	"src": "4402:1:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4467:63:15",
																"nodeType": "YulBlock",
																"src": "4467:63:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "4492:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "4492:3:15"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "4497:1:15",
																							"nodeType": "YulIdentifier",
																							"src": "4497:1:15"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4488:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "4488:3:15"
																					},
																					"nativeSrc": "4488:11:15",
																					"nodeType": "YulFunctionCall",
																					"src": "4488:11:15"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "4511:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "4511:3:15"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "4516:1:15",
																									"nodeType": "YulIdentifier",
																									"src": "4516:1:15"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4507:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "4507:3:15"
																							},
																							"nativeSrc": "4507:11:15",
																							"nodeType": "YulFunctionCall",
																							"src": "4507:11:15"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "4501:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "4501:5:15"
																					},
																					"nativeSrc": "4501:18:15",
																					"nodeType": "YulFunctionCall",
																					"src": "4501:18:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4481:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "4481:6:15"
																			},
																			"nativeSrc": "4481:39:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4481:39:15"
																		},
																		"nativeSrc": "4481:39:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "4481:39:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "4428:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "4428:1:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4431:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4431:6:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "4425:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "4425:2:15"
																},
																"nativeSrc": "4425:13:15",
																"nodeType": "YulFunctionCall",
																"src": "4425:13:15"
															},
															"nativeSrc": "4417:113:15",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4439:19:15",
																"nodeType": "YulBlock",
																"src": "4439:19:15",
																"statements": [
																	{
																		"nativeSrc": "4441:15:15",
																		"nodeType": "YulAssignment",
																		"src": "4441:15:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "4450:1:15",
																					"nodeType": "YulIdentifier",
																					"src": "4450:1:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4453:2:15",
																					"nodeType": "YulLiteral",
																					"src": "4453:2:15",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4446:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "4446:3:15"
																			},
																			"nativeSrc": "4446:10:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4446:10:15"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "4441:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "4441:1:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "4421:3:15",
																"nodeType": "YulBlock",
																"src": "4421:3:15",
																"statements": []
															},
															"src": "4417:113:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "4550:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "4550:3:15"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "4555:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "4555:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4546:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4546:3:15"
																		},
																		"nativeSrc": "4546:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4546:16:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4564:1:15",
																		"nodeType": "YulLiteral",
																		"src": "4564:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4539:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4539:6:15"
																},
																"nativeSrc": "4539:27:15",
																"nodeType": "YulFunctionCall",
																"src": "4539:27:15"
															},
															"nativeSrc": "4539:27:15",
															"nodeType": "YulExpressionStatement",
															"src": "4539:27:15"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "4322:250:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "4366:3:15",
														"nodeType": "YulTypedName",
														"src": "4366:3:15",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "4371:3:15",
														"nodeType": "YulTypedName",
														"src": "4371:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4376:6:15",
														"nodeType": "YulTypedName",
														"src": "4376:6:15",
														"type": ""
													}
												],
												"src": "4322:250:15"
											},
											{
												"body": {
													"nativeSrc": "4698:275:15",
													"nodeType": "YulBlock",
													"src": "4698:275:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4715:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "4715:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4726:2:15",
																		"nodeType": "YulLiteral",
																		"src": "4726:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4708:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4708:6:15"
																},
																"nativeSrc": "4708:21:15",
																"nodeType": "YulFunctionCall",
																"src": "4708:21:15"
															},
															"nativeSrc": "4708:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "4708:21:15"
														},
														{
															"nativeSrc": "4738:27:15",
															"nodeType": "YulVariableDeclaration",
															"src": "4738:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4758:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4758:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4752:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "4752:5:15"
																},
																"nativeSrc": "4752:13:15",
																"nodeType": "YulFunctionCall",
																"src": "4752:13:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "4742:6:15",
																	"nodeType": "YulTypedName",
																	"src": "4742:6:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4785:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "4785:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4796:2:15",
																				"nodeType": "YulLiteral",
																				"src": "4796:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4781:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4781:3:15"
																		},
																		"nativeSrc": "4781:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4781:18:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4801:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4801:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4774:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4774:6:15"
																},
																"nativeSrc": "4774:34:15",
																"nodeType": "YulFunctionCall",
																"src": "4774:34:15"
															},
															"nativeSrc": "4774:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "4774:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4856:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "4856:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4864:2:15",
																				"nodeType": "YulLiteral",
																				"src": "4864:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4852:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4852:3:15"
																		},
																		"nativeSrc": "4852:15:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4852:15:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4873:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "4873:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4884:2:15",
																				"nodeType": "YulLiteral",
																				"src": "4884:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4869:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4869:3:15"
																		},
																		"nativeSrc": "4869:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4869:18:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4889:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4889:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "4817:34:15",
																	"nodeType": "YulIdentifier",
																	"src": "4817:34:15"
																},
																"nativeSrc": "4817:79:15",
																"nodeType": "YulFunctionCall",
																"src": "4817:79:15"
															},
															"nativeSrc": "4817:79:15",
															"nodeType": "YulExpressionStatement",
															"src": "4817:79:15"
														},
														{
															"nativeSrc": "4905:62:15",
															"nodeType": "YulAssignment",
															"src": "4905:62:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4921:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "4921:9:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "4940:6:15",
																								"nodeType": "YulIdentifier",
																								"src": "4940:6:15"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4948:2:15",
																								"nodeType": "YulLiteral",
																								"src": "4948:2:15",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "4936:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "4936:3:15"
																						},
																						"nativeSrc": "4936:15:15",
																						"nodeType": "YulFunctionCall",
																						"src": "4936:15:15"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4957:2:15",
																								"nodeType": "YulLiteral",
																								"src": "4957:2:15",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "4953:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "4953:3:15"
																						},
																						"nativeSrc": "4953:7:15",
																						"nodeType": "YulFunctionCall",
																						"src": "4953:7:15"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "4932:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4932:3:15"
																				},
																				"nativeSrc": "4932:29:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4932:29:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4917:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4917:3:15"
																		},
																		"nativeSrc": "4917:45:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4917:45:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4964:2:15",
																		"nodeType": "YulLiteral",
																		"src": "4964:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4913:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4913:3:15"
																},
																"nativeSrc": "4913:54:15",
																"nodeType": "YulFunctionCall",
																"src": "4913:54:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4905:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "4905:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4577:396:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4667:9:15",
														"nodeType": "YulTypedName",
														"src": "4667:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4678:6:15",
														"nodeType": "YulTypedName",
														"src": "4678:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4689:4:15",
														"nodeType": "YulTypedName",
														"src": "4689:4:15",
														"type": ""
													}
												],
												"src": "4577:396:15"
											},
											{
												"body": {
													"nativeSrc": "5185:266:15",
													"nodeType": "YulBlock",
													"src": "5185:266:15",
													"statements": [
														{
															"nativeSrc": "5195:27:15",
															"nodeType": "YulAssignment",
															"src": "5195:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5207:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "5207:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5218:3:15",
																		"nodeType": "YulLiteral",
																		"src": "5218:3:15",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5203:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5203:3:15"
																},
																"nativeSrc": "5203:19:15",
																"nodeType": "YulFunctionCall",
																"src": "5203:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5195:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "5195:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5238:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "5238:9:15"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "5249:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5249:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5231:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5231:6:15"
																},
																"nativeSrc": "5231:25:15",
																"nodeType": "YulFunctionCall",
																"src": "5231:25:15"
															},
															"nativeSrc": "5231:25:15",
															"nodeType": "YulExpressionStatement",
															"src": "5231:25:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5276:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "5276:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5287:2:15",
																				"nodeType": "YulLiteral",
																				"src": "5287:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5272:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5272:3:15"
																		},
																		"nativeSrc": "5272:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5272:18:15"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "5292:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5292:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5265:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5265:6:15"
																},
																"nativeSrc": "5265:34:15",
																"nodeType": "YulFunctionCall",
																"src": "5265:34:15"
															},
															"nativeSrc": "5265:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "5265:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5319:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "5319:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5330:2:15",
																				"nodeType": "YulLiteral",
																				"src": "5330:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5315:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5315:3:15"
																		},
																		"nativeSrc": "5315:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5315:18:15"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "5335:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5335:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5308:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5308:6:15"
																},
																"nativeSrc": "5308:34:15",
																"nodeType": "YulFunctionCall",
																"src": "5308:34:15"
															},
															"nativeSrc": "5308:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "5308:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5362:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "5362:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5373:2:15",
																				"nodeType": "YulLiteral",
																				"src": "5373:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5358:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5358:3:15"
																		},
																		"nativeSrc": "5358:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5358:18:15"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "5378:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5378:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5351:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5351:6:15"
																},
																"nativeSrc": "5351:34:15",
																"nodeType": "YulFunctionCall",
																"src": "5351:34:15"
															},
															"nativeSrc": "5351:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "5351:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5405:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "5405:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5416:3:15",
																				"nodeType": "YulLiteral",
																				"src": "5416:3:15",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5401:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5401:3:15"
																		},
																		"nativeSrc": "5401:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5401:19:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value4",
																						"nativeSrc": "5436:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "5436:6:15"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "5429:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "5429:6:15"
																				},
																				"nativeSrc": "5429:14:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5429:14:15"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "5422:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "5422:6:15"
																		},
																		"nativeSrc": "5422:22:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5422:22:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5394:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5394:6:15"
																},
																"nativeSrc": "5394:51:15",
																"nodeType": "YulFunctionCall",
																"src": "5394:51:15"
															},
															"nativeSrc": "5394:51:15",
															"nodeType": "YulExpressionStatement",
															"src": "5394:51:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed",
												"nativeSrc": "4978:473:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5122:9:15",
														"nodeType": "YulTypedName",
														"src": "5122:9:15",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "5133:6:15",
														"nodeType": "YulTypedName",
														"src": "5133:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "5141:6:15",
														"nodeType": "YulTypedName",
														"src": "5141:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5149:6:15",
														"nodeType": "YulTypedName",
														"src": "5149:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5157:6:15",
														"nodeType": "YulTypedName",
														"src": "5157:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5165:6:15",
														"nodeType": "YulTypedName",
														"src": "5165:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5176:4:15",
														"nodeType": "YulTypedName",
														"src": "5176:4:15",
														"type": ""
													}
												],
												"src": "4978:473:15"
											},
											{
												"body": {
													"nativeSrc": "5585:119:15",
													"nodeType": "YulBlock",
													"src": "5585:119:15",
													"statements": [
														{
															"nativeSrc": "5595:26:15",
															"nodeType": "YulAssignment",
															"src": "5595:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5607:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "5607:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5618:2:15",
																		"nodeType": "YulLiteral",
																		"src": "5618:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5603:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5603:3:15"
																},
																"nativeSrc": "5603:18:15",
																"nodeType": "YulFunctionCall",
																"src": "5603:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5595:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "5595:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5637:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "5637:9:15"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "5648:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5648:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5630:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5630:6:15"
																},
																"nativeSrc": "5630:25:15",
																"nodeType": "YulFunctionCall",
																"src": "5630:25:15"
															},
															"nativeSrc": "5630:25:15",
															"nodeType": "YulExpressionStatement",
															"src": "5630:25:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5675:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "5675:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5686:2:15",
																				"nodeType": "YulLiteral",
																				"src": "5686:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5671:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5671:3:15"
																		},
																		"nativeSrc": "5671:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5671:18:15"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "5691:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5691:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5664:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5664:6:15"
																},
																"nativeSrc": "5664:34:15",
																"nodeType": "YulFunctionCall",
																"src": "5664:34:15"
															},
															"nativeSrc": "5664:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "5664:34:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "5456:248:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5546:9:15",
														"nodeType": "YulTypedName",
														"src": "5546:9:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5557:6:15",
														"nodeType": "YulTypedName",
														"src": "5557:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5565:6:15",
														"nodeType": "YulTypedName",
														"src": "5565:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5576:4:15",
														"nodeType": "YulTypedName",
														"src": "5576:4:15",
														"type": ""
													}
												],
												"src": "5456:248:15"
											},
											{
												"body": {
													"nativeSrc": "5779:177:15",
													"nodeType": "YulBlock",
													"src": "5779:177:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "5825:16:15",
																"nodeType": "YulBlock",
																"src": "5825:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5834:1:15",
																					"nodeType": "YulLiteral",
																					"src": "5834:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5837:1:15",
																					"nodeType": "YulLiteral",
																					"src": "5837:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5827:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "5827:6:15"
																			},
																			"nativeSrc": "5827:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "5827:12:15"
																		},
																		"nativeSrc": "5827:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "5827:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5800:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "5800:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5809:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "5809:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5796:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5796:3:15"
																		},
																		"nativeSrc": "5796:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5796:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5821:2:15",
																		"nodeType": "YulLiteral",
																		"src": "5821:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5792:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5792:3:15"
																},
																"nativeSrc": "5792:32:15",
																"nodeType": "YulFunctionCall",
																"src": "5792:32:15"
															},
															"nativeSrc": "5789:52:15",
															"nodeType": "YulIf",
															"src": "5789:52:15"
														},
														{
															"nativeSrc": "5850:36:15",
															"nodeType": "YulVariableDeclaration",
															"src": "5850:36:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5876:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "5876:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5863:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "5863:12:15"
																},
																"nativeSrc": "5863:23:15",
																"nodeType": "YulFunctionCall",
																"src": "5863:23:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "5854:5:15",
																	"nodeType": "YulTypedName",
																	"src": "5854:5:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5920:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "5920:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "5895:24:15",
																	"nodeType": "YulIdentifier",
																	"src": "5895:24:15"
																},
																"nativeSrc": "5895:31:15",
																"nodeType": "YulFunctionCall",
																"src": "5895:31:15"
															},
															"nativeSrc": "5895:31:15",
															"nodeType": "YulExpressionStatement",
															"src": "5895:31:15"
														},
														{
															"nativeSrc": "5935:15:15",
															"nodeType": "YulAssignment",
															"src": "5935:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "5945:5:15",
																"nodeType": "YulIdentifier",
																"src": "5945:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5935:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5935:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5709:247:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5745:9:15",
														"nodeType": "YulTypedName",
														"src": "5745:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5756:7:15",
														"nodeType": "YulTypedName",
														"src": "5756:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5768:6:15",
														"nodeType": "YulTypedName",
														"src": "5768:6:15",
														"type": ""
													}
												],
												"src": "5709:247:15"
											},
											{
												"body": {
													"nativeSrc": "5993:95:15",
													"nodeType": "YulBlock",
													"src": "5993:95:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6010:1:15",
																		"nodeType": "YulLiteral",
																		"src": "6010:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6017:3:15",
																				"nodeType": "YulLiteral",
																				"src": "6017:3:15",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6022:10:15",
																				"nodeType": "YulLiteral",
																				"src": "6022:10:15",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "6013:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6013:3:15"
																		},
																		"nativeSrc": "6013:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6013:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6003:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6003:6:15"
																},
																"nativeSrc": "6003:31:15",
																"nodeType": "YulFunctionCall",
																"src": "6003:31:15"
															},
															"nativeSrc": "6003:31:15",
															"nodeType": "YulExpressionStatement",
															"src": "6003:31:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6050:1:15",
																		"nodeType": "YulLiteral",
																		"src": "6050:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6053:4:15",
																		"nodeType": "YulLiteral",
																		"src": "6053:4:15",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6043:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6043:6:15"
																},
																"nativeSrc": "6043:15:15",
																"nodeType": "YulFunctionCall",
																"src": "6043:15:15"
															},
															"nativeSrc": "6043:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "6043:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6074:1:15",
																		"nodeType": "YulLiteral",
																		"src": "6074:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6077:4:15",
																		"nodeType": "YulLiteral",
																		"src": "6077:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6067:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6067:6:15"
																},
																"nativeSrc": "6067:15:15",
																"nodeType": "YulFunctionCall",
																"src": "6067:15:15"
															},
															"nativeSrc": "6067:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "6067:15:15"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "5961:127:15",
												"nodeType": "YulFunctionDefinition",
												"src": "5961:127:15"
											},
											{
												"body": {
													"nativeSrc": "6148:186:15",
													"nodeType": "YulBlock",
													"src": "6148:186:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "6190:111:15",
																"nodeType": "YulBlock",
																"src": "6190:111:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6211:1:15",
																					"nodeType": "YulLiteral",
																					"src": "6211:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6218:3:15",
																							"nodeType": "YulLiteral",
																							"src": "6218:3:15",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "6223:10:15",
																							"nodeType": "YulLiteral",
																							"src": "6223:10:15",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "6214:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "6214:3:15"
																					},
																					"nativeSrc": "6214:20:15",
																					"nodeType": "YulFunctionCall",
																					"src": "6214:20:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6204:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "6204:6:15"
																			},
																			"nativeSrc": "6204:31:15",
																			"nodeType": "YulFunctionCall",
																			"src": "6204:31:15"
																		},
																		"nativeSrc": "6204:31:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "6204:31:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6255:1:15",
																					"nodeType": "YulLiteral",
																					"src": "6255:1:15",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6258:4:15",
																					"nodeType": "YulLiteral",
																					"src": "6258:4:15",
																					"type": "",
																					"value": "0x21"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6248:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "6248:6:15"
																			},
																			"nativeSrc": "6248:15:15",
																			"nodeType": "YulFunctionCall",
																			"src": "6248:15:15"
																		},
																		"nativeSrc": "6248:15:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "6248:15:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6283:1:15",
																					"nodeType": "YulLiteral",
																					"src": "6283:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6286:4:15",
																					"nodeType": "YulLiteral",
																					"src": "6286:4:15",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6276:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "6276:6:15"
																			},
																			"nativeSrc": "6276:15:15",
																			"nodeType": "YulFunctionCall",
																			"src": "6276:15:15"
																		},
																		"nativeSrc": "6276:15:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "6276:15:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6171:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "6171:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6178:1:15",
																				"nodeType": "YulLiteral",
																				"src": "6178:1:15",
																				"type": "",
																				"value": "3"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6168:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "6168:2:15"
																		},
																		"nativeSrc": "6168:12:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6168:12:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6161:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6161:6:15"
																},
																"nativeSrc": "6161:20:15",
																"nodeType": "YulFunctionCall",
																"src": "6161:20:15"
															},
															"nativeSrc": "6158:143:15",
															"nodeType": "YulIf",
															"src": "6158:143:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6317:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "6317:3:15"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "6322:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "6322:5:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6310:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6310:6:15"
																},
																"nativeSrc": "6310:18:15",
																"nodeType": "YulFunctionCall",
																"src": "6310:18:15"
															},
															"nativeSrc": "6310:18:15",
															"nodeType": "YulExpressionStatement",
															"src": "6310:18:15"
														}
													]
												},
												"name": "abi_encode_enum_PaymentMethod",
												"nativeSrc": "6093:241:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6132:5:15",
														"nodeType": "YulTypedName",
														"src": "6132:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6139:3:15",
														"nodeType": "YulTypedName",
														"src": "6139:3:15",
														"type": ""
													}
												],
												"src": "6093:241:15"
											},
											{
												"body": {
													"nativeSrc": "6456:99:15",
													"nodeType": "YulBlock",
													"src": "6456:99:15",
													"statements": [
														{
															"nativeSrc": "6466:26:15",
															"nodeType": "YulAssignment",
															"src": "6466:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6478:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "6478:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6489:2:15",
																		"nodeType": "YulLiteral",
																		"src": "6489:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6474:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6474:3:15"
																},
																"nativeSrc": "6474:18:15",
																"nodeType": "YulFunctionCall",
																"src": "6474:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6466:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "6466:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6531:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "6531:6:15"
																	},
																	{
																		"name": "headStart",
																		"nativeSrc": "6539:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "6539:9:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_enum_PaymentMethod",
																	"nativeSrc": "6501:29:15",
																	"nodeType": "YulIdentifier",
																	"src": "6501:29:15"
																},
																"nativeSrc": "6501:48:15",
																"nodeType": "YulFunctionCall",
																"src": "6501:48:15"
															},
															"nativeSrc": "6501:48:15",
															"nodeType": "YulExpressionStatement",
															"src": "6501:48:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_enum$_PaymentMethod_$1706__to_t_uint8__fromStack_reversed",
												"nativeSrc": "6339:216:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6425:9:15",
														"nodeType": "YulTypedName",
														"src": "6425:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6436:6:15",
														"nodeType": "YulTypedName",
														"src": "6436:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6447:4:15",
														"nodeType": "YulTypedName",
														"src": "6447:4:15",
														"type": ""
													}
												],
												"src": "6339:216:15"
											},
											{
												"body": {
													"nativeSrc": "6665:245:15",
													"nodeType": "YulBlock",
													"src": "6665:245:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "6711:16:15",
																"nodeType": "YulBlock",
																"src": "6711:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6720:1:15",
																					"nodeType": "YulLiteral",
																					"src": "6720:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6723:1:15",
																					"nodeType": "YulLiteral",
																					"src": "6723:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6713:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "6713:6:15"
																			},
																			"nativeSrc": "6713:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "6713:12:15"
																		},
																		"nativeSrc": "6713:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "6713:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6686:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "6686:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6695:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "6695:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6682:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6682:3:15"
																		},
																		"nativeSrc": "6682:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6682:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6707:2:15",
																		"nodeType": "YulLiteral",
																		"src": "6707:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6678:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6678:3:15"
																},
																"nativeSrc": "6678:32:15",
																"nodeType": "YulFunctionCall",
																"src": "6678:32:15"
															},
															"nativeSrc": "6675:52:15",
															"nodeType": "YulIf",
															"src": "6675:52:15"
														},
														{
															"nativeSrc": "6736:36:15",
															"nodeType": "YulVariableDeclaration",
															"src": "6736:36:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6762:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "6762:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6749:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "6749:12:15"
																},
																"nativeSrc": "6749:23:15",
																"nodeType": "YulFunctionCall",
																"src": "6749:23:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "6740:5:15",
																	"nodeType": "YulTypedName",
																	"src": "6740:5:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6806:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "6806:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "6781:24:15",
																	"nodeType": "YulIdentifier",
																	"src": "6781:24:15"
																},
																"nativeSrc": "6781:31:15",
																"nodeType": "YulFunctionCall",
																"src": "6781:31:15"
															},
															"nativeSrc": "6781:31:15",
															"nodeType": "YulExpressionStatement",
															"src": "6781:31:15"
														},
														{
															"nativeSrc": "6821:15:15",
															"nodeType": "YulAssignment",
															"src": "6821:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "6831:5:15",
																"nodeType": "YulIdentifier",
																"src": "6831:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "6821:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6821:6:15"
																}
															]
														},
														{
															"nativeSrc": "6845:59:15",
															"nodeType": "YulAssignment",
															"src": "6845:59:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6889:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "6889:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6900:2:15",
																				"nodeType": "YulLiteral",
																				"src": "6900:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6885:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6885:3:15"
																		},
																		"nativeSrc": "6885:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6885:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_enum_PaymentMethod",
																	"nativeSrc": "6855:29:15",
																	"nodeType": "YulIdentifier",
																	"src": "6855:29:15"
																},
																"nativeSrc": "6855:49:15",
																"nodeType": "YulFunctionCall",
																"src": "6855:49:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "6845:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6845:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_enum$_PaymentMethod_$1706",
												"nativeSrc": "6560:350:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6623:9:15",
														"nodeType": "YulTypedName",
														"src": "6623:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6634:7:15",
														"nodeType": "YulTypedName",
														"src": "6634:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6646:6:15",
														"nodeType": "YulTypedName",
														"src": "6646:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6654:6:15",
														"nodeType": "YulTypedName",
														"src": "6654:6:15",
														"type": ""
													}
												],
												"src": "6560:350:15"
											},
											{
												"body": {
													"nativeSrc": "7031:102:15",
													"nodeType": "YulBlock",
													"src": "7031:102:15",
													"statements": [
														{
															"nativeSrc": "7041:26:15",
															"nodeType": "YulAssignment",
															"src": "7041:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7053:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "7053:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7064:2:15",
																		"nodeType": "YulLiteral",
																		"src": "7064:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7049:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7049:3:15"
																},
																"nativeSrc": "7049:18:15",
																"nodeType": "YulFunctionCall",
																"src": "7049:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7041:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "7041:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7083:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "7083:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "7098:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "7098:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "7114:3:15",
																								"nodeType": "YulLiteral",
																								"src": "7114:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "7119:1:15",
																								"nodeType": "YulLiteral",
																								"src": "7119:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "7110:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "7110:3:15"
																						},
																						"nativeSrc": "7110:11:15",
																						"nodeType": "YulFunctionCall",
																						"src": "7110:11:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7123:1:15",
																						"nodeType": "YulLiteral",
																						"src": "7123:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "7106:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "7106:3:15"
																				},
																				"nativeSrc": "7106:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "7106:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7094:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7094:3:15"
																		},
																		"nativeSrc": "7094:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7094:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7076:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7076:6:15"
																},
																"nativeSrc": "7076:51:15",
																"nodeType": "YulFunctionCall",
																"src": "7076:51:15"
															},
															"nativeSrc": "7076:51:15",
															"nodeType": "YulExpressionStatement",
															"src": "7076:51:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$1264__to_t_address__fromStack_reversed",
												"nativeSrc": "6915:218:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7000:9:15",
														"nodeType": "YulTypedName",
														"src": "7000:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7011:6:15",
														"nodeType": "YulTypedName",
														"src": "7011:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7022:4:15",
														"nodeType": "YulTypedName",
														"src": "7022:4:15",
														"type": ""
													}
												],
												"src": "6915:218:15"
											},
											{
												"body": {
													"nativeSrc": "7342:1008:15",
													"nodeType": "YulBlock",
													"src": "7342:1008:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "7389:16:15",
																"nodeType": "YulBlock",
																"src": "7389:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7398:1:15",
																					"nodeType": "YulLiteral",
																					"src": "7398:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7401:1:15",
																					"nodeType": "YulLiteral",
																					"src": "7401:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7391:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "7391:6:15"
																			},
																			"nativeSrc": "7391:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "7391:12:15"
																		},
																		"nativeSrc": "7391:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "7391:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7363:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "7363:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7372:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "7372:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7359:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7359:3:15"
																		},
																		"nativeSrc": "7359:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7359:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7384:3:15",
																		"nodeType": "YulLiteral",
																		"src": "7384:3:15",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7355:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7355:3:15"
																},
																"nativeSrc": "7355:33:15",
																"nodeType": "YulFunctionCall",
																"src": "7355:33:15"
															},
															"nativeSrc": "7352:53:15",
															"nodeType": "YulIf",
															"src": "7352:53:15"
														},
														{
															"nativeSrc": "7414:36:15",
															"nodeType": "YulVariableDeclaration",
															"src": "7414:36:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7440:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "7440:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7427:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "7427:12:15"
																},
																"nativeSrc": "7427:23:15",
																"nodeType": "YulFunctionCall",
																"src": "7427:23:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "7418:5:15",
																	"nodeType": "YulTypedName",
																	"src": "7418:5:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7484:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "7484:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "7459:24:15",
																	"nodeType": "YulIdentifier",
																	"src": "7459:24:15"
																},
																"nativeSrc": "7459:31:15",
																"nodeType": "YulFunctionCall",
																"src": "7459:31:15"
															},
															"nativeSrc": "7459:31:15",
															"nodeType": "YulExpressionStatement",
															"src": "7459:31:15"
														},
														{
															"nativeSrc": "7499:15:15",
															"nodeType": "YulAssignment",
															"src": "7499:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "7509:5:15",
																"nodeType": "YulIdentifier",
																"src": "7509:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "7499:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7499:6:15"
																}
															]
														},
														{
															"nativeSrc": "7523:47:15",
															"nodeType": "YulVariableDeclaration",
															"src": "7523:47:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7555:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "7555:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7566:2:15",
																				"nodeType": "YulLiteral",
																				"src": "7566:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7551:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7551:3:15"
																		},
																		"nativeSrc": "7551:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7551:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7538:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "7538:12:15"
																},
																"nativeSrc": "7538:32:15",
																"nodeType": "YulFunctionCall",
																"src": "7538:32:15"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "7527:7:15",
																	"nodeType": "YulTypedName",
																	"src": "7527:7:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "7604:7:15",
																		"nodeType": "YulIdentifier",
																		"src": "7604:7:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "7579:24:15",
																	"nodeType": "YulIdentifier",
																	"src": "7579:24:15"
																},
																"nativeSrc": "7579:33:15",
																"nodeType": "YulFunctionCall",
																"src": "7579:33:15"
															},
															"nativeSrc": "7579:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "7579:33:15"
														},
														{
															"nativeSrc": "7621:17:15",
															"nodeType": "YulAssignment",
															"src": "7621:17:15",
															"value": {
																"name": "value_1",
																"nativeSrc": "7631:7:15",
																"nodeType": "YulIdentifier",
																"src": "7631:7:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "7621:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7621:6:15"
																}
															]
														},
														{
															"nativeSrc": "7647:47:15",
															"nodeType": "YulVariableDeclaration",
															"src": "7647:47:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7679:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "7679:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7690:2:15",
																				"nodeType": "YulLiteral",
																				"src": "7690:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7675:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7675:3:15"
																		},
																		"nativeSrc": "7675:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7675:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7662:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "7662:12:15"
																},
																"nativeSrc": "7662:32:15",
																"nodeType": "YulFunctionCall",
																"src": "7662:32:15"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "7651:7:15",
																	"nodeType": "YulTypedName",
																	"src": "7651:7:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_2",
																		"nativeSrc": "7728:7:15",
																		"nodeType": "YulIdentifier",
																		"src": "7728:7:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "7703:24:15",
																	"nodeType": "YulIdentifier",
																	"src": "7703:24:15"
																},
																"nativeSrc": "7703:33:15",
																"nodeType": "YulFunctionCall",
																"src": "7703:33:15"
															},
															"nativeSrc": "7703:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "7703:33:15"
														},
														{
															"nativeSrc": "7745:17:15",
															"nodeType": "YulAssignment",
															"src": "7745:17:15",
															"value": {
																"name": "value_2",
																"nativeSrc": "7755:7:15",
																"nodeType": "YulIdentifier",
																"src": "7755:7:15"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "7745:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7745:6:15"
																}
															]
														},
														{
															"nativeSrc": "7771:16:15",
															"nodeType": "YulVariableDeclaration",
															"src": "7771:16:15",
															"value": {
																"kind": "number",
																"nativeSrc": "7786:1:15",
																"nodeType": "YulLiteral",
																"src": "7786:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_3",
																	"nativeSrc": "7775:7:15",
																	"nodeType": "YulTypedName",
																	"src": "7775:7:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7796:43:15",
															"nodeType": "YulAssignment",
															"src": "7796:43:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7824:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "7824:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7835:2:15",
																				"nodeType": "YulLiteral",
																				"src": "7835:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7820:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7820:3:15"
																		},
																		"nativeSrc": "7820:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7820:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7807:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "7807:12:15"
																},
																"nativeSrc": "7807:32:15",
																"nodeType": "YulFunctionCall",
																"src": "7807:32:15"
															},
															"variableNames": [
																{
																	"name": "value_3",
																	"nativeSrc": "7796:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "7796:7:15"
																}
															]
														},
														{
															"nativeSrc": "7848:17:15",
															"nodeType": "YulAssignment",
															"src": "7848:17:15",
															"value": {
																"name": "value_3",
																"nativeSrc": "7858:7:15",
																"nodeType": "YulIdentifier",
																"src": "7858:7:15"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "7848:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7848:6:15"
																}
															]
														},
														{
															"nativeSrc": "7874:16:15",
															"nodeType": "YulVariableDeclaration",
															"src": "7874:16:15",
															"value": {
																"kind": "number",
																"nativeSrc": "7889:1:15",
																"nodeType": "YulLiteral",
																"src": "7889:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_4",
																	"nativeSrc": "7878:7:15",
																	"nodeType": "YulTypedName",
																	"src": "7878:7:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7899:44:15",
															"nodeType": "YulAssignment",
															"src": "7899:44:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7927:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "7927:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7938:3:15",
																				"nodeType": "YulLiteral",
																				"src": "7938:3:15",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7923:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7923:3:15"
																		},
																		"nativeSrc": "7923:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7923:19:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7910:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "7910:12:15"
																},
																"nativeSrc": "7910:33:15",
																"nodeType": "YulFunctionCall",
																"src": "7910:33:15"
															},
															"variableNames": [
																{
																	"name": "value_4",
																	"nativeSrc": "7899:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "7899:7:15"
																}
															]
														},
														{
															"nativeSrc": "7952:17:15",
															"nodeType": "YulAssignment",
															"src": "7952:17:15",
															"value": {
																"name": "value_4",
																"nativeSrc": "7962:7:15",
																"nodeType": "YulIdentifier",
																"src": "7962:7:15"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "7952:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7952:6:15"
																}
															]
														},
														{
															"nativeSrc": "7978:48:15",
															"nodeType": "YulVariableDeclaration",
															"src": "7978:48:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8010:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "8010:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8021:3:15",
																				"nodeType": "YulLiteral",
																				"src": "8021:3:15",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8006:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8006:3:15"
																		},
																		"nativeSrc": "8006:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8006:19:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7993:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "7993:12:15"
																},
																"nativeSrc": "7993:33:15",
																"nodeType": "YulFunctionCall",
																"src": "7993:33:15"
															},
															"variables": [
																{
																	"name": "value_5",
																	"nativeSrc": "7982:7:15",
																	"nodeType": "YulTypedName",
																	"src": "7982:7:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_5",
																		"nativeSrc": "8060:7:15",
																		"nodeType": "YulIdentifier",
																		"src": "8060:7:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "8035:24:15",
																	"nodeType": "YulIdentifier",
																	"src": "8035:24:15"
																},
																"nativeSrc": "8035:33:15",
																"nodeType": "YulFunctionCall",
																"src": "8035:33:15"
															},
															"nativeSrc": "8035:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "8035:33:15"
														},
														{
															"nativeSrc": "8077:17:15",
															"nodeType": "YulAssignment",
															"src": "8077:17:15",
															"value": {
																"name": "value_5",
																"nativeSrc": "8087:7:15",
																"nodeType": "YulIdentifier",
																"src": "8087:7:15"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nativeSrc": "8077:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8077:6:15"
																}
															]
														},
														{
															"nativeSrc": "8103:48:15",
															"nodeType": "YulVariableDeclaration",
															"src": "8103:48:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8135:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "8135:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8146:3:15",
																				"nodeType": "YulLiteral",
																				"src": "8146:3:15",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8131:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8131:3:15"
																		},
																		"nativeSrc": "8131:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8131:19:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8118:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "8118:12:15"
																},
																"nativeSrc": "8118:33:15",
																"nodeType": "YulFunctionCall",
																"src": "8118:33:15"
															},
															"variables": [
																{
																	"name": "value_6",
																	"nativeSrc": "8107:7:15",
																	"nodeType": "YulTypedName",
																	"src": "8107:7:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_6",
																		"nativeSrc": "8185:7:15",
																		"nodeType": "YulIdentifier",
																		"src": "8185:7:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "8160:24:15",
																	"nodeType": "YulIdentifier",
																	"src": "8160:24:15"
																},
																"nativeSrc": "8160:33:15",
																"nodeType": "YulFunctionCall",
																"src": "8160:33:15"
															},
															"nativeSrc": "8160:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "8160:33:15"
														},
														{
															"nativeSrc": "8202:17:15",
															"nodeType": "YulAssignment",
															"src": "8202:17:15",
															"value": {
																"name": "value_6",
																"nativeSrc": "8212:7:15",
																"nodeType": "YulIdentifier",
																"src": "8212:7:15"
															},
															"variableNames": [
																{
																	"name": "value6",
																	"nativeSrc": "8202:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8202:6:15"
																}
															]
														},
														{
															"nativeSrc": "8228:48:15",
															"nodeType": "YulVariableDeclaration",
															"src": "8228:48:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8260:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "8260:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8271:3:15",
																				"nodeType": "YulLiteral",
																				"src": "8271:3:15",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8256:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8256:3:15"
																		},
																		"nativeSrc": "8256:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8256:19:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8243:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "8243:12:15"
																},
																"nativeSrc": "8243:33:15",
																"nodeType": "YulFunctionCall",
																"src": "8243:33:15"
															},
															"variables": [
																{
																	"name": "value_7",
																	"nativeSrc": "8232:7:15",
																	"nodeType": "YulTypedName",
																	"src": "8232:7:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_7",
																		"nativeSrc": "8310:7:15",
																		"nodeType": "YulIdentifier",
																		"src": "8310:7:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "8285:24:15",
																	"nodeType": "YulIdentifier",
																	"src": "8285:24:15"
																},
																"nativeSrc": "8285:33:15",
																"nodeType": "YulFunctionCall",
																"src": "8285:33:15"
															},
															"nativeSrc": "8285:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "8285:33:15"
														},
														{
															"nativeSrc": "8327:17:15",
															"nodeType": "YulAssignment",
															"src": "8327:17:15",
															"value": {
																"name": "value_7",
																"nativeSrc": "8337:7:15",
																"nodeType": "YulIdentifier",
																"src": "8337:7:15"
															},
															"variableNames": [
																{
																	"name": "value7",
																	"nativeSrc": "8327:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8327:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$1264t_addresst_addresst_uint256t_uint256t_addresst_addresst_address",
												"nativeSrc": "7138:1212:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7252:9:15",
														"nodeType": "YulTypedName",
														"src": "7252:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7263:7:15",
														"nodeType": "YulTypedName",
														"src": "7263:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7275:6:15",
														"nodeType": "YulTypedName",
														"src": "7275:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7283:6:15",
														"nodeType": "YulTypedName",
														"src": "7283:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7291:6:15",
														"nodeType": "YulTypedName",
														"src": "7291:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "7299:6:15",
														"nodeType": "YulTypedName",
														"src": "7299:6:15",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "7307:6:15",
														"nodeType": "YulTypedName",
														"src": "7307:6:15",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "7315:6:15",
														"nodeType": "YulTypedName",
														"src": "7315:6:15",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "7323:6:15",
														"nodeType": "YulTypedName",
														"src": "7323:6:15",
														"type": ""
													},
													{
														"name": "value7",
														"nativeSrc": "7331:6:15",
														"nodeType": "YulTypedName",
														"src": "7331:6:15",
														"type": ""
													}
												],
												"src": "7138:1212:15"
											},
											{
												"body": {
													"nativeSrc": "8387:95:15",
													"nodeType": "YulBlock",
													"src": "8387:95:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8404:1:15",
																		"nodeType": "YulLiteral",
																		"src": "8404:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8411:3:15",
																				"nodeType": "YulLiteral",
																				"src": "8411:3:15",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8416:10:15",
																				"nodeType": "YulLiteral",
																				"src": "8416:10:15",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "8407:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8407:3:15"
																		},
																		"nativeSrc": "8407:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8407:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8397:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8397:6:15"
																},
																"nativeSrc": "8397:31:15",
																"nodeType": "YulFunctionCall",
																"src": "8397:31:15"
															},
															"nativeSrc": "8397:31:15",
															"nodeType": "YulExpressionStatement",
															"src": "8397:31:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8444:1:15",
																		"nodeType": "YulLiteral",
																		"src": "8444:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8447:4:15",
																		"nodeType": "YulLiteral",
																		"src": "8447:4:15",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8437:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8437:6:15"
																},
																"nativeSrc": "8437:15:15",
																"nodeType": "YulFunctionCall",
																"src": "8437:15:15"
															},
															"nativeSrc": "8437:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "8437:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8468:1:15",
																		"nodeType": "YulLiteral",
																		"src": "8468:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8471:4:15",
																		"nodeType": "YulLiteral",
																		"src": "8471:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8461:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8461:6:15"
																},
																"nativeSrc": "8461:15:15",
																"nodeType": "YulFunctionCall",
																"src": "8461:15:15"
															},
															"nativeSrc": "8461:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "8461:15:15"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "8355:127:15",
												"nodeType": "YulFunctionDefinition",
												"src": "8355:127:15"
											},
											{
												"body": {
													"nativeSrc": "8538:186:15",
													"nodeType": "YulBlock",
													"src": "8538:186:15",
													"statements": [
														{
															"nativeSrc": "8548:20:15",
															"nodeType": "YulAssignment",
															"src": "8548:20:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8563:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "8563:1:15"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8566:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "8566:1:15"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "8559:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "8559:3:15"
																},
																"nativeSrc": "8559:9:15",
																"nodeType": "YulFunctionCall",
																"src": "8559:9:15"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "8548:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "8548:7:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8615:22:15",
																"nodeType": "YulBlock",
																"src": "8615:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8617:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "8617:16:15"
																			},
																			"nativeSrc": "8617:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "8617:18:15"
																		},
																		"nativeSrc": "8617:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "8617:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "8588:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "8588:1:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8591:1:15",
																				"nodeType": "YulLiteral",
																				"src": "8591:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "8584:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8584:3:15"
																		},
																		"nativeSrc": "8584:9:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8584:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nativeSrc": "8598:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "8598:1:15"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "8605:3:15",
																						"nodeType": "YulLiteral",
																						"src": "8605:3:15",
																						"type": "",
																						"value": "255"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8610:1:15",
																						"nodeType": "YulLiteral",
																						"src": "8610:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "8601:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "8601:3:15"
																				},
																				"nativeSrc": "8601:11:15",
																				"nodeType": "YulFunctionCall",
																				"src": "8601:11:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "8595:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "8595:2:15"
																		},
																		"nativeSrc": "8595:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8595:18:15"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8580:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "8580:3:15"
																},
																"nativeSrc": "8580:34:15",
																"nodeType": "YulFunctionCall",
																"src": "8580:34:15"
															},
															"nativeSrc": "8577:60:15",
															"nodeType": "YulIf",
															"src": "8577:60:15"
														},
														{
															"body": {
																"nativeSrc": "8696:22:15",
																"nodeType": "YulBlock",
																"src": "8696:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8698:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "8698:16:15"
																			},
																			"nativeSrc": "8698:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "8698:18:15"
																		},
																		"nativeSrc": "8698:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "8698:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "8666:1:15",
																						"nodeType": "YulIdentifier",
																						"src": "8666:1:15"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "8659:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "8659:6:15"
																				},
																				"nativeSrc": "8659:9:15",
																				"nodeType": "YulFunctionCall",
																				"src": "8659:9:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "8673:1:15",
																						"nodeType": "YulIdentifier",
																						"src": "8673:1:15"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "8681:7:15",
																								"nodeType": "YulIdentifier",
																								"src": "8681:7:15"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "8690:1:15",
																								"nodeType": "YulIdentifier",
																								"src": "8690:1:15"
																							}
																						],
																						"functionName": {
																							"name": "sdiv",
																							"nativeSrc": "8676:4:15",
																							"nodeType": "YulIdentifier",
																							"src": "8676:4:15"
																						},
																						"nativeSrc": "8676:16:15",
																						"nodeType": "YulFunctionCall",
																						"src": "8676:16:15"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "8670:2:15",
																					"nodeType": "YulIdentifier",
																					"src": "8670:2:15"
																				},
																				"nativeSrc": "8670:23:15",
																				"nodeType": "YulFunctionCall",
																				"src": "8670:23:15"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "8656:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "8656:2:15"
																		},
																		"nativeSrc": "8656:38:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8656:38:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8649:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8649:6:15"
																},
																"nativeSrc": "8649:46:15",
																"nodeType": "YulFunctionCall",
																"src": "8649:46:15"
															},
															"nativeSrc": "8646:72:15",
															"nodeType": "YulIf",
															"src": "8646:72:15"
														}
													]
												},
												"name": "checked_mul_t_int256",
												"nativeSrc": "8487:237:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8517:1:15",
														"nodeType": "YulTypedName",
														"src": "8517:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8520:1:15",
														"nodeType": "YulTypedName",
														"src": "8520:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "8526:7:15",
														"nodeType": "YulTypedName",
														"src": "8526:7:15",
														"type": ""
													}
												],
												"src": "8487:237:15"
											},
											{
												"body": {
													"nativeSrc": "8903:168:15",
													"nodeType": "YulBlock",
													"src": "8903:168:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8920:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "8920:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8931:2:15",
																		"nodeType": "YulLiteral",
																		"src": "8931:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8913:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8913:6:15"
																},
																"nativeSrc": "8913:21:15",
																"nodeType": "YulFunctionCall",
																"src": "8913:21:15"
															},
															"nativeSrc": "8913:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "8913:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8954:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "8954:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8965:2:15",
																				"nodeType": "YulLiteral",
																				"src": "8965:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8950:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8950:3:15"
																		},
																		"nativeSrc": "8950:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8950:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8970:2:15",
																		"nodeType": "YulLiteral",
																		"src": "8970:2:15",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8943:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8943:6:15"
																},
																"nativeSrc": "8943:30:15",
																"nodeType": "YulFunctionCall",
																"src": "8943:30:15"
															},
															"nativeSrc": "8943:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "8943:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8993:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "8993:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9004:2:15",
																				"nodeType": "YulLiteral",
																				"src": "9004:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8989:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8989:3:15"
																		},
																		"nativeSrc": "8989:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8989:18:15"
																	},
																	{
																		"hexValue": "496e76616c69642070726963652066656564",
																		"kind": "string",
																		"nativeSrc": "9009:20:15",
																		"nodeType": "YulLiteral",
																		"src": "9009:20:15",
																		"type": "",
																		"value": "Invalid price feed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8982:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8982:6:15"
																},
																"nativeSrc": "8982:48:15",
																"nodeType": "YulFunctionCall",
																"src": "8982:48:15"
															},
															"nativeSrc": "8982:48:15",
															"nodeType": "YulExpressionStatement",
															"src": "8982:48:15"
														},
														{
															"nativeSrc": "9039:26:15",
															"nodeType": "YulAssignment",
															"src": "9039:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9051:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "9051:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9062:2:15",
																		"nodeType": "YulLiteral",
																		"src": "9062:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9047:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "9047:3:15"
																},
																"nativeSrc": "9047:18:15",
																"nodeType": "YulFunctionCall",
																"src": "9047:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9039:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "9039:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dbf071520f0a95e05bb16da9ebcd49bf0ac91e963647b14497245101e3db79a3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8729:342:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8880:9:15",
														"nodeType": "YulTypedName",
														"src": "8880:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8894:4:15",
														"nodeType": "YulTypedName",
														"src": "8894:4:15",
														"type": ""
													}
												],
												"src": "8729:342:15"
											},
											{
												"body": {
													"nativeSrc": "9128:116:15",
													"nodeType": "YulBlock",
													"src": "9128:116:15",
													"statements": [
														{
															"nativeSrc": "9138:20:15",
															"nodeType": "YulAssignment",
															"src": "9138:20:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9153:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "9153:1:15"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9156:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "9156:1:15"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "9149:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "9149:3:15"
																},
																"nativeSrc": "9149:9:15",
																"nodeType": "YulFunctionCall",
																"src": "9149:9:15"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "9138:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "9138:7:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9216:22:15",
																"nodeType": "YulBlock",
																"src": "9216:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9218:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "9218:16:15"
																			},
																			"nativeSrc": "9218:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "9218:18:15"
																		},
																		"nativeSrc": "9218:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "9218:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "9187:1:15",
																						"nodeType": "YulIdentifier",
																						"src": "9187:1:15"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "9180:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "9180:6:15"
																				},
																				"nativeSrc": "9180:9:15",
																				"nodeType": "YulFunctionCall",
																				"src": "9180:9:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "9194:1:15",
																						"nodeType": "YulIdentifier",
																						"src": "9194:1:15"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "9201:7:15",
																								"nodeType": "YulIdentifier",
																								"src": "9201:7:15"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "9210:1:15",
																								"nodeType": "YulIdentifier",
																								"src": "9210:1:15"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "9197:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "9197:3:15"
																						},
																						"nativeSrc": "9197:15:15",
																						"nodeType": "YulFunctionCall",
																						"src": "9197:15:15"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "9191:2:15",
																					"nodeType": "YulIdentifier",
																					"src": "9191:2:15"
																				},
																				"nativeSrc": "9191:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "9191:22:15"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "9177:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "9177:2:15"
																		},
																		"nativeSrc": "9177:37:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9177:37:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9170:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "9170:6:15"
																},
																"nativeSrc": "9170:45:15",
																"nodeType": "YulFunctionCall",
																"src": "9170:45:15"
															},
															"nativeSrc": "9167:71:15",
															"nodeType": "YulIf",
															"src": "9167:71:15"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "9076:168:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9107:1:15",
														"nodeType": "YulTypedName",
														"src": "9107:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9110:1:15",
														"nodeType": "YulTypedName",
														"src": "9110:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "9116:7:15",
														"nodeType": "YulTypedName",
														"src": "9116:7:15",
														"type": ""
													}
												],
												"src": "9076:168:15"
											},
											{
												"body": {
													"nativeSrc": "9295:171:15",
													"nodeType": "YulBlock",
													"src": "9295:171:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "9326:111:15",
																"nodeType": "YulBlock",
																"src": "9326:111:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9347:1:15",
																					"nodeType": "YulLiteral",
																					"src": "9347:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "9354:3:15",
																							"nodeType": "YulLiteral",
																							"src": "9354:3:15",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "9359:10:15",
																							"nodeType": "YulLiteral",
																							"src": "9359:10:15",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "9350:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "9350:3:15"
																					},
																					"nativeSrc": "9350:20:15",
																					"nodeType": "YulFunctionCall",
																					"src": "9350:20:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "9340:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "9340:6:15"
																			},
																			"nativeSrc": "9340:31:15",
																			"nodeType": "YulFunctionCall",
																			"src": "9340:31:15"
																		},
																		"nativeSrc": "9340:31:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "9340:31:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9391:1:15",
																					"nodeType": "YulLiteral",
																					"src": "9391:1:15",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9394:4:15",
																					"nodeType": "YulLiteral",
																					"src": "9394:4:15",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "9384:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "9384:6:15"
																			},
																			"nativeSrc": "9384:15:15",
																			"nodeType": "YulFunctionCall",
																			"src": "9384:15:15"
																		},
																		"nativeSrc": "9384:15:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "9384:15:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9419:1:15",
																					"nodeType": "YulLiteral",
																					"src": "9419:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9422:4:15",
																					"nodeType": "YulLiteral",
																					"src": "9422:4:15",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9412:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "9412:6:15"
																			},
																			"nativeSrc": "9412:15:15",
																			"nodeType": "YulFunctionCall",
																			"src": "9412:15:15"
																		},
																		"nativeSrc": "9412:15:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "9412:15:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9315:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "9315:1:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9308:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "9308:6:15"
																},
																"nativeSrc": "9308:9:15",
																"nodeType": "YulFunctionCall",
																"src": "9308:9:15"
															},
															"nativeSrc": "9305:132:15",
															"nodeType": "YulIf",
															"src": "9305:132:15"
														},
														{
															"nativeSrc": "9446:14:15",
															"nodeType": "YulAssignment",
															"src": "9446:14:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9455:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "9455:1:15"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9458:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "9458:1:15"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "9451:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "9451:3:15"
																},
																"nativeSrc": "9451:9:15",
																"nodeType": "YulFunctionCall",
																"src": "9451:9:15"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "9446:1:15",
																	"nodeType": "YulIdentifier",
																	"src": "9446:1:15"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "9249:217:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9280:1:15",
														"nodeType": "YulTypedName",
														"src": "9280:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9283:1:15",
														"nodeType": "YulTypedName",
														"src": "9283:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "9289:1:15",
														"nodeType": "YulTypedName",
														"src": "9289:1:15",
														"type": ""
													}
												],
												"src": "9249:217:15"
											},
											{
												"body": {
													"nativeSrc": "9520:79:15",
													"nodeType": "YulBlock",
													"src": "9520:79:15",
													"statements": [
														{
															"nativeSrc": "9530:17:15",
															"nodeType": "YulAssignment",
															"src": "9530:17:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9542:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "9542:1:15"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9545:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "9545:1:15"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "9538:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "9538:3:15"
																},
																"nativeSrc": "9538:9:15",
																"nodeType": "YulFunctionCall",
																"src": "9538:9:15"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "9530:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "9530:4:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9571:22:15",
																"nodeType": "YulBlock",
																"src": "9571:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9573:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "9573:16:15"
																			},
																			"nativeSrc": "9573:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "9573:18:15"
																		},
																		"nativeSrc": "9573:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "9573:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "9562:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "9562:4:15"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "9568:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "9568:1:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9559:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "9559:2:15"
																},
																"nativeSrc": "9559:11:15",
																"nodeType": "YulFunctionCall",
																"src": "9559:11:15"
															},
															"nativeSrc": "9556:37:15",
															"nodeType": "YulIf",
															"src": "9556:37:15"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "9471:128:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9502:1:15",
														"nodeType": "YulTypedName",
														"src": "9502:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9505:1:15",
														"nodeType": "YulTypedName",
														"src": "9505:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "9511:4:15",
														"nodeType": "YulTypedName",
														"src": "9511:4:15",
														"type": ""
													}
												],
												"src": "9471:128:15"
											},
											{
												"body": {
													"nativeSrc": "9673:306:15",
													"nodeType": "YulBlock",
													"src": "9673:306:15",
													"statements": [
														{
															"nativeSrc": "9683:10:15",
															"nodeType": "YulAssignment",
															"src": "9683:10:15",
															"value": {
																"kind": "number",
																"nativeSrc": "9692:1:15",
																"nodeType": "YulLiteral",
																"src": "9692:1:15",
																"type": "",
																"value": "1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "9683:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "9683:5:15"
																}
															]
														},
														{
															"nativeSrc": "9702:13:15",
															"nodeType": "YulAssignment",
															"src": "9702:13:15",
															"value": {
																"name": "_base",
																"nativeSrc": "9710:5:15",
																"nodeType": "YulIdentifier",
																"src": "9710:5:15"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "9702:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "9702:4:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9760:213:15",
																"nodeType": "YulBlock",
																"src": "9760:213:15",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "9802:22:15",
																			"nodeType": "YulBlock",
																			"src": "9802:22:15",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "9804:16:15",
																							"nodeType": "YulIdentifier",
																							"src": "9804:16:15"
																						},
																						"nativeSrc": "9804:18:15",
																						"nodeType": "YulFunctionCall",
																						"src": "9804:18:15"
																					},
																					"nativeSrc": "9804:18:15",
																					"nodeType": "YulExpressionStatement",
																					"src": "9804:18:15"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "9780:4:15",
																					"nodeType": "YulIdentifier",
																					"src": "9780:4:15"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "9790:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "9790:3:15"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "9795:4:15",
																							"nodeType": "YulIdentifier",
																							"src": "9795:4:15"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "9786:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "9786:3:15"
																					},
																					"nativeSrc": "9786:14:15",
																					"nodeType": "YulFunctionCall",
																					"src": "9786:14:15"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "9777:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "9777:2:15"
																			},
																			"nativeSrc": "9777:24:15",
																			"nodeType": "YulFunctionCall",
																			"src": "9777:24:15"
																		},
																		"nativeSrc": "9774:50:15",
																		"nodeType": "YulIf",
																		"src": "9774:50:15"
																	},
																	{
																		"body": {
																			"nativeSrc": "9857:29:15",
																			"nodeType": "YulBlock",
																			"src": "9857:29:15",
																			"statements": [
																				{
																					"nativeSrc": "9859:25:15",
																					"nodeType": "YulAssignment",
																					"src": "9859:25:15",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "9872:5:15",
																								"nodeType": "YulIdentifier",
																								"src": "9872:5:15"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "9879:4:15",
																								"nodeType": "YulIdentifier",
																								"src": "9879:4:15"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "9868:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "9868:3:15"
																						},
																						"nativeSrc": "9868:16:15",
																						"nodeType": "YulFunctionCall",
																						"src": "9868:16:15"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "9859:5:15",
																							"nodeType": "YulIdentifier",
																							"src": "9859:5:15"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "9844:8:15",
																					"nodeType": "YulIdentifier",
																					"src": "9844:8:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9854:1:15",
																					"nodeType": "YulLiteral",
																					"src": "9854:1:15",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "9840:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "9840:3:15"
																			},
																			"nativeSrc": "9840:16:15",
																			"nodeType": "YulFunctionCall",
																			"src": "9840:16:15"
																		},
																		"nativeSrc": "9837:49:15",
																		"nodeType": "YulIf",
																		"src": "9837:49:15"
																	},
																	{
																		"nativeSrc": "9899:23:15",
																		"nodeType": "YulAssignment",
																		"src": "9899:23:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "9911:4:15",
																					"nodeType": "YulIdentifier",
																					"src": "9911:4:15"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "9917:4:15",
																					"nodeType": "YulIdentifier",
																					"src": "9917:4:15"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "9907:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "9907:3:15"
																			},
																			"nativeSrc": "9907:15:15",
																			"nodeType": "YulFunctionCall",
																			"src": "9907:15:15"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "9899:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "9899:4:15"
																			}
																		]
																	},
																	{
																		"nativeSrc": "9935:28:15",
																		"nodeType": "YulAssignment",
																		"src": "9935:28:15",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9951:1:15",
																					"nodeType": "YulLiteral",
																					"src": "9951:1:15",
																					"type": "",
																					"value": "1"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "9954:8:15",
																					"nodeType": "YulIdentifier",
																					"src": "9954:8:15"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nativeSrc": "9947:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "9947:3:15"
																			},
																			"nativeSrc": "9947:16:15",
																			"nodeType": "YulFunctionCall",
																			"src": "9947:16:15"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "9935:8:15",
																				"nodeType": "YulIdentifier",
																				"src": "9935:8:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "9735:8:15",
																		"nodeType": "YulIdentifier",
																		"src": "9735:8:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9745:1:15",
																		"nodeType": "YulLiteral",
																		"src": "9745:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9732:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "9732:2:15"
																},
																"nativeSrc": "9732:15:15",
																"nodeType": "YulFunctionCall",
																"src": "9732:15:15"
															},
															"nativeSrc": "9724:249:15",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "9748:3:15",
																"nodeType": "YulBlock",
																"src": "9748:3:15",
																"statements": []
															},
															"pre": {
																"nativeSrc": "9728:3:15",
																"nodeType": "YulBlock",
																"src": "9728:3:15",
																"statements": []
															},
															"src": "9724:249:15"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "9604:375:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nativeSrc": "9632:5:15",
														"nodeType": "YulTypedName",
														"src": "9632:5:15",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "9639:8:15",
														"nodeType": "YulTypedName",
														"src": "9639:8:15",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "9649:3:15",
														"nodeType": "YulTypedName",
														"src": "9649:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "9657:5:15",
														"nodeType": "YulTypedName",
														"src": "9657:5:15",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "9664:4:15",
														"nodeType": "YulTypedName",
														"src": "9664:4:15",
														"type": ""
													}
												],
												"src": "9604:375:15"
											},
											{
												"body": {
													"nativeSrc": "10043:843:15",
													"nodeType": "YulBlock",
													"src": "10043:843:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "10081:52:15",
																"nodeType": "YulBlock",
																"src": "10081:52:15",
																"statements": [
																	{
																		"nativeSrc": "10095:10:15",
																		"nodeType": "YulAssignment",
																		"src": "10095:10:15",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "10104:1:15",
																			"nodeType": "YulLiteral",
																			"src": "10104:1:15",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "10095:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "10095:5:15"
																			}
																		]
																	},
																	{
																		"nativeSrc": "10118:5:15",
																		"nodeType": "YulLeave",
																		"src": "10118:5:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "10063:8:15",
																		"nodeType": "YulIdentifier",
																		"src": "10063:8:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10056:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10056:6:15"
																},
																"nativeSrc": "10056:16:15",
																"nodeType": "YulFunctionCall",
																"src": "10056:16:15"
															},
															"nativeSrc": "10053:80:15",
															"nodeType": "YulIf",
															"src": "10053:80:15"
														},
														{
															"body": {
																"nativeSrc": "10166:52:15",
																"nodeType": "YulBlock",
																"src": "10166:52:15",
																"statements": [
																	{
																		"nativeSrc": "10180:10:15",
																		"nodeType": "YulAssignment",
																		"src": "10180:10:15",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "10189:1:15",
																			"nodeType": "YulLiteral",
																			"src": "10189:1:15",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "10180:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "10180:5:15"
																			}
																		]
																	},
																	{
																		"nativeSrc": "10203:5:15",
																		"nodeType": "YulLeave",
																		"src": "10203:5:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "10152:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "10152:4:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10145:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10145:6:15"
																},
																"nativeSrc": "10145:12:15",
																"nodeType": "YulFunctionCall",
																"src": "10145:12:15"
															},
															"nativeSrc": "10142:76:15",
															"nodeType": "YulIf",
															"src": "10142:76:15"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "10254:52:15",
																		"nodeType": "YulBlock",
																		"src": "10254:52:15",
																		"statements": [
																			{
																				"nativeSrc": "10268:10:15",
																				"nodeType": "YulAssignment",
																				"src": "10268:10:15",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "10277:1:15",
																					"nodeType": "YulLiteral",
																					"src": "10277:1:15",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "10268:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "10268:5:15"
																					}
																				]
																			},
																			{
																				"nativeSrc": "10291:5:15",
																				"nodeType": "YulLeave",
																				"src": "10291:5:15"
																			}
																		]
																	},
																	"nativeSrc": "10247:59:15",
																	"nodeType": "YulCase",
																	"src": "10247:59:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10252:1:15",
																		"nodeType": "YulLiteral",
																		"src": "10252:1:15",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "10322:167:15",
																		"nodeType": "YulBlock",
																		"src": "10322:167:15",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "10357:22:15",
																					"nodeType": "YulBlock",
																					"src": "10357:22:15",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "10359:16:15",
																									"nodeType": "YulIdentifier",
																									"src": "10359:16:15"
																								},
																								"nativeSrc": "10359:18:15",
																								"nodeType": "YulFunctionCall",
																								"src": "10359:18:15"
																							},
																							"nativeSrc": "10359:18:15",
																							"nodeType": "YulExpressionStatement",
																							"src": "10359:18:15"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "10342:8:15",
																							"nodeType": "YulIdentifier",
																							"src": "10342:8:15"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "10352:3:15",
																							"nodeType": "YulLiteral",
																							"src": "10352:3:15",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "10339:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "10339:2:15"
																					},
																					"nativeSrc": "10339:17:15",
																					"nodeType": "YulFunctionCall",
																					"src": "10339:17:15"
																				},
																				"nativeSrc": "10336:43:15",
																				"nodeType": "YulIf",
																				"src": "10336:43:15"
																			},
																			{
																				"nativeSrc": "10392:25:15",
																				"nodeType": "YulAssignment",
																				"src": "10392:25:15",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "10405:8:15",
																							"nodeType": "YulIdentifier",
																							"src": "10405:8:15"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "10415:1:15",
																							"nodeType": "YulLiteral",
																							"src": "10415:1:15",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "10401:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "10401:3:15"
																					},
																					"nativeSrc": "10401:16:15",
																					"nodeType": "YulFunctionCall",
																					"src": "10401:16:15"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "10392:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "10392:5:15"
																					}
																				]
																			},
																			{
																				"nativeSrc": "10430:11:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "10430:11:15",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "10440:1:15",
																					"nodeType": "YulLiteral",
																					"src": "10440:1:15",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "_1",
																						"nativeSrc": "10434:2:15",
																						"nodeType": "YulTypedName",
																						"src": "10434:2:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "10454:7:15",
																				"nodeType": "YulAssignment",
																				"src": "10454:7:15",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "10460:1:15",
																					"nodeType": "YulLiteral",
																					"src": "10460:1:15",
																					"type": "",
																					"value": "0"
																				},
																				"variableNames": [
																					{
																						"name": "_1",
																						"nativeSrc": "10454:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "10454:2:15"
																					}
																				]
																			},
																			{
																				"nativeSrc": "10474:5:15",
																				"nodeType": "YulLeave",
																				"src": "10474:5:15"
																			}
																		]
																	},
																	"nativeSrc": "10315:174:15",
																	"nodeType": "YulCase",
																	"src": "10315:174:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10320:1:15",
																		"nodeType": "YulLiteral",
																		"src": "10320:1:15",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "10234:4:15",
																"nodeType": "YulIdentifier",
																"src": "10234:4:15"
															},
															"nativeSrc": "10227:262:15",
															"nodeType": "YulSwitch",
															"src": "10227:262:15"
														},
														{
															"body": {
																"nativeSrc": "10587:114:15",
																"nodeType": "YulBlock",
																"src": "10587:114:15",
																"statements": [
																	{
																		"nativeSrc": "10601:28:15",
																		"nodeType": "YulAssignment",
																		"src": "10601:28:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "10614:4:15",
																					"nodeType": "YulIdentifier",
																					"src": "10614:4:15"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "10620:8:15",
																					"nodeType": "YulIdentifier",
																					"src": "10620:8:15"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "10610:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "10610:3:15"
																			},
																			"nativeSrc": "10610:19:15",
																			"nodeType": "YulFunctionCall",
																			"src": "10610:19:15"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "10601:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "10601:5:15"
																			}
																		]
																	},
																	{
																		"nativeSrc": "10642:11:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "10642:11:15",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "10652:1:15",
																			"nodeType": "YulLiteral",
																			"src": "10652:1:15",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nativeSrc": "10646:2:15",
																				"nodeType": "YulTypedName",
																				"src": "10646:2:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "10666:7:15",
																		"nodeType": "YulAssignment",
																		"src": "10666:7:15",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "10672:1:15",
																			"nodeType": "YulLiteral",
																			"src": "10672:1:15",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "_2",
																				"nativeSrc": "10666:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "10666:2:15"
																			}
																		]
																	},
																	{
																		"nativeSrc": "10686:5:15",
																		"nodeType": "YulLeave",
																		"src": "10686:5:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "10511:4:15",
																						"nodeType": "YulIdentifier",
																						"src": "10511:4:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10517:2:15",
																						"nodeType": "YulLiteral",
																						"src": "10517:2:15",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "10508:2:15",
																					"nodeType": "YulIdentifier",
																					"src": "10508:2:15"
																				},
																				"nativeSrc": "10508:12:15",
																				"nodeType": "YulFunctionCall",
																				"src": "10508:12:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "10525:8:15",
																						"nodeType": "YulIdentifier",
																						"src": "10525:8:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10535:2:15",
																						"nodeType": "YulLiteral",
																						"src": "10535:2:15",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "10522:2:15",
																					"nodeType": "YulIdentifier",
																					"src": "10522:2:15"
																				},
																				"nativeSrc": "10522:16:15",
																				"nodeType": "YulFunctionCall",
																				"src": "10522:16:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10504:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10504:3:15"
																		},
																		"nativeSrc": "10504:35:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10504:35:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "10548:4:15",
																						"nodeType": "YulIdentifier",
																						"src": "10548:4:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10554:3:15",
																						"nodeType": "YulLiteral",
																						"src": "10554:3:15",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "10545:2:15",
																					"nodeType": "YulIdentifier",
																					"src": "10545:2:15"
																				},
																				"nativeSrc": "10545:13:15",
																				"nodeType": "YulFunctionCall",
																				"src": "10545:13:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "10563:8:15",
																						"nodeType": "YulIdentifier",
																						"src": "10563:8:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10573:2:15",
																						"nodeType": "YulLiteral",
																						"src": "10573:2:15",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "10560:2:15",
																					"nodeType": "YulIdentifier",
																					"src": "10560:2:15"
																				},
																				"nativeSrc": "10560:16:15",
																				"nodeType": "YulFunctionCall",
																				"src": "10560:16:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10541:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10541:3:15"
																		},
																		"nativeSrc": "10541:36:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10541:36:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "10501:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "10501:2:15"
																},
																"nativeSrc": "10501:77:15",
																"nodeType": "YulFunctionCall",
																"src": "10501:77:15"
															},
															"nativeSrc": "10498:203:15",
															"nodeType": "YulIf",
															"src": "10498:203:15"
														},
														{
															"nativeSrc": "10710:65:15",
															"nodeType": "YulVariableDeclaration",
															"src": "10710:65:15",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "10752:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "10752:4:15"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "10758:8:15",
																		"nodeType": "YulIdentifier",
																		"src": "10758:8:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "10772:1:15",
																				"nodeType": "YulLiteral",
																				"src": "10772:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "10768:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10768:3:15"
																		},
																		"nativeSrc": "10768:6:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10768:6:15"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "10733:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "10733:18:15"
																},
																"nativeSrc": "10733:42:15",
																"nodeType": "YulFunctionCall",
																"src": "10733:42:15"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nativeSrc": "10714:7:15",
																	"nodeType": "YulTypedName",
																	"src": "10714:7:15",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nativeSrc": "10723:6:15",
																	"nodeType": "YulTypedName",
																	"src": "10723:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10820:22:15",
																"nodeType": "YulBlock",
																"src": "10820:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10822:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "10822:16:15"
																			},
																			"nativeSrc": "10822:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "10822:18:15"
																		},
																		"nativeSrc": "10822:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "10822:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "10790:7:15",
																		"nodeType": "YulIdentifier",
																		"src": "10790:7:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "10807:1:15",
																						"nodeType": "YulLiteral",
																						"src": "10807:1:15",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "10803:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "10803:3:15"
																				},
																				"nativeSrc": "10803:6:15",
																				"nodeType": "YulFunctionCall",
																				"src": "10803:6:15"
																			},
																			{
																				"name": "base_1",
																				"nativeSrc": "10811:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "10811:6:15"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "10799:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10799:3:15"
																		},
																		"nativeSrc": "10799:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10799:19:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10787:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "10787:2:15"
																},
																"nativeSrc": "10787:32:15",
																"nodeType": "YulFunctionCall",
																"src": "10787:32:15"
															},
															"nativeSrc": "10784:58:15",
															"nodeType": "YulIf",
															"src": "10784:58:15"
														},
														{
															"nativeSrc": "10851:29:15",
															"nodeType": "YulAssignment",
															"src": "10851:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "10864:7:15",
																		"nodeType": "YulIdentifier",
																		"src": "10864:7:15"
																	},
																	{
																		"name": "base_1",
																		"nativeSrc": "10873:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "10873:6:15"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "10860:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "10860:3:15"
																},
																"nativeSrc": "10860:20:15",
																"nodeType": "YulFunctionCall",
																"src": "10860:20:15"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "10851:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "10851:5:15"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "9984:902:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "10014:4:15",
														"nodeType": "YulTypedName",
														"src": "10014:4:15",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "10020:8:15",
														"nodeType": "YulTypedName",
														"src": "10020:8:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "10033:5:15",
														"nodeType": "YulTypedName",
														"src": "10033:5:15",
														"type": ""
													}
												],
												"src": "9984:902:15"
											},
											{
												"body": {
													"nativeSrc": "10961:61:15",
													"nodeType": "YulBlock",
													"src": "10961:61:15",
													"statements": [
														{
															"nativeSrc": "10971:45:15",
															"nodeType": "YulAssignment",
															"src": "10971:45:15",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "11001:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "11001:4:15"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "11007:8:15",
																		"nodeType": "YulIdentifier",
																		"src": "11007:8:15"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "10980:20:15",
																	"nodeType": "YulIdentifier",
																	"src": "10980:20:15"
																},
																"nativeSrc": "10980:36:15",
																"nodeType": "YulFunctionCall",
																"src": "10980:36:15"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "10971:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "10971:5:15"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint256",
												"nativeSrc": "10891:131:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "10932:4:15",
														"nodeType": "YulTypedName",
														"src": "10932:4:15",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "10938:8:15",
														"nodeType": "YulTypedName",
														"src": "10938:8:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "10951:5:15",
														"nodeType": "YulTypedName",
														"src": "10951:5:15",
														"type": ""
													}
												],
												"src": "10891:131:15"
											},
											{
												"body": {
													"nativeSrc": "11201:176:15",
													"nodeType": "YulBlock",
													"src": "11201:176:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11218:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "11218:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11229:2:15",
																		"nodeType": "YulLiteral",
																		"src": "11229:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11211:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11211:6:15"
																},
																"nativeSrc": "11211:21:15",
																"nodeType": "YulFunctionCall",
																"src": "11211:21:15"
															},
															"nativeSrc": "11211:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "11211:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11252:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "11252:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11263:2:15",
																				"nodeType": "YulLiteral",
																				"src": "11263:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11248:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11248:3:15"
																		},
																		"nativeSrc": "11248:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11248:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11268:2:15",
																		"nodeType": "YulLiteral",
																		"src": "11268:2:15",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11241:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11241:6:15"
																},
																"nativeSrc": "11241:30:15",
																"nodeType": "YulFunctionCall",
																"src": "11241:30:15"
															},
															"nativeSrc": "11241:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "11241:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11291:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "11291:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11302:2:15",
																				"nodeType": "YulLiteral",
																				"src": "11302:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11287:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11287:3:15"
																		},
																		"nativeSrc": "11287:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11287:18:15"
																	},
																	{
																		"hexValue": "556e737570706f72746564207061796d656e74206d6574686f64",
																		"kind": "string",
																		"nativeSrc": "11307:28:15",
																		"nodeType": "YulLiteral",
																		"src": "11307:28:15",
																		"type": "",
																		"value": "Unsupported payment method"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11280:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11280:6:15"
																},
																"nativeSrc": "11280:56:15",
																"nodeType": "YulFunctionCall",
																"src": "11280:56:15"
															},
															"nativeSrc": "11280:56:15",
															"nodeType": "YulExpressionStatement",
															"src": "11280:56:15"
														},
														{
															"nativeSrc": "11345:26:15",
															"nodeType": "YulAssignment",
															"src": "11345:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11357:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "11357:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11368:2:15",
																		"nodeType": "YulLiteral",
																		"src": "11368:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11353:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "11353:3:15"
																},
																"nativeSrc": "11353:18:15",
																"nodeType": "YulFunctionCall",
																"src": "11353:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11345:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "11345:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_20a9374871eda95a21489d37b12097781d38e0ea68a5e5d037a1b2c3ea6a8c04__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11027:350:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11178:9:15",
														"nodeType": "YulTypedName",
														"src": "11178:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11192:4:15",
														"nodeType": "YulTypedName",
														"src": "11192:4:15",
														"type": ""
													}
												],
												"src": "11027:350:15"
											},
											{
												"body": {
													"nativeSrc": "11441:120:15",
													"nodeType": "YulBlock",
													"src": "11441:120:15",
													"statements": [
														{
															"nativeSrc": "11451:22:15",
															"nodeType": "YulAssignment",
															"src": "11451:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11466:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "11466:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11460:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "11460:5:15"
																},
																"nativeSrc": "11460:13:15",
																"nodeType": "YulFunctionCall",
																"src": "11460:13:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "11451:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "11451:5:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11539:16:15",
																"nodeType": "YulBlock",
																"src": "11539:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "11548:1:15",
																					"nodeType": "YulLiteral",
																					"src": "11548:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11551:1:15",
																					"nodeType": "YulLiteral",
																					"src": "11551:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "11541:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "11541:6:15"
																			},
																			"nativeSrc": "11541:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "11541:12:15"
																		},
																		"nativeSrc": "11541:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "11541:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11495:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "11495:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "11506:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "11506:5:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11513:22:15",
																						"nodeType": "YulLiteral",
																						"src": "11513:22:15",
																						"type": "",
																						"value": "0xffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "11502:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "11502:3:15"
																				},
																				"nativeSrc": "11502:34:15",
																				"nodeType": "YulFunctionCall",
																				"src": "11502:34:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "11492:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "11492:2:15"
																		},
																		"nativeSrc": "11492:45:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11492:45:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11485:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11485:6:15"
																},
																"nativeSrc": "11485:53:15",
																"nodeType": "YulFunctionCall",
																"src": "11485:53:15"
															},
															"nativeSrc": "11482:73:15",
															"nodeType": "YulIf",
															"src": "11482:73:15"
														}
													]
												},
												"name": "abi_decode_uint80_fromMemory",
												"nativeSrc": "11382:179:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11420:6:15",
														"nodeType": "YulTypedName",
														"src": "11420:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "11431:5:15",
														"nodeType": "YulTypedName",
														"src": "11431:5:15",
														"type": ""
													}
												],
												"src": "11382:179:15"
											},
											{
												"body": {
													"nativeSrc": "11712:425:15",
													"nodeType": "YulBlock",
													"src": "11712:425:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "11759:16:15",
																"nodeType": "YulBlock",
																"src": "11759:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "11768:1:15",
																					"nodeType": "YulLiteral",
																					"src": "11768:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11771:1:15",
																					"nodeType": "YulLiteral",
																					"src": "11771:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "11761:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "11761:6:15"
																			},
																			"nativeSrc": "11761:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "11761:12:15"
																		},
																		"nativeSrc": "11761:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "11761:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11733:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "11733:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11742:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "11742:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11729:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11729:3:15"
																		},
																		"nativeSrc": "11729:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11729:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11754:3:15",
																		"nodeType": "YulLiteral",
																		"src": "11754:3:15",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11725:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "11725:3:15"
																},
																"nativeSrc": "11725:33:15",
																"nodeType": "YulFunctionCall",
																"src": "11725:33:15"
															},
															"nativeSrc": "11722:53:15",
															"nodeType": "YulIf",
															"src": "11722:53:15"
														},
														{
															"nativeSrc": "11784:49:15",
															"nodeType": "YulAssignment",
															"src": "11784:49:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11823:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "11823:9:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint80_fromMemory",
																	"nativeSrc": "11794:28:15",
																	"nodeType": "YulIdentifier",
																	"src": "11794:28:15"
																},
																"nativeSrc": "11794:39:15",
																"nodeType": "YulFunctionCall",
																"src": "11794:39:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "11784:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11784:6:15"
																}
															]
														},
														{
															"nativeSrc": "11842:35:15",
															"nodeType": "YulAssignment",
															"src": "11842:35:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11862:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "11862:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11873:2:15",
																				"nodeType": "YulLiteral",
																				"src": "11873:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11858:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11858:3:15"
																		},
																		"nativeSrc": "11858:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11858:18:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11852:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "11852:5:15"
																},
																"nativeSrc": "11852:25:15",
																"nodeType": "YulFunctionCall",
																"src": "11852:25:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "11842:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11842:6:15"
																}
															]
														},
														{
															"nativeSrc": "11886:14:15",
															"nodeType": "YulVariableDeclaration",
															"src": "11886:14:15",
															"value": {
																"kind": "number",
																"nativeSrc": "11899:1:15",
																"nodeType": "YulLiteral",
																"src": "11899:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "11890:5:15",
																	"nodeType": "YulTypedName",
																	"src": "11890:5:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11909:34:15",
															"nodeType": "YulAssignment",
															"src": "11909:34:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11928:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "11928:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11939:2:15",
																				"nodeType": "YulLiteral",
																				"src": "11939:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11924:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11924:3:15"
																		},
																		"nativeSrc": "11924:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11924:18:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11918:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "11918:5:15"
																},
																"nativeSrc": "11918:25:15",
																"nodeType": "YulFunctionCall",
																"src": "11918:25:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "11909:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "11909:5:15"
																}
															]
														},
														{
															"nativeSrc": "11952:15:15",
															"nodeType": "YulAssignment",
															"src": "11952:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "11962:5:15",
																"nodeType": "YulIdentifier",
																"src": "11962:5:15"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "11952:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11952:6:15"
																}
															]
														},
														{
															"nativeSrc": "11976:16:15",
															"nodeType": "YulVariableDeclaration",
															"src": "11976:16:15",
															"value": {
																"kind": "number",
																"nativeSrc": "11991:1:15",
																"nodeType": "YulLiteral",
																"src": "11991:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "11980:7:15",
																	"nodeType": "YulTypedName",
																	"src": "11980:7:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12001:36:15",
															"nodeType": "YulAssignment",
															"src": "12001:36:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12022:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "12022:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12033:2:15",
																				"nodeType": "YulLiteral",
																				"src": "12033:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12018:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "12018:3:15"
																		},
																		"nativeSrc": "12018:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12018:18:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12012:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "12012:5:15"
																},
																"nativeSrc": "12012:25:15",
																"nodeType": "YulFunctionCall",
																"src": "12012:25:15"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "12001:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "12001:7:15"
																}
															]
														},
														{
															"nativeSrc": "12046:17:15",
															"nodeType": "YulAssignment",
															"src": "12046:17:15",
															"value": {
																"name": "value_1",
																"nativeSrc": "12056:7:15",
																"nodeType": "YulIdentifier",
																"src": "12056:7:15"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "12046:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "12046:6:15"
																}
															]
														},
														{
															"nativeSrc": "12072:59:15",
															"nodeType": "YulAssignment",
															"src": "12072:59:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12115:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "12115:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12126:3:15",
																				"nodeType": "YulLiteral",
																				"src": "12126:3:15",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12111:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "12111:3:15"
																		},
																		"nativeSrc": "12111:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12111:19:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint80_fromMemory",
																	"nativeSrc": "12082:28:15",
																	"nodeType": "YulIdentifier",
																	"src": "12082:28:15"
																},
																"nativeSrc": "12082:49:15",
																"nodeType": "YulFunctionCall",
																"src": "12082:49:15"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "12072:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "12072:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
												"nativeSrc": "11566:571:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11646:9:15",
														"nodeType": "YulTypedName",
														"src": "11646:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11657:7:15",
														"nodeType": "YulTypedName",
														"src": "11657:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11669:6:15",
														"nodeType": "YulTypedName",
														"src": "11669:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11677:6:15",
														"nodeType": "YulTypedName",
														"src": "11677:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11685:6:15",
														"nodeType": "YulTypedName",
														"src": "11685:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "11693:6:15",
														"nodeType": "YulTypedName",
														"src": "11693:6:15",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "11701:6:15",
														"nodeType": "YulTypedName",
														"src": "11701:6:15",
														"type": ""
													}
												],
												"src": "11566:571:15"
											},
											{
												"body": {
													"nativeSrc": "12316:228:15",
													"nodeType": "YulBlock",
													"src": "12316:228:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12333:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "12333:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12344:2:15",
																		"nodeType": "YulLiteral",
																		"src": "12344:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12326:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "12326:6:15"
																},
																"nativeSrc": "12326:21:15",
																"nodeType": "YulFunctionCall",
																"src": "12326:21:15"
															},
															"nativeSrc": "12326:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "12326:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12367:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "12367:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12378:2:15",
																				"nodeType": "YulLiteral",
																				"src": "12378:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12363:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "12363:3:15"
																		},
																		"nativeSrc": "12363:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12363:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12383:2:15",
																		"nodeType": "YulLiteral",
																		"src": "12383:2:15",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12356:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "12356:6:15"
																},
																"nativeSrc": "12356:30:15",
																"nodeType": "YulFunctionCall",
																"src": "12356:30:15"
															},
															"nativeSrc": "12356:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "12356:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12406:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "12406:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12417:2:15",
																				"nodeType": "YulLiteral",
																				"src": "12417:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12402:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "12402:3:15"
																		},
																		"nativeSrc": "12402:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12402:18:15"
																	},
																	{
																		"hexValue": "546f6b656e20616d6f756e74206d757374206265206772656174657220746861",
																		"kind": "string",
																		"nativeSrc": "12422:34:15",
																		"nodeType": "YulLiteral",
																		"src": "12422:34:15",
																		"type": "",
																		"value": "Token amount must be greater tha"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12395:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "12395:6:15"
																},
																"nativeSrc": "12395:62:15",
																"nodeType": "YulFunctionCall",
																"src": "12395:62:15"
															},
															"nativeSrc": "12395:62:15",
															"nodeType": "YulExpressionStatement",
															"src": "12395:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12477:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "12477:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12488:2:15",
																				"nodeType": "YulLiteral",
																				"src": "12488:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12473:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "12473:3:15"
																		},
																		"nativeSrc": "12473:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12473:18:15"
																	},
																	{
																		"hexValue": "6e207a65726f",
																		"kind": "string",
																		"nativeSrc": "12493:8:15",
																		"nodeType": "YulLiteral",
																		"src": "12493:8:15",
																		"type": "",
																		"value": "n zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12466:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "12466:6:15"
																},
																"nativeSrc": "12466:36:15",
																"nodeType": "YulFunctionCall",
																"src": "12466:36:15"
															},
															"nativeSrc": "12466:36:15",
															"nodeType": "YulExpressionStatement",
															"src": "12466:36:15"
														},
														{
															"nativeSrc": "12511:27:15",
															"nodeType": "YulAssignment",
															"src": "12511:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12523:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "12523:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12534:3:15",
																		"nodeType": "YulLiteral",
																		"src": "12534:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12519:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "12519:3:15"
																},
																"nativeSrc": "12519:19:15",
																"nodeType": "YulFunctionCall",
																"src": "12519:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12511:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "12511:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1a4430203dcf8abbbd3446dbfc36d404c15a36b152eee41d8f82843f3bcf306f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12142:402:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12293:9:15",
														"nodeType": "YulTypedName",
														"src": "12293:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12307:4:15",
														"nodeType": "YulTypedName",
														"src": "12307:4:15",
														"type": ""
													}
												],
												"src": "12142:402:15"
											},
											{
												"body": {
													"nativeSrc": "12723:164:15",
													"nodeType": "YulBlock",
													"src": "12723:164:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12740:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "12740:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12751:2:15",
																		"nodeType": "YulLiteral",
																		"src": "12751:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12733:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "12733:6:15"
																},
																"nativeSrc": "12733:21:15",
																"nodeType": "YulFunctionCall",
																"src": "12733:21:15"
															},
															"nativeSrc": "12733:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "12733:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12774:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "12774:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12785:2:15",
																				"nodeType": "YulLiteral",
																				"src": "12785:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12770:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "12770:3:15"
																		},
																		"nativeSrc": "12770:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12770:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12790:2:15",
																		"nodeType": "YulLiteral",
																		"src": "12790:2:15",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12763:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "12763:6:15"
																},
																"nativeSrc": "12763:30:15",
																"nodeType": "YulFunctionCall",
																"src": "12763:30:15"
															},
															"nativeSrc": "12763:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "12763:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12813:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "12813:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12824:2:15",
																				"nodeType": "YulLiteral",
																				"src": "12824:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12809:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "12809:3:15"
																		},
																		"nativeSrc": "12809:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12809:18:15"
																	},
																	{
																		"hexValue": "4e6f206163746976652073616c65",
																		"kind": "string",
																		"nativeSrc": "12829:16:15",
																		"nodeType": "YulLiteral",
																		"src": "12829:16:15",
																		"type": "",
																		"value": "No active sale"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12802:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "12802:6:15"
																},
																"nativeSrc": "12802:44:15",
																"nodeType": "YulFunctionCall",
																"src": "12802:44:15"
															},
															"nativeSrc": "12802:44:15",
															"nodeType": "YulExpressionStatement",
															"src": "12802:44:15"
														},
														{
															"nativeSrc": "12855:26:15",
															"nodeType": "YulAssignment",
															"src": "12855:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12867:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "12867:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12878:2:15",
																		"nodeType": "YulLiteral",
																		"src": "12878:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12863:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "12863:3:15"
																},
																"nativeSrc": "12863:18:15",
																"nodeType": "YulFunctionCall",
																"src": "12863:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12855:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "12855:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_96b145fdc05e3ce6aa7fad5e89550d457f70c47d1f8d674ad654a917590143f7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12549:338:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12700:9:15",
														"nodeType": "YulTypedName",
														"src": "12700:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12714:4:15",
														"nodeType": "YulTypedName",
														"src": "12714:4:15",
														"type": ""
													}
												],
												"src": "12549:338:15"
											},
											{
												"body": {
													"nativeSrc": "13066:171:15",
													"nodeType": "YulBlock",
													"src": "13066:171:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13083:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "13083:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13094:2:15",
																		"nodeType": "YulLiteral",
																		"src": "13094:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13076:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "13076:6:15"
																},
																"nativeSrc": "13076:21:15",
																"nodeType": "YulFunctionCall",
																"src": "13076:21:15"
															},
															"nativeSrc": "13076:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "13076:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13117:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "13117:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13128:2:15",
																				"nodeType": "YulLiteral",
																				"src": "13128:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13113:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "13113:3:15"
																		},
																		"nativeSrc": "13113:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13113:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13133:2:15",
																		"nodeType": "YulLiteral",
																		"src": "13133:2:15",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13106:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "13106:6:15"
																},
																"nativeSrc": "13106:30:15",
																"nodeType": "YulFunctionCall",
																"src": "13106:30:15"
															},
															"nativeSrc": "13106:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "13106:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13156:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "13156:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13167:2:15",
																				"nodeType": "YulLiteral",
																				"src": "13167:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13152:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "13152:3:15"
																		},
																		"nativeSrc": "13152:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13152:18:15"
																	},
																	{
																		"hexValue": "49434f20616c72656164792066696e616c697a6564",
																		"kind": "string",
																		"nativeSrc": "13172:23:15",
																		"nodeType": "YulLiteral",
																		"src": "13172:23:15",
																		"type": "",
																		"value": "ICO already finalized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13145:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "13145:6:15"
																},
																"nativeSrc": "13145:51:15",
																"nodeType": "YulFunctionCall",
																"src": "13145:51:15"
															},
															"nativeSrc": "13145:51:15",
															"nodeType": "YulExpressionStatement",
															"src": "13145:51:15"
														},
														{
															"nativeSrc": "13205:26:15",
															"nodeType": "YulAssignment",
															"src": "13205:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13217:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "13217:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13228:2:15",
																		"nodeType": "YulLiteral",
																		"src": "13228:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13213:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "13213:3:15"
																},
																"nativeSrc": "13213:18:15",
																"nodeType": "YulFunctionCall",
																"src": "13213:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13205:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "13205:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d894807d07a4878944df72000c35a26fc670b7c15dedc34156876b2464e1fd23__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12892:345:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13043:9:15",
														"nodeType": "YulTypedName",
														"src": "13043:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13057:4:15",
														"nodeType": "YulTypedName",
														"src": "13057:4:15",
														"type": ""
													}
												],
												"src": "12892:345:15"
											},
											{
												"body": {
													"nativeSrc": "13416:156:15",
													"nodeType": "YulBlock",
													"src": "13416:156:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13433:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "13433:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13444:2:15",
																		"nodeType": "YulLiteral",
																		"src": "13444:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13426:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "13426:6:15"
																},
																"nativeSrc": "13426:21:15",
																"nodeType": "YulFunctionCall",
																"src": "13426:21:15"
															},
															"nativeSrc": "13426:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "13426:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13467:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "13467:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13478:2:15",
																				"nodeType": "YulLiteral",
																				"src": "13478:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13463:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "13463:3:15"
																		},
																		"nativeSrc": "13463:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13463:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13483:1:15",
																		"nodeType": "YulLiteral",
																		"src": "13483:1:15",
																		"type": "",
																		"value": "7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13456:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "13456:6:15"
																},
																"nativeSrc": "13456:29:15",
																"nodeType": "YulFunctionCall",
																"src": "13456:29:15"
															},
															"nativeSrc": "13456:29:15",
															"nodeType": "YulExpressionStatement",
															"src": "13456:29:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13505:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "13505:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13516:2:15",
																				"nodeType": "YulLiteral",
																				"src": "13516:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13501:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "13501:3:15"
																		},
																		"nativeSrc": "13501:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13501:18:15"
																	},
																	{
																		"hexValue": "667265657a6564",
																		"kind": "string",
																		"nativeSrc": "13521:9:15",
																		"nodeType": "YulLiteral",
																		"src": "13521:9:15",
																		"type": "",
																		"value": "freezed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13494:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "13494:6:15"
																},
																"nativeSrc": "13494:37:15",
																"nodeType": "YulFunctionCall",
																"src": "13494:37:15"
															},
															"nativeSrc": "13494:37:15",
															"nodeType": "YulExpressionStatement",
															"src": "13494:37:15"
														},
														{
															"nativeSrc": "13540:26:15",
															"nodeType": "YulAssignment",
															"src": "13540:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13552:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "13552:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13563:2:15",
																		"nodeType": "YulLiteral",
																		"src": "13563:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13548:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "13548:3:15"
																},
																"nativeSrc": "13548:18:15",
																"nodeType": "YulFunctionCall",
																"src": "13548:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13540:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "13540:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5e1a07520dc062ba4ff449fce67822fde8495347c7d50898a83b1dfb63596097__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13242:330:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13393:9:15",
														"nodeType": "YulTypedName",
														"src": "13393:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13407:4:15",
														"nodeType": "YulTypedName",
														"src": "13407:4:15",
														"type": ""
													}
												],
												"src": "13242:330:15"
											},
											{
												"body": {
													"nativeSrc": "13751:246:15",
													"nodeType": "YulBlock",
													"src": "13751:246:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13768:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "13768:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13779:2:15",
																		"nodeType": "YulLiteral",
																		"src": "13779:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13761:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "13761:6:15"
																},
																"nativeSrc": "13761:21:15",
																"nodeType": "YulFunctionCall",
																"src": "13761:21:15"
															},
															"nativeSrc": "13761:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "13761:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13802:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "13802:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13813:2:15",
																				"nodeType": "YulLiteral",
																				"src": "13813:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13798:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "13798:3:15"
																		},
																		"nativeSrc": "13798:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13798:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13818:2:15",
																		"nodeType": "YulLiteral",
																		"src": "13818:2:15",
																		"type": "",
																		"value": "56"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13791:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "13791:6:15"
																},
																"nativeSrc": "13791:30:15",
																"nodeType": "YulFunctionCall",
																"src": "13791:30:15"
															},
															"nativeSrc": "13791:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "13791:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13841:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "13841:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13852:2:15",
																				"nodeType": "YulLiteral",
																				"src": "13852:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13837:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "13837:3:15"
																		},
																		"nativeSrc": "13837:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13837:18:15"
																	},
																	{
																		"hexValue": "43616e6e6f742066696e616c697a653a20536f667420636170206e6f74207265",
																		"kind": "string",
																		"nativeSrc": "13857:34:15",
																		"nodeType": "YulLiteral",
																		"src": "13857:34:15",
																		"type": "",
																		"value": "Cannot finalize: Soft cap not re"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13830:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "13830:6:15"
																},
																"nativeSrc": "13830:62:15",
																"nodeType": "YulFunctionCall",
																"src": "13830:62:15"
															},
															"nativeSrc": "13830:62:15",
															"nodeType": "YulExpressionStatement",
															"src": "13830:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13912:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "13912:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13923:2:15",
																				"nodeType": "YulLiteral",
																				"src": "13923:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13908:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "13908:3:15"
																		},
																		"nativeSrc": "13908:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13908:18:15"
																	},
																	{
																		"hexValue": "6163686564206f722073616c65206973206f6e676f696e67",
																		"kind": "string",
																		"nativeSrc": "13928:26:15",
																		"nodeType": "YulLiteral",
																		"src": "13928:26:15",
																		"type": "",
																		"value": "ached or sale is ongoing"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13901:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "13901:6:15"
																},
																"nativeSrc": "13901:54:15",
																"nodeType": "YulFunctionCall",
																"src": "13901:54:15"
															},
															"nativeSrc": "13901:54:15",
															"nodeType": "YulExpressionStatement",
															"src": "13901:54:15"
														},
														{
															"nativeSrc": "13964:27:15",
															"nodeType": "YulAssignment",
															"src": "13964:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13976:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "13976:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13987:3:15",
																		"nodeType": "YulLiteral",
																		"src": "13987:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13972:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "13972:3:15"
																},
																"nativeSrc": "13972:19:15",
																"nodeType": "YulFunctionCall",
																"src": "13972:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13964:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "13964:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a7a44f673ae2e9df66fb923331ae1450d004d9638562a05cc232389560dd7c4d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13577:420:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13728:9:15",
														"nodeType": "YulTypedName",
														"src": "13728:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13742:4:15",
														"nodeType": "YulTypedName",
														"src": "13742:4:15",
														"type": ""
													}
												],
												"src": "13577:420:15"
											},
											{
												"body": {
													"nativeSrc": "14176:171:15",
													"nodeType": "YulBlock",
													"src": "14176:171:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14193:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "14193:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14204:2:15",
																		"nodeType": "YulLiteral",
																		"src": "14204:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14186:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "14186:6:15"
																},
																"nativeSrc": "14186:21:15",
																"nodeType": "YulFunctionCall",
																"src": "14186:21:15"
															},
															"nativeSrc": "14186:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "14186:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14227:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "14227:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14238:2:15",
																				"nodeType": "YulLiteral",
																				"src": "14238:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14223:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "14223:3:15"
																		},
																		"nativeSrc": "14223:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14223:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14243:2:15",
																		"nodeType": "YulLiteral",
																		"src": "14243:2:15",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14216:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "14216:6:15"
																},
																"nativeSrc": "14216:30:15",
																"nodeType": "YulFunctionCall",
																"src": "14216:30:15"
															},
															"nativeSrc": "14216:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "14216:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14266:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "14266:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14277:2:15",
																				"nodeType": "YulLiteral",
																				"src": "14277:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14262:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "14262:3:15"
																		},
																		"nativeSrc": "14262:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14262:18:15"
																	},
																	{
																		"hexValue": "41697264726f70206e6f7420636f6d706c65746564",
																		"kind": "string",
																		"nativeSrc": "14282:23:15",
																		"nodeType": "YulLiteral",
																		"src": "14282:23:15",
																		"type": "",
																		"value": "Airdrop not completed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14255:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "14255:6:15"
																},
																"nativeSrc": "14255:51:15",
																"nodeType": "YulFunctionCall",
																"src": "14255:51:15"
															},
															"nativeSrc": "14255:51:15",
															"nodeType": "YulExpressionStatement",
															"src": "14255:51:15"
														},
														{
															"nativeSrc": "14315:26:15",
															"nodeType": "YulAssignment",
															"src": "14315:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14327:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "14327:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14338:2:15",
																		"nodeType": "YulLiteral",
																		"src": "14338:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14323:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "14323:3:15"
																},
																"nativeSrc": "14323:18:15",
																"nodeType": "YulFunctionCall",
																"src": "14323:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14315:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "14315:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_aff7558382c088943ad2bf11af33e010b3e0eab9fe7e943d464ecefccf0c4c65__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14002:345:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14153:9:15",
														"nodeType": "YulTypedName",
														"src": "14153:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14167:4:15",
														"nodeType": "YulTypedName",
														"src": "14167:4:15",
														"type": ""
													}
												],
												"src": "14002:345:15"
											},
											{
												"body": {
													"nativeSrc": "14526:165:15",
													"nodeType": "YulBlock",
													"src": "14526:165:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14543:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "14543:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14554:2:15",
																		"nodeType": "YulLiteral",
																		"src": "14554:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14536:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "14536:6:15"
																},
																"nativeSrc": "14536:21:15",
																"nodeType": "YulFunctionCall",
																"src": "14536:21:15"
															},
															"nativeSrc": "14536:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "14536:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14577:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "14577:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14588:2:15",
																				"nodeType": "YulLiteral",
																				"src": "14588:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14573:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "14573:3:15"
																		},
																		"nativeSrc": "14573:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14573:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14593:2:15",
																		"nodeType": "YulLiteral",
																		"src": "14593:2:15",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14566:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "14566:6:15"
																},
																"nativeSrc": "14566:30:15",
																"nodeType": "YulFunctionCall",
																"src": "14566:30:15"
															},
															"nativeSrc": "14566:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "14566:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14616:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "14616:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14627:2:15",
																				"nodeType": "YulLiteral",
																				"src": "14627:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14612:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "14612:3:15"
																		},
																		"nativeSrc": "14612:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14612:18:15"
																	},
																	{
																		"hexValue": "416c726561647920467265657a6564",
																		"kind": "string",
																		"nativeSrc": "14632:17:15",
																		"nodeType": "YulLiteral",
																		"src": "14632:17:15",
																		"type": "",
																		"value": "Already Freezed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14605:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "14605:6:15"
																},
																"nativeSrc": "14605:45:15",
																"nodeType": "YulFunctionCall",
																"src": "14605:45:15"
															},
															"nativeSrc": "14605:45:15",
															"nodeType": "YulExpressionStatement",
															"src": "14605:45:15"
														},
														{
															"nativeSrc": "14659:26:15",
															"nodeType": "YulAssignment",
															"src": "14659:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14671:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "14671:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14682:2:15",
																		"nodeType": "YulLiteral",
																		"src": "14682:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14667:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "14667:3:15"
																},
																"nativeSrc": "14667:18:15",
																"nodeType": "YulFunctionCall",
																"src": "14667:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14659:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "14659:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_badbb5a205346d66e56ea98c8f2b97ccc2298baa0d8bcc43f8c5fabbf405c834__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14352:339:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14503:9:15",
														"nodeType": "YulTypedName",
														"src": "14503:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14517:4:15",
														"nodeType": "YulTypedName",
														"src": "14517:4:15",
														"type": ""
													}
												],
												"src": "14352:339:15"
											},
											{
												"body": {
													"nativeSrc": "14870:234:15",
													"nodeType": "YulBlock",
													"src": "14870:234:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14887:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "14887:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14898:2:15",
																		"nodeType": "YulLiteral",
																		"src": "14898:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14880:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "14880:6:15"
																},
																"nativeSrc": "14880:21:15",
																"nodeType": "YulFunctionCall",
																"src": "14880:21:15"
															},
															"nativeSrc": "14880:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "14880:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14921:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "14921:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14932:2:15",
																				"nodeType": "YulLiteral",
																				"src": "14932:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14917:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "14917:3:15"
																		},
																		"nativeSrc": "14917:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14917:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14937:2:15",
																		"nodeType": "YulLiteral",
																		"src": "14937:2:15",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14910:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "14910:6:15"
																},
																"nativeSrc": "14910:30:15",
																"nodeType": "YulFunctionCall",
																"src": "14910:30:15"
															},
															"nativeSrc": "14910:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "14910:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14960:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "14960:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14971:2:15",
																				"nodeType": "YulLiteral",
																				"src": "14971:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14956:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "14956:3:15"
																		},
																		"nativeSrc": "14956:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14956:18:15"
																	},
																	{
																		"hexValue": "53746172742074696d65206d7573742062652067726561746572207468616e20",
																		"kind": "string",
																		"nativeSrc": "14976:34:15",
																		"nodeType": "YulLiteral",
																		"src": "14976:34:15",
																		"type": "",
																		"value": "Start time must be greater than "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14949:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "14949:6:15"
																},
																"nativeSrc": "14949:62:15",
																"nodeType": "YulFunctionCall",
																"src": "14949:62:15"
															},
															"nativeSrc": "14949:62:15",
															"nodeType": "YulExpressionStatement",
															"src": "14949:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15031:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "15031:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15042:2:15",
																				"nodeType": "YulLiteral",
																				"src": "15042:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15027:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "15027:3:15"
																		},
																		"nativeSrc": "15027:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15027:18:15"
																	},
																	{
																		"hexValue": "63757272656e742074696d65",
																		"kind": "string",
																		"nativeSrc": "15047:14:15",
																		"nodeType": "YulLiteral",
																		"src": "15047:14:15",
																		"type": "",
																		"value": "current time"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15020:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "15020:6:15"
																},
																"nativeSrc": "15020:42:15",
																"nodeType": "YulFunctionCall",
																"src": "15020:42:15"
															},
															"nativeSrc": "15020:42:15",
															"nodeType": "YulExpressionStatement",
															"src": "15020:42:15"
														},
														{
															"nativeSrc": "15071:27:15",
															"nodeType": "YulAssignment",
															"src": "15071:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15083:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "15083:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15094:3:15",
																		"nodeType": "YulLiteral",
																		"src": "15094:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15079:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "15079:3:15"
																},
																"nativeSrc": "15079:19:15",
																"nodeType": "YulFunctionCall",
																"src": "15079:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15071:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "15071:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a1853a89cde833d839c669d1204571d26b8c616e74d14665150a1c9f7535c8f5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14696:408:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14847:9:15",
														"nodeType": "YulTypedName",
														"src": "14847:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14861:4:15",
														"nodeType": "YulTypedName",
														"src": "14861:4:15",
														"type": ""
													}
												],
												"src": "14696:408:15"
											},
											{
												"body": {
													"nativeSrc": "15283:230:15",
													"nodeType": "YulBlock",
													"src": "15283:230:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15300:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "15300:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15311:2:15",
																		"nodeType": "YulLiteral",
																		"src": "15311:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15293:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "15293:6:15"
																},
																"nativeSrc": "15293:21:15",
																"nodeType": "YulFunctionCall",
																"src": "15293:21:15"
															},
															"nativeSrc": "15293:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "15293:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15334:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "15334:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15345:2:15",
																				"nodeType": "YulLiteral",
																				"src": "15345:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15330:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "15330:3:15"
																		},
																		"nativeSrc": "15330:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15330:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15350:2:15",
																		"nodeType": "YulLiteral",
																		"src": "15350:2:15",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15323:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "15323:6:15"
																},
																"nativeSrc": "15323:30:15",
																"nodeType": "YulFunctionCall",
																"src": "15323:30:15"
															},
															"nativeSrc": "15323:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "15323:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15373:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "15373:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15384:2:15",
																				"nodeType": "YulLiteral",
																				"src": "15384:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15369:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "15369:3:15"
																		},
																		"nativeSrc": "15369:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15369:18:15"
																	},
																	{
																		"hexValue": "456e642074696d65206d7573742062652067726561746572207468616e207374",
																		"kind": "string",
																		"nativeSrc": "15389:34:15",
																		"nodeType": "YulLiteral",
																		"src": "15389:34:15",
																		"type": "",
																		"value": "End time must be greater than st"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15362:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "15362:6:15"
																},
																"nativeSrc": "15362:62:15",
																"nodeType": "YulFunctionCall",
																"src": "15362:62:15"
															},
															"nativeSrc": "15362:62:15",
															"nodeType": "YulExpressionStatement",
															"src": "15362:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15444:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "15444:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15455:2:15",
																				"nodeType": "YulLiteral",
																				"src": "15455:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15440:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "15440:3:15"
																		},
																		"nativeSrc": "15440:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15440:18:15"
																	},
																	{
																		"hexValue": "6172742074696d65",
																		"kind": "string",
																		"nativeSrc": "15460:10:15",
																		"nodeType": "YulLiteral",
																		"src": "15460:10:15",
																		"type": "",
																		"value": "art time"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15433:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "15433:6:15"
																},
																"nativeSrc": "15433:38:15",
																"nodeType": "YulFunctionCall",
																"src": "15433:38:15"
															},
															"nativeSrc": "15433:38:15",
															"nodeType": "YulExpressionStatement",
															"src": "15433:38:15"
														},
														{
															"nativeSrc": "15480:27:15",
															"nodeType": "YulAssignment",
															"src": "15480:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15492:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "15492:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15503:3:15",
																		"nodeType": "YulLiteral",
																		"src": "15503:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15488:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "15488:3:15"
																},
																"nativeSrc": "15488:19:15",
																"nodeType": "YulFunctionCall",
																"src": "15488:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15480:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "15480:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ed7f84a1977812752f8d634cbdcf2a56f893383408b8dd546c270e5d913f5d28__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15109:404:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15260:9:15",
														"nodeType": "YulTypedName",
														"src": "15260:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15274:4:15",
														"nodeType": "YulTypedName",
														"src": "15274:4:15",
														"type": ""
													}
												],
												"src": "15109:404:15"
											},
											{
												"body": {
													"nativeSrc": "15692:234:15",
													"nodeType": "YulBlock",
													"src": "15692:234:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15709:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "15709:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15720:2:15",
																		"nodeType": "YulLiteral",
																		"src": "15720:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15702:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "15702:6:15"
																},
																"nativeSrc": "15702:21:15",
																"nodeType": "YulFunctionCall",
																"src": "15702:21:15"
															},
															"nativeSrc": "15702:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "15702:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15743:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "15743:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15754:2:15",
																				"nodeType": "YulLiteral",
																				"src": "15754:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15739:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "15739:3:15"
																		},
																		"nativeSrc": "15739:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15739:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15759:2:15",
																		"nodeType": "YulLiteral",
																		"src": "15759:2:15",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15732:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "15732:6:15"
																},
																"nativeSrc": "15732:30:15",
																"nodeType": "YulFunctionCall",
																"src": "15732:30:15"
															},
															"nativeSrc": "15732:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "15732:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15782:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "15782:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15793:2:15",
																				"nodeType": "YulLiteral",
																				"src": "15793:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15778:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "15778:3:15"
																		},
																		"nativeSrc": "15778:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15778:18:15"
																	},
																	{
																		"hexValue": "4e65772073616c65206d75737420737461727420616674657220746865206c61",
																		"kind": "string",
																		"nativeSrc": "15798:34:15",
																		"nodeType": "YulLiteral",
																		"src": "15798:34:15",
																		"type": "",
																		"value": "New sale must start after the la"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15771:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "15771:6:15"
																},
																"nativeSrc": "15771:62:15",
																"nodeType": "YulFunctionCall",
																"src": "15771:62:15"
															},
															"nativeSrc": "15771:62:15",
															"nodeType": "YulExpressionStatement",
															"src": "15771:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15853:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "15853:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15864:2:15",
																				"nodeType": "YulLiteral",
																				"src": "15864:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15849:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "15849:3:15"
																		},
																		"nativeSrc": "15849:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15849:18:15"
																	},
																	{
																		"hexValue": "73742073616c6520656e6473",
																		"kind": "string",
																		"nativeSrc": "15869:14:15",
																		"nodeType": "YulLiteral",
																		"src": "15869:14:15",
																		"type": "",
																		"value": "st sale ends"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15842:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "15842:6:15"
																},
																"nativeSrc": "15842:42:15",
																"nodeType": "YulFunctionCall",
																"src": "15842:42:15"
															},
															"nativeSrc": "15842:42:15",
															"nodeType": "YulExpressionStatement",
															"src": "15842:42:15"
														},
														{
															"nativeSrc": "15893:27:15",
															"nodeType": "YulAssignment",
															"src": "15893:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15905:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "15905:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15916:3:15",
																		"nodeType": "YulLiteral",
																		"src": "15916:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15901:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "15901:3:15"
																},
																"nativeSrc": "15901:19:15",
																"nodeType": "YulFunctionCall",
																"src": "15901:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15893:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "15893:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_825884e5cff514634aaaba9e58516f6d797b9a08503c5bf1af68f19c16208f73__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15518:408:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15669:9:15",
														"nodeType": "YulTypedName",
														"src": "15669:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15683:4:15",
														"nodeType": "YulTypedName",
														"src": "15683:4:15",
														"type": ""
													}
												],
												"src": "15518:408:15"
											},
											{
												"body": {
													"nativeSrc": "15978:88:15",
													"nodeType": "YulBlock",
													"src": "15978:88:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "16009:22:15",
																"nodeType": "YulBlock",
																"src": "16009:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "16011:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "16011:16:15"
																			},
																			"nativeSrc": "16011:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "16011:18:15"
																		},
																		"nativeSrc": "16011:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "16011:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15994:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "15994:5:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "16005:1:15",
																				"nodeType": "YulLiteral",
																				"src": "16005:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "16001:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16001:3:15"
																		},
																		"nativeSrc": "16001:6:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16001:6:15"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "15991:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "15991:2:15"
																},
																"nativeSrc": "15991:17:15",
																"nodeType": "YulFunctionCall",
																"src": "15991:17:15"
															},
															"nativeSrc": "15988:43:15",
															"nodeType": "YulIf",
															"src": "15988:43:15"
														},
														{
															"nativeSrc": "16040:20:15",
															"nodeType": "YulAssignment",
															"src": "16040:20:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16051:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "16051:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16058:1:15",
																		"nodeType": "YulLiteral",
																		"src": "16058:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16047:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "16047:3:15"
																},
																"nativeSrc": "16047:13:15",
																"nodeType": "YulFunctionCall",
																"src": "16047:13:15"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "16040:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "16040:3:15"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "15931:135:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15960:5:15",
														"nodeType": "YulTypedName",
														"src": "15960:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "15970:3:15",
														"nodeType": "YulTypedName",
														"src": "15970:3:15",
														"type": ""
													}
												],
												"src": "15931:135:15"
											},
											{
												"body": {
													"nativeSrc": "16228:162:15",
													"nodeType": "YulBlock",
													"src": "16228:162:15",
													"statements": [
														{
															"nativeSrc": "16238:26:15",
															"nodeType": "YulAssignment",
															"src": "16238:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16250:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "16250:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16261:2:15",
																		"nodeType": "YulLiteral",
																		"src": "16261:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16246:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "16246:3:15"
																},
																"nativeSrc": "16246:18:15",
																"nodeType": "YulFunctionCall",
																"src": "16246:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16238:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "16238:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16280:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "16280:9:15"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "16291:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "16291:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16273:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "16273:6:15"
																},
																"nativeSrc": "16273:25:15",
																"nodeType": "YulFunctionCall",
																"src": "16273:25:15"
															},
															"nativeSrc": "16273:25:15",
															"nodeType": "YulExpressionStatement",
															"src": "16273:25:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16318:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "16318:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16329:2:15",
																				"nodeType": "YulLiteral",
																				"src": "16329:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16314:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16314:3:15"
																		},
																		"nativeSrc": "16314:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16314:18:15"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "16334:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "16334:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16307:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "16307:6:15"
																},
																"nativeSrc": "16307:34:15",
																"nodeType": "YulFunctionCall",
																"src": "16307:34:15"
															},
															"nativeSrc": "16307:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "16307:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16361:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "16361:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16372:2:15",
																				"nodeType": "YulLiteral",
																				"src": "16372:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16357:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16357:3:15"
																		},
																		"nativeSrc": "16357:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16357:18:15"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "16377:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "16377:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16350:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "16350:6:15"
																},
																"nativeSrc": "16350:34:15",
																"nodeType": "YulFunctionCall",
																"src": "16350:34:15"
															},
															"nativeSrc": "16350:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "16350:34:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "16071:319:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16181:9:15",
														"nodeType": "YulTypedName",
														"src": "16181:9:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "16192:6:15",
														"nodeType": "YulTypedName",
														"src": "16192:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16200:6:15",
														"nodeType": "YulTypedName",
														"src": "16200:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16208:6:15",
														"nodeType": "YulTypedName",
														"src": "16208:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16219:4:15",
														"nodeType": "YulTypedName",
														"src": "16219:4:15",
														"type": ""
													}
												],
												"src": "16071:319:15"
											},
											{
												"body": {
													"nativeSrc": "16569:167:15",
													"nodeType": "YulBlock",
													"src": "16569:167:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16586:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "16586:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16597:2:15",
																		"nodeType": "YulLiteral",
																		"src": "16597:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16579:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "16579:6:15"
																},
																"nativeSrc": "16579:21:15",
																"nodeType": "YulFunctionCall",
																"src": "16579:21:15"
															},
															"nativeSrc": "16579:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "16579:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16620:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "16620:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16631:2:15",
																				"nodeType": "YulLiteral",
																				"src": "16631:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16616:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16616:3:15"
																		},
																		"nativeSrc": "16616:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16616:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16636:2:15",
																		"nodeType": "YulLiteral",
																		"src": "16636:2:15",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16609:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "16609:6:15"
																},
																"nativeSrc": "16609:30:15",
																"nodeType": "YulFunctionCall",
																"src": "16609:30:15"
															},
															"nativeSrc": "16609:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "16609:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16659:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "16659:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16670:2:15",
																				"nodeType": "YulLiteral",
																				"src": "16670:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16655:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16655:3:15"
																		},
																		"nativeSrc": "16655:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16655:18:15"
																	},
																	{
																		"hexValue": "416c726561647920556e467265657a6564",
																		"kind": "string",
																		"nativeSrc": "16675:19:15",
																		"nodeType": "YulLiteral",
																		"src": "16675:19:15",
																		"type": "",
																		"value": "Already UnFreezed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16648:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "16648:6:15"
																},
																"nativeSrc": "16648:47:15",
																"nodeType": "YulFunctionCall",
																"src": "16648:47:15"
															},
															"nativeSrc": "16648:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "16648:47:15"
														},
														{
															"nativeSrc": "16704:26:15",
															"nodeType": "YulAssignment",
															"src": "16704:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16716:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "16716:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16727:2:15",
																		"nodeType": "YulLiteral",
																		"src": "16727:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16712:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "16712:3:15"
																},
																"nativeSrc": "16712:18:15",
																"nodeType": "YulFunctionCall",
																"src": "16712:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16704:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "16704:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_37095db391cf553f65f0eddf201a3c7bc5118c1120fca6827815be26758eff4c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16395:341:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16546:9:15",
														"nodeType": "YulTypedName",
														"src": "16546:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16560:4:15",
														"nodeType": "YulTypedName",
														"src": "16560:4:15",
														"type": ""
													}
												],
												"src": "16395:341:15"
											},
											{
												"body": {
													"nativeSrc": "16915:162:15",
													"nodeType": "YulBlock",
													"src": "16915:162:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16932:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "16932:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16943:2:15",
																		"nodeType": "YulLiteral",
																		"src": "16943:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16925:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "16925:6:15"
																},
																"nativeSrc": "16925:21:15",
																"nodeType": "YulFunctionCall",
																"src": "16925:21:15"
															},
															"nativeSrc": "16925:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "16925:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16966:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "16966:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16977:2:15",
																				"nodeType": "YulLiteral",
																				"src": "16977:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16962:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16962:3:15"
																		},
																		"nativeSrc": "16962:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16962:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16982:2:15",
																		"nodeType": "YulLiteral",
																		"src": "16982:2:15",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16955:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "16955:6:15"
																},
																"nativeSrc": "16955:30:15",
																"nodeType": "YulFunctionCall",
																"src": "16955:30:15"
															},
															"nativeSrc": "16955:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "16955:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17005:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "17005:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17016:2:15",
																				"nodeType": "YulLiteral",
																				"src": "17016:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17001:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "17001:3:15"
																		},
																		"nativeSrc": "17001:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "17001:18:15"
																	},
																	{
																		"hexValue": "53616c65206f6e676f696e67",
																		"kind": "string",
																		"nativeSrc": "17021:14:15",
																		"nodeType": "YulLiteral",
																		"src": "17021:14:15",
																		"type": "",
																		"value": "Sale ongoing"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16994:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "16994:6:15"
																},
																"nativeSrc": "16994:42:15",
																"nodeType": "YulFunctionCall",
																"src": "16994:42:15"
															},
															"nativeSrc": "16994:42:15",
															"nodeType": "YulExpressionStatement",
															"src": "16994:42:15"
														},
														{
															"nativeSrc": "17045:26:15",
															"nodeType": "YulAssignment",
															"src": "17045:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17057:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "17057:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17068:2:15",
																		"nodeType": "YulLiteral",
																		"src": "17068:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17053:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "17053:3:15"
																},
																"nativeSrc": "17053:18:15",
																"nodeType": "YulFunctionCall",
																"src": "17053:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17045:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "17045:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_52e3d128a4ea4439173e3f4b78f0e12548c2c4449a80c4b2fbefb1fd3e6a7665__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16741:336:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16892:9:15",
														"nodeType": "YulTypedName",
														"src": "16892:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16906:4:15",
														"nodeType": "YulTypedName",
														"src": "16906:4:15",
														"type": ""
													}
												],
												"src": "16741:336:15"
											},
											{
												"body": {
													"nativeSrc": "17256:166:15",
													"nodeType": "YulBlock",
													"src": "17256:166:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17273:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "17273:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17284:2:15",
																		"nodeType": "YulLiteral",
																		"src": "17284:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17266:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "17266:6:15"
																},
																"nativeSrc": "17266:21:15",
																"nodeType": "YulFunctionCall",
																"src": "17266:21:15"
															},
															"nativeSrc": "17266:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "17266:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17307:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "17307:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17318:2:15",
																				"nodeType": "YulLiteral",
																				"src": "17318:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17303:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "17303:3:15"
																		},
																		"nativeSrc": "17303:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "17303:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17323:2:15",
																		"nodeType": "YulLiteral",
																		"src": "17323:2:15",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17296:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "17296:6:15"
																},
																"nativeSrc": "17296:30:15",
																"nodeType": "YulFunctionCall",
																"src": "17296:30:15"
															},
															"nativeSrc": "17296:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "17296:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17346:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "17346:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17357:2:15",
																				"nodeType": "YulLiteral",
																				"src": "17357:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17342:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "17342:3:15"
																		},
																		"nativeSrc": "17342:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "17342:18:15"
																	},
																	{
																		"hexValue": "536f6674206361702072656163686564",
																		"kind": "string",
																		"nativeSrc": "17362:18:15",
																		"nodeType": "YulLiteral",
																		"src": "17362:18:15",
																		"type": "",
																		"value": "Soft cap reached"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17335:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "17335:6:15"
																},
																"nativeSrc": "17335:46:15",
																"nodeType": "YulFunctionCall",
																"src": "17335:46:15"
															},
															"nativeSrc": "17335:46:15",
															"nodeType": "YulExpressionStatement",
															"src": "17335:46:15"
														},
														{
															"nativeSrc": "17390:26:15",
															"nodeType": "YulAssignment",
															"src": "17390:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17402:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "17402:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17413:2:15",
																		"nodeType": "YulLiteral",
																		"src": "17413:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17398:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "17398:3:15"
																},
																"nativeSrc": "17398:18:15",
																"nodeType": "YulFunctionCall",
																"src": "17398:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17390:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "17390:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7c68e13a7a3bf736cdb65f14ebef38f840872b490e156aead879b05f23b99d80__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17082:340:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17233:9:15",
														"nodeType": "YulTypedName",
														"src": "17233:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17247:4:15",
														"nodeType": "YulTypedName",
														"src": "17247:4:15",
														"type": ""
													}
												],
												"src": "17082:340:15"
											},
											{
												"body": {
													"nativeSrc": "17459:95:15",
													"nodeType": "YulBlock",
													"src": "17459:95:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17476:1:15",
																		"nodeType": "YulLiteral",
																		"src": "17476:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "17483:3:15",
																				"nodeType": "YulLiteral",
																				"src": "17483:3:15",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17488:10:15",
																				"nodeType": "YulLiteral",
																				"src": "17488:10:15",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "17479:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "17479:3:15"
																		},
																		"nativeSrc": "17479:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "17479:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17469:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "17469:6:15"
																},
																"nativeSrc": "17469:31:15",
																"nodeType": "YulFunctionCall",
																"src": "17469:31:15"
															},
															"nativeSrc": "17469:31:15",
															"nodeType": "YulExpressionStatement",
															"src": "17469:31:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17516:1:15",
																		"nodeType": "YulLiteral",
																		"src": "17516:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17519:4:15",
																		"nodeType": "YulLiteral",
																		"src": "17519:4:15",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17509:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "17509:6:15"
																},
																"nativeSrc": "17509:15:15",
																"nodeType": "YulFunctionCall",
																"src": "17509:15:15"
															},
															"nativeSrc": "17509:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "17509:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17540:1:15",
																		"nodeType": "YulLiteral",
																		"src": "17540:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17543:4:15",
																		"nodeType": "YulLiteral",
																		"src": "17543:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "17533:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "17533:6:15"
																},
																"nativeSrc": "17533:15:15",
																"nodeType": "YulFunctionCall",
																"src": "17533:15:15"
															},
															"nativeSrc": "17533:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "17533:15:15"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "17427:127:15",
												"nodeType": "YulFunctionDefinition",
												"src": "17427:127:15"
											},
											{
												"body": {
													"nativeSrc": "17750:14:15",
													"nodeType": "YulBlock",
													"src": "17750:14:15",
													"statements": [
														{
															"nativeSrc": "17752:10:15",
															"nodeType": "YulAssignment",
															"src": "17752:10:15",
															"value": {
																"name": "pos",
																"nativeSrc": "17759:3:15",
																"nodeType": "YulIdentifier",
																"src": "17759:3:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17752:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "17752:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "17559:205:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17734:3:15",
														"nodeType": "YulTypedName",
														"src": "17734:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17742:3:15",
														"nodeType": "YulTypedName",
														"src": "17742:3:15",
														"type": ""
													}
												],
												"src": "17559:205:15"
											},
											{
												"body": {
													"nativeSrc": "17943:167:15",
													"nodeType": "YulBlock",
													"src": "17943:167:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17960:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "17960:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17971:2:15",
																		"nodeType": "YulLiteral",
																		"src": "17971:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17953:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "17953:6:15"
																},
																"nativeSrc": "17953:21:15",
																"nodeType": "YulFunctionCall",
																"src": "17953:21:15"
															},
															"nativeSrc": "17953:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "17953:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17994:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "17994:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18005:2:15",
																				"nodeType": "YulLiteral",
																				"src": "18005:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17990:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "17990:3:15"
																		},
																		"nativeSrc": "17990:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "17990:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18010:2:15",
																		"nodeType": "YulLiteral",
																		"src": "18010:2:15",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17983:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "17983:6:15"
																},
																"nativeSrc": "17983:30:15",
																"nodeType": "YulFunctionCall",
																"src": "17983:30:15"
															},
															"nativeSrc": "17983:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "17983:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18033:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "18033:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18044:2:15",
																				"nodeType": "YulLiteral",
																				"src": "18044:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18029:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "18029:3:15"
																		},
																		"nativeSrc": "18029:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "18029:18:15"
																	},
																	{
																		"hexValue": "424e4220726566756e64206661696c6564",
																		"kind": "string",
																		"nativeSrc": "18049:19:15",
																		"nodeType": "YulLiteral",
																		"src": "18049:19:15",
																		"type": "",
																		"value": "BNB refund failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18022:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "18022:6:15"
																},
																"nativeSrc": "18022:47:15",
																"nodeType": "YulFunctionCall",
																"src": "18022:47:15"
															},
															"nativeSrc": "18022:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "18022:47:15"
														},
														{
															"nativeSrc": "18078:26:15",
															"nodeType": "YulAssignment",
															"src": "18078:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18090:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "18090:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18101:2:15",
																		"nodeType": "YulLiteral",
																		"src": "18101:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18086:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "18086:3:15"
																},
																"nativeSrc": "18086:18:15",
																"nodeType": "YulFunctionCall",
																"src": "18086:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18078:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "18078:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9061bb5d1762fde4c9d1190b8ce0bd989de0debb196be3c053155f36b52a6ce0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17769:341:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17920:9:15",
														"nodeType": "YulTypedName",
														"src": "17920:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17934:4:15",
														"nodeType": "YulTypedName",
														"src": "17934:4:15",
														"type": ""
													}
												],
												"src": "17769:341:15"
											},
											{
												"body": {
													"nativeSrc": "18244:145:15",
													"nodeType": "YulBlock",
													"src": "18244:145:15",
													"statements": [
														{
															"nativeSrc": "18254:26:15",
															"nodeType": "YulAssignment",
															"src": "18254:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18266:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "18266:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18277:2:15",
																		"nodeType": "YulLiteral",
																		"src": "18277:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18262:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "18262:3:15"
																},
																"nativeSrc": "18262:18:15",
																"nodeType": "YulFunctionCall",
																"src": "18262:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18254:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "18254:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18296:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "18296:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "18311:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "18311:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "18327:3:15",
																								"nodeType": "YulLiteral",
																								"src": "18327:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "18332:1:15",
																								"nodeType": "YulLiteral",
																								"src": "18332:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "18323:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "18323:3:15"
																						},
																						"nativeSrc": "18323:11:15",
																						"nodeType": "YulFunctionCall",
																						"src": "18323:11:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "18336:1:15",
																						"nodeType": "YulLiteral",
																						"src": "18336:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "18319:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "18319:3:15"
																				},
																				"nativeSrc": "18319:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "18319:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "18307:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "18307:3:15"
																		},
																		"nativeSrc": "18307:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "18307:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18289:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "18289:6:15"
																},
																"nativeSrc": "18289:51:15",
																"nodeType": "YulFunctionCall",
																"src": "18289:51:15"
															},
															"nativeSrc": "18289:51:15",
															"nodeType": "YulExpressionStatement",
															"src": "18289:51:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18360:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "18360:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18371:2:15",
																				"nodeType": "YulLiteral",
																				"src": "18371:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18356:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "18356:3:15"
																		},
																		"nativeSrc": "18356:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "18356:18:15"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "18376:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "18376:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18349:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "18349:6:15"
																},
																"nativeSrc": "18349:34:15",
																"nodeType": "YulFunctionCall",
																"src": "18349:34:15"
															},
															"nativeSrc": "18349:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "18349:34:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "18115:274:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18205:9:15",
														"nodeType": "YulTypedName",
														"src": "18205:9:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18216:6:15",
														"nodeType": "YulTypedName",
														"src": "18216:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18224:6:15",
														"nodeType": "YulTypedName",
														"src": "18224:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18235:4:15",
														"nodeType": "YulTypedName",
														"src": "18235:4:15",
														"type": ""
													}
												],
												"src": "18115:274:15"
											},
											{
												"body": {
													"nativeSrc": "18472:199:15",
													"nodeType": "YulBlock",
													"src": "18472:199:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "18518:16:15",
																"nodeType": "YulBlock",
																"src": "18518:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "18527:1:15",
																					"nodeType": "YulLiteral",
																					"src": "18527:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "18530:1:15",
																					"nodeType": "YulLiteral",
																					"src": "18530:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "18520:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "18520:6:15"
																			},
																			"nativeSrc": "18520:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "18520:12:15"
																		},
																		"nativeSrc": "18520:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "18520:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "18493:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "18493:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18502:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "18502:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18489:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "18489:3:15"
																		},
																		"nativeSrc": "18489:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "18489:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18514:2:15",
																		"nodeType": "YulLiteral",
																		"src": "18514:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "18485:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "18485:3:15"
																},
																"nativeSrc": "18485:32:15",
																"nodeType": "YulFunctionCall",
																"src": "18485:32:15"
															},
															"nativeSrc": "18482:52:15",
															"nodeType": "YulIf",
															"src": "18482:52:15"
														},
														{
															"nativeSrc": "18543:29:15",
															"nodeType": "YulVariableDeclaration",
															"src": "18543:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18562:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "18562:9:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "18556:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "18556:5:15"
																},
																"nativeSrc": "18556:16:15",
																"nodeType": "YulFunctionCall",
																"src": "18556:16:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "18547:5:15",
																	"nodeType": "YulTypedName",
																	"src": "18547:5:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18625:16:15",
																"nodeType": "YulBlock",
																"src": "18625:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "18634:1:15",
																					"nodeType": "YulLiteral",
																					"src": "18634:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "18637:1:15",
																					"nodeType": "YulLiteral",
																					"src": "18637:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "18627:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "18627:6:15"
																			},
																			"nativeSrc": "18627:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "18627:12:15"
																		},
																		"nativeSrc": "18627:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "18627:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "18594:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "18594:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "18615:5:15",
																								"nodeType": "YulIdentifier",
																								"src": "18615:5:15"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "18608:6:15",
																							"nodeType": "YulIdentifier",
																							"src": "18608:6:15"
																						},
																						"nativeSrc": "18608:13:15",
																						"nodeType": "YulFunctionCall",
																						"src": "18608:13:15"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "18601:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "18601:6:15"
																				},
																				"nativeSrc": "18601:21:15",
																				"nodeType": "YulFunctionCall",
																				"src": "18601:21:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "18591:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "18591:2:15"
																		},
																		"nativeSrc": "18591:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "18591:32:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "18584:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "18584:6:15"
																},
																"nativeSrc": "18584:40:15",
																"nodeType": "YulFunctionCall",
																"src": "18584:40:15"
															},
															"nativeSrc": "18581:60:15",
															"nodeType": "YulIf",
															"src": "18581:60:15"
														},
														{
															"nativeSrc": "18650:15:15",
															"nodeType": "YulAssignment",
															"src": "18650:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "18660:5:15",
																"nodeType": "YulIdentifier",
																"src": "18660:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "18650:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "18650:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "18394:277:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18438:9:15",
														"nodeType": "YulTypedName",
														"src": "18438:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "18449:7:15",
														"nodeType": "YulTypedName",
														"src": "18449:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "18461:6:15",
														"nodeType": "YulTypedName",
														"src": "18461:6:15",
														"type": ""
													}
												],
												"src": "18394:277:15"
											},
											{
												"body": {
													"nativeSrc": "18850:174:15",
													"nodeType": "YulBlock",
													"src": "18850:174:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18867:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "18867:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18878:2:15",
																		"nodeType": "YulLiteral",
																		"src": "18878:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18860:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "18860:6:15"
																},
																"nativeSrc": "18860:21:15",
																"nodeType": "YulFunctionCall",
																"src": "18860:21:15"
															},
															"nativeSrc": "18860:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "18860:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18901:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "18901:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18912:2:15",
																				"nodeType": "YulLiteral",
																				"src": "18912:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18897:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "18897:3:15"
																		},
																		"nativeSrc": "18897:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "18897:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18917:2:15",
																		"nodeType": "YulLiteral",
																		"src": "18917:2:15",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18890:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "18890:6:15"
																},
																"nativeSrc": "18890:30:15",
																"nodeType": "YulFunctionCall",
																"src": "18890:30:15"
															},
															"nativeSrc": "18890:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "18890:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18940:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "18940:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18951:2:15",
																				"nodeType": "YulLiteral",
																				"src": "18951:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18936:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "18936:3:15"
																		},
																		"nativeSrc": "18936:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "18936:18:15"
																	},
																	{
																		"hexValue": "537461626c65636f696e20726566756e64206661696c6564",
																		"kind": "string",
																		"nativeSrc": "18956:26:15",
																		"nodeType": "YulLiteral",
																		"src": "18956:26:15",
																		"type": "",
																		"value": "Stablecoin refund failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18929:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "18929:6:15"
																},
																"nativeSrc": "18929:54:15",
																"nodeType": "YulFunctionCall",
																"src": "18929:54:15"
															},
															"nativeSrc": "18929:54:15",
															"nodeType": "YulExpressionStatement",
															"src": "18929:54:15"
														},
														{
															"nativeSrc": "18992:26:15",
															"nodeType": "YulAssignment",
															"src": "18992:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19004:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "19004:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19015:2:15",
																		"nodeType": "YulLiteral",
																		"src": "19015:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19000:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "19000:3:15"
																},
																"nativeSrc": "19000:18:15",
																"nodeType": "YulFunctionCall",
																"src": "19000:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18992:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "18992:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4c76e179fd3981278de294ff97a7ccb030d7577d0e7f55ac3f87e02e3abaa726__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18676:348:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18827:9:15",
														"nodeType": "YulTypedName",
														"src": "18827:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18841:4:15",
														"nodeType": "YulTypedName",
														"src": "18841:4:15",
														"type": ""
													}
												],
												"src": "18676:348:15"
											},
											{
												"body": {
													"nativeSrc": "19203:227:15",
													"nodeType": "YulBlock",
													"src": "19203:227:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19220:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "19220:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19231:2:15",
																		"nodeType": "YulLiteral",
																		"src": "19231:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19213:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "19213:6:15"
																},
																"nativeSrc": "19213:21:15",
																"nodeType": "YulFunctionCall",
																"src": "19213:21:15"
															},
															"nativeSrc": "19213:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "19213:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19254:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "19254:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19265:2:15",
																				"nodeType": "YulLiteral",
																				"src": "19265:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19250:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "19250:3:15"
																		},
																		"nativeSrc": "19250:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "19250:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19270:2:15",
																		"nodeType": "YulLiteral",
																		"src": "19270:2:15",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19243:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "19243:6:15"
																},
																"nativeSrc": "19243:30:15",
																"nodeType": "YulFunctionCall",
																"src": "19243:30:15"
															},
															"nativeSrc": "19243:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "19243:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19293:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "19293:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19304:2:15",
																				"nodeType": "YulLiteral",
																				"src": "19304:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19289:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "19289:3:15"
																		},
																		"nativeSrc": "19289:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "19289:18:15"
																	},
																	{
																		"hexValue": "556e737570706f72746564207061796d656e74206d6574686f6420666f722072",
																		"kind": "string",
																		"nativeSrc": "19309:34:15",
																		"nodeType": "YulLiteral",
																		"src": "19309:34:15",
																		"type": "",
																		"value": "Unsupported payment method for r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19282:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "19282:6:15"
																},
																"nativeSrc": "19282:62:15",
																"nodeType": "YulFunctionCall",
																"src": "19282:62:15"
															},
															"nativeSrc": "19282:62:15",
															"nodeType": "YulExpressionStatement",
															"src": "19282:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19364:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "19364:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19375:2:15",
																				"nodeType": "YulLiteral",
																				"src": "19375:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19360:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "19360:3:15"
																		},
																		"nativeSrc": "19360:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "19360:18:15"
																	},
																	{
																		"hexValue": "6566756e64",
																		"kind": "string",
																		"nativeSrc": "19380:7:15",
																		"nodeType": "YulLiteral",
																		"src": "19380:7:15",
																		"type": "",
																		"value": "efund"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19353:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "19353:6:15"
																},
																"nativeSrc": "19353:35:15",
																"nodeType": "YulFunctionCall",
																"src": "19353:35:15"
															},
															"nativeSrc": "19353:35:15",
															"nodeType": "YulExpressionStatement",
															"src": "19353:35:15"
														},
														{
															"nativeSrc": "19397:27:15",
															"nodeType": "YulAssignment",
															"src": "19397:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19409:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "19409:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19420:3:15",
																		"nodeType": "YulLiteral",
																		"src": "19420:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19405:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "19405:3:15"
																},
																"nativeSrc": "19405:19:15",
																"nodeType": "YulFunctionCall",
																"src": "19405:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19397:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "19397:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e1a05a85d6c11679f33a730fbeebefa1f4b9de0998aad7aecca4e9ec70fa59da__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19029:401:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19180:9:15",
														"nodeType": "YulTypedName",
														"src": "19180:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19194:4:15",
														"nodeType": "YulTypedName",
														"src": "19194:4:15",
														"type": ""
													}
												],
												"src": "19029:401:15"
											},
											{
												"body": {
													"nativeSrc": "19580:142:15",
													"nodeType": "YulBlock",
													"src": "19580:142:15",
													"statements": [
														{
															"nativeSrc": "19590:26:15",
															"nodeType": "YulAssignment",
															"src": "19590:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19602:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "19602:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19613:2:15",
																		"nodeType": "YulLiteral",
																		"src": "19613:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19598:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "19598:3:15"
																},
																"nativeSrc": "19598:18:15",
																"nodeType": "YulFunctionCall",
																"src": "19598:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19590:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "19590:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19632:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "19632:9:15"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "19643:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "19643:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19625:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "19625:6:15"
																},
																"nativeSrc": "19625:25:15",
																"nodeType": "YulFunctionCall",
																"src": "19625:25:15"
															},
															"nativeSrc": "19625:25:15",
															"nodeType": "YulExpressionStatement",
															"src": "19625:25:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "19689:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "19689:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19701:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "19701:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19712:2:15",
																				"nodeType": "YulLiteral",
																				"src": "19712:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19697:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "19697:3:15"
																		},
																		"nativeSrc": "19697:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "19697:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_enum_PaymentMethod",
																	"nativeSrc": "19659:29:15",
																	"nodeType": "YulIdentifier",
																	"src": "19659:29:15"
																},
																"nativeSrc": "19659:57:15",
																"nodeType": "YulFunctionCall",
																"src": "19659:57:15"
															},
															"nativeSrc": "19659:57:15",
															"nodeType": "YulExpressionStatement",
															"src": "19659:57:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_enum$_PaymentMethod_$1706__to_t_uint256_t_uint8__fromStack_reversed",
												"nativeSrc": "19435:287:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19541:9:15",
														"nodeType": "YulTypedName",
														"src": "19541:9:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19552:6:15",
														"nodeType": "YulTypedName",
														"src": "19552:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19560:6:15",
														"nodeType": "YulTypedName",
														"src": "19560:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19571:4:15",
														"nodeType": "YulTypedName",
														"src": "19571:4:15",
														"type": ""
													}
												],
												"src": "19435:287:15"
											},
											{
												"body": {
													"nativeSrc": "19759:95:15",
													"nodeType": "YulBlock",
													"src": "19759:95:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19776:1:15",
																		"nodeType": "YulLiteral",
																		"src": "19776:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "19783:3:15",
																				"nodeType": "YulLiteral",
																				"src": "19783:3:15",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19788:10:15",
																				"nodeType": "YulLiteral",
																				"src": "19788:10:15",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "19779:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "19779:3:15"
																		},
																		"nativeSrc": "19779:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "19779:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19769:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "19769:6:15"
																},
																"nativeSrc": "19769:31:15",
																"nodeType": "YulFunctionCall",
																"src": "19769:31:15"
															},
															"nativeSrc": "19769:31:15",
															"nodeType": "YulExpressionStatement",
															"src": "19769:31:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19816:1:15",
																		"nodeType": "YulLiteral",
																		"src": "19816:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19819:4:15",
																		"nodeType": "YulLiteral",
																		"src": "19819:4:15",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19809:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "19809:6:15"
																},
																"nativeSrc": "19809:15:15",
																"nodeType": "YulFunctionCall",
																"src": "19809:15:15"
															},
															"nativeSrc": "19809:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "19809:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19840:1:15",
																		"nodeType": "YulLiteral",
																		"src": "19840:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19843:4:15",
																		"nodeType": "YulLiteral",
																		"src": "19843:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "19833:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "19833:6:15"
																},
																"nativeSrc": "19833:15:15",
																"nodeType": "YulFunctionCall",
																"src": "19833:15:15"
															},
															"nativeSrc": "19833:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "19833:15:15"
														}
													]
												},
												"name": "panic_error_0x31",
												"nativeSrc": "19727:127:15",
												"nodeType": "YulFunctionDefinition",
												"src": "19727:127:15"
											},
											{
												"body": {
													"nativeSrc": "19906:89:15",
													"nodeType": "YulBlock",
													"src": "19906:89:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "19933:22:15",
																"nodeType": "YulBlock",
																"src": "19933:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "19935:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "19935:16:15"
																			},
																			"nativeSrc": "19935:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "19935:18:15"
																		},
																		"nativeSrc": "19935:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "19935:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19926:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "19926:5:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "19919:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "19919:6:15"
																},
																"nativeSrc": "19919:13:15",
																"nodeType": "YulFunctionCall",
																"src": "19919:13:15"
															},
															"nativeSrc": "19916:39:15",
															"nodeType": "YulIf",
															"src": "19916:39:15"
														},
														{
															"nativeSrc": "19964:25:15",
															"nodeType": "YulAssignment",
															"src": "19964:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19975:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "19975:5:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "19986:1:15",
																				"nodeType": "YulLiteral",
																				"src": "19986:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "19982:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "19982:3:15"
																		},
																		"nativeSrc": "19982:6:15",
																		"nodeType": "YulFunctionCall",
																		"src": "19982:6:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19971:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "19971:3:15"
																},
																"nativeSrc": "19971:18:15",
																"nodeType": "YulFunctionCall",
																"src": "19971:18:15"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "19964:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "19964:3:15"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nativeSrc": "19859:136:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19888:5:15",
														"nodeType": "YulTypedName",
														"src": "19888:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "19898:3:15",
														"nodeType": "YulTypedName",
														"src": "19898:3:15",
														"type": ""
													}
												],
												"src": "19859:136:15"
											},
											{
												"body": {
													"nativeSrc": "20174:175:15",
													"nodeType": "YulBlock",
													"src": "20174:175:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20191:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "20191:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20202:2:15",
																		"nodeType": "YulLiteral",
																		"src": "20202:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20184:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "20184:6:15"
																},
																"nativeSrc": "20184:21:15",
																"nodeType": "YulFunctionCall",
																"src": "20184:21:15"
															},
															"nativeSrc": "20184:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "20184:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20225:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "20225:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20236:2:15",
																				"nodeType": "YulLiteral",
																				"src": "20236:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20221:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "20221:3:15"
																		},
																		"nativeSrc": "20221:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "20221:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20241:2:15",
																		"nodeType": "YulLiteral",
																		"src": "20241:2:15",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20214:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "20214:6:15"
																},
																"nativeSrc": "20214:30:15",
																"nodeType": "YulFunctionCall",
																"src": "20214:30:15"
															},
															"nativeSrc": "20214:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "20214:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20264:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "20264:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20275:2:15",
																				"nodeType": "YulLiteral",
																				"src": "20275:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20260:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "20260:3:15"
																		},
																		"nativeSrc": "20260:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "20260:18:15"
																	},
																	{
																		"hexValue": "41697264726f7020616c726561647920636f6d706c65746564",
																		"kind": "string",
																		"nativeSrc": "20280:27:15",
																		"nodeType": "YulLiteral",
																		"src": "20280:27:15",
																		"type": "",
																		"value": "Airdrop already completed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20253:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "20253:6:15"
																},
																"nativeSrc": "20253:55:15",
																"nodeType": "YulFunctionCall",
																"src": "20253:55:15"
															},
															"nativeSrc": "20253:55:15",
															"nodeType": "YulExpressionStatement",
															"src": "20253:55:15"
														},
														{
															"nativeSrc": "20317:26:15",
															"nodeType": "YulAssignment",
															"src": "20317:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20329:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "20329:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20340:2:15",
																		"nodeType": "YulLiteral",
																		"src": "20340:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20325:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "20325:3:15"
																},
																"nativeSrc": "20325:18:15",
																"nodeType": "YulFunctionCall",
																"src": "20325:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20317:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "20317:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_35194372afc15163c58aa5af5530ba0e7f2576a9d985e6f8d166066860d6966a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20000:349:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20151:9:15",
														"nodeType": "YulTypedName",
														"src": "20151:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20165:4:15",
														"nodeType": "YulTypedName",
														"src": "20165:4:15",
														"type": ""
													}
												],
												"src": "20000:349:15"
											},
											{
												"body": {
													"nativeSrc": "20435:149:15",
													"nodeType": "YulBlock",
													"src": "20435:149:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "20481:16:15",
																"nodeType": "YulBlock",
																"src": "20481:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "20490:1:15",
																					"nodeType": "YulLiteral",
																					"src": "20490:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "20493:1:15",
																					"nodeType": "YulLiteral",
																					"src": "20493:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "20483:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "20483:6:15"
																			},
																			"nativeSrc": "20483:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "20483:12:15"
																		},
																		"nativeSrc": "20483:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "20483:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "20456:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "20456:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20465:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "20465:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20452:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "20452:3:15"
																		},
																		"nativeSrc": "20452:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "20452:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20477:2:15",
																		"nodeType": "YulLiteral",
																		"src": "20477:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "20448:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "20448:3:15"
																},
																"nativeSrc": "20448:32:15",
																"nodeType": "YulFunctionCall",
																"src": "20448:32:15"
															},
															"nativeSrc": "20445:52:15",
															"nodeType": "YulIf",
															"src": "20445:52:15"
														},
														{
															"nativeSrc": "20506:14:15",
															"nodeType": "YulVariableDeclaration",
															"src": "20506:14:15",
															"value": {
																"kind": "number",
																"nativeSrc": "20519:1:15",
																"nodeType": "YulLiteral",
																"src": "20519:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "20510:5:15",
																	"nodeType": "YulTypedName",
																	"src": "20510:5:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "20529:25:15",
															"nodeType": "YulAssignment",
															"src": "20529:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20544:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "20544:9:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "20538:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "20538:5:15"
																},
																"nativeSrc": "20538:16:15",
																"nodeType": "YulFunctionCall",
																"src": "20538:16:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "20529:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "20529:5:15"
																}
															]
														},
														{
															"nativeSrc": "20563:15:15",
															"nodeType": "YulAssignment",
															"src": "20563:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "20573:5:15",
																"nodeType": "YulIdentifier",
																"src": "20573:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "20563:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "20563:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "20354:230:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20401:9:15",
														"nodeType": "YulTypedName",
														"src": "20401:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "20412:7:15",
														"nodeType": "YulTypedName",
														"src": "20412:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "20424:6:15",
														"nodeType": "YulTypedName",
														"src": "20424:6:15",
														"type": ""
													}
												],
												"src": "20354:230:15"
											},
											{
												"body": {
													"nativeSrc": "20763:168:15",
													"nodeType": "YulBlock",
													"src": "20763:168:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20780:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "20780:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20791:2:15",
																		"nodeType": "YulLiteral",
																		"src": "20791:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20773:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "20773:6:15"
																},
																"nativeSrc": "20773:21:15",
																"nodeType": "YulFunctionCall",
																"src": "20773:21:15"
															},
															"nativeSrc": "20773:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "20773:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20814:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "20814:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20825:2:15",
																				"nodeType": "YulLiteral",
																				"src": "20825:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20810:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "20810:3:15"
																		},
																		"nativeSrc": "20810:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "20810:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20830:2:15",
																		"nodeType": "YulLiteral",
																		"src": "20830:2:15",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20803:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "20803:6:15"
																},
																"nativeSrc": "20803:30:15",
																"nodeType": "YulFunctionCall",
																"src": "20803:30:15"
															},
															"nativeSrc": "20803:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "20803:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20853:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "20853:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20864:2:15",
																				"nodeType": "YulLiteral",
																				"src": "20864:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20849:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "20849:3:15"
																		},
																		"nativeSrc": "20849:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "20849:18:15"
																	},
																	{
																		"hexValue": "496e73756666696369656e742046756e6473",
																		"kind": "string",
																		"nativeSrc": "20869:20:15",
																		"nodeType": "YulLiteral",
																		"src": "20869:20:15",
																		"type": "",
																		"value": "Insufficient Funds"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20842:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "20842:6:15"
																},
																"nativeSrc": "20842:48:15",
																"nodeType": "YulFunctionCall",
																"src": "20842:48:15"
															},
															"nativeSrc": "20842:48:15",
															"nodeType": "YulExpressionStatement",
															"src": "20842:48:15"
														},
														{
															"nativeSrc": "20899:26:15",
															"nodeType": "YulAssignment",
															"src": "20899:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20911:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "20911:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20922:2:15",
																		"nodeType": "YulLiteral",
																		"src": "20922:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20907:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "20907:3:15"
																},
																"nativeSrc": "20907:18:15",
																"nodeType": "YulFunctionCall",
																"src": "20907:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20899:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "20899:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20589:342:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20740:9:15",
														"nodeType": "YulTypedName",
														"src": "20740:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20754:4:15",
														"nodeType": "YulTypedName",
														"src": "20754:4:15",
														"type": ""
													}
												],
												"src": "20589:342:15"
											},
											{
												"body": {
													"nativeSrc": "21093:214:15",
													"nodeType": "YulBlock",
													"src": "21093:214:15",
													"statements": [
														{
															"nativeSrc": "21103:26:15",
															"nodeType": "YulAssignment",
															"src": "21103:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21115:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "21115:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21126:2:15",
																		"nodeType": "YulLiteral",
																		"src": "21126:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21111:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "21111:3:15"
																},
																"nativeSrc": "21111:18:15",
																"nodeType": "YulFunctionCall",
																"src": "21111:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21103:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "21103:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21145:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "21145:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "21160:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "21160:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "21176:3:15",
																								"nodeType": "YulLiteral",
																								"src": "21176:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "21181:1:15",
																								"nodeType": "YulLiteral",
																								"src": "21181:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "21172:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "21172:3:15"
																						},
																						"nativeSrc": "21172:11:15",
																						"nodeType": "YulFunctionCall",
																						"src": "21172:11:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "21185:1:15",
																						"nodeType": "YulLiteral",
																						"src": "21185:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "21168:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "21168:3:15"
																				},
																				"nativeSrc": "21168:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "21168:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "21156:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "21156:3:15"
																		},
																		"nativeSrc": "21156:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "21156:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21138:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "21138:6:15"
																},
																"nativeSrc": "21138:51:15",
																"nodeType": "YulFunctionCall",
																"src": "21138:51:15"
															},
															"nativeSrc": "21138:51:15",
															"nodeType": "YulExpressionStatement",
															"src": "21138:51:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21209:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "21209:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21220:2:15",
																				"nodeType": "YulLiteral",
																				"src": "21220:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21205:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "21205:3:15"
																		},
																		"nativeSrc": "21205:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "21205:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "21229:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "21229:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "21245:3:15",
																								"nodeType": "YulLiteral",
																								"src": "21245:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "21250:1:15",
																								"nodeType": "YulLiteral",
																								"src": "21250:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "21241:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "21241:3:15"
																						},
																						"nativeSrc": "21241:11:15",
																						"nodeType": "YulFunctionCall",
																						"src": "21241:11:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "21254:1:15",
																						"nodeType": "YulLiteral",
																						"src": "21254:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "21237:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "21237:3:15"
																				},
																				"nativeSrc": "21237:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "21237:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "21225:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "21225:3:15"
																		},
																		"nativeSrc": "21225:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "21225:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21198:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "21198:6:15"
																},
																"nativeSrc": "21198:60:15",
																"nodeType": "YulFunctionCall",
																"src": "21198:60:15"
															},
															"nativeSrc": "21198:60:15",
															"nodeType": "YulExpressionStatement",
															"src": "21198:60:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21278:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "21278:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21289:2:15",
																				"nodeType": "YulLiteral",
																				"src": "21289:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21274:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "21274:3:15"
																		},
																		"nativeSrc": "21274:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "21274:18:15"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "21294:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "21294:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21267:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "21267:6:15"
																},
																"nativeSrc": "21267:34:15",
																"nodeType": "YulFunctionCall",
																"src": "21267:34:15"
															},
															"nativeSrc": "21267:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "21267:34:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "20936:371:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21046:9:15",
														"nodeType": "YulTypedName",
														"src": "21046:9:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "21057:6:15",
														"nodeType": "YulTypedName",
														"src": "21057:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "21065:6:15",
														"nodeType": "YulTypedName",
														"src": "21065:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "21073:6:15",
														"nodeType": "YulTypedName",
														"src": "21073:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21084:4:15",
														"nodeType": "YulTypedName",
														"src": "21084:4:15",
														"type": ""
													}
												],
												"src": "20936:371:15"
											},
											{
												"body": {
													"nativeSrc": "21486:171:15",
													"nodeType": "YulBlock",
													"src": "21486:171:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21503:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "21503:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21514:2:15",
																		"nodeType": "YulLiteral",
																		"src": "21514:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21496:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "21496:6:15"
																},
																"nativeSrc": "21496:21:15",
																"nodeType": "YulFunctionCall",
																"src": "21496:21:15"
															},
															"nativeSrc": "21496:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "21496:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21537:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "21537:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21548:2:15",
																				"nodeType": "YulLiteral",
																				"src": "21548:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21533:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "21533:3:15"
																		},
																		"nativeSrc": "21533:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "21533:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21553:2:15",
																		"nodeType": "YulLiteral",
																		"src": "21553:2:15",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21526:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "21526:6:15"
																},
																"nativeSrc": "21526:30:15",
																"nodeType": "YulFunctionCall",
																"src": "21526:30:15"
															},
															"nativeSrc": "21526:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "21526:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21576:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "21576:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21587:2:15",
																				"nodeType": "YulLiteral",
																				"src": "21587:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21572:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "21572:3:15"
																		},
																		"nativeSrc": "21572:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "21572:18:15"
																	},
																	{
																		"hexValue": "546f6b656e207472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "21592:23:15",
																		"nodeType": "YulLiteral",
																		"src": "21592:23:15",
																		"type": "",
																		"value": "Token transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21565:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "21565:6:15"
																},
																"nativeSrc": "21565:51:15",
																"nodeType": "YulFunctionCall",
																"src": "21565:51:15"
															},
															"nativeSrc": "21565:51:15",
															"nodeType": "YulExpressionStatement",
															"src": "21565:51:15"
														},
														{
															"nativeSrc": "21625:26:15",
															"nodeType": "YulAssignment",
															"src": "21625:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21637:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "21637:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21648:2:15",
																		"nodeType": "YulLiteral",
																		"src": "21648:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21633:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "21633:3:15"
																},
																"nativeSrc": "21633:18:15",
																"nodeType": "YulFunctionCall",
																"src": "21633:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21625:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "21625:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "21312:345:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21463:9:15",
														"nodeType": "YulTypedName",
														"src": "21463:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21477:4:15",
														"nodeType": "YulTypedName",
														"src": "21477:4:15",
														"type": ""
													}
												],
												"src": "21312:345:15"
											},
											{
												"body": {
													"nativeSrc": "21836:173:15",
													"nodeType": "YulBlock",
													"src": "21836:173:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21853:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "21853:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21864:2:15",
																		"nodeType": "YulLiteral",
																		"src": "21864:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21846:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "21846:6:15"
																},
																"nativeSrc": "21846:21:15",
																"nodeType": "YulFunctionCall",
																"src": "21846:21:15"
															},
															"nativeSrc": "21846:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "21846:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21887:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "21887:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21898:2:15",
																				"nodeType": "YulLiteral",
																				"src": "21898:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21883:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "21883:3:15"
																		},
																		"nativeSrc": "21883:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "21883:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21903:2:15",
																		"nodeType": "YulLiteral",
																		"src": "21903:2:15",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21876:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "21876:6:15"
																},
																"nativeSrc": "21876:30:15",
																"nodeType": "YulFunctionCall",
																"src": "21876:30:15"
															},
															"nativeSrc": "21876:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "21876:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21926:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "21926:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21937:2:15",
																				"nodeType": "YulLiteral",
																				"src": "21937:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21922:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "21922:3:15"
																		},
																		"nativeSrc": "21922:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "21922:18:15"
																	},
																	{
																		"hexValue": "4f776e65722063616e6e6f742062757920746f6b656e73",
																		"kind": "string",
																		"nativeSrc": "21942:25:15",
																		"nodeType": "YulLiteral",
																		"src": "21942:25:15",
																		"type": "",
																		"value": "Owner cannot buy tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21915:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "21915:6:15"
																},
																"nativeSrc": "21915:53:15",
																"nodeType": "YulFunctionCall",
																"src": "21915:53:15"
															},
															"nativeSrc": "21915:53:15",
															"nodeType": "YulExpressionStatement",
															"src": "21915:53:15"
														},
														{
															"nativeSrc": "21977:26:15",
															"nodeType": "YulAssignment",
															"src": "21977:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21989:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "21989:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22000:2:15",
																		"nodeType": "YulLiteral",
																		"src": "22000:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21985:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "21985:3:15"
																},
																"nativeSrc": "21985:18:15",
																"nodeType": "YulFunctionCall",
																"src": "21985:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21977:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "21977:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6074d909f1c7eb2393bdf1029d0b7e2b2329445b551a02e61050a4a408023785__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "21662:347:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21813:9:15",
														"nodeType": "YulTypedName",
														"src": "21813:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21827:4:15",
														"nodeType": "YulTypedName",
														"src": "21827:4:15",
														"type": ""
													}
												],
												"src": "21662:347:15"
											},
											{
												"body": {
													"nativeSrc": "22188:156:15",
													"nodeType": "YulBlock",
													"src": "22188:156:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22205:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "22205:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22216:2:15",
																		"nodeType": "YulLiteral",
																		"src": "22216:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22198:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "22198:6:15"
																},
																"nativeSrc": "22198:21:15",
																"nodeType": "YulFunctionCall",
																"src": "22198:21:15"
															},
															"nativeSrc": "22198:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "22198:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22239:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "22239:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22250:2:15",
																				"nodeType": "YulLiteral",
																				"src": "22250:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22235:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "22235:3:15"
																		},
																		"nativeSrc": "22235:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "22235:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22255:1:15",
																		"nodeType": "YulLiteral",
																		"src": "22255:1:15",
																		"type": "",
																		"value": "7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22228:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "22228:6:15"
																},
																"nativeSrc": "22228:29:15",
																"nodeType": "YulFunctionCall",
																"src": "22228:29:15"
															},
															"nativeSrc": "22228:29:15",
															"nodeType": "YulExpressionStatement",
															"src": "22228:29:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22277:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "22277:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22288:2:15",
																				"nodeType": "YulLiteral",
																				"src": "22288:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22273:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "22273:3:15"
																		},
																		"nativeSrc": "22273:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "22273:18:15"
																	},
																	{
																		"hexValue": "4e6f2073616c65",
																		"kind": "string",
																		"nativeSrc": "22293:9:15",
																		"nodeType": "YulLiteral",
																		"src": "22293:9:15",
																		"type": "",
																		"value": "No sale"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22266:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "22266:6:15"
																},
																"nativeSrc": "22266:37:15",
																"nodeType": "YulFunctionCall",
																"src": "22266:37:15"
															},
															"nativeSrc": "22266:37:15",
															"nodeType": "YulExpressionStatement",
															"src": "22266:37:15"
														},
														{
															"nativeSrc": "22312:26:15",
															"nodeType": "YulAssignment",
															"src": "22312:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22324:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "22324:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22335:2:15",
																		"nodeType": "YulLiteral",
																		"src": "22335:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22320:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "22320:3:15"
																},
																"nativeSrc": "22320:18:15",
																"nodeType": "YulFunctionCall",
																"src": "22320:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22312:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "22312:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_745b7c27209a9df0afa3e1a0af6f3a48dc087e43ee7b30261a0fc4b9578e75a7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "22014:330:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22165:9:15",
														"nodeType": "YulTypedName",
														"src": "22165:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22179:4:15",
														"nodeType": "YulTypedName",
														"src": "22179:4:15",
														"type": ""
													}
												],
												"src": "22014:330:15"
											},
											{
												"body": {
													"nativeSrc": "22523:172:15",
													"nodeType": "YulBlock",
													"src": "22523:172:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22540:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "22540:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22551:2:15",
																		"nodeType": "YulLiteral",
																		"src": "22551:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22533:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "22533:6:15"
																},
																"nativeSrc": "22533:21:15",
																"nodeType": "YulFunctionCall",
																"src": "22533:21:15"
															},
															"nativeSrc": "22533:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "22533:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22574:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "22574:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22585:2:15",
																				"nodeType": "YulLiteral",
																				"src": "22585:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22570:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "22570:3:15"
																		},
																		"nativeSrc": "22570:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "22570:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22590:2:15",
																		"nodeType": "YulLiteral",
																		"src": "22590:2:15",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22563:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "22563:6:15"
																},
																"nativeSrc": "22563:30:15",
																"nodeType": "YulFunctionCall",
																"src": "22563:30:15"
															},
															"nativeSrc": "22563:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "22563:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22613:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "22613:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22624:2:15",
																				"nodeType": "YulLiteral",
																				"src": "22624:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22609:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "22609:3:15"
																		},
																		"nativeSrc": "22609:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "22609:18:15"
																	},
																	{
																		"hexValue": "53616c6520616c72656164792066696e616c697a6564",
																		"kind": "string",
																		"nativeSrc": "22629:24:15",
																		"nodeType": "YulLiteral",
																		"src": "22629:24:15",
																		"type": "",
																		"value": "Sale already finalized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22602:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "22602:6:15"
																},
																"nativeSrc": "22602:52:15",
																"nodeType": "YulFunctionCall",
																"src": "22602:52:15"
															},
															"nativeSrc": "22602:52:15",
															"nodeType": "YulExpressionStatement",
															"src": "22602:52:15"
														},
														{
															"nativeSrc": "22663:26:15",
															"nodeType": "YulAssignment",
															"src": "22663:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22675:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "22675:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22686:2:15",
																		"nodeType": "YulLiteral",
																		"src": "22686:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22671:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "22671:3:15"
																},
																"nativeSrc": "22671:18:15",
																"nodeType": "YulFunctionCall",
																"src": "22671:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22663:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "22663:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c62da71e519c5f2bf89b59327b7f977696c4a0042adb3aafb9f068ba780f8ac7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "22349:346:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22500:9:15",
														"nodeType": "YulTypedName",
														"src": "22500:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22514:4:15",
														"nodeType": "YulTypedName",
														"src": "22514:4:15",
														"type": ""
													}
												],
												"src": "22349:346:15"
											},
											{
												"body": {
													"nativeSrc": "22874:173:15",
													"nodeType": "YulBlock",
													"src": "22874:173:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22891:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "22891:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22902:2:15",
																		"nodeType": "YulLiteral",
																		"src": "22902:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22884:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "22884:6:15"
																},
																"nativeSrc": "22884:21:15",
																"nodeType": "YulFunctionCall",
																"src": "22884:21:15"
															},
															"nativeSrc": "22884:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "22884:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22925:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "22925:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22936:2:15",
																				"nodeType": "YulLiteral",
																				"src": "22936:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22921:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "22921:3:15"
																		},
																		"nativeSrc": "22921:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "22921:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22941:2:15",
																		"nodeType": "YulLiteral",
																		"src": "22941:2:15",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22914:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "22914:6:15"
																},
																"nativeSrc": "22914:30:15",
																"nodeType": "YulFunctionCall",
																"src": "22914:30:15"
															},
															"nativeSrc": "22914:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "22914:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22964:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "22964:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22975:2:15",
																				"nodeType": "YulLiteral",
																				"src": "22975:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22960:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "22960:3:15"
																		},
																		"nativeSrc": "22960:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "22960:18:15"
																	},
																	{
																		"hexValue": "53656e6420612076616c696420424e4220616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "22980:25:15",
																		"nodeType": "YulLiteral",
																		"src": "22980:25:15",
																		"type": "",
																		"value": "Send a valid BNB amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22953:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "22953:6:15"
																},
																"nativeSrc": "22953:53:15",
																"nodeType": "YulFunctionCall",
																"src": "22953:53:15"
															},
															"nativeSrc": "22953:53:15",
															"nodeType": "YulExpressionStatement",
															"src": "22953:53:15"
														},
														{
															"nativeSrc": "23015:26:15",
															"nodeType": "YulAssignment",
															"src": "23015:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23027:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "23027:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23038:2:15",
																		"nodeType": "YulLiteral",
																		"src": "23038:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23023:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "23023:3:15"
																},
																"nativeSrc": "23023:18:15",
																"nodeType": "YulFunctionCall",
																"src": "23023:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23015:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "23015:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c4187a1289740d8ffce3bb99c104d1df31ca9848a3a5aafe5f4d5ecd5e91ee9b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "22700:347:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22851:9:15",
														"nodeType": "YulTypedName",
														"src": "22851:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22865:4:15",
														"nodeType": "YulTypedName",
														"src": "22865:4:15",
														"type": ""
													}
												],
												"src": "22700:347:15"
											},
											{
												"body": {
													"nativeSrc": "23100:77:15",
													"nodeType": "YulBlock",
													"src": "23100:77:15",
													"statements": [
														{
															"nativeSrc": "23110:16:15",
															"nodeType": "YulAssignment",
															"src": "23110:16:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "23121:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "23121:1:15"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "23124:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "23124:1:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23117:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "23117:3:15"
																},
																"nativeSrc": "23117:9:15",
																"nodeType": "YulFunctionCall",
																"src": "23117:9:15"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "23110:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "23110:3:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "23149:22:15",
																"nodeType": "YulBlock",
																"src": "23149:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "23151:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "23151:16:15"
																			},
																			"nativeSrc": "23151:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "23151:18:15"
																		},
																		"nativeSrc": "23151:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "23151:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "23141:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "23141:1:15"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "23144:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "23144:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "23138:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "23138:2:15"
																},
																"nativeSrc": "23138:10:15",
																"nodeType": "YulFunctionCall",
																"src": "23138:10:15"
															},
															"nativeSrc": "23135:36:15",
															"nodeType": "YulIf",
															"src": "23135:36:15"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "23052:125:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "23083:1:15",
														"nodeType": "YulTypedName",
														"src": "23083:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "23086:1:15",
														"nodeType": "YulTypedName",
														"src": "23086:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "23092:3:15",
														"nodeType": "YulTypedName",
														"src": "23092:3:15",
														"type": ""
													}
												],
												"src": "23052:125:15"
											},
											{
												"body": {
													"nativeSrc": "23356:181:15",
													"nodeType": "YulBlock",
													"src": "23356:181:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23373:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "23373:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23384:2:15",
																		"nodeType": "YulLiteral",
																		"src": "23384:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23366:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "23366:6:15"
																},
																"nativeSrc": "23366:21:15",
																"nodeType": "YulFunctionCall",
																"src": "23366:21:15"
															},
															"nativeSrc": "23366:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "23366:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23407:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "23407:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23418:2:15",
																				"nodeType": "YulLiteral",
																				"src": "23418:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23403:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "23403:3:15"
																		},
																		"nativeSrc": "23403:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "23403:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23423:2:15",
																		"nodeType": "YulLiteral",
																		"src": "23423:2:15",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23396:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "23396:6:15"
																},
																"nativeSrc": "23396:30:15",
																"nodeType": "YulFunctionCall",
																"src": "23396:30:15"
															},
															"nativeSrc": "23396:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "23396:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23446:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "23446:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23457:2:15",
																				"nodeType": "YulLiteral",
																				"src": "23457:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23442:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "23442:3:15"
																		},
																		"nativeSrc": "23442:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "23442:18:15"
																	},
																	{
																		"hexValue": "456e74657220612076616c696420737461626c65636f696e20616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "23462:33:15",
																		"nodeType": "YulLiteral",
																		"src": "23462:33:15",
																		"type": "",
																		"value": "Enter a valid stablecoin amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23435:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "23435:6:15"
																},
																"nativeSrc": "23435:61:15",
																"nodeType": "YulFunctionCall",
																"src": "23435:61:15"
															},
															"nativeSrc": "23435:61:15",
															"nodeType": "YulExpressionStatement",
															"src": "23435:61:15"
														},
														{
															"nativeSrc": "23505:26:15",
															"nodeType": "YulAssignment",
															"src": "23505:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23517:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "23517:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23528:2:15",
																		"nodeType": "YulLiteral",
																		"src": "23528:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23513:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "23513:3:15"
																},
																"nativeSrc": "23513:18:15",
																"nodeType": "YulFunctionCall",
																"src": "23513:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23505:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "23505:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f6ac058ffe09b3bbdfae8372cf9a39f7a49f0de9dc3487048e08f88e8c7cd81d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "23182:355:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23333:9:15",
														"nodeType": "YulTypedName",
														"src": "23333:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23347:4:15",
														"nodeType": "YulTypedName",
														"src": "23347:4:15",
														"type": ""
													}
												],
												"src": "23182:355:15"
											},
											{
												"body": {
													"nativeSrc": "23716:176:15",
													"nodeType": "YulBlock",
													"src": "23716:176:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23733:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "23733:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23744:2:15",
																		"nodeType": "YulLiteral",
																		"src": "23744:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23726:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "23726:6:15"
																},
																"nativeSrc": "23726:21:15",
																"nodeType": "YulFunctionCall",
																"src": "23726:21:15"
															},
															"nativeSrc": "23726:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "23726:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23767:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "23767:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23778:2:15",
																				"nodeType": "YulLiteral",
																				"src": "23778:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23763:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "23763:3:15"
																		},
																		"nativeSrc": "23763:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "23763:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23783:2:15",
																		"nodeType": "YulLiteral",
																		"src": "23783:2:15",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23756:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "23756:6:15"
																},
																"nativeSrc": "23756:30:15",
																"nodeType": "YulFunctionCall",
																"src": "23756:30:15"
															},
															"nativeSrc": "23756:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "23756:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23806:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "23806:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23817:2:15",
																				"nodeType": "YulLiteral",
																				"src": "23817:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23802:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "23802:3:15"
																		},
																		"nativeSrc": "23802:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "23802:18:15"
																	},
																	{
																		"hexValue": "537461626c65636f696e207472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "23822:28:15",
																		"nodeType": "YulLiteral",
																		"src": "23822:28:15",
																		"type": "",
																		"value": "Stablecoin transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23795:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "23795:6:15"
																},
																"nativeSrc": "23795:56:15",
																"nodeType": "YulFunctionCall",
																"src": "23795:56:15"
															},
															"nativeSrc": "23795:56:15",
															"nodeType": "YulExpressionStatement",
															"src": "23795:56:15"
														},
														{
															"nativeSrc": "23860:26:15",
															"nodeType": "YulAssignment",
															"src": "23860:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23872:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "23872:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23883:2:15",
																		"nodeType": "YulLiteral",
																		"src": "23883:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23868:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "23868:3:15"
																},
																"nativeSrc": "23868:18:15",
																"nodeType": "YulFunctionCall",
																"src": "23868:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23860:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "23860:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c84bd9c4652ced38c134ab47300145495de9d5aff68e1b658cc1dca99fef7eb7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "23542:350:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23693:9:15",
														"nodeType": "YulTypedName",
														"src": "23693:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23707:4:15",
														"nodeType": "YulTypedName",
														"src": "23707:4:15",
														"type": ""
													}
												],
												"src": "23542:350:15"
											},
											{
												"body": {
													"nativeSrc": "24071:170:15",
													"nodeType": "YulBlock",
													"src": "24071:170:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "24088:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "24088:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24099:2:15",
																		"nodeType": "YulLiteral",
																		"src": "24099:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24081:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "24081:6:15"
																},
																"nativeSrc": "24081:21:15",
																"nodeType": "YulFunctionCall",
																"src": "24081:21:15"
															},
															"nativeSrc": "24081:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "24081:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24122:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "24122:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24133:2:15",
																				"nodeType": "YulLiteral",
																				"src": "24133:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24118:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "24118:3:15"
																		},
																		"nativeSrc": "24118:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "24118:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24138:2:15",
																		"nodeType": "YulLiteral",
																		"src": "24138:2:15",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24111:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "24111:6:15"
																},
																"nativeSrc": "24111:30:15",
																"nodeType": "YulFunctionCall",
																"src": "24111:30:15"
															},
															"nativeSrc": "24111:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "24111:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24161:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "24161:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24172:2:15",
																				"nodeType": "YulLiteral",
																				"src": "24172:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24157:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "24157:3:15"
																		},
																		"nativeSrc": "24157:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "24157:18:15"
																	},
																	{
																		"hexValue": "496e76616c696420746f6b656e20616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "24177:22:15",
																		"nodeType": "YulLiteral",
																		"src": "24177:22:15",
																		"type": "",
																		"value": "Invalid token amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24150:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "24150:6:15"
																},
																"nativeSrc": "24150:50:15",
																"nodeType": "YulFunctionCall",
																"src": "24150:50:15"
															},
															"nativeSrc": "24150:50:15",
															"nodeType": "YulExpressionStatement",
															"src": "24150:50:15"
														},
														{
															"nativeSrc": "24209:26:15",
															"nodeType": "YulAssignment",
															"src": "24209:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "24221:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "24221:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24232:2:15",
																		"nodeType": "YulLiteral",
																		"src": "24232:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24217:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "24217:3:15"
																},
																"nativeSrc": "24217:18:15",
																"nodeType": "YulFunctionCall",
																"src": "24217:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24209:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "24209:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_51e395ccdea9060dec5fa8fca2f2563cffa61f9f6f61f3f9c9b3895fa879ed58__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "23897:344:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "24048:9:15",
														"nodeType": "YulTypedName",
														"src": "24048:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "24062:4:15",
														"nodeType": "YulTypedName",
														"src": "24062:4:15",
														"type": ""
													}
												],
												"src": "23897:344:15"
											},
											{
												"body": {
													"nativeSrc": "24420:166:15",
													"nodeType": "YulBlock",
													"src": "24420:166:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "24437:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "24437:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24448:2:15",
																		"nodeType": "YulLiteral",
																		"src": "24448:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24430:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "24430:6:15"
																},
																"nativeSrc": "24430:21:15",
																"nodeType": "YulFunctionCall",
																"src": "24430:21:15"
															},
															"nativeSrc": "24430:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "24430:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24471:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "24471:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24482:2:15",
																				"nodeType": "YulLiteral",
																				"src": "24482:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24467:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "24467:3:15"
																		},
																		"nativeSrc": "24467:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "24467:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24487:2:15",
																		"nodeType": "YulLiteral",
																		"src": "24487:2:15",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24460:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "24460:6:15"
																},
																"nativeSrc": "24460:30:15",
																"nodeType": "YulFunctionCall",
																"src": "24460:30:15"
															},
															"nativeSrc": "24460:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "24460:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24510:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "24510:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24521:2:15",
																				"nodeType": "YulLiteral",
																				"src": "24521:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24506:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "24506:3:15"
																		},
																		"nativeSrc": "24506:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "24506:18:15"
																	},
																	{
																		"hexValue": "48617264206361702072656163686564",
																		"kind": "string",
																		"nativeSrc": "24526:18:15",
																		"nodeType": "YulLiteral",
																		"src": "24526:18:15",
																		"type": "",
																		"value": "Hard cap reached"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24499:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "24499:6:15"
																},
																"nativeSrc": "24499:46:15",
																"nodeType": "YulFunctionCall",
																"src": "24499:46:15"
															},
															"nativeSrc": "24499:46:15",
															"nodeType": "YulExpressionStatement",
															"src": "24499:46:15"
														},
														{
															"nativeSrc": "24554:26:15",
															"nodeType": "YulAssignment",
															"src": "24554:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "24566:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "24566:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24577:2:15",
																		"nodeType": "YulLiteral",
																		"src": "24577:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24562:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "24562:3:15"
																},
																"nativeSrc": "24562:18:15",
																"nodeType": "YulFunctionCall",
																"src": "24562:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24554:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "24554:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c07dacc766697a4a5558e08455451d0672777bb5104aed3615bc1964c00cc795__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "24246:340:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "24397:9:15",
														"nodeType": "YulTypedName",
														"src": "24397:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "24411:4:15",
														"nodeType": "YulTypedName",
														"src": "24411:4:15",
														"type": ""
													}
												],
												"src": "24246:340:15"
											},
											{
												"body": {
													"nativeSrc": "24792:229:15",
													"nodeType": "YulBlock",
													"src": "24792:229:15",
													"statements": [
														{
															"nativeSrc": "24802:27:15",
															"nodeType": "YulAssignment",
															"src": "24802:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "24814:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "24814:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24825:3:15",
																		"nodeType": "YulLiteral",
																		"src": "24825:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24810:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "24810:3:15"
																},
																"nativeSrc": "24810:19:15",
																"nodeType": "YulFunctionCall",
																"src": "24810:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24802:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "24802:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "24845:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "24845:9:15"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "24856:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "24856:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24838:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "24838:6:15"
																},
																"nativeSrc": "24838:25:15",
																"nodeType": "YulFunctionCall",
																"src": "24838:25:15"
															},
															"nativeSrc": "24838:25:15",
															"nodeType": "YulExpressionStatement",
															"src": "24838:25:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24883:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "24883:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24894:2:15",
																				"nodeType": "YulLiteral",
																				"src": "24894:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24879:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "24879:3:15"
																		},
																		"nativeSrc": "24879:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "24879:18:15"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "24899:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "24899:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24872:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "24872:6:15"
																},
																"nativeSrc": "24872:34:15",
																"nodeType": "YulFunctionCall",
																"src": "24872:34:15"
															},
															"nativeSrc": "24872:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "24872:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24926:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "24926:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24937:2:15",
																				"nodeType": "YulLiteral",
																				"src": "24937:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24922:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "24922:3:15"
																		},
																		"nativeSrc": "24922:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "24922:18:15"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "24942:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "24942:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24915:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "24915:6:15"
																},
																"nativeSrc": "24915:34:15",
																"nodeType": "YulFunctionCall",
																"src": "24915:34:15"
															},
															"nativeSrc": "24915:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "24915:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "24988:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "24988:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25000:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "25000:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25011:2:15",
																				"nodeType": "YulLiteral",
																				"src": "25011:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24996:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "24996:3:15"
																		},
																		"nativeSrc": "24996:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "24996:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_enum_PaymentMethod",
																	"nativeSrc": "24958:29:15",
																	"nodeType": "YulIdentifier",
																	"src": "24958:29:15"
																},
																"nativeSrc": "24958:57:15",
																"nodeType": "YulFunctionCall",
																"src": "24958:57:15"
															},
															"nativeSrc": "24958:57:15",
															"nodeType": "YulExpressionStatement",
															"src": "24958:57:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_enum$_PaymentMethod_$1706__to_t_uint256_t_uint256_t_uint256_t_uint8__fromStack_reversed",
												"nativeSrc": "24591:430:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "24737:9:15",
														"nodeType": "YulTypedName",
														"src": "24737:9:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "24748:6:15",
														"nodeType": "YulTypedName",
														"src": "24748:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "24756:6:15",
														"nodeType": "YulTypedName",
														"src": "24756:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "24764:6:15",
														"nodeType": "YulTypedName",
														"src": "24764:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "24772:6:15",
														"nodeType": "YulTypedName",
														"src": "24772:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "24783:4:15",
														"nodeType": "YulTypedName",
														"src": "24783:4:15",
														"type": ""
													}
												],
												"src": "24591:430:15"
											},
											{
												"body": {
													"nativeSrc": "25134:101:15",
													"nodeType": "YulBlock",
													"src": "25134:101:15",
													"statements": [
														{
															"nativeSrc": "25144:26:15",
															"nodeType": "YulAssignment",
															"src": "25144:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "25156:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "25156:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25167:2:15",
																		"nodeType": "YulLiteral",
																		"src": "25167:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25152:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "25152:3:15"
																},
																"nativeSrc": "25152:18:15",
																"nodeType": "YulFunctionCall",
																"src": "25152:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25144:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "25144:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "25186:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "25186:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "25201:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "25201:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25209:18:15",
																				"nodeType": "YulLiteral",
																				"src": "25209:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "25197:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "25197:3:15"
																		},
																		"nativeSrc": "25197:31:15",
																		"nodeType": "YulFunctionCall",
																		"src": "25197:31:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25179:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "25179:6:15"
																},
																"nativeSrc": "25179:50:15",
																"nodeType": "YulFunctionCall",
																"src": "25179:50:15"
															},
															"nativeSrc": "25179:50:15",
															"nodeType": "YulExpressionStatement",
															"src": "25179:50:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nativeSrc": "25026:209:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "25103:9:15",
														"nodeType": "YulTypedName",
														"src": "25103:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "25114:6:15",
														"nodeType": "YulTypedName",
														"src": "25114:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "25125:4:15",
														"nodeType": "YulTypedName",
														"src": "25125:4:15",
														"type": ""
													}
												],
												"src": "25026:209:15"
											},
											{
												"body": {
													"nativeSrc": "25414:165:15",
													"nodeType": "YulBlock",
													"src": "25414:165:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "25431:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "25431:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25442:2:15",
																		"nodeType": "YulLiteral",
																		"src": "25442:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25424:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "25424:6:15"
																},
																"nativeSrc": "25424:21:15",
																"nodeType": "YulFunctionCall",
																"src": "25424:21:15"
															},
															"nativeSrc": "25424:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "25424:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25465:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "25465:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25476:2:15",
																				"nodeType": "YulLiteral",
																				"src": "25476:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25461:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "25461:3:15"
																		},
																		"nativeSrc": "25461:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "25461:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25481:2:15",
																		"nodeType": "YulLiteral",
																		"src": "25481:2:15",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25454:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "25454:6:15"
																},
																"nativeSrc": "25454:30:15",
																"nodeType": "YulFunctionCall",
																"src": "25454:30:15"
															},
															"nativeSrc": "25454:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "25454:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25504:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "25504:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25515:2:15",
																				"nodeType": "YulLiteral",
																				"src": "25515:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25500:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "25500:3:15"
																		},
																		"nativeSrc": "25500:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "25500:18:15"
																	},
																	{
																		"hexValue": "5472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "25520:17:15",
																		"nodeType": "YulLiteral",
																		"src": "25520:17:15",
																		"type": "",
																		"value": "Transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25493:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "25493:6:15"
																},
																"nativeSrc": "25493:45:15",
																"nodeType": "YulFunctionCall",
																"src": "25493:45:15"
															},
															"nativeSrc": "25493:45:15",
															"nodeType": "YulExpressionStatement",
															"src": "25493:45:15"
														},
														{
															"nativeSrc": "25547:26:15",
															"nodeType": "YulAssignment",
															"src": "25547:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "25559:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "25559:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25570:2:15",
																		"nodeType": "YulLiteral",
																		"src": "25570:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25555:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "25555:3:15"
																},
																"nativeSrc": "25555:18:15",
																"nodeType": "YulFunctionCall",
																"src": "25555:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25547:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "25547:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "25240:339:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "25391:9:15",
														"nodeType": "YulTypedName",
														"src": "25391:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "25405:4:15",
														"nodeType": "YulTypedName",
														"src": "25405:4:15",
														"type": ""
													}
												],
												"src": "25240:339:15"
											},
											{
												"body": {
													"nativeSrc": "25758:170:15",
													"nodeType": "YulBlock",
													"src": "25758:170:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "25775:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "25775:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25786:2:15",
																		"nodeType": "YulLiteral",
																		"src": "25786:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25768:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "25768:6:15"
																},
																"nativeSrc": "25768:21:15",
																"nodeType": "YulFunctionCall",
																"src": "25768:21:15"
															},
															"nativeSrc": "25768:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "25768:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25809:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "25809:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25820:2:15",
																				"nodeType": "YulLiteral",
																				"src": "25820:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25805:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "25805:3:15"
																		},
																		"nativeSrc": "25805:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "25805:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25825:2:15",
																		"nodeType": "YulLiteral",
																		"src": "25825:2:15",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25798:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "25798:6:15"
																},
																"nativeSrc": "25798:30:15",
																"nodeType": "YulFunctionCall",
																"src": "25798:30:15"
															},
															"nativeSrc": "25798:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "25798:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25848:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "25848:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25859:2:15",
																				"nodeType": "YulLiteral",
																				"src": "25859:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25844:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "25844:3:15"
																		},
																		"nativeSrc": "25844:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "25844:18:15"
																	},
																	{
																		"hexValue": "55534454207472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "25864:22:15",
																		"nodeType": "YulLiteral",
																		"src": "25864:22:15",
																		"type": "",
																		"value": "USDT transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25837:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "25837:6:15"
																},
																"nativeSrc": "25837:50:15",
																"nodeType": "YulFunctionCall",
																"src": "25837:50:15"
															},
															"nativeSrc": "25837:50:15",
															"nodeType": "YulExpressionStatement",
															"src": "25837:50:15"
														},
														{
															"nativeSrc": "25896:26:15",
															"nodeType": "YulAssignment",
															"src": "25896:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "25908:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "25908:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25919:2:15",
																		"nodeType": "YulLiteral",
																		"src": "25919:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25904:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "25904:3:15"
																},
																"nativeSrc": "25904:18:15",
																"nodeType": "YulFunctionCall",
																"src": "25904:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25896:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "25896:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "25584:344:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "25735:9:15",
														"nodeType": "YulTypedName",
														"src": "25735:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "25749:4:15",
														"nodeType": "YulTypedName",
														"src": "25749:4:15",
														"type": ""
													}
												],
												"src": "25584:344:15"
											},
											{
												"body": {
													"nativeSrc": "26107:170:15",
													"nodeType": "YulBlock",
													"src": "26107:170:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "26124:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "26124:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26135:2:15",
																		"nodeType": "YulLiteral",
																		"src": "26135:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26117:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "26117:6:15"
																},
																"nativeSrc": "26117:21:15",
																"nodeType": "YulFunctionCall",
																"src": "26117:21:15"
															},
															"nativeSrc": "26117:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "26117:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26158:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "26158:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26169:2:15",
																				"nodeType": "YulLiteral",
																				"src": "26169:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26154:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "26154:3:15"
																		},
																		"nativeSrc": "26154:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "26154:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26174:2:15",
																		"nodeType": "YulLiteral",
																		"src": "26174:2:15",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26147:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "26147:6:15"
																},
																"nativeSrc": "26147:30:15",
																"nodeType": "YulFunctionCall",
																"src": "26147:30:15"
															},
															"nativeSrc": "26147:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "26147:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26197:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "26197:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26208:2:15",
																				"nodeType": "YulLiteral",
																				"src": "26208:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26193:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "26193:3:15"
																		},
																		"nativeSrc": "26193:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "26193:18:15"
																	},
																	{
																		"hexValue": "55534443207472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "26213:22:15",
																		"nodeType": "YulLiteral",
																		"src": "26213:22:15",
																		"type": "",
																		"value": "USDC transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26186:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "26186:6:15"
																},
																"nativeSrc": "26186:50:15",
																"nodeType": "YulFunctionCall",
																"src": "26186:50:15"
															},
															"nativeSrc": "26186:50:15",
															"nodeType": "YulExpressionStatement",
															"src": "26186:50:15"
														},
														{
															"nativeSrc": "26245:26:15",
															"nodeType": "YulAssignment",
															"src": "26245:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "26257:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "26257:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26268:2:15",
																		"nodeType": "YulLiteral",
																		"src": "26268:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26253:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "26253:3:15"
																},
																"nativeSrc": "26253:18:15",
																"nodeType": "YulFunctionCall",
																"src": "26253:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "26245:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "26245:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_032fb3428477d66798bdf7801f58a252d723dc1362b9dfac5726f85f81cca815__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "25933:344:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "26084:9:15",
														"nodeType": "YulTypedName",
														"src": "26084:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "26098:4:15",
														"nodeType": "YulTypedName",
														"src": "26098:4:15",
														"type": ""
													}
												],
												"src": "25933:344:15"
											},
											{
												"body": {
													"nativeSrc": "26363:103:15",
													"nodeType": "YulBlock",
													"src": "26363:103:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "26409:16:15",
																"nodeType": "YulBlock",
																"src": "26409:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "26418:1:15",
																					"nodeType": "YulLiteral",
																					"src": "26418:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "26421:1:15",
																					"nodeType": "YulLiteral",
																					"src": "26421:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "26411:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "26411:6:15"
																			},
																			"nativeSrc": "26411:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "26411:12:15"
																		},
																		"nativeSrc": "26411:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "26411:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "26384:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "26384:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "26393:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "26393:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "26380:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "26380:3:15"
																		},
																		"nativeSrc": "26380:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "26380:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26405:2:15",
																		"nodeType": "YulLiteral",
																		"src": "26405:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "26376:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "26376:3:15"
																},
																"nativeSrc": "26376:32:15",
																"nodeType": "YulFunctionCall",
																"src": "26376:32:15"
															},
															"nativeSrc": "26373:52:15",
															"nodeType": "YulIf",
															"src": "26373:52:15"
														},
														{
															"nativeSrc": "26434:26:15",
															"nodeType": "YulAssignment",
															"src": "26434:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "26450:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "26450:9:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "26444:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "26444:5:15"
																},
																"nativeSrc": "26444:16:15",
																"nodeType": "YulFunctionCall",
																"src": "26444:16:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "26434:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "26434:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32_fromMemory",
												"nativeSrc": "26282:184:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "26329:9:15",
														"nodeType": "YulTypedName",
														"src": "26329:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "26340:7:15",
														"nodeType": "YulTypedName",
														"src": "26340:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "26352:6:15",
														"nodeType": "YulTypedName",
														"src": "26352:6:15",
														"type": ""
													}
												],
												"src": "26282:184:15"
											},
											{
												"body": {
													"nativeSrc": "26608:150:15",
													"nodeType": "YulBlock",
													"src": "26608:150:15",
													"statements": [
														{
															"nativeSrc": "26618:27:15",
															"nodeType": "YulVariableDeclaration",
															"src": "26618:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "26638:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "26638:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "26632:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "26632:5:15"
																},
																"nativeSrc": "26632:13:15",
																"nodeType": "YulFunctionCall",
																"src": "26632:13:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "26622:6:15",
																	"nodeType": "YulTypedName",
																	"src": "26622:6:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "26693:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "26693:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26701:4:15",
																				"nodeType": "YulLiteral",
																				"src": "26701:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26689:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "26689:3:15"
																		},
																		"nativeSrc": "26689:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "26689:17:15"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "26708:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "26708:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "26713:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "26713:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "26654:34:15",
																	"nodeType": "YulIdentifier",
																	"src": "26654:34:15"
																},
																"nativeSrc": "26654:66:15",
																"nodeType": "YulFunctionCall",
																"src": "26654:66:15"
															},
															"nativeSrc": "26654:66:15",
															"nodeType": "YulExpressionStatement",
															"src": "26654:66:15"
														},
														{
															"nativeSrc": "26729:23:15",
															"nodeType": "YulAssignment",
															"src": "26729:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26740:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "26740:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "26745:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "26745:6:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26736:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "26736:3:15"
																},
																"nativeSrc": "26736:16:15",
																"nodeType": "YulFunctionCall",
																"src": "26736:16:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "26729:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "26729:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "26471:287:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "26584:3:15",
														"nodeType": "YulTypedName",
														"src": "26584:3:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "26589:6:15",
														"nodeType": "YulTypedName",
														"src": "26589:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "26600:3:15",
														"nodeType": "YulTypedName",
														"src": "26600:3:15",
														"type": ""
													}
												],
												"src": "26471:287:15"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_stringliteral_17550aa7e27a420bf678ad118b2de30f8f99747e4dbc150a39e97cdeb8fb8119__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Direct BNB transfers not allowed\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_enum_PaymentMethod(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(lt(value, 3)) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_enum$_PaymentMethod_$1706t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_enum_PaymentMethod(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_enum$_PaymentMethod_$1706(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_enum_PaymentMethod(headStart)\n    }\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_1)\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 0x1f), not(31)), 63), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(_1, length), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_1, 32), length)\n        mstore(add(add(memPtr, length), 32), 0)\n        value1 := memPtr\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_contract$_AggregatorV3Interface_$45__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n        let value_2 := 0\n        value_2 := calldataload(add(headStart, 64))\n        value2 := value_2\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), iszero(iszero(value4)))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_enum_PaymentMethod(value, pos)\n    {\n        if iszero(lt(value, 3))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(pos, value)\n    }\n    function abi_encode_tuple_t_enum$_PaymentMethod_$1706__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        abi_encode_enum_PaymentMethod(value0, headStart)\n    }\n    function abi_decode_tuple_t_addresst_enum$_PaymentMethod_$1706(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := abi_decode_enum_PaymentMethod(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$1264__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_contract$_IERC20_$1264t_addresst_addresst_uint256t_uint256t_addresst_addresst_address(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7\n    {\n        if slt(sub(dataEnd, headStart), 256) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := calldataload(add(headStart, 64))\n        validator_revert_address(value_2)\n        value2 := value_2\n        let value_3 := 0\n        value_3 := calldataload(add(headStart, 96))\n        value3 := value_3\n        let value_4 := 0\n        value_4 := calldataload(add(headStart, 128))\n        value4 := value_4\n        let value_5 := calldataload(add(headStart, 160))\n        validator_revert_address(value_5)\n        value5 := value_5\n        let value_6 := calldataload(add(headStart, 192))\n        validator_revert_address(value_6)\n        value6 := value_6\n        let value_7 := calldataload(add(headStart, 224))\n        validator_revert_address(value_7)\n        value7 := value_7\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_int256(x, y) -> product\n    {\n        product := mul(x, y)\n        if and(slt(x, 0), eq(y, shl(255, 1))) { panic_error_0x11() }\n        if iszero(or(iszero(x), eq(y, sdiv(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_dbf071520f0a95e05bb16da9ebcd49bf0ac91e963647b14497245101e3db79a3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Invalid price feed\")\n        tail := add(headStart, 96)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_exp_helper(_base, exponent, max) -> power, base\n    {\n        power := 1\n        base := _base\n        for { } gt(exponent, 1) { }\n        {\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            let _1 := 0\n            _1 := 0\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            let _2 := 0\n            _2 := 0\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent, not(0))\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, exponent)\n    }\n    function abi_encode_tuple_t_stringliteral_20a9374871eda95a21489d37b12097781d38e0ea68a5e5d037a1b2c3ea6a8c04__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Unsupported payment method\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_uint80_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_uint80_fromMemory(headStart)\n        value1 := mload(add(headStart, 32))\n        let value := 0\n        value := mload(add(headStart, 64))\n        value2 := value\n        let value_1 := 0\n        value_1 := mload(add(headStart, 96))\n        value3 := value_1\n        value4 := abi_decode_uint80_fromMemory(add(headStart, 128))\n    }\n    function abi_encode_tuple_t_stringliteral_1a4430203dcf8abbbd3446dbfc36d404c15a36b152eee41d8f82843f3bcf306f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Token amount must be greater tha\")\n        mstore(add(headStart, 96), \"n zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_96b145fdc05e3ce6aa7fad5e89550d457f70c47d1f8d674ad654a917590143f7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"No active sale\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d894807d07a4878944df72000c35a26fc670b7c15dedc34156876b2464e1fd23__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"ICO already finalized\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5e1a07520dc062ba4ff449fce67822fde8495347c7d50898a83b1dfb63596097__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 7)\n        mstore(add(headStart, 64), \"freezed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a7a44f673ae2e9df66fb923331ae1450d004d9638562a05cc232389560dd7c4d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 56)\n        mstore(add(headStart, 64), \"Cannot finalize: Soft cap not re\")\n        mstore(add(headStart, 96), \"ached or sale is ongoing\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_aff7558382c088943ad2bf11af33e010b3e0eab9fe7e943d464ecefccf0c4c65__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Airdrop not completed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_badbb5a205346d66e56ea98c8f2b97ccc2298baa0d8bcc43f8c5fabbf405c834__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Already Freezed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a1853a89cde833d839c669d1204571d26b8c616e74d14665150a1c9f7535c8f5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Start time must be greater than \")\n        mstore(add(headStart, 96), \"current time\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ed7f84a1977812752f8d634cbdcf2a56f893383408b8dd546c270e5d913f5d28__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"End time must be greater than st\")\n        mstore(add(headStart, 96), \"art time\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_825884e5cff514634aaaba9e58516f6d797b9a08503c5bf1af68f19c16208f73__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"New sale must start after the la\")\n        mstore(add(headStart, 96), \"st sale ends\")\n        tail := add(headStart, 128)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_37095db391cf553f65f0eddf201a3c7bc5118c1120fca6827815be26758eff4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Already UnFreezed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_52e3d128a4ea4439173e3f4b78f0e12548c2c4449a80c4b2fbefb1fd3e6a7665__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"Sale ongoing\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7c68e13a7a3bf736cdb65f14ebef38f840872b490e156aead879b05f23b99d80__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Soft cap reached\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_stringliteral_9061bb5d1762fde4c9d1190b8ce0bd989de0debb196be3c053155f36b52a6ce0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"BNB refund failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_4c76e179fd3981278de294ff97a7ccb030d7577d0e7f55ac3f87e02e3abaa726__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Stablecoin refund failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e1a05a85d6c11679f33a730fbeebefa1f4b9de0998aad7aecca4e9ec70fa59da__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"Unsupported payment method for r\")\n        mstore(add(headStart, 96), \"efund\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_enum$_PaymentMethod_$1706__to_t_uint256_t_uint8__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        abi_encode_enum_PaymentMethod(value1, add(headStart, 32))\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function abi_encode_tuple_t_stringliteral_35194372afc15163c58aa5af5530ba0e7f2576a9d985e6f8d166066860d6966a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Airdrop already completed\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := mload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Insufficient Funds\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Token transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6074d909f1c7eb2393bdf1029d0b7e2b2329445b551a02e61050a4a408023785__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Owner cannot buy tokens\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_745b7c27209a9df0afa3e1a0af6f3a48dc087e43ee7b30261a0fc4b9578e75a7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 7)\n        mstore(add(headStart, 64), \"No sale\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c62da71e519c5f2bf89b59327b7f977696c4a0042adb3aafb9f068ba780f8ac7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Sale already finalized\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c4187a1289740d8ffce3bb99c104d1df31ca9848a3a5aafe5f4d5ecd5e91ee9b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Send a valid BNB amount\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_f6ac058ffe09b3bbdfae8372cf9a39f7a49f0de9dc3487048e08f88e8c7cd81d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Enter a valid stablecoin amount\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c84bd9c4652ced38c134ab47300145495de9d5aff68e1b658cc1dca99fef7eb7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Stablecoin transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_51e395ccdea9060dec5fa8fca2f2563cffa61f9f6f61f3f9c9b3895fa879ed58__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Invalid token amount\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c07dacc766697a4a5558e08455451d0672777bb5104aed3615bc1964c00cc795__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Hard cap reached\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_enum$_PaymentMethod_$1706__to_t_uint256_t_uint256_t_uint256_t_uint8__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        abi_encode_enum_PaymentMethod(value3, add(headStart, 96))\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"USDT transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_032fb3428477d66798bdf7801f58a252d723dc1362b9dfac5726f85f81cca815__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"USDC transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n}",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"514": [
									{
										"length": 32,
										"start": 10245
									},
									{
										"length": 32,
										"start": 10286
									},
									{
										"length": 32,
										"start": 10607
									}
								]
							},
							"linkReferences": {},
							"object": "6080604052600436106102555760003560e01c80638da5cb5b11610139578063c1560a14116100b6578063df4e05931161007a578063df4e059314610782578063e8e87389146107bf578063efdcdb45146107ec578063f2fde38b14610824578063fc0c546a14610844578063fd663da21461086457600080fd5b8063c1560a141461067c578063c211e1f914610692578063c81ffdea1461071b578063d1f3b23e14610748578063d3d9d1e41461076257600080fd5b806399131e7e116100fd57806399131e7e14610571578063a1e89aec14610591578063ad3cb1cc146105a7578063b5f522f7146105e5578063b9469e1a1461065c57600080fd5b80638da5cb5b1461050657806391152c5c1461051b57806391d8730a14610530578063940c333e14610549578063960524e31461055c57600080fd5b80634dee1dc3116101d257806363b201171161019657806363b201171461047b5780636c1909ed14610491578063715018a6146104b1578063721bc38b146104c65780637cf12b90146104dc5780637fb12001146104f157600080fd5b80634dee1dc3146103ff5780634f1ef2861461041e57806352d1902d1461043157806362a469e91461044657806362a5af3b1461046657600080fd5b80632151206e116102195780632151206e1461035a57806323cc75a8146103705780632f48ab7d146103875780633e413bee146103bf5780633feb5f2b146103df57600080fd5b806305834e67146102ac57806306e4d36f146102df578063115afc3a14610305578063117d260f14610325578063212ea2471461034557600080fd5b366102a75760405162461bcd60e51b815260206004820181905260248201527f44697265637420424e42207472616e7366657273206e6f7420616c6c6f77656460448201526064015b60405180910390fd5b600080fd5b3480156102b857600080fd5b506102cc6102c7366004612c6f565b610884565b6040519081526020015b60405180910390f35b3480156102eb57600080fd5b5060045460075410155b60405190151581526020016102d6565b34801561031157600080fd5b506102cc610320366004612c99565b610a3e565b34801561033157600080fd5b506102cc610340366004612c6f565b610ba7565b34801561035157600080fd5b506006546102cc565b34801561036657600080fd5b506102cc60045481565b34801561037c57600080fd5b50610385610d79565b005b34801561039357600080fd5b50600b546103a7906001600160a01b031681565b6040516001600160a01b0390911681526020016102d6565b3480156103cb57600080fd5b50600c546103a7906001600160a01b031681565b3480156103eb57600080fd5b506103a76103fa366004612cb4565b610ef8565b34801561040b57600080fd5b506009546102f590610100900460ff1681565b61038561042c366004612cf8565b610f22565b34801561043d57600080fd5b506102cc610f41565b34801561045257600080fd5b506001546103a7906001600160a01b031681565b34801561047257600080fd5b50610385610f5e565b34801561048757600080fd5b506102cc60085481565b34801561049d57600080fd5b506103856104ac366004612dc4565b610fc4565b3480156104bd57600080fd5b50610385611215565b3480156104d257600080fd5b506102cc60075481565b3480156104e857600080fd5b50610385611227565b3480156104fd57600080fd5b50610385611289565b34801561051257600080fd5b506103a761179e565b34801561052757600080fd5b506103856117cc565b34801561053c57600080fd5b50600554600754146102f5565b610385610557366004612c6f565b611bb0565b34801561056857600080fd5b50600a546102cc565b34801561057d57600080fd5b506000546103a7906001600160a01b031681565b34801561059d57600080fd5b506102cc60065481565b3480156105b357600080fd5b506105d8604051806040016040528060058152602001640352e302e360dc1b81525081565b6040516102d69190612e14565b3480156105f157600080fd5b50610632610600366004612cb4565b600d60205260009081526040902080546001820154600283015460038401546004909401549293919290919060ff1685565b6040805195865260208601949094529284019190915260608301521515608082015260a0016102d6565b34801561066857600080fd5b506009546102f59062010000900460ff1681565b34801561068857600080fd5b506102cc60055481565b34801561069e57600080fd5b506107066106ad366004612cb4565b506006546000908152600d6020908152604091829020825160a081018452815480825260018301549382018490526002830154948201949094526003820154606082015260049091015460ff1615156080909101529091565b604080519283526020830191909152016102d6565b34801561072757600080fd5b506102cc610736366004612e47565b600e6020526000908152604090205481565b34801561075457600080fd5b506009546102f59060ff1681565b34801561076e57600080fd5b506002546103a7906001600160a01b031681565b34801561078e57600080fd5b506107b261079d366004612e47565b60106020526000908152604090205460ff1681565b6040516102d69190612e9c565b3480156107cb57600080fd5b506102cc6107da366004612e47565b600f6020526000908152604090205481565b3480156107f857600080fd5b506102cc610807366004612eaa565b601160209081526000928352604080842090915290825290205481565b34801561083057600080fd5b5061038561083f366004612e47565b61220e565b34801561085057600080fd5b506003546103a7906001600160a01b031681565b34801561087057600080fd5b5061038561087f366004612edf565b61224c565b6000806402540be40061089685610a3e565b6108a09190612f8c565b9050600081136108e75760405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a59081c1c9a58d9481999595960721b604482015260640161029e565b60006108f260065490565b6000818152600d60205260408120600281015492935091908088600281111561091d5761091d612e64565b0361094657670de0b6b3a76400006109358887612fbc565b61093f9190612fd3565b9050610a10565b600288600281111561095a5761095a612e64565b14806109775750600188600281111561097557610975612e64565b145b156109c8576006600061098b826012612ff5565b61099690600a6130ef565b6109a0908a612fbc565b9050670de0b6b3a76400006109b58289612fbc565b6109bf9190612fd3565b92505050610a10565b60405162461bcd60e51b815260206004820152601a60248201527f556e737570706f72746564207061796d656e74206d6574686f64000000000000604482015260640161029e565b600082610a25670de0b6b3a764000084612fbc565b610a2f9190612fd3565b96505050505050505b92915050565b600080826002811115610a5357610a53612e64565b03610adc5760008060009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610aac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad09190613115565b50919695505050505050565b6001826002811115610af057610af0612e64565b03610b3f5760015460408051633fabe5a360e21b815290516000926001600160a01b03169163feaf968c9160048083019260a09291908290030181865afa158015610aac573d6000803e3d6000fd5b6002826002811115610b5357610b53612e64565b036109c85760025460408051633fabe5a360e21b815290516000926001600160a01b03169163feaf968c9160048083019260a09291908290030181865afa158015610aac573d6000803e3d6000fd5b919050565b6000808211610c075760405162461bcd60e51b815260206004820152602660248201527f546f6b656e20616d6f756e74206d7573742062652067726561746572207468616044820152656e207a65726f60d01b606482015260840161029e565b60006402540be400610c1885610a3e565b610c229190612f8c565b905060008113610c695760405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a59081c1c9a58d9481999595960721b604482015260640161029e565b6000610c7460065490565b905080600003610cb75760405162461bcd60e51b815260206004820152600e60248201526d4e6f206163746976652073616c6560901b604482015260640161029e565b6000818152600d6020526040812060028101549091670de0b6b3a7640000610cdf8389612fbc565b610ce99190612fd3565b9050600080896002811115610d0057610d00612e64565b03610d295785610d18670de0b6b3a764000084612fbc565b610d229190612fd3565b9050610d6d565b6001896002811115610d3d57610d3d612e64565b1480610d5a57506002896002811115610d5857610d58612e64565b145b156109c85785610d1883620f4240612fbc565b98975050505050505050565b610d81612462565b610d8961249a565b60095460ff1615610dac5760405162461bcd60e51b815260040161029e90613167565b60095462010000900460ff1615610dd55760405162461bcd60e51b815260040161029e90613196565b6004546007541015610e4f5760405162461bcd60e51b815260206004820152603860248201527f43616e6e6f742066696e616c697a653a20536f667420636170206e6f7420726560448201527f6163686564206f722073616c65206973206f6e676f696e670000000000000000606482015260840161029e565b600954610100900460ff16610e9e5760405162461bcd60e51b8152602060048201526015602482015274105a5c991c9bdc081b9bdd0818dbdb5c1b195d1959605a1b604482015260640161029e565b6009805460ff19166001179055610eb36124cc565b6008546040517f9c4b134da32aab35252391880a9f2a3c13a760d7817ae8823f2b301d3522045a90600090a2610ef660016000805160206132d483398151915255565b565b600a8181548110610f0857600080fd5b6000918252602090912001546001600160a01b0316905081565b610f2a6127fa565b610f338261289f565b610f3d82826128a7565b5050565b6000610f4b612964565b506000805160206132b483398151915290565b610f6661249a565b60095462010000900460ff1615610fb15760405162461bcd60e51b815260206004820152600f60248201526e105b1c9958591e48119c99595e9959608a1b604482015260640161029e565b6009805462ff0000191662010000179055565b610fcc61249a565b60095460ff1615610fef5760405162461bcd60e51b815260040161029e90613167565b60095462010000900460ff16156110185760405162461bcd60e51b815260040161029e90613196565b42831161107c5760405162461bcd60e51b815260206004820152602c60248201527f53746172742074696d65206d7573742062652067726561746572207468616e2060448201526b63757272656e742074696d6560a01b606482015260840161029e565b8282116110dc5760405162461bcd60e51b815260206004820152602860248201527f456e642074696d65206d7573742062652067726561746572207468616e2073746044820152676172742074696d6560c01b606482015260840161029e565b6006546000908152600d602052604090206001015442116111545760405162461bcd60e51b815260206004820152602c60248201527f4e65772073616c65206d75737420737461727420616674657220746865206c6160448201526b73742073616c6520656e647360a01b606482015260840161029e565b60068054906000611164836131b7565b90915550506040805160a08101825284815260208082018581528284018581526000606080860182815260808701838152600680548552600d8852938990209751885594516001880155925160028701559151600386015591516004909401805460ff1916941515949094179093555483518781529182018690529281018490527f63b43fa153147ade1de28ed76841cdbc34e510ed94dd1ff5a88e278b0b1ad9ba910160405180910390a2505050565b61121d61249a565b610ef660006129ad565b61122f61249a565b60095462010000900460ff1661127b5760405162461bcd60e51b8152602060048201526011602482015270105b1c9958591e48155b919c99595e9959607a1b604482015260640161029e565b6009805462ff000019169055565b611291612462565b61129961249a565b60095460ff16156112bc5760405162461bcd60e51b815260040161029e90613167565b6006546000908152600d6020526040902060010154421161130e5760405162461bcd60e51b815260206004820152600c60248201526b53616c65206f6e676f696e6760a01b604482015260640161029e565b600454600754106113545760405162461bcd60e51b815260206004820152601060248201526f14dbd99d0818d85c081c995858da195960821b604482015260640161029e565b600a8054906000908211156113755761136e600b83612ff5565b9050611379565b5060005b6000611386600184612ff5565b90505b81811061176c576000600a82815481106113a5576113a56131d0565b60009182526020822001546001600160a01b031691505b60038160ff1610156117155760008160ff1660028111156113df576113df612e64565b6001600160a01b0384166000908152601160205260408120919250908183600281111561140e5761140e612e64565b600281111561141f5761141f612e64565b8152602001908152602001600020549050600081111561170b576001600160a01b03841660009081526011602052604081208184600281111561146457611464612e64565b600281111561147557611475612e64565b8152602081019190915260400160009081209190915582600281111561149d5761149d612e64565b0361153f576000846001600160a01b03168260405160006040518083038185875af1925050503d80600081146114ef576040519150601f19603f3d011682016040523d82523d6000602084013e6114f4565b606091505b50509050806115395760405162461bcd60e51b8152602060048201526011602482015270109390881c99599d5b990819985a5b1959607a1b604482015260640161029e565b506116c7565b600182600281111561155357611553612e64565b14806115705750600282600281111561156e5761156e612e64565b145b15611671576000600183600281111561158b5761158b612e64565b146115a157600c546001600160a01b03166115ae565b600b546001600160a01b03165b60405163a9059cbb60e01b81526001600160a01b038781166004830152602482018590529192509082169063a9059cbb906044016020604051808303816000875af1158015611601573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061162591906131e6565b6115395760405162461bcd60e51b815260206004820152601860248201527f537461626c65636f696e20726566756e64206661696c65640000000000000000604482015260640161029e565b60405162461bcd60e51b815260206004820152602560248201527f556e737570706f72746564207061796d656e74206d6574686f6420666f72207260448201526419599d5b9960da1b606482015260840161029e565b836001600160a01b03167f03829ab241648d7348f97e4f77d36451330f2276ea8eeb3428e462012f9699e78284604051611702929190613208565b60405180910390a25b50506001016113bc565b50600a8054806117275761172761321c565b600082815260208120820160001990810180546001600160a01b0319169055909101909155829003611759575061176c565b508061176481613232565b915050611389565b50600a54600003611785576009805460ff191660011790555b5050610ef660016000805160206132d483398151915255565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6117d4612462565b6117dc61249a565b60095460ff16156117ff5760405162461bcd60e51b815260040161029e90613167565b60095462010000900460ff16156118285760405162461bcd60e51b815260040161029e90613196565b600954610100900460ff16156118805760405162461bcd60e51b815260206004820152601960248201527f41697264726f7020616c726561647920636f6d706c6574656400000000000000604482015260640161029e565b6008546003546040516370a0823160e01b81523360048201526001600160a01b03909116906370a0823190602401602060405180830381865afa1580156118cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118ef9190613249565b10156119325760405162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e742046756e647360701b604482015260640161029e565b6006546000908152600d602052604090206001015442116119845760405162461bcd60e51b815260206004820152600c60248201526b53616c65206f6e676f696e6760a01b604482015260640161029e565b600a8054906000908211156119a55761199e600b83612ff5565b90506119a9565b5060005b60006119b6600184612ff5565b90505b818110611b7d576000600a82815481106119d5576119d56131d0565b60009182526020808320909101546001600160a01b0316808352600f9091526040909120549091508015611b59576003546000906001600160a01b03166323b872dd611a1f61179e565b6040516001600160e01b031960e084901b1681526001600160a01b0391821660048201529086166024820152604481018590526064016020604051808303816000875af1158015611a74573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a9891906131e6565b905080611adf5760405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b604482015260640161029e565b600a805480611af057611af061321c565b600082815260209020810160001990810180546001600160a01b03191690550190556040516001600160a01b038416907f9bdcd0cc5503fb9a8dd7311d9617e33108c4b7c8948cc544b16c1fd63c6f475b90611b4f9085815260200190565b60405180910390a2505b82600003611b68575050611b7d565b50508080611b7590613232565b9150506119b9565b50600a54600003611785576009805461ff0019166101001790555050610ef660016000805160206132d483398151915255565b60095460ff1615611bd35760405162461bcd60e51b815260040161029e90613167565b60095462010000900460ff1615611bfc5760405162461bcd60e51b815260040161029e90613196565b611c0461179e565b6001600160a01b03163303611c5b5760405162461bcd60e51b815260206004820152601760248201527f4f776e65722063616e6e6f742062757920746f6b656e73000000000000000000604482015260640161029e565b600654600003611c975760405162461bcd60e51b81526020600482015260076024820152664e6f2073616c6560c81b604482015260640161029e565b6006546000908152600d602052604090206004015460ff1615611cf55760405162461bcd60e51b815260206004820152601660248201527514d85b1948185b1c9958591e48199a5b985b1a5e995960521b604482015260640161029e565b600080836002811115611d0a57611d0a612e64565b03611dc95760003411611d5f5760405162461bcd60e51b815260206004820152601760248201527f53656e6420612076616c696420424e4220616d6f756e74000000000000000000604482015260640161029e565b611d698334610884565b336000908152601160205260408120919250349190856002811115611d9057611d90612e64565b6002811115611da157611da1612e64565b81526020019081526020016000206000828254611dbe9190613262565b90915550611fb99050565b6001836002811115611ddd57611ddd612e64565b1480611dfa57506002836002811115611df857611df8612e64565b145b156109c85760008211611e4f5760405162461bcd60e51b815260206004820152601f60248201527f456e74657220612076616c696420737461626c65636f696e20616d6f756e7400604482015260640161029e565b60006001846002811115611e6557611e65612e64565b14611e7b57600c546001600160a01b0316611e88565b600b546001600160a01b03165b6040516323b872dd60e01b8152336004820152306024820152604481018590529091506001600160a01b038216906323b872dd906064016020604051808303816000875af1158015611ede573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f0291906131e6565b611f4e5760405162461bcd60e51b815260206004820152601a60248201527f537461626c65636f696e207472616e73666572206661696c6564000000000000604482015260640161029e565b611f588484610884565b336000908152601160205260408120919350849190866002811115611f7f57611f7f612e64565b6002811115611f9057611f90612e64565b81526020019081526020016000206000828254611fad9190613262565b90915550611fb9915050565b600081116120005760405162461bcd60e51b8152602060048201526014602482015273125b9d985b1a59081d1bdad95b88185b5bdd5b9d60621b604482015260640161029e565b6006546000908152600d6020526040812060020154670de0b6b3a7640000906120299084612fbc565b6120339190612fd3565b9050600554816007546120469190613262565b11156120875760405162461bcd60e51b815260206004820152601060248201526f12185c990818d85c081c995858da195960821b604482015260640161029e565b336000908152600e6020526040812080548392906120a6908490613262565b9250508190555080600760008282546120bf9190613262565b90915550506006546000908152600d6020526040812060030180548492906120e8908490613262565b9250508190555081600860008282546121019190613262565b9091555050336000908152600f6020526040812054900361215f57600a80546001810182556000919091527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80180546001600160a01b031916331790555b336000908152600f60205260408120805484929061217e908490613262565b9091555050336000908152601060205260409020805485919060ff191660018360028111156121af576121af612e64565b02179055506006546000818152600d60205260409081902060020154905133917fdbcef474a632721725d49e3f35d9defe0257100b01d1e4b4b135b14d6fe296e89161220091879189908b90613275565b60405180910390a350505050565b61221661249a565b6001600160a01b03811661224057604051631e4fbdf760e01b81526000600482015260240161029e565b612249816129ad565b50565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff166000811580156122925750825b905060008267ffffffffffffffff1660011480156122af5750303b155b9050811580156122bd575080155b156122db5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561230557845460ff60401b1916600160401b1785555b61230e33612a1e565b612316612a2f565b8c600360006101000a8154816001600160a01b0302191690836001600160a01b0316021790555089600481905550886005819055508b600b60006101000a8154816001600160a01b0302191690836001600160a01b031602179055508a600c60006101000a8154816001600160a01b0302191690836001600160a01b03160217905550876000806101000a8154816001600160a01b0302191690836001600160a01b0316021790555086600160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555085600260006101000a8154816001600160a01b0302191690836001600160a01b03160217905550831561245357845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050505050505050565b6000805160206132d483398151915280546001190161249457604051633ee5aeb560e01b815260040160405180910390fd5b60029055565b336124a361179e565b6001600160a01b031614610ef65760405163118cdaa760e01b815233600482015260240161029e565b4780156125715760006124dd61179e565b6001600160a01b03168260405160006040518083038185875af1925050503d8060008114612527576040519150601f19603f3d011682016040523d82523d6000602084013e61252c565b606091505b505090508061256f5760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b604482015260640161029e565b505b600b546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156125ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125de9190613249565b905080156126b357600b546001600160a01b031663a9059cbb6125ff61179e565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af115801561264c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061267091906131e6565b6126b35760405162461bcd60e51b81526020600482015260146024820152731554d115081d1c985b9cd9995c8819985a5b195960621b604482015260640161029e565b600c546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156126fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127209190613249565b905080156127f557600c546001600160a01b031663a9059cbb61274161179e565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af115801561278e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127b291906131e6565b6127f55760405162461bcd60e51b81526020600482015260146024820152731554d110c81d1c985b9cd9995c8819985a5b195960621b604482015260640161029e565b505050565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148061288157507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166128756000805160206132b4833981519152546001600160a01b031690565b6001600160a01b031614155b15610ef65760405163703e46dd60e11b815260040160405180910390fd5b61224961249a565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015612901575060408051601f3d908101601f191682019092526128fe91810190613249565b60015b61292957604051634c9c8ce360e01b81526001600160a01b038316600482015260240161029e565b6000805160206132b4833981519152811461295a57604051632a87526960e21b81526004810182905260240161029e565b6127f58383612a37565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610ef65760405163703e46dd60e11b815260040160405180910390fd5b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b612a26612a8d565b61224981612ad6565b610ef6612a8d565b612a4082612ade565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a2805115612a85576127f58282612b43565b610f3d612bb9565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff16610ef657604051631afcd79f60e31b815260040160405180910390fd5b612216612a8d565b806001600160a01b03163b600003612b1457604051634c9c8ce360e01b81526001600160a01b038216600482015260240161029e565b6000805160206132b483398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6060600080846001600160a01b031684604051612b609190613297565b600060405180830381855af49150503d8060008114612b9b576040519150601f19603f3d011682016040523d82523d6000602084013e612ba0565b606091505b5091509150612bb0858383612bd8565b95945050505050565b3415610ef65760405163b398979f60e01b815260040160405180910390fd5b606082612bed57612be882612c37565b612c30565b8151158015612c0457506001600160a01b0384163b155b15612c2d57604051639996b31560e01b81526001600160a01b038516600482015260240161029e565b50805b9392505050565b805115612c475780518082602001fd5b60405163d6bda27560e01b815260040160405180910390fd5b803560038110610ba257600080fd5b60008060408385031215612c8257600080fd5b612c8b83612c60565b946020939093013593505050565b600060208284031215612cab57600080fd5b612c3082612c60565b600060208284031215612cc657600080fd5b5035919050565b6001600160a01b038116811461224957600080fd5b634e487b7160e01b600052604160045260246000fd5b60008060408385031215612d0b57600080fd5b8235612d1681612ccd565b9150602083013567ffffffffffffffff811115612d3257600080fd5b8301601f81018513612d4357600080fd5b803567ffffffffffffffff811115612d5d57612d5d612ce2565b604051601f8201601f19908116603f0116810167ffffffffffffffff81118282101715612d8c57612d8c612ce2565b604052818152828201602001871015612da457600080fd5b816020840160208301376000602083830101528093505050509250929050565b600080600060608486031215612dd957600080fd5b505081359360208301359350604090920135919050565b60005b83811015612e0b578181015183820152602001612df3565b50506000910152565b6020815260008251806020840152612e33816040850160208701612df0565b601f01601f19169190910160400192915050565b600060208284031215612e5957600080fd5b8135612c3081612ccd565b634e487b7160e01b600052602160045260246000fd5b60038110612e9857634e487b7160e01b600052602160045260246000fd5b9052565b60208101610a388284612e7a565b60008060408385031215612ebd57600080fd5b8235612ec881612ccd565b9150612ed660208401612c60565b90509250929050565b600080600080600080600080610100898b031215612efc57600080fd5b8835612f0781612ccd565b97506020890135612f1781612ccd565b96506040890135612f2781612ccd565b9550606089013594506080890135935060a0890135612f4581612ccd565b925060c0890135612f5581612ccd565b915060e0890135612f6581612ccd565b809150509295985092959890939650565b634e487b7160e01b600052601160045260246000fd5b80820260008212600160ff1b84141615612fa857612fa8612f76565b8181058314821517610a3857610a38612f76565b8082028115828204841417610a3857610a38612f76565b600082612ff057634e487b7160e01b600052601260045260246000fd5b500490565b81810381811115610a3857610a38612f76565b6001815b60018411156130435780850481111561302757613027612f76565b600184161561303557908102905b60019390931c92800261300c565b935093915050565b60008261305a57506001610a38565b8161306757506000610a38565b816001811461307d5760028114613087576130a3565b6001915050610a38565b60ff84111561309857613098612f76565b50506001821b610a38565b5060208310610133831016604e8410600b84101617156130c6575081810a610a38565b6130d36000198484613008565b80600019048211156130e7576130e7612f76565b029392505050565b6000612c30838361304b565b805169ffffffffffffffffffff81168114610ba257600080fd5b600080600080600060a0868803121561312d57600080fd5b613136866130fb565b6020870151604088015160608901519297509095509350915061315b608087016130fb565b90509295509295909350565b6020808252601590820152741250d3c8185b1c9958591e48199a5b985b1a5e9959605a1b604082015260600190565b602080825260079082015266199c99595e995960ca1b604082015260600190565b6000600182016131c9576131c9612f76565b5060010190565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156131f857600080fd5b81518015158114612c3057600080fd5b82815260408101612c306020830184612e7a565b634e487b7160e01b600052603160045260246000fd5b60008161324157613241612f76565b506000190190565b60006020828403121561325b57600080fd5b5051919050565b80820180821115610a3857610a38612f76565b848152602081018490526040810183905260808101612bb06060830184612e7a565b600082516132a9818460208701612df0565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00a2646970667358221220dc5b9644602b5da834f3dd21d5c9d0cc5e3d7a96d8538e314a4535f3ddb49ac664736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x255 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x139 JUMPI DUP1 PUSH4 0xC1560A14 GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xDF4E0593 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xDF4E0593 EQ PUSH2 0x782 JUMPI DUP1 PUSH4 0xE8E87389 EQ PUSH2 0x7BF JUMPI DUP1 PUSH4 0xEFDCDB45 EQ PUSH2 0x7EC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x824 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x844 JUMPI DUP1 PUSH4 0xFD663DA2 EQ PUSH2 0x864 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC1560A14 EQ PUSH2 0x67C JUMPI DUP1 PUSH4 0xC211E1F9 EQ PUSH2 0x692 JUMPI DUP1 PUSH4 0xC81FFDEA EQ PUSH2 0x71B JUMPI DUP1 PUSH4 0xD1F3B23E EQ PUSH2 0x748 JUMPI DUP1 PUSH4 0xD3D9D1E4 EQ PUSH2 0x762 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x99131E7E GT PUSH2 0xFD JUMPI DUP1 PUSH4 0x99131E7E EQ PUSH2 0x571 JUMPI DUP1 PUSH4 0xA1E89AEC EQ PUSH2 0x591 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x5A7 JUMPI DUP1 PUSH4 0xB5F522F7 EQ PUSH2 0x5E5 JUMPI DUP1 PUSH4 0xB9469E1A EQ PUSH2 0x65C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x506 JUMPI DUP1 PUSH4 0x91152C5C EQ PUSH2 0x51B JUMPI DUP1 PUSH4 0x91D8730A EQ PUSH2 0x530 JUMPI DUP1 PUSH4 0x940C333E EQ PUSH2 0x549 JUMPI DUP1 PUSH4 0x960524E3 EQ PUSH2 0x55C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4DEE1DC3 GT PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x63B20117 GT PUSH2 0x196 JUMPI DUP1 PUSH4 0x63B20117 EQ PUSH2 0x47B JUMPI DUP1 PUSH4 0x6C1909ED EQ PUSH2 0x491 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4B1 JUMPI DUP1 PUSH4 0x721BC38B EQ PUSH2 0x4C6 JUMPI DUP1 PUSH4 0x7CF12B90 EQ PUSH2 0x4DC JUMPI DUP1 PUSH4 0x7FB12001 EQ PUSH2 0x4F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4DEE1DC3 EQ PUSH2 0x3FF JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x41E JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x431 JUMPI DUP1 PUSH4 0x62A469E9 EQ PUSH2 0x446 JUMPI DUP1 PUSH4 0x62A5AF3B EQ PUSH2 0x466 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2151206E GT PUSH2 0x219 JUMPI DUP1 PUSH4 0x2151206E EQ PUSH2 0x35A JUMPI DUP1 PUSH4 0x23CC75A8 EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0x2F48AB7D EQ PUSH2 0x387 JUMPI DUP1 PUSH4 0x3E413BEE EQ PUSH2 0x3BF JUMPI DUP1 PUSH4 0x3FEB5F2B EQ PUSH2 0x3DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5834E67 EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0x6E4D36F EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0x115AFC3A EQ PUSH2 0x305 JUMPI DUP1 PUSH4 0x117D260F EQ PUSH2 0x325 JUMPI DUP1 PUSH4 0x212EA247 EQ PUSH2 0x345 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x2A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x44697265637420424E42207472616E7366657273206E6F7420616C6C6F776564 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CC PUSH2 0x2C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C6F JUMP JUMPDEST PUSH2 0x884 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH1 0x7 SLOAD LT ISZERO JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2D6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x311 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CC PUSH2 0x320 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C99 JUMP JUMPDEST PUSH2 0xA3E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x331 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CC PUSH2 0x340 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C6F JUMP JUMPDEST PUSH2 0xBA7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x351 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH2 0x2CC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x366 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CC PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x385 PUSH2 0xD79 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x393 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH2 0x3A7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2D6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xC SLOAD PUSH2 0x3A7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A7 PUSH2 0x3FA CALLDATASIZE PUSH1 0x4 PUSH2 0x2CB4 JUMP JUMPDEST PUSH2 0xEF8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH2 0x2F5 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x385 PUSH2 0x42C CALLDATASIZE PUSH1 0x4 PUSH2 0x2CF8 JUMP JUMPDEST PUSH2 0xF22 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CC PUSH2 0xF41 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x452 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x3A7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x472 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x385 PUSH2 0xF5E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x487 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CC PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x385 PUSH2 0x4AC CALLDATASIZE PUSH1 0x4 PUSH2 0x2DC4 JUMP JUMPDEST PUSH2 0xFC4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x385 PUSH2 0x1215 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CC PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x385 PUSH2 0x1227 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x385 PUSH2 0x1289 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x512 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A7 PUSH2 0x179E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x527 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x385 PUSH2 0x17CC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH1 0x7 SLOAD EQ PUSH2 0x2F5 JUMP JUMPDEST PUSH2 0x385 PUSH2 0x557 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C6F JUMP JUMPDEST PUSH2 0x1BB0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x568 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xA SLOAD PUSH2 0x2CC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x3A7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x59D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CC PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5D8 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x352E302E3 PUSH1 0xDC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D6 SWAP2 SWAP1 PUSH2 0x2E14 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x632 PUSH2 0x600 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CB4 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 SWAP1 SWAP5 ADD SLOAD SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x2D6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x668 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH2 0x2F5 SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x688 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CC PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x69E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x706 PUSH2 0x6AD CALLDATASIZE PUSH1 0x4 PUSH2 0x2CB4 JUMP JUMPDEST POP PUSH1 0x6 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0xA0 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP1 DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD SWAP4 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x2 DUP4 ADD SLOAD SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x80 SWAP1 SWAP2 ADD MSTORE SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x2D6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x727 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CC PUSH2 0x736 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E47 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x754 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH2 0x2F5 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x76E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x3A7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x78E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7B2 PUSH2 0x79D CALLDATASIZE PUSH1 0x4 PUSH2 0x2E47 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D6 SWAP2 SWAP1 PUSH2 0x2E9C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CC PUSH2 0x7DA CALLDATASIZE PUSH1 0x4 PUSH2 0x2E47 JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CC PUSH2 0x807 CALLDATASIZE PUSH1 0x4 PUSH2 0x2EAA JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x830 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x385 PUSH2 0x83F CALLDATASIZE PUSH1 0x4 PUSH2 0x2E47 JUMP JUMPDEST PUSH2 0x220E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x850 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x3A7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x870 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x385 PUSH2 0x87F CALLDATASIZE PUSH1 0x4 PUSH2 0x2EDF JUMP JUMPDEST PUSH2 0x224C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH5 0x2540BE400 PUSH2 0x896 DUP6 PUSH2 0xA3E JUMP JUMPDEST PUSH2 0x8A0 SWAP2 SWAP1 PUSH2 0x2F8C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SGT PUSH2 0x8E7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x125B9D985B1A59081C1C9A58D94819995959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F2 PUSH1 0x6 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD SWAP3 SWAP4 POP SWAP2 SWAP1 DUP1 DUP9 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x91D JUMPI PUSH2 0x91D PUSH2 0x2E64 JUMP JUMPDEST SUB PUSH2 0x946 JUMPI PUSH8 0xDE0B6B3A7640000 PUSH2 0x935 DUP9 DUP8 PUSH2 0x2FBC JUMP JUMPDEST PUSH2 0x93F SWAP2 SWAP1 PUSH2 0x2FD3 JUMP JUMPDEST SWAP1 POP PUSH2 0xA10 JUMP JUMPDEST PUSH1 0x2 DUP9 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x95A JUMPI PUSH2 0x95A PUSH2 0x2E64 JUMP JUMPDEST EQ DUP1 PUSH2 0x977 JUMPI POP PUSH1 0x1 DUP9 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x975 JUMPI PUSH2 0x975 PUSH2 0x2E64 JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x9C8 JUMPI PUSH1 0x6 PUSH1 0x0 PUSH2 0x98B DUP3 PUSH1 0x12 PUSH2 0x2FF5 JUMP JUMPDEST PUSH2 0x996 SWAP1 PUSH1 0xA PUSH2 0x30EF JUMP JUMPDEST PUSH2 0x9A0 SWAP1 DUP11 PUSH2 0x2FBC JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 PUSH2 0x9B5 DUP3 DUP10 PUSH2 0x2FBC JUMP JUMPDEST PUSH2 0x9BF SWAP2 SWAP1 PUSH2 0x2FD3 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0xA10 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E737570706F72746564207061796D656E74206D6574686F64000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29E JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xA25 PUSH8 0xDE0B6B3A7640000 DUP5 PUSH2 0x2FBC JUMP JUMPDEST PUSH2 0xA2F SWAP2 SWAP1 PUSH2 0x2FD3 JUMP JUMPDEST SWAP7 POP POP POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xA53 JUMPI PUSH2 0xA53 PUSH2 0x2E64 JUMP JUMPDEST SUB PUSH2 0xADC JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAAC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAD0 SWAP2 SWAP1 PUSH2 0x3115 JUMP JUMPDEST POP SWAP2 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xAF0 JUMPI PUSH2 0xAF0 PUSH2 0x2E64 JUMP JUMPDEST SUB PUSH2 0xB3F JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x3FABE5A3 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xFEAF968C SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0xA0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAAC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xB53 JUMPI PUSH2 0xB53 PUSH2 0x2E64 JUMP JUMPDEST SUB PUSH2 0x9C8 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x3FABE5A3 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xFEAF968C SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0xA0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAAC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0xC07 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E20616D6F756E74206D757374206265206772656174657220746861 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x6E207A65726F PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x29E JUMP JUMPDEST PUSH1 0x0 PUSH5 0x2540BE400 PUSH2 0xC18 DUP6 PUSH2 0xA3E JUMP JUMPDEST PUSH2 0xC22 SWAP2 SWAP1 PUSH2 0x2F8C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SGT PUSH2 0xC69 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x125B9D985B1A59081C1C9A58D94819995959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29E JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC74 PUSH1 0x6 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 SUB PUSH2 0xCB7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x4E6F206163746976652073616C65 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29E JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD SWAP1 SWAP2 PUSH8 0xDE0B6B3A7640000 PUSH2 0xCDF DUP4 DUP10 PUSH2 0x2FBC JUMP JUMPDEST PUSH2 0xCE9 SWAP2 SWAP1 PUSH2 0x2FD3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP10 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xD00 JUMPI PUSH2 0xD00 PUSH2 0x2E64 JUMP JUMPDEST SUB PUSH2 0xD29 JUMPI DUP6 PUSH2 0xD18 PUSH8 0xDE0B6B3A7640000 DUP5 PUSH2 0x2FBC JUMP JUMPDEST PUSH2 0xD22 SWAP2 SWAP1 PUSH2 0x2FD3 JUMP JUMPDEST SWAP1 POP PUSH2 0xD6D JUMP JUMPDEST PUSH1 0x1 DUP10 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xD3D JUMPI PUSH2 0xD3D PUSH2 0x2E64 JUMP JUMPDEST EQ DUP1 PUSH2 0xD5A JUMPI POP PUSH1 0x2 DUP10 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xD58 JUMPI PUSH2 0xD58 PUSH2 0x2E64 JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x9C8 JUMPI DUP6 PUSH2 0xD18 DUP4 PUSH3 0xF4240 PUSH2 0x2FBC JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xD81 PUSH2 0x2462 JUMP JUMPDEST PUSH2 0xD89 PUSH2 0x249A JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xDAC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29E SWAP1 PUSH2 0x3167 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xDD5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29E SWAP1 PUSH2 0x3196 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x7 SLOAD LT ISZERO PUSH2 0xE4F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742066696E616C697A653A20536F667420636170206E6F74207265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6163686564206F722073616C65206973206F6E676F696E670000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x29E JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xE9E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x105A5C991C9BDC081B9BDD0818DBDB5C1B195D1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29E JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xEB3 PUSH2 0x24CC JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH32 0x9C4B134DA32AAB35252391880A9F2A3C13A760D7817AE8823F2B301D3522045A SWAP1 PUSH1 0x0 SWAP1 LOG2 PUSH2 0xEF6 PUSH1 0x1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x32D4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xA DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xF08 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0xF2A PUSH2 0x27FA JUMP JUMPDEST PUSH2 0xF33 DUP3 PUSH2 0x289F JUMP JUMPDEST PUSH2 0xF3D DUP3 DUP3 PUSH2 0x28A7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF4B PUSH2 0x2964 JUMP JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x32B4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0xF66 PUSH2 0x249A JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xFB1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x105B1C9958591E48119C99595E9959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29E JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH3 0xFF0000 NOT AND PUSH3 0x10000 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xFCC PUSH2 0x249A JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xFEF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29E SWAP1 PUSH2 0x3167 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1018 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29E SWAP1 PUSH2 0x3196 JUMP JUMPDEST TIMESTAMP DUP4 GT PUSH2 0x107C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53746172742074696D65206D7573742062652067726561746572207468616E20 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x63757272656E742074696D65 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x29E JUMP JUMPDEST DUP3 DUP3 GT PUSH2 0x10DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456E642074696D65206D7573742062652067726561746572207468616E207374 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6172742074696D65 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x29E JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD TIMESTAMP GT PUSH2 0x1154 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E65772073616C65206D75737420737461727420616674657220746865206C61 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x73742073616C6520656E6473 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x29E JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x1164 DUP4 PUSH2 0x31B7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP6 DUP2 MSTORE DUP3 DUP5 ADD DUP6 DUP2 MSTORE PUSH1 0x0 PUSH1 0x60 DUP1 DUP7 ADD DUP3 DUP2 MSTORE PUSH1 0x80 DUP8 ADD DUP4 DUP2 MSTORE PUSH1 0x6 DUP1 SLOAD DUP6 MSTORE PUSH1 0xD DUP9 MSTORE SWAP4 DUP10 SWAP1 KECCAK256 SWAP8 MLOAD DUP9 SSTORE SWAP5 MLOAD PUSH1 0x1 DUP9 ADD SSTORE SWAP3 MLOAD PUSH1 0x2 DUP8 ADD SSTORE SWAP2 MLOAD PUSH1 0x3 DUP7 ADD SSTORE SWAP2 MLOAD PUSH1 0x4 SWAP1 SWAP5 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP5 ISZERO ISZERO SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE SLOAD DUP4 MLOAD DUP8 DUP2 MSTORE SWAP2 DUP3 ADD DUP7 SWAP1 MSTORE SWAP3 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x63B43FA153147ADE1DE28ED76841CDBC34E510ED94DD1FF5A88E278B0B1AD9BA SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0x121D PUSH2 0x249A JUMP JUMPDEST PUSH2 0xEF6 PUSH1 0x0 PUSH2 0x29AD JUMP JUMPDEST PUSH2 0x122F PUSH2 0x249A JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x127B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x105B1C9958591E48155B919C99595E9959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29E JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH3 0xFF0000 NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1291 PUSH2 0x2462 JUMP JUMPDEST PUSH2 0x1299 PUSH2 0x249A JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x12BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29E SWAP1 PUSH2 0x3167 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD TIMESTAMP GT PUSH2 0x130E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x53616C65206F6E676F696E67 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29E JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x7 SLOAD LT PUSH2 0x1354 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14DBD99D0818D85C081C995858DA1959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29E JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD SWAP1 PUSH1 0x0 SWAP1 DUP3 GT ISZERO PUSH2 0x1375 JUMPI PUSH2 0x136E PUSH1 0xB DUP4 PUSH2 0x2FF5 JUMP JUMPDEST SWAP1 POP PUSH2 0x1379 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x0 PUSH2 0x1386 PUSH1 0x1 DUP5 PUSH2 0x2FF5 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP2 DUP2 LT PUSH2 0x176C JUMPI PUSH1 0x0 PUSH1 0xA DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x13A5 JUMPI PUSH2 0x13A5 PUSH2 0x31D0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP JUMPDEST PUSH1 0x3 DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x1715 JUMPI PUSH1 0x0 DUP2 PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x13DF JUMPI PUSH2 0x13DF PUSH2 0x2E64 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP3 POP SWAP1 DUP2 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x140E JUMPI PUSH2 0x140E PUSH2 0x2E64 JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x141F JUMPI PUSH2 0x141F PUSH2 0x2E64 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x170B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1464 JUMPI PUSH2 0x1464 PUSH2 0x2E64 JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1475 JUMPI PUSH2 0x1475 PUSH2 0x2E64 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x149D JUMPI PUSH2 0x149D PUSH2 0x2E64 JUMP JUMPDEST SUB PUSH2 0x153F JUMPI PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x14EF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x14F4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1539 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x109390881C99599D5B990819985A5B1959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29E JUMP JUMPDEST POP PUSH2 0x16C7 JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1553 JUMPI PUSH2 0x1553 PUSH2 0x2E64 JUMP JUMPDEST EQ DUP1 PUSH2 0x1570 JUMPI POP PUSH1 0x2 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x156E JUMPI PUSH2 0x156E PUSH2 0x2E64 JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x1671 JUMPI PUSH1 0x0 PUSH1 0x1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x158B JUMPI PUSH2 0x158B PUSH2 0x2E64 JUMP JUMPDEST EQ PUSH2 0x15A1 JUMPI PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x15AE JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 SWAP3 POP SWAP1 DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1601 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1625 SWAP2 SWAP1 PUSH2 0x31E6 JUMP JUMPDEST PUSH2 0x1539 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537461626C65636F696E20726566756E64206661696C65640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E737570706F72746564207061796D656E74206D6574686F6420666F722072 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x19599D5B99 PUSH1 0xDA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x29E JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x3829AB241648D7348F97E4F77D36451330F2276EA8EEB3428E462012F9699E7 DUP3 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1702 SWAP3 SWAP2 SWAP1 PUSH2 0x3208 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x13BC JUMP JUMPDEST POP PUSH1 0xA DUP1 SLOAD DUP1 PUSH2 0x1727 JUMPI PUSH2 0x1727 PUSH2 0x321C JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 DUP3 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE SWAP1 SWAP2 ADD SWAP1 SWAP2 SSTORE DUP3 SWAP1 SUB PUSH2 0x1759 JUMPI POP PUSH2 0x176C JUMP JUMPDEST POP DUP1 PUSH2 0x1764 DUP2 PUSH2 0x3232 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1389 JUMP JUMPDEST POP PUSH1 0xA SLOAD PUSH1 0x0 SUB PUSH2 0x1785 JUMPI PUSH1 0x9 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST POP POP PUSH2 0xEF6 PUSH1 0x1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x32D4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x17D4 PUSH2 0x2462 JUMP JUMPDEST PUSH2 0x17DC PUSH2 0x249A JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x17FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29E SWAP1 PUSH2 0x3167 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1828 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29E SWAP1 PUSH2 0x3196 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1880 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41697264726F7020616C726561647920636F6D706C6574656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29E JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18CB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18EF SWAP2 SWAP1 PUSH2 0x3249 JUMP JUMPDEST LT ISZERO PUSH2 0x1932 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x496E73756666696369656E742046756E6473 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29E JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD TIMESTAMP GT PUSH2 0x1984 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x53616C65206F6E676F696E67 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29E JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD SWAP1 PUSH1 0x0 SWAP1 DUP3 GT ISZERO PUSH2 0x19A5 JUMPI PUSH2 0x199E PUSH1 0xB DUP4 PUSH2 0x2FF5 JUMP JUMPDEST SWAP1 POP PUSH2 0x19A9 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x0 PUSH2 0x19B6 PUSH1 0x1 DUP5 PUSH2 0x2FF5 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP2 DUP2 LT PUSH2 0x1B7D JUMPI PUSH1 0x0 PUSH1 0xA DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x19D5 JUMPI PUSH2 0x19D5 PUSH2 0x31D0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 DUP4 MSTORE PUSH1 0xF SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP1 ISZERO PUSH2 0x1B59 JUMPI PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD PUSH2 0x1A1F PUSH2 0x179E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP7 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A74 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A98 SWAP2 SWAP1 PUSH2 0x31E6 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x1ADF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x151BDAD95B881D1C985B9CD9995C8819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29E JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD DUP1 PUSH2 0x1AF0 JUMPI PUSH2 0x1AF0 PUSH2 0x321C JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0x9BDCD0CC5503FB9A8DD7311D9617E33108C4B7C8948CC544B16C1FD63C6F475B SWAP1 PUSH2 0x1B4F SWAP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMPDEST DUP3 PUSH1 0x0 SUB PUSH2 0x1B68 JUMPI POP POP PUSH2 0x1B7D JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x1B75 SWAP1 PUSH2 0x3232 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x19B9 JUMP JUMPDEST POP PUSH1 0xA SLOAD PUSH1 0x0 SUB PUSH2 0x1785 JUMPI PUSH1 0x9 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE POP POP PUSH2 0xEF6 PUSH1 0x1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x32D4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1BD3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29E SWAP1 PUSH2 0x3167 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1BFC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29E SWAP1 PUSH2 0x3196 JUMP JUMPDEST PUSH2 0x1C04 PUSH2 0x179E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1C5B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E65722063616E6E6F742062757920746F6B656E73000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29E JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x0 SUB PUSH2 0x1C97 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x24 DUP3 ADD MSTORE PUSH7 0x4E6F2073616C65 PUSH1 0xC8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29E JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1CF5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x14D85B1948185B1C9958591E48199A5B985B1A5E9959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29E JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1D0A JUMPI PUSH2 0x1D0A PUSH2 0x2E64 JUMP JUMPDEST SUB PUSH2 0x1DC9 JUMPI PUSH1 0x0 CALLVALUE GT PUSH2 0x1D5F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656E6420612076616C696420424E4220616D6F756E74000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29E JUMP JUMPDEST PUSH2 0x1D69 DUP4 CALLVALUE PUSH2 0x884 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP3 POP CALLVALUE SWAP2 SWAP1 DUP6 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1D90 JUMPI PUSH2 0x1D90 PUSH2 0x2E64 JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1DA1 JUMPI PUSH2 0x1DA1 PUSH2 0x2E64 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1DBE SWAP2 SWAP1 PUSH2 0x3262 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1FB9 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1DDD JUMPI PUSH2 0x1DDD PUSH2 0x2E64 JUMP JUMPDEST EQ DUP1 PUSH2 0x1DFA JUMPI POP PUSH1 0x2 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1DF8 JUMPI PUSH2 0x1DF8 PUSH2 0x2E64 JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x9C8 JUMPI PUSH1 0x0 DUP3 GT PUSH2 0x1E4F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456E74657220612076616C696420737461626C65636F696E20616D6F756E7400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1E65 JUMPI PUSH2 0x1E65 PUSH2 0x2E64 JUMP JUMPDEST EQ PUSH2 0x1E7B JUMPI PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1E88 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1EDE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F02 SWAP2 SWAP1 PUSH2 0x31E6 JUMP JUMPDEST PUSH2 0x1F4E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537461626C65636F696E207472616E73666572206661696C6564000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29E JUMP JUMPDEST PUSH2 0x1F58 DUP5 DUP5 PUSH2 0x884 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP4 POP DUP5 SWAP2 SWAP1 DUP7 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1F7F JUMPI PUSH2 0x1F7F PUSH2 0x2E64 JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1F90 JUMPI PUSH2 0x1F90 PUSH2 0x2E64 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1FAD SWAP2 SWAP1 PUSH2 0x3262 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1FB9 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x2000 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x125B9D985B1A59081D1BDAD95B88185B5BDD5B9D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29E JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH2 0x2029 SWAP1 DUP5 PUSH2 0x2FBC JUMP JUMPDEST PUSH2 0x2033 SWAP2 SWAP1 PUSH2 0x2FD3 JUMP JUMPDEST SWAP1 POP PUSH1 0x5 SLOAD DUP2 PUSH1 0x7 SLOAD PUSH2 0x2046 SWAP2 SWAP1 PUSH2 0x3262 JUMP JUMPDEST GT ISZERO PUSH2 0x2087 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x12185C990818D85C081C995858DA1959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29E JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x20A6 SWAP1 DUP5 SWAP1 PUSH2 0x3262 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x20BF SWAP2 SWAP1 PUSH2 0x3262 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x6 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x20E8 SWAP1 DUP5 SWAP1 PUSH2 0x3262 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x8 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2101 SWAP2 SWAP1 PUSH2 0x3262 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x215F JUMPI PUSH1 0xA DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x217E SWAP1 DUP5 SWAP1 PUSH2 0x3262 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP6 SWAP2 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x21AF JUMPI PUSH2 0x21AF PUSH2 0x2E64 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x6 SLOAD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 MLOAD CALLER SWAP2 PUSH32 0xDBCEF474A632721725D49E3F35D9DEFE0257100B01D1E4B4B135B14D6FE296E8 SWAP2 PUSH2 0x2200 SWAP2 DUP8 SWAP2 DUP10 SWAP1 DUP12 SWAP1 PUSH2 0x3275 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0x2216 PUSH2 0x249A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2240 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x29E JUMP JUMPDEST PUSH2 0x2249 DUP2 PUSH2 0x29AD JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x2292 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x22AF JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x22BD JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x22DB JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x2305 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0x230E CALLER PUSH2 0x2A1E JUMP JUMPDEST PUSH2 0x2316 PUSH2 0x2A2F JUMP JUMPDEST DUP13 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP10 PUSH1 0x4 DUP2 SWAP1 SSTORE POP DUP9 PUSH1 0x5 DUP2 SWAP1 SSTORE POP DUP12 PUSH1 0xB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP11 PUSH1 0xC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP8 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP7 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x2453 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x32D4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 NOT ADD PUSH2 0x2494 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH2 0x24A3 PUSH2 0x179E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xEF6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x29E JUMP JUMPDEST SELFBALANCE DUP1 ISZERO PUSH2 0x2571 JUMPI PUSH1 0x0 PUSH2 0x24DD PUSH2 0x179E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2527 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x252C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x256F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29E JUMP JUMPDEST POP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x25BA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x25DE SWAP2 SWAP1 PUSH2 0x3249 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x26B3 JUMPI PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x25FF PUSH2 0x179E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x264C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2670 SWAP2 SWAP1 PUSH2 0x31E6 JUMP JUMPDEST PUSH2 0x26B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x1554D115081D1C985B9CD9995C8819985A5B1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29E JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x26FC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2720 SWAP2 SWAP1 PUSH2 0x3249 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x27F5 JUMPI PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x2741 PUSH2 0x179E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x278E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x27B2 SWAP2 SWAP1 PUSH2 0x31E6 JUMP JUMPDEST PUSH2 0x27F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x1554D110C81D1C985B9CD9995C8819985A5B1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29E JUMP JUMPDEST POP POP POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0x2881 JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2875 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x32B4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xEF6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2249 PUSH2 0x249A JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x2901 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x28FE SWAP2 DUP2 ADD SWAP1 PUSH2 0x3249 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2929 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x29E JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x32B4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0x295A JUMPI PUSH1 0x40 MLOAD PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x29E JUMP JUMPDEST PUSH2 0x27F5 DUP4 DUP4 PUSH2 0x2A37 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0xEF6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP3 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x2A26 PUSH2 0x2A8D JUMP JUMPDEST PUSH2 0x2249 DUP2 PUSH2 0x2AD6 JUMP JUMPDEST PUSH2 0xEF6 PUSH2 0x2A8D JUMP JUMPDEST PUSH2 0x2A40 DUP3 PUSH2 0x2ADE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x2A85 JUMPI PUSH2 0x27F5 DUP3 DUP3 PUSH2 0x2B43 JUMP JUMPDEST PUSH2 0xF3D PUSH2 0x2BB9 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0xEF6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2216 PUSH2 0x2A8D JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH1 0x0 SUB PUSH2 0x2B14 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x29E JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x32B4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x2B60 SWAP2 SWAP1 PUSH2 0x3297 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2B9B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2BA0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2BB0 DUP6 DUP4 DUP4 PUSH2 0x2BD8 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0xEF6 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x2BED JUMPI PUSH2 0x2BE8 DUP3 PUSH2 0x2C37 JUMP JUMPDEST PUSH2 0x2C30 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x2C04 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x2C2D JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x29E JUMP JUMPDEST POP DUP1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x2C47 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD6BDA275 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0xBA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2C82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C8B DUP4 PUSH2 0x2C60 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C30 DUP3 PUSH2 0x2C60 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2D0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2D16 DUP2 PUSH2 0x2CCD JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x2D43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D5D JUMPI PUSH2 0x2D5D PUSH2 0x2CE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x2D8C JUMPI PUSH2 0x2D8C PUSH2 0x2CE2 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 ADD PUSH1 0x20 ADD DUP8 LT ISZERO PUSH2 0x2DA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP4 DUP4 ADD ADD MSTORE DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2DD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2E0B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2DF3 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2E33 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x2DF0 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2C30 DUP2 PUSH2 0x2CCD JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x2E98 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0xA38 DUP3 DUP5 PUSH2 0x2E7A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2EBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2EC8 DUP2 PUSH2 0x2CCD JUMP JUMPDEST SWAP2 POP PUSH2 0x2ED6 PUSH1 0x20 DUP5 ADD PUSH2 0x2C60 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x2EFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 CALLDATALOAD PUSH2 0x2F07 DUP2 PUSH2 0x2CCD JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD PUSH2 0x2F17 DUP2 PUSH2 0x2CCD JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH2 0x2F27 DUP2 PUSH2 0x2CCD JUMP JUMPDEST SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD SWAP4 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD PUSH2 0x2F45 DUP2 PUSH2 0x2CCD JUMP JUMPDEST SWAP3 POP PUSH1 0xC0 DUP10 ADD CALLDATALOAD PUSH2 0x2F55 DUP2 PUSH2 0x2CCD JUMP JUMPDEST SWAP2 POP PUSH1 0xE0 DUP10 ADD CALLDATALOAD PUSH2 0x2F65 DUP2 PUSH2 0x2CCD JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL PUSH1 0x0 DUP3 SLT PUSH1 0x1 PUSH1 0xFF SHL DUP5 EQ AND ISZERO PUSH2 0x2FA8 JUMPI PUSH2 0x2FA8 PUSH2 0x2F76 JUMP JUMPDEST DUP2 DUP2 SDIV DUP4 EQ DUP3 ISZERO OR PUSH2 0xA38 JUMPI PUSH2 0xA38 PUSH2 0x2F76 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xA38 JUMPI PUSH2 0xA38 PUSH2 0x2F76 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2FF0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xA38 JUMPI PUSH2 0xA38 PUSH2 0x2F76 JUMP JUMPDEST PUSH1 0x1 DUP2 JUMPDEST PUSH1 0x1 DUP5 GT ISZERO PUSH2 0x3043 JUMPI DUP1 DUP6 DIV DUP2 GT ISZERO PUSH2 0x3027 JUMPI PUSH2 0x3027 PUSH2 0x2F76 JUMP JUMPDEST PUSH1 0x1 DUP5 AND ISZERO PUSH2 0x3035 JUMPI SWAP1 DUP2 MUL SWAP1 JUMPDEST PUSH1 0x1 SWAP4 SWAP1 SWAP4 SHR SWAP3 DUP1 MUL PUSH2 0x300C JUMP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x305A JUMPI POP PUSH1 0x1 PUSH2 0xA38 JUMP JUMPDEST DUP2 PUSH2 0x3067 JUMPI POP PUSH1 0x0 PUSH2 0xA38 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x307D JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x3087 JUMPI PUSH2 0x30A3 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xA38 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x3098 JUMPI PUSH2 0x3098 PUSH2 0x2F76 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0xA38 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x30C6 JUMPI POP DUP2 DUP2 EXP PUSH2 0xA38 JUMP JUMPDEST PUSH2 0x30D3 PUSH1 0x0 NOT DUP5 DUP5 PUSH2 0x3008 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x30E7 JUMPI PUSH2 0x30E7 PUSH2 0x2F76 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C30 DUP4 DUP4 PUSH2 0x304B JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xBA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x312D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3136 DUP7 PUSH2 0x30FB JUMP JUMPDEST PUSH1 0x20 DUP8 ADD MLOAD PUSH1 0x40 DUP9 ADD MLOAD PUSH1 0x60 DUP10 ADD MLOAD SWAP3 SWAP8 POP SWAP1 SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0x315B PUSH1 0x80 DUP8 ADD PUSH2 0x30FB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x1250D3C8185B1C9958591E48199A5B985B1A5E9959 PUSH1 0x5A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x7 SWAP1 DUP3 ADD MSTORE PUSH7 0x199C99595E9959 PUSH1 0xCA SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x31C9 JUMPI PUSH2 0x31C9 PUSH2 0x2F76 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x31F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2C30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 DUP2 ADD PUSH2 0x2C30 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2E7A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x3241 JUMPI PUSH2 0x3241 PUSH2 0x2F76 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x325B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xA38 JUMPI PUSH2 0xA38 PUSH2 0x2F76 JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD PUSH2 0x2BB0 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2E7A JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x32A9 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x2DF0 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC9B779B17422D0DF9222301 DUP12 ORIGIN 0xB4 0xD1 STATICCALL CHAINID 0xE0 PUSH18 0x723D6817E2486D003BECC55F00A264697066 PUSH20 0x58221220DC5B9644602B5DA834F3DD21D5C9D0CC MCOPY RETURNDATASIZE PUSH27 0x96D8538E314A4535F3DDB49AC664736F6C634300081A0033000000 ",
							"sourceMap": "429:16467:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15907:42;;-1:-1:-1;;;15907:42:14;;216:2:15;15907:42:14;;;198:21:15;;;235:18;;;228:30;294:34;274:18;;;267:62;346:18;;15907:42:14;;;;;;;;429:16467;;;;5590:1285;;;;;;;;;;-1:-1:-1;5590:1285:14;;;;;:::i;:::-;;:::i;:::-;;;1014:25:15;;;1002:2;987:18;5590:1285:14;;;;;;;;16407:117;;;;;;;;;;-1:-1:-1;16504:12:14;;16481:19;;:35;;16407:117;;;1215:14:15;;1208:22;1190:41;;1178:2;1163:18;16407:117:14;1050:187:15;3680:646:14;;;;;;;;;;-1:-1:-1;3680:646:14;;;;;:::i;:::-;;:::i;6881:1272::-;;;;;;;;;;-1:-1:-1;6881:1272:14;;;;;:::i;:::-;;:::i;15962:91::-;;;;;;;;;;-1:-1:-1;16037:9:14;;15962:91;;970:27;;;;;;;;;;;;;;;;10742:447;;;;;;;;;;;;;:::i;:::-;;1356:19;;;;;;;;;;-1:-1:-1;1356:19:14;;;;-1:-1:-1;;;;;1356:19:14;;;;;;-1:-1:-1;;;;;1806:32:15;;;1788:51;;1776:2;1761:18;1356:19:14;1642:203:15;1381:19:14;;;;;;;;;;-1:-1:-1;1381:19:14;;;;-1:-1:-1;;;;;1381:19:14;;;1324:26;;;;;;;;;;-1:-1:-1;1324:26:14;;;;;:::i;:::-;;:::i;1259:30::-;;;;;;;;;;-1:-1:-1;1259:30:14;;;;;;;;;;;4161:214:3;;;;;;:::i;:::-;;:::i;3708:134::-;;;;;;;;;;;;;:::i;591:42:14:-;;;;;;;;;;-1:-1:-1;591:42:14;;;;-1:-1:-1;;;;;591:42:14;;;3428:118;;;;;;;;;;;;;:::i;1106:30::-;;;;;;;;;;;;;;;;4721:863;;;;;;;;;;-1:-1:-1;4721:863:14;;;;;:::i;:::-;;:::i;3155:101:1:-;;;;;;;;;;;;;:::i;1066:34:14:-;;;;;;;;;;;;;;;;3552:122;;;;;;;;;;;;;:::i;13601:2263::-;;;;;;;;;;;;;:::i;2441:144:1:-;;;;;;;;;;;;;:::i;12018:1577:14:-;;;;;;;;;;;;;:::i;16530:117::-;;;;;;;;;;-1:-1:-1;16627:12:14;;16604:19;;:35;16530:117;;8159:2577;;;;;;:::i;:::-;;:::i;16653:151::-;;;;;;;;;;-1:-1:-1;16751:9:14;:16;16653:151;;544:41;;;;;;;;;;-1:-1:-1;544:41:14;;;;-1:-1:-1;;;;;544:41:14;;;1036:24;;;;;;;;;;;;;;;;1819:58:3;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1819:58:3;;;;;;;;;;;;:::i;1423:37:14:-;;;;;;;;;;-1:-1:-1;1423:37:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5231:25:15;;;5287:2;5272:18;;5265:34;;;;5315:18;;;5308:34;;;;5373:2;5358:18;;5351:34;5429:14;5422:22;5416:3;5401:19;;5394:51;5218:3;5203:19;1423:37:14;4978:473:15;1295:21:14;;;;;;;;;;-1:-1:-1;1295:21:14;;;;;;;;;;;1003:27;;;;;;;;;;;;;;;;16177:224;;;;;;;;;;-1:-1:-1;16177:224:14;;;;;:::i;:::-;-1:-1:-1;16337:9:14;;16260:18;16331:16;;;:5;:16;;;;;;;;;16312:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16177:224;;;;;5630:25:15;;;5686:2;5671:18;;5664:34;;;;5603:18;16177:224:14;5456:248:15;1466:53:14;;;;;;;;;;-1:-1:-1;1466:53:14;;;;;:::i;:::-;;;;;;;;;;;;;;1226:26;;;;;;;;;;-1:-1:-1;1226:26:14;;;;;;;;639:42;;;;;;;;;;-1:-1:-1;639:42:14;;;;-1:-1:-1;;;;;639:42:14;;;1588:65;;;;;;;;;;-1:-1:-1;1588:65:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;1525:57::-;;;;;;;;;;-1:-1:-1;1525:57:14;;;;;:::i;:::-;;;;;;;;;;;;;;1659:76;;;;;;;;;;-1:-1:-1;1659:76:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;3405:215:1;;;;;;;;;;-1:-1:-1;3405:215:1;;;;;:::i;:::-;;:::i;945:19:14:-;;;;;;;;;;-1:-1:-1;945:19:14;;;;-1:-1:-1;;;;;945:19:14;;;2454:775;;;;;;;;;;-1:-1:-1;2454:775:14;;;;;:::i;:::-;;:::i;5590:1285::-;5715:7;5734:12;1174:4;5749:28;5763:13;5749;:28::i;:::-;:51;;;;:::i;:::-;5734:66;;5826:1;5818:5;:9;5810:40;;;;-1:-1:-1;;;5810:40:14;;8931:2:15;5810:40:14;;;8913:21:15;8970:2;8950:18;;;8943:30;-1:-1:-1;;;8989:18:15;;;8982:48;9047:18;;5810:40:14;8729:342:15;5810:40:14;5861:21;5885:18;16037:9;;;15962:91;5885:18;5913:17;5933:20;;;:5;:20;;;;;5990:18;;;;5861:42;;-1:-1:-1;5933:20:14;5990:18;5913:17;6092:13;:34;;;;;;;;:::i;:::-;;6088:646;;1216:4;6180:30;6197:13;6188:5;6180:30;:::i;:::-;6179:72;;;;:::i;:::-;6142:109;;6088:646;;;6302:18;6285:13;:35;;;;;;;;:::i;:::-;;:86;;;-1:-1:-1;6353:18:14;6336:13;:35;;;;;;;;:::i;:::-;;6285:86;6268:466;;;6425:1;6396:26;6505:23;6425:1;6505:2;:23;:::i;:::-;6500:29;;:2;:29;:::i;:::-;6467:63;;:13;:63;:::i;:::-;6440:90;-1:-1:-1;1216:4:14;6582:33;6440:90;6590:5;6582:33;:::i;:::-;6581:75;;;;:::i;:::-;6544:112;;6382:285;;6268:466;;;6687:36;;-1:-1:-1;;;6687:36:14;;11229:2:15;6687:36:14;;;11211:21:15;11268:2;11248:18;;;11241:30;11307:28;11287:18;;;11280:56;11353:18;;6687:36:14;11027:350:15;6268:466:14;6744:19;6825:15;6767:42;1216:4;6767:18;:42;:::i;:::-;6766:74;;;;:::i;:::-;6744:96;-1:-1:-1;;;;;;;5590:1285:14;;;;;:::o;3680:646::-;3777:6;;3803:13;:34;;;;;;;;:::i;:::-;;3799:521;;3856:12;3878;;;;;;;;;-1:-1:-1;;;;;3878:12:14;-1:-1:-1;;;;;3878:28:14;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3853:55:14;;3680:646;-1:-1:-1;;;;;;3680:646:14:o;3799:521::-;3972:18;3955:13;:35;;;;;;;;:::i;:::-;;3951:369;;4031:13;;:31;;;-1:-1:-1;;;4031:31:14;;;;4009:12;;-1:-1:-1;;;;;4031:13:14;;:29;;:31;;;;;;;;;;;;;;:13;:31;;;;;;;;;;;;;;3951:369;4126:18;4109:13;:35;;;;;;;;:::i;:::-;;4105:215;;4185:13;;:31;;;-1:-1:-1;;;4185:31:14;;;;4163:12;;-1:-1:-1;;;;;4185:13:14;;:29;;:31;;;;;;;;;;;;;;:13;:31;;;;;;;;;;;;;;4105:215;3680:646;;;:::o;6881:1272::-;7006:7;7047:1;7033:11;:15;7025:66;;;;-1:-1:-1;;;7025:66:14;;12344:2:15;7025:66:14;;;12326:21:15;12383:2;12363:18;;;12356:30;12422:34;12402:18;;;12395:62;-1:-1:-1;;;12473:18:15;;;12466:36;12519:19;;7025:66:14;12142:402:15;7025:66:14;7102:12;1174:4;7117:28;7131:13;7117;:28::i;:::-;:51;;;;:::i;:::-;7102:66;;7222:1;7214:5;:9;7206:40;;;;-1:-1:-1;;;7206:40:14;;8931:2:15;7206:40:14;;;8913:21:15;8970:2;8950:18;;;8943:30;-1:-1:-1;;;8989:18:15;;;8982:48;9047:18;;7206:40:14;8729:342:15;7206:40:14;7257:21;7281:18;16037:9;;;15962:91;7281:18;7257:42;;7317:13;7334:1;7317:18;7309:45;;;;-1:-1:-1;;;7309:45:14;;12751:2:15;7309:45:14;;;12733:21:15;12790:2;12770:18;;;12763:30;-1:-1:-1;;;12809:18:15;;;12802:44;12863:18;;7309:45:14;12549:338:15;7309:45:14;7437:17;7457:20;;;:5;:20;;;;;7513:18;;;;7457:20;;1216:4;7611:29;7513:18;7611:11;:29;:::i;:::-;7610:58;;;;:::i;:::-;7582:86;-1:-1:-1;7679:21:14;;7714:13;:34;;;;;;;;:::i;:::-;;7710:406;;7825:5;7781:32;1216:4;7781:17;:32;:::i;:::-;7780:51;;;;:::i;:::-;7764:67;;7710:406;;;7882:18;7865:13;:35;;;;;;;;:::i;:::-;;:86;;;-1:-1:-1;7933:18:14;7916:13;:35;;;;;;;;:::i;:::-;;7865:86;7848:268;;;8032:5;7993:27;:17;8014:5;7993:27;:::i;7848:268::-;8133:13;6881:1272;-1:-1:-1;;;;;;;;6881:1272:14:o;10742:447::-;3395:21:5;:19;:21::i;:::-;2334:13:1::1;:11;:13::i;:::-;3281:14:14::2;::::0;::::2;;3280:15;3272:49;;;;-1:-1:-1::0;;;3272:49:14::2;;;;;;;:::i;:::-;3383:9:::3;::::0;;;::::3;;;3382:10;3374:30;;;;-1:-1:-1::0;;;3374:30:14::3;;;;;;;:::i;:::-;10917:12:::4;;10894:19;;:35;;10873:138;;;::::0;-1:-1:-1;;;10873:138:14;;13779:2:15;10873:138:14::4;::::0;::::4;13761:21:15::0;13818:2;13798:18;;;13791:30;13857:34;13837:18;;;13830:62;13928:26;13908:18;;;13901:54;13972:19;;10873:138:14::4;13577:420:15::0;10873:138:14::4;11029:18;::::0;::::4;::::0;::::4;;;11021:52;;;::::0;-1:-1:-1;;;11021:52:14;;14204:2:15;11021:52:14::4;::::0;::::4;14186:21:15::0;14243:2;14223:18;;;14216:30;-1:-1:-1;;;14262:18:15;;;14255:51;14323:18;;11021:52:14::4;14002:345:15::0;11021:52:14::4;11084:14;:21:::0;;-1:-1:-1;;11084:21:14::4;11101:4;11084:21;::::0;;11115:23:::4;:21;:23::i;:::-;11166:15;::::0;11153:29:::4;::::0;::::4;::::0;;;::::4;3437:20:5::0;1949:1;-1:-1:-1;;;;;;;;;;;4113:23:5;3860:283;3437:20;10742:447:14:o;1324:26::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1324:26:14;;-1:-1:-1;1324:26:14;:::o;4161:214:3:-;2655:13;:11;:13::i;:::-;4276:36:::1;4294:17;4276;:36::i;:::-;4322:46;4344:17;4363:4;4322:21;:46::i;:::-;4161:214:::0;;:::o;3708:134::-;3777:7;2926:20;:18;:20::i;:::-;-1:-1:-1;;;;;;;;;;;;3708:134:3;:::o;3428:118:14:-;2334:13:1;:11;:13::i;:::-;3484:9:14::1;::::0;;;::::1;;;3483:10;3475:38;;;::::0;-1:-1:-1;;;3475:38:14;;14554:2:15;3475:38:14::1;::::0;::::1;14536:21:15::0;14593:2;14573:18;;;14566:30;-1:-1:-1;;;14612:18:15;;;14605:45;14667:18;;3475:38:14::1;14352:339:15::0;3475:38:14::1;3523:9;:16:::0;;-1:-1:-1;;3523:16:14::1;::::0;::::1;::::0;;3428:118::o;4721:863::-;2334:13:1;:11;:13::i;:::-;3281:14:14::1;::::0;::::1;;3280:15;3272:49;;;;-1:-1:-1::0;;;3272:49:14::1;;;;;;;:::i;:::-;3383:9:::2;::::0;;;::::2;;;3382:10;3374:30;;;;-1:-1:-1::0;;;3374:30:14::2;;;;;;;:::i;:::-;4920:15:::3;4907:10;:28;4886:119;;;::::0;-1:-1:-1;;;4886:119:14;;14898:2:15;4886:119:14::3;::::0;::::3;14880:21:15::0;14937:2;14917:18;;;14910:30;14976:34;14956:18;;;14949:62;-1:-1:-1;;;15027:18:15;;;15020:42;15079:19;;4886:119:14::3;14696:408:15::0;4886:119:14::3;5047:10;5036:8;:21;5015:108;;;::::0;-1:-1:-1;;;5015:108:14;;15311:2:15;5015:108:14::3;::::0;::::3;15293:21:15::0;15350:2;15330:18;;;15323:30;15389:34;15369:18;;;15362:62;-1:-1:-1;;;15440:18:15;;;15433:38;15488:19;;5015:108:14::3;15109:404:15::0;5015:108:14::3;16146:9:::0;;16114:7;16140:16;;;:5;:16;;;;;:24;;;5154:15:::3;:40;5133:131;;;::::0;-1:-1:-1;;;5133:131:14;;15720:2:15;5133:131:14::3;::::0;::::3;15702:21:15::0;15759:2;15739:18;;;15732:30;15798:34;15778:18;;;15771:62;-1:-1:-1;;;15849:18:15;;;15842:42;15901:19;;5133:131:14::3;15518:408:15::0;5133:131:14::3;5275:9;:11:::0;;;:9:::3;:11;::::0;::::3;:::i;:::-;::::0;;;-1:-1:-1;;5315:184:14::3;::::0;;::::3;::::0;::::3;::::0;;;;;::::3;::::0;;::::3;::::0;;;;;;;;;-1:-1:-1;5315:184:14;;;;;;;;;;;;;5302:9:::3;::::0;;5296:16;;:5:::3;:16:::0;;;;;;:203;;;;;;5315:184;5296:203;::::3;::::0;;;::::3;::::0;::::3;::::0;;;::::3;::::0;::::3;::::0;;;::::3;::::0;;::::3;::::0;;-1:-1:-1;;5296:203:14::3;::::0;::::3;;::::0;;;::::3;::::0;;;5529:9;5514:63;;16273:25:15;;;16314:18;;;16307:34;;;16357:18;;;16350:34;;;5514:63:14::3;::::0;16246:18:15;5514:63:14::3;;;;;;;4721:863:::0;;;:::o;3155:101:1:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;3552:122:14:-:0;2334:13:1;:11;:13::i;:::-;3609:9:14::1;::::0;;;::::1;;;3601:39;;;::::0;-1:-1:-1;;;3601:39:14;;16597:2:15;3601:39:14::1;::::0;::::1;16579:21:15::0;16636:2;16616:18;;;16609:30;-1:-1:-1;;;16655:18:15;;;16648:47;16712:18;;3601:39:14::1;16395:341:15::0;3601:39:14::1;3650:9;:17:::0;;-1:-1:-1;;3650:17:14::1;::::0;;3552:122::o;13601:2263::-;3395:21:5;:19;:21::i;:::-;2334:13:1::1;:11;:13::i;:::-;3281:14:14::2;::::0;::::2;;3280:15;3272:49;;;;-1:-1:-1::0;;;3272:49:14::2;;;;;;;:::i;:::-;16146:9:::0;;16114:7;16140:16;;;:5;:16;;;;;:24;;;13693:15:::3;:40;13685:65;;;::::0;-1:-1:-1;;;13685:65:14;;16943:2:15;13685:65:14::3;::::0;::::3;16925:21:15::0;16982:2;16962:18;;;16955:30;-1:-1:-1;;;17001:18:15;;;16994:42;17053:18;;13685:65:14::3;16741:336:15::0;13685:65:14::3;13790:12;;13768:19;;:34;13760:63;;;::::0;-1:-1:-1;;;13760:63:14;;17284:2:15;13760:63:14::3;::::0;::::3;17266:21:15::0;17323:2;17303:18;;;17296:30;-1:-1:-1;;;17342:18:15;;;17335:46;17398:18;;13760:63:14::3;17082:340:15::0;13760:63:14::3;13859:9;:16:::0;;;13834:22:::3;::::0;13925:19;::::3;13921:141;;;13980:19;13997:2;13980:14:::0;:19:::3;:::i;:::-;13960:39;;13921:141;;;-1:-1:-1::0;14050:1:14::3;13921:141;14131:9;14143:18;14160:1;14143:14:::0;:18:::3;:::i;:::-;14131:30;;14126:1650;14168:17;14163:1;:22;14126:1650;;14206:16;14225:9;14235:1;14225:12;;;;;;;;:::i;:::-;;::::0;;;::::3;::::0;;::::3;::::0;-1:-1:-1;;;;;14225:12:14::3;::::0;-1:-1:-1;14312:1354:14::3;14334:1;14330;:5;;;14312:1354;;;14360:27;14404:1;14390:16;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;14441:26:14;::::3;14424:14;14441:26:::0;;;:16:::3;:26;::::0;;;;14360:46;;-1:-1:-1;14424:14:14;;14360:46;14441:41:::3;::::0;::::3;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;14424:58;;14514:1;14505:6;:10;14501:1134;;;-1:-1:-1::0;;;;;14539:26:14;::::3;14583:1;14539:26:::0;;;:16:::3;:26;::::0;;;;14583:1;14566:13;14539:41:::3;::::0;::::3;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;::::0;;::::3;::::0;::::3;::::0;;;;;;-1:-1:-1;14539:41:14;;;:45;;;;14610:13:::3;:34;;;;;;;;:::i;:::-;::::0;14606:915:::3;;14673:9;14696:8;-1:-1:-1::0;;;;;14688:22:14::3;14718:6;14688:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14672:111;;;14817:4;14809:34;;;::::0;-1:-1:-1;;;14809:34:14;;17971:2:15;14809:34:14::3;::::0;::::3;17953:21:15::0;18010:2;17990:18;;;17983:30;-1:-1:-1;;;18029:18:15;;;18022:47;18086:18;;14809:34:14::3;17769:341:15::0;14809:34:14::3;14646:220;14606:915;;;14918:18;14901:13;:35;;;;;;;;:::i;:::-;;:98;;;-1:-1:-1::0;14981:18:14::3;14964:13;:35;;;;;;;;:::i;:::-;;14901:98;14872:649;;;15048:17;15085:18;15068:13;:35;;;;;;;;:::i;:::-;;:121;;15184:4;::::0;-1:-1:-1;;;;;15184:4:14::3;15068:121;;;15141:4;::::0;-1:-1:-1;;;;;15141:4:14::3;15068:121;15252:37;::::0;-1:-1:-1;;;15252:37:14;;-1:-1:-1;;;;;18307:32:15;;;15252:37:14::3;::::0;::::3;18289:51:15::0;18356:18;;;18349:34;;;15048:141:14;;-1:-1:-1;15252:19:14;;::::3;::::0;::::3;::::0;18262:18:15;;15252:37:14::3;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15215:156;;;::::0;-1:-1:-1;;;15215:156:14;;18878:2:15;15215:156:14::3;::::0;::::3;18860:21:15::0;18917:2;18897:18;;;18890:30;18956:26;18936:18;;;18929:54;19000:18;;15215:156:14::3;18676:348:15::0;14872:649:14::3;15451:47;::::0;-1:-1:-1;;;15451:47:14;;19231:2:15;15451:47:14::3;::::0;::::3;19213:21:15::0;19270:2;19250:18;;;19243:30;19309:34;19289:18;;;19282:62;-1:-1:-1;;;19360:18:15;;;19353:35;19405:19;;15451:47:14::3;19029:401:15::0;14872:649:14::3;15584:8;-1:-1:-1::0;;;;;15568:48:14::3;;15594:6;15602:13;15568:48;;;;;;;:::i;:::-;;;;;;;;14501:1134;-1:-1:-1::0;;14337:3:14::3;;14312:1354;;;;15679:9;:15;;;;;;;:::i;:::-;;::::0;;;::::3;::::0;;;;-1:-1:-1;;15679:15:14;;;;;-1:-1:-1;;;;;;15679:15:14::3;::::0;;;;;;;;15712:6;;;15708:58:::3;;15742:5;;;15708:58;-1:-1:-1::0;14187:3:14;::::3;::::0;::::3;:::i;:::-;;;;14126:1650;;;-1:-1:-1::0;15789:9:14::3;:16:::0;15809:1:::3;15789:21:::0;15785:73:::3;;15826:14;:21:::0;;-1:-1:-1;;15826:21:14::3;15843:4;15826:21;::::0;;15785:73:::3;13675:2189;;3437:20:5::0;1949:1;-1:-1:-1;;;;;;;;;;;4113:23:5;3860:283;2441:144:1;1313:22;2570:8;-1:-1:-1;;;;;2570:8:1;;2441:144::o;12018:1577:14:-;3395:21:5;:19;:21::i;:::-;2334:13:1::1;:11;:13::i;:::-;3281:14:14::2;::::0;::::2;;3280:15;3272:49;;;;-1:-1:-1::0;;;3272:49:14::2;;;;;;;:::i;:::-;3383:9:::3;::::0;;;::::3;;;3382:10;3374:30;;;;-1:-1:-1::0;;;3374:30:14::3;;;;;;;:::i;:::-;12162:18:::4;::::0;::::4;::::0;::::4;;;12161:19;12153:57;;;::::0;-1:-1:-1;;;12153:57:14;;20202:2:15;12153:57:14::4;::::0;::::4;20184:21:15::0;20241:2;20221:18;;;20214:30;20280:27;20260:18;;;20253:55;20325:18;;12153:57:14::4;20000:349:15::0;12153:57:14::4;12272:15;::::0;12241:5:::4;::::0;:27:::4;::::0;-1:-1:-1;;;12241:27:14;;12257:10:::4;12241:27;::::0;::::4;1788:51:15::0;-1:-1:-1;;;;;12241:5:14;;::::4;::::0;:15:::4;::::0;1761:18:15;;12241:27:14::4;;;;;;;;;;;;;;;;;::::0;::::4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:46;;12220:111;;;::::0;-1:-1:-1;;;12220:111:14;;20791:2:15;12220:111:14::4;::::0;::::4;20773:21:15::0;20830:2;20810:18;;;20803:30;-1:-1:-1;;;20849:18:15;;;20842:48;20907:18;;12220:111:14::4;20589:342:15::0;12220:111:14::4;16146:9:::0;;16114:7;16140:16;;;:5;:16;;;;;:24;;;12349:15:::4;:40;12341:65;;;::::0;-1:-1:-1;;;12341:65:14;;16943:2:15;12341:65:14::4;::::0;::::4;16925:21:15::0;16982:2;16962:18;;;16955:30;-1:-1:-1;;;17001:18:15;;;16994:42;17053:18;;12341:65:14::4;16741:336:15::0;12341:65:14::4;12442:9;:16:::0;;;12417:22:::4;::::0;12508:19;::::4;12504:141;;;12563:19;12580:2;12563:14:::0;:19:::4;:::i;:::-;12543:39;;12504:141;;;-1:-1:-1::0;12633:1:14::4;12504:141;12659:9;12671:18;12688:1;12671:14:::0;:18:::4;:::i;:::-;12659:30;;12654:849;12696:17;12691:1;:22;12654:849;;12734:16;12753:9;12763:1;12753:12;;;;;;;;:::i;:::-;;::::0;;;::::4;::::0;;;;;::::4;::::0;-1:-1:-1;;;;;12753:12:14::4;12802:32:::0;;;:22:::4;:32:::0;;;;;;;;12753:12;;-1:-1:-1;12961:16:14;;12957:473:::4;;13084:5;::::0;13069:12:::4;::::0;-1:-1:-1;;;;;13084:5:14::4;:18;13124:7;:5;:7::i;:::-;13084:129;::::0;-1:-1:-1;;;;;;13084:129:14::4;::::0;;;;;;-1:-1:-1;;;;;21156:32:15;;;13084:129:14::4;::::0;::::4;21138:51:15::0;21225:32;;;21205:18;;;21198:60;21274:18;;;21267:34;;;21111:18;;13084:129:14::4;;;;;;;;;;;;;;;;;;::::0;::::4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13069:144;;13239:7;13231:41;;;::::0;-1:-1:-1;;;13231:41:14;;21514:2:15;13231:41:14::4;::::0;::::4;21496:21:15::0;21553:2;21533:18;;;21526:30;-1:-1:-1;;;21572:18:15;;;21565:51;21633:18;;13231:41:14::4;21312:345:15::0;13231:41:14::4;13290:9;:15;;;;;;;:::i;:::-;;::::0;;;::::4;::::0;;;;-1:-1:-1;;13290:15:14;;;;;-1:-1:-1;;;;;;13290:15:14::4;::::0;;;;;13376:39:::4;::::0;-1:-1:-1;;;;;13376:39:14;::::4;::::0;::::4;::::0;::::4;::::0;13402:12;1014:25:15;;1002:2;987:18;;868:177;13376:39:14::4;;;;;;;;12979:451;12957:473;13447:1;13452;13447:6:::0;13443:50:::4;;13473:5;;;;13443:50;12720:783;;12715:3;;;;;:::i;:::-;;;;12654:849;;;-1:-1:-1::0;13516:9:14::4;:16:::0;13536:1:::4;13516:21:::0;13512:77:::4;;13553:18;:25:::0;;-1:-1:-1;;13553:25:14::4;;;::::0;;12143:1452:::4;;3437:20:5::0;1949:1;-1:-1:-1;;;;;;;;;;;4113:23:5;3860:283;8159:2577:14;3281:14;;;;3280:15;3272:49;;;;-1:-1:-1;;;3272:49:14;;;;;;;:::i;:::-;3383:9:::1;::::0;;;::::1;;;3382:10;3374:30;;;;-1:-1:-1::0;;;3374:30:14::1;;;;;;;:::i;:::-;8339:7:::2;:5;:7::i;:::-;-1:-1:-1::0;;;;;8325:21:14::2;:10;:21:::0;8317:57:::2;;;::::0;-1:-1:-1;;;8317:57:14;;21864:2:15;8317:57:14::2;::::0;::::2;21846:21:15::0;21903:2;21883:18;;;21876:30;21942:25;21922:18;;;21915:53;21985:18;;8317:57:14::2;21662:347:15::0;8317:57:14::2;8392:9;;8405:1;8392:14:::0;8384:34:::2;;;::::0;-1:-1:-1;;;8384:34:14;;22216:2:15;8384:34:14::2;::::0;::::2;22198:21:15::0;22255:1;22235:18;;;22228:29;-1:-1:-1;;;22273:18:15;;;22266:37;22320:18;;8384:34:14::2;22014:330:15::0;8384:34:14::2;8443:9;::::0;8437:16:::2;::::0;;;:5:::2;:16;::::0;;;;:28:::2;;::::0;::::2;;8436:29;8428:64;;;::::0;-1:-1:-1;;;8428:64:14;;22551:2:15;8428:64:14::2;::::0;::::2;22533:21:15::0;22590:2;22570:18;;;22563:30;-1:-1:-1;;;22609:18:15;;;22602:52;22671:18;;8428:64:14::2;22349:346:15::0;8428:64:14::2;8502:19;::::0;8535:13:::2;:34;;;;;;;;:::i;:::-;::::0;8531:1212:::2;;8658:1;8646:9;:13;8638:49;;;::::0;-1:-1:-1;;;8638:49:14;;22902:2:15;8638:49:14::2;::::0;::::2;22884:21:15::0;22941:2;22921:18;;;22914:30;22980:25;22960:18;;;22953:53;23023:18;;8638:49:14::2;22700:347:15::0;8638:49:14::2;8715:46;8736:13;8751:9;8715:20;:46::i;:::-;8792:10;8775:28;::::0;;;:16:::2;:28;::::0;;;;8701:60;;-1:-1:-1;8822:9:14::2;::::0;8775:28;8804:13;8775:43:::2;::::0;::::2;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:56;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;8531:1212:14::2;::::0;-1:-1:-1;8531:1212:14::2;;8882:18;8865:13;:35;;;;;;;;:::i;:::-;;:86;;;-1:-1:-1::0;8933:18:14::2;8916:13;:35;;;;;;;;:::i;:::-;;8865:86;8848:895;;;9042:1;9026:13;:17;9018:61;;;::::0;-1:-1:-1;;;9018:61:14;;23384:2:15;9018:61:14::2;::::0;::::2;23366:21:15::0;23423:2;23403:18;;;23396:30;23462:33;23442:18;;;23435:61;23513:18;;9018:61:14::2;23182:355:15::0;9018:61:14::2;9093:17;9130:18;9113:13;:35;;;;;;;;:::i;:::-;;:97;;9205:4;::::0;-1:-1:-1;;;;;9205:4:14::2;9113:97;;;9174:4;::::0;-1:-1:-1;;;;;9174:4:14::2;9113:97;9249:143;::::0;-1:-1:-1;;;9249:143:14;;9294:10:::2;9249:143;::::0;::::2;21138:51:15::0;9334:4:14::2;21205:18:15::0;;;21198:60;21274:18;;;21267:34;;;9093:117:14;;-1:-1:-1;;;;;;9249:23:14;::::2;::::0;::::2;::::0;21111:18:15;;9249:143:14::2;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9224:228;;;::::0;-1:-1:-1;;;9224:228:14;;23744:2:15;9224:228:14::2;::::0;::::2;23726:21:15::0;23783:2;23763:18;;;23756:30;23822:28;23802:18;;;23795:56;23868:18;;9224:228:14::2;23542:350:15::0;9224:228:14::2;9541:50;9562:13;9577;9541:20;:50::i;:::-;9622:10;9605:28;::::0;;;:16:::2;:28;::::0;;;;9527:64;;-1:-1:-1;9652:13:14;;9605:28;9634:13;9605:43:::2;::::0;::::2;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:60;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;8848:895:14::2;::::0;-1:-1:-1;;8848:895:14::2;;9774:1;9760:11;:15;9752:48;;;::::0;-1:-1:-1;;;9752:48:14;;24099:2:15;9752:48:14::2;::::0;::::2;24081:21:15::0;24138:2;24118:18;;;24111:30;-1:-1:-1;;;24157:18:15;;;24150:50;24217:18;;9752:48:14::2;23897:344:15::0;9752:48:14::2;9928:9;::::0;9870:22:::2;9922:16:::0;;;:5:::2;:16;::::0;;;;:30:::2;;::::0;1216:4:::2;::::0;9896:56:::2;::::0;:11;:56:::2;:::i;:::-;9895:73;;;;:::i;:::-;9870:98;;10039:12;;10021:14;9999:19;;:36;;;;:::i;:::-;:52;;9978:115;;;::::0;-1:-1:-1;;;9978:115:14;;24448:2:15;9978:115:14::2;::::0;::::2;24430:21:15::0;24487:2;24467:18;;;24460:30;-1:-1:-1;;;24506:18:15;;;24499:46;24562:18;;9978:115:14::2;24246:340:15::0;9978:115:14::2;10123:10;10104:30;::::0;;;:18:::2;:30;::::0;;;;:48;;10138:14;;10104:30;:48:::2;::::0;10138:14;;10104:48:::2;:::i;:::-;;;;;;;;10185:14;10162:19;;:37;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;10215:9:14::2;::::0;10209:16:::2;::::0;;;:5:::2;:16;::::0;;;;:27:::2;;:42:::0;;10240:11;;10209:16;:42:::2;::::0;10240:11;;10209:42:::2;:::i;:::-;;;;;;;;10280:11;10261:15;;:30;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;10329:10:14::2;10306:34;::::0;;;:22:::2;:34;::::0;;;;;:39;;10302:96:::2;;10361:9;:26:::0;;::::2;::::0;::::2;::::0;;-1:-1:-1;10361:26:14;;;;;::::2;::::0;;-1:-1:-1;;;;;;10361:26:14::2;10376:10;10361:26;::::0;;10302:96:::2;10430:10;10407:34;::::0;;;:22:::2;:34;::::0;;;;:49;;10445:11;;10407:34;:49:::2;::::0;10445:11;;10407:49:::2;:::i;:::-;::::0;;;-1:-1:-1;;10491:10:14::2;10466:36;::::0;;;:24:::2;:36;::::0;;;;:52;;10505:13;;10466:36;-1:-1:-1;;10466:52:14::2;::::0;10505:13;10466:52:::2;::::0;::::2;;;;;;:::i;:::-;;;::::0;;-1:-1:-1;10587:9:14::2;::::0;10635:16:::2;::::0;;;:5:::2;:16;::::0;;;;;;:30:::2;;::::0;10534:195;;10563:10:::2;::::0;10534:195:::2;::::0;::::2;::::0;10610:11;;10679:13;;10706;;10534:195:::2;:::i;:::-;;;;;;;;8307:2429;;8159:2577:::0;;:::o;3405:215:1:-;2334:13;:11;:13::i;:::-;-1:-1:-1;;;;;3489:22:1;::::1;3485:91;;3534:31;::::0;-1:-1:-1;;;3534:31:1;;3562:1:::1;3534:31;::::0;::::1;1788:51:15::0;1761:18;;3534:31:1::1;1642:203:15::0;3485:91:1::1;3585:28;3604:8;3585:18;:28::i;:::-;3405:215:::0;:::o;2454:775:14:-;8870:21:2;4302:15;;-1:-1:-1;;;4302:15:2;;;;4301:16;;4348:14;;4158:30;4726:16;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4790:11;:16;;4805:1;4790:16;:50;;;;-1:-1:-1;4818:4:2;4810:25;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;-1:-1:-1;;;4908:23:2;;;;;;;;;;;4851:91;4951:18;;-1:-1:-1;;4951:18:2;4968:1;4951:18;;;4979:67;;;;5013:22;;-1:-1:-1;;;;5013:22:2;-1:-1:-1;;;5013:22:2;;;4979:67;2735:26:14::1;2750:10;2735:14;:26::i;:::-;2771:24;:22;:24::i;:::-;2814:6;2806:5;;:14;;;;;-1:-1:-1::0;;;;;2806:14:14::1;;;;;-1:-1:-1::0;;;;;2806:14:14::1;;;;;;2845:13;2830:12;:28;;;;2883:13;2868:12;:28;;;;2913:5;2906:4;;:12;;;;;-1:-1:-1::0;;;;;2906:12:14::1;;;;;-1:-1:-1::0;;;;;2906:12:14::1;;;;;;2935:5;2928:4;;:12;;;;;-1:-1:-1::0;;;;;2928:12:14::1;;;;;-1:-1:-1::0;;;;;2928:12:14::1;;;;;;2987:13;2950:12;::::0;:51:::1;;;;;-1:-1:-1::0;;;;;2950:51:14::1;;;;;-1:-1:-1::0;;;;;2950:51:14::1;;;;;;3049:14;3011:13;;:53;;;;;-1:-1:-1::0;;;;;3011:53:14::1;;;;;-1:-1:-1::0;;;;;3011:53:14::1;;;;;;3112:14;3074:13;;:53;;;;;-1:-1:-1::0;;;;;3074:53:14::1;;;;;-1:-1:-1::0;;;;;3074:53:14::1;;;;;;5070:14:2::0;5066:101;;;5100:23;;-1:-1:-1;;;;5100:23:2;;;5142:14;;-1:-1:-1;25179:50:15;;5142:14:2;;25167:2:15;25152:18;5142:14:2;;;;;;;5066:101;4092:1081;;;;;2454:775:14;;;;;;;;:::o;3470:384:5:-;-1:-1:-1;;;;;;;;;;;3670:9:5;;-1:-1:-1;;3670:20:5;3666:88;;3713:30;;-1:-1:-1;;;3713:30:5;;;;;;;;;;;3666:88;1991:1;3828:19;;3470:384::o;2658:162:1:-;966:10:4;2717:7:1;:5;:7::i;:::-;-1:-1:-1;;;;;2717:23:1;;2713:101;;2763:40;;-1:-1:-1;;;2763:40:1;;966:10:4;2763:40:1;;;1788:51:15;1761:18;;2763:40:1;1642:203:15;11195:817:14;11270:21;11305:17;;11301:163;;11339:12;11365:7;:5;:7::i;:::-;-1:-1:-1;;;;;11357:21:14;11386:13;11357:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11338:66;;;11426:7;11418:35;;;;-1:-1:-1;;;11418:35:14;;25442:2:15;11418:35:14;;;25424:21:15;25481:2;25461:18;;;25454:30;-1:-1:-1;;;25500:18:15;;;25493:45;25555:18;;11418:35:14;25240:339:15;11418:35:14;11324:140;11301:163;11552:4;;11545:37;;-1:-1:-1;;;11545:37:14;;11576:4;11545:37;;;1788:51:15;11523:19:14;;-1:-1:-1;;;;;11552:4:14;;11545:22;;1761:18:15;;11545:37:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11523:59;-1:-1:-1;11596:15:14;;11592:168;;11659:4;;-1:-1:-1;;;;;11659:4:14;11652:21;11674:7;:5;:7::i;:::-;11652:43;;-1:-1:-1;;;;;;11652:43:14;;;;;;;-1:-1:-1;;;;;18307:32:15;;;11652:43:14;;;18289:51:15;18356:18;;;18349:34;;;18262:18;;11652:43:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11627:122;;;;-1:-1:-1;;;11627:122:14;;25786:2:15;11627:122:14;;;25768:21:15;25825:2;25805:18;;;25798:30;-1:-1:-1;;;25844:18:15;;;25837:50;25904:18;;11627:122:14;25584:344:15;11627:122:14;11798:4;;11791:37;;-1:-1:-1;;;11791:37:14;;11822:4;11791:37;;;1788:51:15;11769:19:14;;-1:-1:-1;;;;;11798:4:14;;11791:22;;1761:18:15;;11791:37:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11769:59;-1:-1:-1;11842:15:14;;11838:168;;11905:4;;-1:-1:-1;;;;;11905:4:14;11898:21;11920:7;:5;:7::i;:::-;11898:43;;-1:-1:-1;;;;;;11898:43:14;;;;;;;-1:-1:-1;;;;;18307:32:15;;;11898:43:14;;;18289:51:15;18356:18;;;18349:34;;;18262:18;;11898:43:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11873:122;;;;-1:-1:-1;;;11873:122:14;;26135:2:15;11873:122:14;;;26117:21:15;26174:2;26154:18;;;26147:30;-1:-1:-1;;;26193:18:15;;;26186:50;26253:18;;11873:122:14;25933:344:15;11873:122:14;11236:776;;;11195:817::o;4603:312:3:-;4683:4;-1:-1:-1;;;;;4692:6:3;4675:23;;;:120;;;4789:6;-1:-1:-1;;;;;4753:42:3;:32;-1:-1:-1;;;;;;;;;;;1519:53:8;-1:-1:-1;;;;;1519:53:8;;1441:138;4753:32:3;-1:-1:-1;;;;;4753:42:3;;;4675:120;4658:251;;;4869:29;;-1:-1:-1;;;4869:29:3;;;;;;;;;;;16810:84:14;2334:13:1;:11;:13::i;6057:538:3:-;6174:17;-1:-1:-1;;;;;6156:50:3;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6156:52:3;;;;;;;;-1:-1:-1;;6156:52:3;;;;;;;;;;;;:::i;:::-;;;6152:437;;6518:60;;-1:-1:-1;;;6518:60:3;;-1:-1:-1;;;;;1806:32:15;;6518:60:3;;;1788:51:15;1761:18;;6518:60:3;1642:203:15;6152:437:3;-1:-1:-1;;;;;;;;;;;6250:40:3;;6246:120;;6317:34;;-1:-1:-1;;;6317:34:3;;;;;1014:25:15;;;987:18;;6317:34:3;868:177:15;6246:120:3;6379:54;6409:17;6428:4;6379:29;:54::i;5032:213::-;5106:4;-1:-1:-1;;;;;5115:6:3;5098:23;;5094:145;;5199:29;;-1:-1:-1;;;5199:29:3;;;;;;;;;;;3774:248:1;1313:22;3923:8;;-1:-1:-1;;;;;;3941:19:1;;-1:-1:-1;;;;;3941:19:1;;;;;;;;3975:40;;3923:8;;;;;3975:40;;3847:24;;3975:40;3837:185;;3774:248;:::o;1847:127::-;6931:20:2;:18;:20::i;:::-;1929:38:1::1;1954:12;1929:24;:38::i;2970:67:3:-:0;6931:20:2;:18;:20::i;2264:344:8:-;2355:37;2374:17;2355:18;:37::i;:::-;2407:36;;-1:-1:-1;;;;;2407:36:8;;;;;;;;2458:11;;:15;2454:148;;2489:53;2518:17;2537:4;2489:28;:53::i;2454:148::-;2573:18;:16;:18::i;7084:141:2:-;8870:21;8560:40;-1:-1:-1;;;8560:40:2;;;;7146:73;;7191:17;;-1:-1:-1;;;7191:17:2;;;;;;;;;;;1980:235:1;6931:20:2;:18;:20::i;1671:281:8:-;1748:17;-1:-1:-1;;;;;1748:29:8;;1781:1;1748:34;1744:119;;1805:47;;-1:-1:-1;;;1805:47:8;;-1:-1:-1;;;;;1806:32:15;;1805:47:8;;;1788:51:15;1761:18;;1805:47:8;1642:203:15;1744:119:8;-1:-1:-1;;;;;;;;;;;1872:73:8;;-1:-1:-1;;;;;;1872:73:8;-1:-1:-1;;;;;1872:73:8;;;;;;;;;;1671:281::o;3900:253:11:-;3983:12;4008;4022:23;4049:6;-1:-1:-1;;;;;4049:19:11;4069:4;4049:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4007:67;;;;4091:55;4118:6;4126:7;4135:10;4091:26;:55::i;:::-;4084:62;3900:253;-1:-1:-1;;;;;3900:253:11:o;6113:122:8:-;6163:9;:13;6159:70;;6199:19;;-1:-1:-1;;;6199:19:8;;;;;;;;;;;4421:582:11;4565:12;4594:7;4589:408;;4617:19;4625:10;4617:7;:19::i;:::-;4589:408;;;4841:17;;:22;:49;;;;-1:-1:-1;;;;;;4867:18:11;;;:23;4841:49;4837:119;;;4917:24;;-1:-1:-1;;;4917:24:11;;-1:-1:-1;;;;;1806:32:15;;4917:24:11;;;1788:51:15;1761:18;;4917:24:11;1642:203:15;4837:119:11;-1:-1:-1;4976:10:11;4589:408;4421:582;;;;;:::o;5543:487::-;5674:17;;:21;5670:354;;5871:10;5865:17;5927:15;5914:10;5910:2;5906:19;5899:44;5670:354;5994:19;;-1:-1:-1;;;5994:19:11;;;;;;;;;;;375:154:15;454:20;;503:1;493:12;;483:40;;519:1;516;509:12;534:329;620:6;628;681:2;669:9;660:7;656:23;652:32;649:52;;;697:1;694;687:12;649:52;720:40;750:9;720:40;:::i;:::-;710:50;829:2;814:18;;;;801:32;;-1:-1:-1;;;534:329:15:o;1242:215::-;1319:6;1372:2;1360:9;1351:7;1347:23;1343:32;1340:52;;;1388:1;1385;1378:12;1340:52;1411:40;1441:9;1411:40;:::i;1850:226::-;1909:6;1962:2;1950:9;1941:7;1937:23;1933:32;1930:52;;;1978:1;1975;1968:12;1930:52;-1:-1:-1;2023:23:15;;1850:226;-1:-1:-1;1850:226:15:o;2081:131::-;-1:-1:-1;;;;;2156:31:15;;2146:42;;2136:70;;2202:1;2199;2192:12;2217:127;2278:10;2273:3;2269:20;2266:1;2259:31;2309:4;2306:1;2299:15;2333:4;2330:1;2323:15;2349:1079;2426:6;2434;2487:2;2475:9;2466:7;2462:23;2458:32;2455:52;;;2503:1;2500;2493:12;2455:52;2542:9;2529:23;2561:31;2586:5;2561:31;:::i;:::-;2611:5;-1:-1:-1;2667:2:15;2652:18;;2639:32;2694:18;2683:30;;2680:50;;;2726:1;2723;2716:12;2680:50;2749:22;;2802:4;2794:13;;2790:27;-1:-1:-1;2780:55:15;;2831:1;2828;2821:12;2780:55;2871:2;2858:16;2897:18;2889:6;2886:30;2883:56;;;2919:18;;:::i;:::-;2968:2;2962:9;3060:2;3022:17;;-1:-1:-1;;3018:31:15;;;3051:2;3014:40;3010:54;2998:67;;3095:18;3080:34;;3116:22;;;3077:62;3074:88;;;3142:18;;:::i;:::-;3178:2;3171:22;3202;;;3243:15;;;3260:2;3239:24;3236:37;-1:-1:-1;3233:57:15;;;3286:1;3283;3276:12;3233:57;3342:6;3337:2;3333;3329:11;3324:2;3316:6;3312:15;3299:50;3395:1;3390:2;3381:6;3373;3369:19;3365:28;3358:39;3416:6;3406:16;;;;;2349:1079;;;;;:::o;3851:466::-;3928:6;3936;3944;3997:2;3985:9;3976:7;3972:23;3968:32;3965:52;;;4013:1;4010;4003:12;3965:52;-1:-1:-1;;4058:23:15;;;4178:2;4163:18;;4150:32;;-1:-1:-1;4281:2:15;4266:18;;;4253:32;;3851:466;-1:-1:-1;3851:466:15:o;4322:250::-;4407:1;4417:113;4431:6;4428:1;4425:13;4417:113;;;4507:11;;;4501:18;4488:11;;;4481:39;4453:2;4446:10;4417:113;;;-1:-1:-1;;4564:1:15;4546:16;;4539:27;4322:250::o;4577:396::-;4726:2;4715:9;4708:21;4689:4;4758:6;4752:13;4801:6;4796:2;4785:9;4781:18;4774:34;4817:79;4889:6;4884:2;4873:9;4869:18;4864:2;4856:6;4852:15;4817:79;:::i;:::-;4957:2;4936:15;-1:-1:-1;;4932:29:15;4917:45;;;;4964:2;4913:54;;4577:396;-1:-1:-1;;4577:396:15:o;5709:247::-;5768:6;5821:2;5809:9;5800:7;5796:23;5792:32;5789:52;;;5837:1;5834;5827:12;5789:52;5876:9;5863:23;5895:31;5920:5;5895:31;:::i;5961:127::-;6022:10;6017:3;6013:20;6010:1;6003:31;6053:4;6050:1;6043:15;6077:4;6074:1;6067:15;6093:241;6178:1;6171:5;6168:12;6158:143;;6223:10;6218:3;6214:20;6211:1;6204:31;6258:4;6255:1;6248:15;6286:4;6283:1;6276:15;6158:143;6310:18;;6093:241::o;6339:216::-;6489:2;6474:18;;6501:48;6478:9;6531:6;6501:48;:::i;6560:350::-;6646:6;6654;6707:2;6695:9;6686:7;6682:23;6678:32;6675:52;;;6723:1;6720;6713:12;6675:52;6762:9;6749:23;6781:31;6806:5;6781:31;:::i;:::-;6831:5;-1:-1:-1;6855:49:15;6900:2;6885:18;;6855:49;:::i;:::-;6845:59;;6560:350;;;;;:::o;7138:1212::-;7275:6;7283;7291;7299;7307;7315;7323;7331;7384:3;7372:9;7363:7;7359:23;7355:33;7352:53;;;7401:1;7398;7391:12;7352:53;7440:9;7427:23;7459:31;7484:5;7459:31;:::i;:::-;7509:5;-1:-1:-1;7566:2:15;7551:18;;7538:32;7579:33;7538:32;7579:33;:::i;:::-;7631:7;-1:-1:-1;7690:2:15;7675:18;;7662:32;7703:33;7662:32;7703:33;:::i;:::-;7755:7;-1:-1:-1;7835:2:15;7820:18;;7807:32;;-1:-1:-1;7938:3:15;7923:19;;7910:33;;-1:-1:-1;8021:3:15;8006:19;;7993:33;8035;7993;8035;:::i;:::-;8087:7;-1:-1:-1;8146:3:15;8131:19;;8118:33;8160;8118;8160;:::i;:::-;8212:7;-1:-1:-1;8271:3:15;8256:19;;8243:33;8285;8243;8285;:::i;:::-;8337:7;8327:17;;;7138:1212;;;;;;;;;;;:::o;8355:127::-;8416:10;8411:3;8407:20;8404:1;8397:31;8447:4;8444:1;8437:15;8471:4;8468:1;8461:15;8487:237;8559:9;;;8526:7;8584:9;;-1:-1:-1;;;8595:18:15;;8580:34;8577:60;;;8617:18;;:::i;:::-;8690:1;8681:7;8676:16;8673:1;8670:23;8666:1;8659:9;8656:38;8646:72;;8698:18;;:::i;9076:168::-;9149:9;;;9180;;9197:15;;;9191:22;;9177:37;9167:71;;9218:18;;:::i;9249:217::-;9289:1;9315;9305:132;;9359:10;9354:3;9350:20;9347:1;9340:31;9394:4;9391:1;9384:15;9422:4;9419:1;9412:15;9305:132;-1:-1:-1;9451:9:15;;9249:217::o;9471:128::-;9538:9;;;9559:11;;;9556:37;;;9573:18;;:::i;9604:375::-;9692:1;9710:5;9724:249;9745:1;9735:8;9732:15;9724:249;;;9795:4;9790:3;9786:14;9780:4;9777:24;9774:50;;;9804:18;;:::i;:::-;9854:1;9844:8;9840:16;9837:49;;;9868:16;;;;9837:49;9951:1;9947:16;;;;;9907:15;;9724:249;;;9604:375;;;;;;:::o;9984:902::-;10033:5;10063:8;10053:80;;-1:-1:-1;10104:1:15;10118:5;;10053:80;10152:4;10142:76;;-1:-1:-1;10189:1:15;10203:5;;10142:76;10234:4;10252:1;10247:59;;;;10320:1;10315:174;;;;10227:262;;10247:59;10277:1;10268:10;;10291:5;;;10315:174;10352:3;10342:8;10339:17;10336:43;;;10359:18;;:::i;:::-;-1:-1:-1;;10415:1:15;10401:16;;10474:5;;10227:262;;10573:2;10563:8;10560:16;10554:3;10548:4;10545:13;10541:36;10535:2;10525:8;10522:16;10517:2;10511:4;10508:12;10504:35;10501:77;10498:203;;;-1:-1:-1;10610:19:15;;;10686:5;;10498:203;10733:42;-1:-1:-1;;10758:8:15;10752:4;10733:42;:::i;:::-;10811:6;10807:1;10803:6;10799:19;10790:7;10787:32;10784:58;;;10822:18;;:::i;:::-;10860:20;;9984:902;-1:-1:-1;;;9984:902:15:o;10891:131::-;10951:5;10980:36;11007:8;11001:4;10980:36;:::i;11382:179::-;11460:13;;11513:22;11502:34;;11492:45;;11482:73;;11551:1;11548;11541:12;11566:571;11669:6;11677;11685;11693;11701;11754:3;11742:9;11733:7;11729:23;11725:33;11722:53;;;11771:1;11768;11761:12;11722:53;11794:39;11823:9;11794:39;:::i;:::-;11873:2;11858:18;;11852:25;11939:2;11924:18;;11918:25;12033:2;12018:18;;12012:25;11784:49;;-1:-1:-1;11852:25:15;;-1:-1:-1;11918:25:15;-1:-1:-1;12012:25:15;-1:-1:-1;12082:49:15;12126:3;12111:19;;12082:49;:::i;:::-;12072:59;;11566:571;;;;;;;;:::o;12892:345::-;13094:2;13076:21;;;13133:2;13113:18;;;13106:30;-1:-1:-1;;;13167:2:15;13152:18;;13145:51;13228:2;13213:18;;12892:345::o;13242:330::-;13444:2;13426:21;;;13483:1;13463:18;;;13456:29;-1:-1:-1;;;13516:2:15;13501:18;;13494:37;13563:2;13548:18;;13242:330::o;15931:135::-;15970:3;15991:17;;;15988:43;;16011:18;;:::i;:::-;-1:-1:-1;16058:1:15;16047:13;;15931:135::o;17427:127::-;17488:10;17483:3;17479:20;17476:1;17469:31;17519:4;17516:1;17509:15;17543:4;17540:1;17533:15;18394:277;18461:6;18514:2;18502:9;18493:7;18489:23;18485:32;18482:52;;;18530:1;18527;18520:12;18482:52;18562:9;18556:16;18615:5;18608:13;18601:21;18594:5;18591:32;18581:60;;18637:1;18634;18627:12;19435:287;19625:25;;;19613:2;19598:18;;19659:57;19712:2;19697:18;;19689:6;19659:57;:::i;19727:127::-;19788:10;19783:3;19779:20;19776:1;19769:31;19819:4;19816:1;19809:15;19843:4;19840:1;19833:15;19859:136;19898:3;19926:5;19916:39;;19935:18;;:::i;:::-;-1:-1:-1;;;19971:18:15;;19859:136::o;20354:230::-;20424:6;20477:2;20465:9;20456:7;20452:23;20448:32;20445:52;;;20493:1;20490;20483:12;20445:52;-1:-1:-1;20538:16:15;;20354:230;-1:-1:-1;20354:230:15:o;23052:125::-;23117:9;;;23138:10;;;23135:36;;;23151:18;;:::i;24591:430::-;24838:25;;;24894:2;24879:18;;24872:34;;;24937:2;24922:18;;24915:34;;;24825:3;24810:19;;24958:57;25011:2;24996:18;;24988:6;24958:57;:::i;26471:287::-;26600:3;26638:6;26632:13;26654:66;26713:6;26708:3;26701:4;26693:6;26689:17;26654:66;:::i;:::-;26736:16;;;;;26471:287;-1:-1:-1;;26471:287:15:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2619400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"UPGRADE_INTERFACE_VERSION()": "infinite",
								"_getPriceFeed(uint8)": "infinite",
								"airdropTokens()": "infinite",
								"buyTokens(uint8,uint256)": "infinite",
								"calculatePaymentAmount(uint8,uint256)": "infinite",
								"calculateTokenAmount(uint8,uint256)": "infinite",
								"contributionsInUSD(address)": "2591",
								"createSale(uint256,uint256,uint256)": "137435",
								"finalizeICO()": "infinite",
								"freeze()": "28848",
								"getCurrentSaleId()": "2416",
								"getHardCapReached()": "4494",
								"getInvestorCount()": "2415",
								"getSaleStartEndTime(uint256)": "13214",
								"getSoftCapReached()": "4465",
								"hardCapInUSD()": "2329",
								"initialize(address,address,address,uint256,uint256,address,address,address)": "infinite",
								"initiateRefund()": "infinite",
								"investorPayments(address,uint8)": "2746",
								"investors(uint256)": "4748",
								"isFreezed()": "2454",
								"isICOFinalized()": "2421",
								"isTokensAirdropped()": "2367",
								"owner()": "2392",
								"paymentMethodForInvestor(address)": "2644",
								"priceFeedBNB()": "2382",
								"priceFeedUSDC()": "2470",
								"priceFeedUSDT()": "2449",
								"proxiableUUID()": "infinite",
								"renounceOwnership()": "infinite",
								"saleCount()": "2351",
								"sales(uint256)": "11105",
								"softCapInUSD()": "2330",
								"token()": "2469",
								"tokensBoughtByInvestor(address)": "2568",
								"totalFundsRaisedUSD()": "2395",
								"totalTokensSold()": "2329",
								"transferOwnership(address)": "infinite",
								"unFreeze()": "28838",
								"upgradeToAndCall(address,bytes)": "infinite",
								"usdc()": "2449",
								"usdt()": "2427"
							},
							"internal": {
								"_authorizeUpgrade(address)": "infinite",
								"_transferFundsToOwner()": "infinite",
								"getLatestSaleEndTime()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 429,
									"end": 16896,
									"name": "PUSH",
									"source": 14,
									"value": "A0"
								},
								{
									"begin": 429,
									"end": 16896,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 429,
									"end": 16896,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1171,
									"end": 1175,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 429,
									"end": 16896,
									"name": "CALLVALUE",
									"source": 14
								},
								{
									"begin": 429,
									"end": 16896,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 429,
									"end": 16896,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 429,
									"end": 16896,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 429,
									"end": 16896,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 429,
									"end": 16896,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 429,
									"end": 16896,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 429,
									"end": 16896,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 429,
									"end": 16896,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 429,
									"end": 16896,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 429,
									"end": 16896,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 429,
									"end": 16896,
									"name": "PUSH",
									"source": 14,
									"value": "80"
								},
								{
									"begin": 429,
									"end": 16896,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 429,
									"end": 16896,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 429,
									"end": 16896,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 429,
									"end": 16896,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 429,
									"end": 16896,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 429,
									"end": 16896,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 429,
									"end": 16896,
									"name": "ASSIGNIMMUTABLE",
									"source": 14,
									"value": "514"
								},
								{
									"begin": 429,
									"end": 16896,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 429,
									"end": 16896,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 429,
									"end": 16896,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220dc5b9644602b5da834f3dd21d5c9d0cc5e3d7a96d8538e314a4535f3ddb49ac664736f6c634300081a0033",
									".code": [
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH",
											"source": 14,
											"value": "8DA5CB5B"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "45"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH",
											"source": 14,
											"value": "C1560A14"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "46"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH",
											"source": 14,
											"value": "DF4E0593"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "47"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH",
											"source": 14,
											"value": "DF4E0593"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "39"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH",
											"source": 14,
											"value": "E8E87389"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH",
											"source": 14,
											"value": "EFDCDB45"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "41"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH",
											"source": 14,
											"value": "F2FDE38B"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "42"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH",
											"source": 14,
											"value": "FC0C546A"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "43"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH",
											"source": 14,
											"value": "FD663DA2"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "tag",
											"source": 14,
											"value": "47"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH",
											"source": 14,
											"value": "C1560A14"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "34"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH",
											"source": 14,
											"value": "C211E1F9"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "35"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH",
											"source": 14,
											"value": "C81FFDEA"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "36"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH",
											"source": 14,
											"value": "D1F3B23E"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "37"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH",
											"source": 14,
											"value": "D3D9D1E4"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "38"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "tag",
											"source": 14,
											"value": "46"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH",
											"source": 14,
											"value": "99131E7E"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "48"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH",
											"source": 14,
											"value": "99131E7E"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "29"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH",
											"source": 14,
											"value": "A1E89AEC"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "30"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH",
											"source": 14,
											"value": "AD3CB1CC"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "31"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH",
											"source": 14,
											"value": "B5F522F7"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH",
											"source": 14,
											"value": "B9469E1A"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "33"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "tag",
											"source": 14,
											"value": "48"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH",
											"source": 14,
											"value": "8DA5CB5B"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH",
											"source": 14,
											"value": "91152C5C"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "25"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH",
											"source": 14,
											"value": "91D8730A"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "26"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH",
											"source": 14,
											"value": "940C333E"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "27"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH",
											"source": 14,
											"value": "960524E3"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "28"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "tag",
											"source": 14,
											"value": "45"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH",
											"source": 14,
											"value": "4DEE1DC3"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "49"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH",
											"source": 14,
											"value": "63B20117"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "50"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH",
											"source": 14,
											"value": "63B20117"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "18"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH",
											"source": 14,
											"value": "6C1909ED"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "19"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH",
											"source": 14,
											"value": "715018A6"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH",
											"source": 14,
											"value": "721BC38B"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "21"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH",
											"source": 14,
											"value": "7CF12B90"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH",
											"source": 14,
											"value": "7FB12001"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "23"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "tag",
											"source": 14,
											"value": "50"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH",
											"source": 14,
											"value": "4DEE1DC3"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "13"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH",
											"source": 14,
											"value": "4F1EF286"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "14"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH",
											"source": 14,
											"value": "52D1902D"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "15"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH",
											"source": 14,
											"value": "62A469E9"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "16"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH",
											"source": 14,
											"value": "62A5AF3B"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "17"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "tag",
											"source": 14,
											"value": "49"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH",
											"source": 14,
											"value": "2151206E"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "51"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH",
											"source": 14,
											"value": "2151206E"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH",
											"source": 14,
											"value": "23CC75A8"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH",
											"source": 14,
											"value": "2F48AB7D"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH",
											"source": 14,
											"value": "3E413BEE"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH",
											"source": 14,
											"value": "3FEB5F2B"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "tag",
											"source": 14,
											"value": "51"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH",
											"source": 14,
											"value": "5834E67"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH",
											"source": 14,
											"value": "6E4D36F"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH",
											"source": 14,
											"value": "115AFC3A"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH",
											"source": 14,
											"value": "117D260F"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH",
											"source": 14,
											"value": "212EA247"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "tag",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 15907,
											"end": 15949,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 15907,
											"end": 15949,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15907,
											"end": 15949,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15907,
											"end": 15949,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 216,
											"end": 218,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 15907,
											"end": 15949,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 15907,
											"end": 15949,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15907,
											"end": 15949,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 198,
											"end": 219,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 198,
											"end": 219,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 198,
											"end": 219,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 235,
											"end": 253,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 235,
											"end": 253,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 235,
											"end": 253,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 228,
											"end": 258,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 294,
											"end": 328,
											"name": "PUSH",
											"source": 15,
											"value": "44697265637420424E42207472616E7366657273206E6F7420616C6C6F776564"
										},
										{
											"begin": 274,
											"end": 292,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 274,
											"end": 292,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 274,
											"end": 292,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 267,
											"end": 329,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 346,
											"end": 364,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 346,
											"end": 364,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15907,
											"end": 15949,
											"name": "tag",
											"source": 14,
											"value": "54"
										},
										{
											"begin": 15907,
											"end": 15949,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15907,
											"end": 15949,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 15907,
											"end": 15949,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 15907,
											"end": 15949,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 15907,
											"end": 15949,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15907,
											"end": 15949,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 15907,
											"end": 15949,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15907,
											"end": 15949,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "tag",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 16896,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 5590,
											"end": 6875,
											"name": "tag",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 5590,
											"end": 6875,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5590,
											"end": 6875,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 5590,
											"end": 6875,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5590,
											"end": 6875,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5590,
											"end": 6875,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "56"
										},
										{
											"begin": 5590,
											"end": 6875,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5590,
											"end": 6875,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5590,
											"end": 6875,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5590,
											"end": 6875,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 5590,
											"end": 6875,
											"name": "tag",
											"source": 14,
											"value": "56"
										},
										{
											"begin": 5590,
											"end": 6875,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5590,
											"end": 6875,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "57"
										},
										{
											"begin": 5590,
											"end": 6875,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "58"
										},
										{
											"begin": 5590,
											"end": 6875,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 5590,
											"end": 6875,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 5590,
											"end": 6875,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "59"
										},
										{
											"begin": 5590,
											"end": 6875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5590,
											"end": 6875,
											"name": "tag",
											"source": 14,
											"value": "58"
										},
										{
											"begin": 5590,
											"end": 6875,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5590,
											"end": 6875,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 5590,
											"end": 6875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5590,
											"end": 6875,
											"name": "tag",
											"source": 14,
											"value": "57"
										},
										{
											"begin": 5590,
											"end": 6875,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5590,
											"end": 6875,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5590,
											"end": 6875,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1014,
											"end": 1039,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1014,
											"end": 1039,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1014,
											"end": 1039,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1002,
											"end": 1004,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 987,
											"end": 1005,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5590,
											"end": 6875,
											"name": "tag",
											"source": 14,
											"value": "61"
										},
										{
											"begin": 5590,
											"end": 6875,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5590,
											"end": 6875,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5590,
											"end": 6875,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5590,
											"end": 6875,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5590,
											"end": 6875,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5590,
											"end": 6875,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 5590,
											"end": 6875,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5590,
											"end": 6875,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 16407,
											"end": 16524,
											"name": "tag",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 16407,
											"end": 16524,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16407,
											"end": 16524,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 16407,
											"end": 16524,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 16407,
											"end": 16524,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 16407,
											"end": 16524,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "63"
										},
										{
											"begin": 16407,
											"end": 16524,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 16407,
											"end": 16524,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16407,
											"end": 16524,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 16407,
											"end": 16524,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 16407,
											"end": 16524,
											"name": "tag",
											"source": 14,
											"value": "63"
										},
										{
											"begin": 16407,
											"end": 16524,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16504,
											"end": 16516,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 16504,
											"end": 16516,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 16481,
											"end": 16500,
											"name": "PUSH",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 16481,
											"end": 16500,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 16481,
											"end": 16516,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 16481,
											"end": 16516,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 16407,
											"end": 16524,
											"name": "tag",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 16407,
											"end": 16524,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16407,
											"end": 16524,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 16407,
											"end": 16524,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1215,
											"end": 1229,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1215,
											"end": 1229,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1208,
											"end": 1230,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1190,
											"end": 1231,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1190,
											"end": 1231,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1178,
											"end": 1180,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16407,
											"end": 16524,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "61"
										},
										{
											"begin": 1050,
											"end": 1237,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3680,
											"end": 4326,
											"name": "tag",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 3680,
											"end": 4326,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3680,
											"end": 4326,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 3680,
											"end": 4326,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3680,
											"end": 4326,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3680,
											"end": 4326,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "68"
										},
										{
											"begin": 3680,
											"end": 4326,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3680,
											"end": 4326,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3680,
											"end": 4326,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3680,
											"end": 4326,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3680,
											"end": 4326,
											"name": "tag",
											"source": 14,
											"value": "68"
										},
										{
											"begin": 3680,
											"end": 4326,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3680,
											"end": 4326,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "57"
										},
										{
											"begin": 3680,
											"end": 4326,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "70"
										},
										{
											"begin": 3680,
											"end": 4326,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 3680,
											"end": 4326,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3680,
											"end": 4326,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "71"
										},
										{
											"begin": 3680,
											"end": 4326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3680,
											"end": 4326,
											"name": "tag",
											"source": 14,
											"value": "70"
										},
										{
											"begin": 3680,
											"end": 4326,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3680,
											"end": 4326,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "72"
										},
										{
											"begin": 3680,
											"end": 4326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6881,
											"end": 8153,
											"name": "tag",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 6881,
											"end": 8153,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6881,
											"end": 8153,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 6881,
											"end": 8153,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6881,
											"end": 8153,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 6881,
											"end": 8153,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "75"
										},
										{
											"begin": 6881,
											"end": 8153,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6881,
											"end": 8153,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6881,
											"end": 8153,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6881,
											"end": 8153,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 6881,
											"end": 8153,
											"name": "tag",
											"source": 14,
											"value": "75"
										},
										{
											"begin": 6881,
											"end": 8153,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6881,
											"end": 8153,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "57"
										},
										{
											"begin": 6881,
											"end": 8153,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "77"
										},
										{
											"begin": 6881,
											"end": 8153,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 6881,
											"end": 8153,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 6881,
											"end": 8153,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "59"
										},
										{
											"begin": 6881,
											"end": 8153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6881,
											"end": 8153,
											"name": "tag",
											"source": 14,
											"value": "77"
										},
										{
											"begin": 6881,
											"end": 8153,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6881,
											"end": 8153,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "78"
										},
										{
											"begin": 6881,
											"end": 8153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15962,
											"end": 16053,
											"name": "tag",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 15962,
											"end": 16053,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15962,
											"end": 16053,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 15962,
											"end": 16053,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 15962,
											"end": 16053,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 15962,
											"end": 16053,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 15962,
											"end": 16053,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 15962,
											"end": 16053,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15962,
											"end": 16053,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 15962,
											"end": 16053,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 15962,
											"end": 16053,
											"name": "tag",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 15962,
											"end": 16053,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16037,
											"end": 16046,
											"name": "PUSH",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 16037,
											"end": 16046,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 15962,
											"end": 16053,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "57"
										},
										{
											"begin": 15962,
											"end": 16053,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 970,
											"end": 997,
											"name": "tag",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 970,
											"end": 997,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 970,
											"end": 997,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 970,
											"end": 997,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 970,
											"end": 997,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 970,
											"end": 997,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 970,
											"end": 997,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 970,
											"end": 997,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 970,
											"end": 997,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 970,
											"end": 997,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 970,
											"end": 997,
											"name": "tag",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 970,
											"end": 997,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 970,
											"end": 997,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 970,
											"end": 997,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "57"
										},
										{
											"begin": 970,
											"end": 997,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 970,
											"end": 997,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 970,
											"end": 997,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 970,
											"end": 997,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10742,
											"end": 11189,
											"name": "tag",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 10742,
											"end": 11189,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10742,
											"end": 11189,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 10742,
											"end": 11189,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 10742,
											"end": 11189,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 10742,
											"end": 11189,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "88"
										},
										{
											"begin": 10742,
											"end": 11189,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10742,
											"end": 11189,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10742,
											"end": 11189,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 10742,
											"end": 11189,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 10742,
											"end": 11189,
											"name": "tag",
											"source": 14,
											"value": "88"
										},
										{
											"begin": 10742,
											"end": 11189,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10742,
											"end": 11189,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10742,
											"end": 11189,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "89"
										},
										{
											"begin": 10742,
											"end": 11189,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "90"
										},
										{
											"begin": 10742,
											"end": 11189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10742,
											"end": 11189,
											"name": "tag",
											"source": 14,
											"value": "89"
										},
										{
											"begin": 10742,
											"end": 11189,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10742,
											"end": 11189,
											"name": "STOP",
											"source": 14
										},
										{
											"begin": 1356,
											"end": 1375,
											"name": "tag",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 1356,
											"end": 1375,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1356,
											"end": 1375,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 1356,
											"end": 1375,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1356,
											"end": 1375,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1356,
											"end": 1375,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "91"
										},
										{
											"begin": 1356,
											"end": 1375,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1356,
											"end": 1375,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1356,
											"end": 1375,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1356,
											"end": 1375,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1356,
											"end": 1375,
											"name": "tag",
											"source": 14,
											"value": "91"
										},
										{
											"begin": 1356,
											"end": 1375,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1356,
											"end": 1375,
											"name": "PUSH",
											"source": 14,
											"value": "B"
										},
										{
											"begin": 1356,
											"end": 1375,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1356,
											"end": 1375,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "92"
										},
										{
											"begin": 1356,
											"end": 1375,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1356,
											"end": 1375,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1356,
											"end": 1375,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1356,
											"end": 1375,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1356,
											"end": 1375,
											"name": "tag",
											"source": 14,
											"value": "92"
										},
										{
											"begin": 1356,
											"end": 1375,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1356,
											"end": 1375,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1356,
											"end": 1375,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1806,
											"end": 1838,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1806,
											"end": 1838,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1806,
											"end": 1838,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1788,
											"end": 1839,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1788,
											"end": 1839,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1776,
											"end": 1778,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1761,
											"end": 1779,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1356,
											"end": 1375,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "61"
										},
										{
											"begin": 1642,
											"end": 1845,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1381,
											"end": 1400,
											"name": "tag",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 1381,
											"end": 1400,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1381,
											"end": 1400,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 1381,
											"end": 1400,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1381,
											"end": 1400,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1381,
											"end": 1400,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "96"
										},
										{
											"begin": 1381,
											"end": 1400,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1381,
											"end": 1400,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1381,
											"end": 1400,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1381,
											"end": 1400,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1381,
											"end": 1400,
											"name": "tag",
											"source": 14,
											"value": "96"
										},
										{
											"begin": 1381,
											"end": 1400,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1381,
											"end": 1400,
											"name": "PUSH",
											"source": 14,
											"value": "C"
										},
										{
											"begin": 1381,
											"end": 1400,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1381,
											"end": 1400,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "92"
										},
										{
											"begin": 1381,
											"end": 1400,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1381,
											"end": 1400,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1381,
											"end": 1400,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1381,
											"end": 1400,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1350,
											"name": "tag",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 1324,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1350,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1350,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1350,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 1324,
											"end": 1350,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1350,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1324,
											"end": 1350,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1350,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1350,
											"name": "tag",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 1324,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1324,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "92"
										},
										{
											"begin": 1324,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "102"
										},
										{
											"begin": 1324,
											"end": 1350,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1350,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1324,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "103"
										},
										{
											"begin": 1324,
											"end": 1350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1350,
											"name": "tag",
											"source": 14,
											"value": "102"
										},
										{
											"begin": 1324,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "104"
										},
										{
											"begin": 1324,
											"end": 1350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1259,
											"end": 1289,
											"name": "tag",
											"source": 14,
											"value": "13"
										},
										{
											"begin": 1259,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1259,
											"end": 1289,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 1259,
											"end": 1289,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1259,
											"end": 1289,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1259,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "106"
										},
										{
											"begin": 1259,
											"end": 1289,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1259,
											"end": 1289,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1259,
											"end": 1289,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1259,
											"end": 1289,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1259,
											"end": 1289,
											"name": "tag",
											"source": 14,
											"value": "106"
										},
										{
											"begin": 1259,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1259,
											"end": 1289,
											"name": "PUSH",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 1259,
											"end": 1289,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1259,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 1259,
											"end": 1289,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1259,
											"end": 1289,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 1259,
											"end": 1289,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1259,
											"end": 1289,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 1259,
											"end": 1289,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 1259,
											"end": 1289,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1259,
											"end": 1289,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1259,
											"end": 1289,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 4161,
											"end": 4375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 4161,
											"end": 4375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 3708,
											"end": 3842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 591,
											"end": 633,
											"name": "tag",
											"source": 14,
											"value": "16"
										},
										{
											"begin": 591,
											"end": 633,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 591,
											"end": 633,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 591,
											"end": 633,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 591,
											"end": 633,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 591,
											"end": 633,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "119"
										},
										{
											"begin": 591,
											"end": 633,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 591,
											"end": 633,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 591,
											"end": 633,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 591,
											"end": 633,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 591,
											"end": 633,
											"name": "tag",
											"source": 14,
											"value": "119"
										},
										{
											"begin": 591,
											"end": 633,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 591,
											"end": 633,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 591,
											"end": 633,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 591,
											"end": 633,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "92"
										},
										{
											"begin": 591,
											"end": 633,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 591,
											"end": 633,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 591,
											"end": 633,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 591,
											"end": 633,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3428,
											"end": 3546,
											"name": "tag",
											"source": 14,
											"value": "17"
										},
										{
											"begin": 3428,
											"end": 3546,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3428,
											"end": 3546,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 3428,
											"end": 3546,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3428,
											"end": 3546,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3428,
											"end": 3546,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "124"
										},
										{
											"begin": 3428,
											"end": 3546,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3428,
											"end": 3546,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3428,
											"end": 3546,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3428,
											"end": 3546,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3428,
											"end": 3546,
											"name": "tag",
											"source": 14,
											"value": "124"
										},
										{
											"begin": 3428,
											"end": 3546,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3428,
											"end": 3546,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3428,
											"end": 3546,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "89"
										},
										{
											"begin": 3428,
											"end": 3546,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "126"
										},
										{
											"begin": 3428,
											"end": 3546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1106,
											"end": 1136,
											"name": "tag",
											"source": 14,
											"value": "18"
										},
										{
											"begin": 1106,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1106,
											"end": 1136,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 1106,
											"end": 1136,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1106,
											"end": 1136,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1106,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "127"
										},
										{
											"begin": 1106,
											"end": 1136,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1106,
											"end": 1136,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1106,
											"end": 1136,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1106,
											"end": 1136,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1106,
											"end": 1136,
											"name": "tag",
											"source": 14,
											"value": "127"
										},
										{
											"begin": 1106,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1106,
											"end": 1136,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1106,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "57"
										},
										{
											"begin": 1106,
											"end": 1136,
											"name": "PUSH",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 1106,
											"end": 1136,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1106,
											"end": 1136,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1106,
											"end": 1136,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4721,
											"end": 5584,
											"name": "tag",
											"source": 14,
											"value": "19"
										},
										{
											"begin": 4721,
											"end": 5584,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4721,
											"end": 5584,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 4721,
											"end": 5584,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4721,
											"end": 5584,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4721,
											"end": 5584,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "131"
										},
										{
											"begin": 4721,
											"end": 5584,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4721,
											"end": 5584,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4721,
											"end": 5584,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4721,
											"end": 5584,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4721,
											"end": 5584,
											"name": "tag",
											"source": 14,
											"value": "131"
										},
										{
											"begin": 4721,
											"end": 5584,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4721,
											"end": 5584,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "89"
										},
										{
											"begin": 4721,
											"end": 5584,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "133"
										},
										{
											"begin": 4721,
											"end": 5584,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 4721,
											"end": 5584,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 4721,
											"end": 5584,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "134"
										},
										{
											"begin": 4721,
											"end": 5584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4721,
											"end": 5584,
											"name": "tag",
											"source": 14,
											"value": "133"
										},
										{
											"begin": 4721,
											"end": 5584,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4721,
											"end": 5584,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "135"
										},
										{
											"begin": 4721,
											"end": 5584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1100,
											"name": "tag",
											"source": 14,
											"value": "21"
										},
										{
											"begin": 1066,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1066,
											"end": 1100,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 1066,
											"end": 1100,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1066,
											"end": 1100,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1066,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "139"
										},
										{
											"begin": 1066,
											"end": 1100,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1066,
											"end": 1100,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1066,
											"end": 1100,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1066,
											"end": 1100,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1066,
											"end": 1100,
											"name": "tag",
											"source": 14,
											"value": "139"
										},
										{
											"begin": 1066,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1066,
											"end": 1100,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1066,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "57"
										},
										{
											"begin": 1066,
											"end": 1100,
											"name": "PUSH",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 1066,
											"end": 1100,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1066,
											"end": 1100,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1066,
											"end": 1100,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3552,
											"end": 3674,
											"name": "tag",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 3552,
											"end": 3674,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3552,
											"end": 3674,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 3552,
											"end": 3674,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3552,
											"end": 3674,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3552,
											"end": 3674,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "143"
										},
										{
											"begin": 3552,
											"end": 3674,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3552,
											"end": 3674,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3552,
											"end": 3674,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3552,
											"end": 3674,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3552,
											"end": 3674,
											"name": "tag",
											"source": 14,
											"value": "143"
										},
										{
											"begin": 3552,
											"end": 3674,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3552,
											"end": 3674,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3552,
											"end": 3674,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "89"
										},
										{
											"begin": 3552,
											"end": 3674,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "145"
										},
										{
											"begin": 3552,
											"end": 3674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13601,
											"end": 15864,
											"name": "tag",
											"source": 14,
											"value": "23"
										},
										{
											"begin": 13601,
											"end": 15864,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13601,
											"end": 15864,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 13601,
											"end": 15864,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 13601,
											"end": 15864,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 13601,
											"end": 15864,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "146"
										},
										{
											"begin": 13601,
											"end": 15864,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13601,
											"end": 15864,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13601,
											"end": 15864,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 13601,
											"end": 15864,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 13601,
											"end": 15864,
											"name": "tag",
											"source": 14,
											"value": "146"
										},
										{
											"begin": 13601,
											"end": 15864,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13601,
											"end": 15864,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13601,
											"end": 15864,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "89"
										},
										{
											"begin": 13601,
											"end": 15864,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "148"
										},
										{
											"begin": 13601,
											"end": 15864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12018,
											"end": 13595,
											"name": "tag",
											"source": 14,
											"value": "25"
										},
										{
											"begin": 12018,
											"end": 13595,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12018,
											"end": 13595,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 12018,
											"end": 13595,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 12018,
											"end": 13595,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 12018,
											"end": 13595,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "153"
										},
										{
											"begin": 12018,
											"end": 13595,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12018,
											"end": 13595,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12018,
											"end": 13595,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 12018,
											"end": 13595,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 12018,
											"end": 13595,
											"name": "tag",
											"source": 14,
											"value": "153"
										},
										{
											"begin": 12018,
											"end": 13595,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12018,
											"end": 13595,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12018,
											"end": 13595,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "89"
										},
										{
											"begin": 12018,
											"end": 13595,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "155"
										},
										{
											"begin": 12018,
											"end": 13595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16530,
											"end": 16647,
											"name": "tag",
											"source": 14,
											"value": "26"
										},
										{
											"begin": 16530,
											"end": 16647,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16530,
											"end": 16647,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 16530,
											"end": 16647,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 16530,
											"end": 16647,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 16530,
											"end": 16647,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "156"
										},
										{
											"begin": 16530,
											"end": 16647,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 16530,
											"end": 16647,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16530,
											"end": 16647,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 16530,
											"end": 16647,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 16530,
											"end": 16647,
											"name": "tag",
											"source": 14,
											"value": "156"
										},
										{
											"begin": 16530,
											"end": 16647,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16627,
											"end": 16639,
											"name": "PUSH",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 16627,
											"end": 16639,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 16604,
											"end": 16623,
											"name": "PUSH",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 16604,
											"end": 16623,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 16604,
											"end": 16639,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 16530,
											"end": 16647,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 16530,
											"end": 16647,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8159,
											"end": 10736,
											"name": "tag",
											"source": 14,
											"value": "27"
										},
										{
											"begin": 8159,
											"end": 10736,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8159,
											"end": 10736,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "89"
										},
										{
											"begin": 8159,
											"end": 10736,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "161"
										},
										{
											"begin": 8159,
											"end": 10736,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 8159,
											"end": 10736,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 8159,
											"end": 10736,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "59"
										},
										{
											"begin": 8159,
											"end": 10736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8159,
											"end": 10736,
											"name": "tag",
											"source": 14,
											"value": "161"
										},
										{
											"begin": 8159,
											"end": 10736,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8159,
											"end": 10736,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "162"
										},
										{
											"begin": 8159,
											"end": 10736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16653,
											"end": 16804,
											"name": "tag",
											"source": 14,
											"value": "28"
										},
										{
											"begin": 16653,
											"end": 16804,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16653,
											"end": 16804,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 16653,
											"end": 16804,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 16653,
											"end": 16804,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 16653,
											"end": 16804,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "163"
										},
										{
											"begin": 16653,
											"end": 16804,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 16653,
											"end": 16804,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16653,
											"end": 16804,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 16653,
											"end": 16804,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 16653,
											"end": 16804,
											"name": "tag",
											"source": 14,
											"value": "163"
										},
										{
											"begin": 16653,
											"end": 16804,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16751,
											"end": 16760,
											"name": "PUSH",
											"source": 14,
											"value": "A"
										},
										{
											"begin": 16751,
											"end": 16767,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 16653,
											"end": 16804,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "57"
										},
										{
											"begin": 16653,
											"end": 16804,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 544,
											"end": 585,
											"name": "tag",
											"source": 14,
											"value": "29"
										},
										{
											"begin": 544,
											"end": 585,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 544,
											"end": 585,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 544,
											"end": 585,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 544,
											"end": 585,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 544,
											"end": 585,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "167"
										},
										{
											"begin": 544,
											"end": 585,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 544,
											"end": 585,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 544,
											"end": 585,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 544,
											"end": 585,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 544,
											"end": 585,
											"name": "tag",
											"source": 14,
											"value": "167"
										},
										{
											"begin": 544,
											"end": 585,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 544,
											"end": 585,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 544,
											"end": 585,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 544,
											"end": 585,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "92"
										},
										{
											"begin": 544,
											"end": 585,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 544,
											"end": 585,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 544,
											"end": 585,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 544,
											"end": 585,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1036,
											"end": 1060,
											"name": "tag",
											"source": 14,
											"value": "30"
										},
										{
											"begin": 1036,
											"end": 1060,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1036,
											"end": 1060,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 1036,
											"end": 1060,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1036,
											"end": 1060,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1036,
											"end": 1060,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "171"
										},
										{
											"begin": 1036,
											"end": 1060,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1036,
											"end": 1060,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1036,
											"end": 1060,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1036,
											"end": 1060,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1036,
											"end": 1060,
											"name": "tag",
											"source": 14,
											"value": "171"
										},
										{
											"begin": 1036,
											"end": 1060,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1036,
											"end": 1060,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1036,
											"end": 1060,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "57"
										},
										{
											"begin": 1036,
											"end": 1060,
											"name": "PUSH",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 1036,
											"end": 1060,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1036,
											"end": 1060,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1036,
											"end": 1060,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "352E302E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 1819,
											"end": 1877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "tag",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "180"
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "tag",
											"source": 14,
											"value": "180"
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "181"
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "182"
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "103"
										},
										{
											"begin": 1423,
											"end": 1460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "tag",
											"source": 14,
											"value": "182"
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "PUSH",
											"source": 14,
											"value": "D"
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "tag",
											"source": 14,
											"value": "181"
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5231,
											"end": 5256,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 5231,
											"end": 5256,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 5231,
											"end": 5256,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5287,
											"end": 5289,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5272,
											"end": 5290,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 5272,
											"end": 5290,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5265,
											"end": 5299,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 5265,
											"end": 5299,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5265,
											"end": 5299,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 5265,
											"end": 5299,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5315,
											"end": 5333,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5315,
											"end": 5333,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5315,
											"end": 5333,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5308,
											"end": 5342,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5308,
											"end": 5342,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5308,
											"end": 5342,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5308,
											"end": 5342,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5373,
											"end": 5375,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 5358,
											"end": 5376,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5358,
											"end": 5376,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5351,
											"end": 5385,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5429,
											"end": 5443,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5422,
											"end": 5444,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5416,
											"end": 5419,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 5401,
											"end": 5420,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5401,
											"end": 5420,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5394,
											"end": 5445,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5218,
											"end": 5221,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 5203,
											"end": 5222,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "61"
										},
										{
											"begin": 4978,
											"end": 5451,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1295,
											"end": 1316,
											"name": "tag",
											"source": 14,
											"value": "33"
										},
										{
											"begin": 1295,
											"end": 1316,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1295,
											"end": 1316,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 1295,
											"end": 1316,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1295,
											"end": 1316,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1295,
											"end": 1316,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "186"
										},
										{
											"begin": 1295,
											"end": 1316,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1295,
											"end": 1316,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1295,
											"end": 1316,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1295,
											"end": 1316,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1295,
											"end": 1316,
											"name": "tag",
											"source": 14,
											"value": "186"
										},
										{
											"begin": 1295,
											"end": 1316,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1295,
											"end": 1316,
											"name": "PUSH",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 1295,
											"end": 1316,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1295,
											"end": 1316,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 1295,
											"end": 1316,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1295,
											"end": 1316,
											"name": "PUSH",
											"source": 14,
											"value": "10000"
										},
										{
											"begin": 1295,
											"end": 1316,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1295,
											"end": 1316,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 1295,
											"end": 1316,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 1295,
											"end": 1316,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1295,
											"end": 1316,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1295,
											"end": 1316,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1003,
											"end": 1030,
											"name": "tag",
											"source": 14,
											"value": "34"
										},
										{
											"begin": 1003,
											"end": 1030,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1003,
											"end": 1030,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 1003,
											"end": 1030,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1003,
											"end": 1030,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1003,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "190"
										},
										{
											"begin": 1003,
											"end": 1030,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1003,
											"end": 1030,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1003,
											"end": 1030,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1003,
											"end": 1030,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1003,
											"end": 1030,
											"name": "tag",
											"source": 14,
											"value": "190"
										},
										{
											"begin": 1003,
											"end": 1030,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1003,
											"end": 1030,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1003,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "57"
										},
										{
											"begin": 1003,
											"end": 1030,
											"name": "PUSH",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 1003,
											"end": 1030,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1003,
											"end": 1030,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1003,
											"end": 1030,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16177,
											"end": 16401,
											"name": "tag",
											"source": 14,
											"value": "35"
										},
										{
											"begin": 16177,
											"end": 16401,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16177,
											"end": 16401,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 16177,
											"end": 16401,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 16177,
											"end": 16401,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 16177,
											"end": 16401,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "194"
										},
										{
											"begin": 16177,
											"end": 16401,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 16177,
											"end": 16401,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16177,
											"end": 16401,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 16177,
											"end": 16401,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 16177,
											"end": 16401,
											"name": "tag",
											"source": 14,
											"value": "194"
										},
										{
											"begin": 16177,
											"end": 16401,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16177,
											"end": 16401,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "195"
										},
										{
											"begin": 16177,
											"end": 16401,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "196"
										},
										{
											"begin": 16177,
											"end": 16401,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 16177,
											"end": 16401,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 16177,
											"end": 16401,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "103"
										},
										{
											"begin": 16177,
											"end": 16401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16177,
											"end": 16401,
											"name": "tag",
											"source": 14,
											"value": "196"
										},
										{
											"begin": 16177,
											"end": 16401,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16337,
											"end": 16346,
											"name": "PUSH",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 16337,
											"end": 16346,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 16260,
											"end": 16278,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16331,
											"end": 16347,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16331,
											"end": 16347,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16331,
											"end": 16347,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 16331,
											"end": 16336,
											"name": "PUSH",
											"source": 14,
											"value": "D"
										},
										{
											"begin": 16331,
											"end": 16347,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 16331,
											"end": 16347,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16331,
											"end": 16347,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16331,
											"end": 16347,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 16331,
											"end": 16347,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 16331,
											"end": 16347,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16331,
											"end": 16347,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16331,
											"end": 16347,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16331,
											"end": 16347,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 16312,
											"end": 16347,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16312,
											"end": 16347,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 16312,
											"end": 16347,
											"name": "PUSH",
											"source": 14,
											"value": "A0"
										},
										{
											"begin": 16312,
											"end": 16347,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16312,
											"end": 16347,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16312,
											"end": 16347,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 16312,
											"end": 16347,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 16312,
											"end": 16347,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16312,
											"end": 16347,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 16312,
											"end": 16347,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 16312,
											"end": 16347,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16312,
											"end": 16347,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 16312,
											"end": 16347,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 16312,
											"end": 16347,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 16312,
											"end": 16347,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16312,
											"end": 16347,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 16312,
											"end": 16347,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 16312,
											"end": 16347,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16312,
											"end": 16347,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16312,
											"end": 16347,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 16312,
											"end": 16347,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16312,
											"end": 16347,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 16312,
											"end": 16347,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 16312,
											"end": 16347,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 16312,
											"end": 16347,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16312,
											"end": 16347,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 16312,
											"end": 16347,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 16312,
											"end": 16347,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16312,
											"end": 16347,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16312,
											"end": 16347,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 16312,
											"end": 16347,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16312,
											"end": 16347,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 16312,
											"end": 16347,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 16312,
											"end": 16347,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 16312,
											"end": 16347,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16312,
											"end": 16347,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16312,
											"end": 16347,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 16312,
											"end": 16347,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 16312,
											"end": 16347,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16312,
											"end": 16347,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16312,
											"end": 16347,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 16312,
											"end": 16347,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 16312,
											"end": 16347,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16312,
											"end": 16347,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16312,
											"end": 16347,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16312,
											"end": 16347,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 16312,
											"end": 16347,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 16312,
											"end": 16347,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 16312,
											"end": 16347,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 16312,
											"end": 16347,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 16312,
											"end": 16347,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 16312,
											"end": 16347,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16312,
											"end": 16347,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16312,
											"end": 16347,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16312,
											"end": 16347,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 16312,
											"end": 16347,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16312,
											"end": 16347,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16177,
											"end": 16401,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16177,
											"end": 16401,
											"name": "tag",
											"source": 14,
											"value": "195"
										},
										{
											"begin": 16177,
											"end": 16401,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16177,
											"end": 16401,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 16177,
											"end": 16401,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 16177,
											"end": 16401,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5630,
											"end": 5655,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5630,
											"end": 5655,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5630,
											"end": 5655,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5686,
											"end": 5688,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5671,
											"end": 5689,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5671,
											"end": 5689,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5664,
											"end": 5698,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5664,
											"end": 5698,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5664,
											"end": 5698,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5664,
											"end": 5698,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5603,
											"end": 5621,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16177,
											"end": 16401,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "61"
										},
										{
											"begin": 5456,
											"end": 5704,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1519,
											"name": "tag",
											"source": 14,
											"value": "36"
										},
										{
											"begin": 1466,
											"end": 1519,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1466,
											"end": 1519,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 1466,
											"end": 1519,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1466,
											"end": 1519,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1466,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "200"
										},
										{
											"begin": 1466,
											"end": 1519,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1466,
											"end": 1519,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1466,
											"end": 1519,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1466,
											"end": 1519,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1466,
											"end": 1519,
											"name": "tag",
											"source": 14,
											"value": "200"
										},
										{
											"begin": 1466,
											"end": 1519,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1466,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "57"
										},
										{
											"begin": 1466,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "202"
										},
										{
											"begin": 1466,
											"end": 1519,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 1466,
											"end": 1519,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1466,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "203"
										},
										{
											"begin": 1466,
											"end": 1519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1466,
											"end": 1519,
											"name": "tag",
											"source": 14,
											"value": "202"
										},
										{
											"begin": 1466,
											"end": 1519,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1466,
											"end": 1519,
											"name": "PUSH",
											"source": 14,
											"value": "E"
										},
										{
											"begin": 1466,
											"end": 1519,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1466,
											"end": 1519,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1466,
											"end": 1519,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1466,
											"end": 1519,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1466,
											"end": 1519,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1466,
											"end": 1519,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1466,
											"end": 1519,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1466,
											"end": 1519,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1466,
											"end": 1519,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 1466,
											"end": 1519,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1466,
											"end": 1519,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1466,
											"end": 1519,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1226,
											"end": 1252,
											"name": "tag",
											"source": 14,
											"value": "37"
										},
										{
											"begin": 1226,
											"end": 1252,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1226,
											"end": 1252,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 1226,
											"end": 1252,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1226,
											"end": 1252,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1226,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "206"
										},
										{
											"begin": 1226,
											"end": 1252,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1226,
											"end": 1252,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1226,
											"end": 1252,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1226,
											"end": 1252,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1226,
											"end": 1252,
											"name": "tag",
											"source": 14,
											"value": "206"
										},
										{
											"begin": 1226,
											"end": 1252,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1226,
											"end": 1252,
											"name": "PUSH",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 1226,
											"end": 1252,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1226,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 1226,
											"end": 1252,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1226,
											"end": 1252,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 1226,
											"end": 1252,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1226,
											"end": 1252,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1226,
											"end": 1252,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 639,
											"end": 681,
											"name": "tag",
											"source": 14,
											"value": "38"
										},
										{
											"begin": 639,
											"end": 681,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 639,
											"end": 681,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 639,
											"end": 681,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 639,
											"end": 681,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 639,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "210"
										},
										{
											"begin": 639,
											"end": 681,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 639,
											"end": 681,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 639,
											"end": 681,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 639,
											"end": 681,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 639,
											"end": 681,
											"name": "tag",
											"source": 14,
											"value": "210"
										},
										{
											"begin": 639,
											"end": 681,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 639,
											"end": 681,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 639,
											"end": 681,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 639,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "92"
										},
										{
											"begin": 639,
											"end": 681,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 639,
											"end": 681,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 639,
											"end": 681,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 639,
											"end": 681,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1588,
											"end": 1653,
											"name": "tag",
											"source": 14,
											"value": "39"
										},
										{
											"begin": 1588,
											"end": 1653,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1588,
											"end": 1653,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 1588,
											"end": 1653,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1588,
											"end": 1653,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1588,
											"end": 1653,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "214"
										},
										{
											"begin": 1588,
											"end": 1653,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1588,
											"end": 1653,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1588,
											"end": 1653,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1588,
											"end": 1653,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1588,
											"end": 1653,
											"name": "tag",
											"source": 14,
											"value": "214"
										},
										{
											"begin": 1588,
											"end": 1653,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1588,
											"end": 1653,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "215"
										},
										{
											"begin": 1588,
											"end": 1653,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "216"
										},
										{
											"begin": 1588,
											"end": 1653,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 1588,
											"end": 1653,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1588,
											"end": 1653,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "203"
										},
										{
											"begin": 1588,
											"end": 1653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1588,
											"end": 1653,
											"name": "tag",
											"source": 14,
											"value": "216"
										},
										{
											"begin": 1588,
											"end": 1653,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1588,
											"end": 1653,
											"name": "PUSH",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 1588,
											"end": 1653,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1588,
											"end": 1653,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1588,
											"end": 1653,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1588,
											"end": 1653,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1588,
											"end": 1653,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1588,
											"end": 1653,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1588,
											"end": 1653,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1588,
											"end": 1653,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1588,
											"end": 1653,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 1588,
											"end": 1653,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1588,
											"end": 1653,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 1588,
											"end": 1653,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1588,
											"end": 1653,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1588,
											"end": 1653,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1588,
											"end": 1653,
											"name": "tag",
											"source": 14,
											"value": "215"
										},
										{
											"begin": 1588,
											"end": 1653,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1588,
											"end": 1653,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1588,
											"end": 1653,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1588,
											"end": 1653,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "61"
										},
										{
											"begin": 1588,
											"end": 1653,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1588,
											"end": 1653,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1588,
											"end": 1653,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "219"
										},
										{
											"begin": 1588,
											"end": 1653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1525,
											"end": 1582,
											"name": "tag",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1525,
											"end": 1582,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1525,
											"end": 1582,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 1525,
											"end": 1582,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1525,
											"end": 1582,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1525,
											"end": 1582,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "220"
										},
										{
											"begin": 1525,
											"end": 1582,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1525,
											"end": 1582,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1525,
											"end": 1582,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1525,
											"end": 1582,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1525,
											"end": 1582,
											"name": "tag",
											"source": 14,
											"value": "220"
										},
										{
											"begin": 1525,
											"end": 1582,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1525,
											"end": 1582,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "57"
										},
										{
											"begin": 1525,
											"end": 1582,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "222"
										},
										{
											"begin": 1525,
											"end": 1582,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 1525,
											"end": 1582,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1525,
											"end": 1582,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "203"
										},
										{
											"begin": 1525,
											"end": 1582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1525,
											"end": 1582,
											"name": "tag",
											"source": 14,
											"value": "222"
										},
										{
											"begin": 1525,
											"end": 1582,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1525,
											"end": 1582,
											"name": "PUSH",
											"source": 14,
											"value": "F"
										},
										{
											"begin": 1525,
											"end": 1582,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1525,
											"end": 1582,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1525,
											"end": 1582,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1525,
											"end": 1582,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1525,
											"end": 1582,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1525,
											"end": 1582,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1525,
											"end": 1582,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1525,
											"end": 1582,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1525,
											"end": 1582,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 1525,
											"end": 1582,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1525,
											"end": 1582,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1525,
											"end": 1582,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1659,
											"end": 1735,
											"name": "tag",
											"source": 14,
											"value": "41"
										},
										{
											"begin": 1659,
											"end": 1735,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1659,
											"end": 1735,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 1659,
											"end": 1735,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1659,
											"end": 1735,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1659,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "225"
										},
										{
											"begin": 1659,
											"end": 1735,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1659,
											"end": 1735,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1659,
											"end": 1735,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1659,
											"end": 1735,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1659,
											"end": 1735,
											"name": "tag",
											"source": 14,
											"value": "225"
										},
										{
											"begin": 1659,
											"end": 1735,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1659,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "57"
										},
										{
											"begin": 1659,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "227"
										},
										{
											"begin": 1659,
											"end": 1735,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 1659,
											"end": 1735,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1659,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "228"
										},
										{
											"begin": 1659,
											"end": 1735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1659,
											"end": 1735,
											"name": "tag",
											"source": 14,
											"value": "227"
										},
										{
											"begin": 1659,
											"end": 1735,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1659,
											"end": 1735,
											"name": "PUSH",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 1659,
											"end": 1735,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1659,
											"end": 1735,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1659,
											"end": 1735,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1659,
											"end": 1735,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1659,
											"end": 1735,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1659,
											"end": 1735,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1659,
											"end": 1735,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1659,
											"end": 1735,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1659,
											"end": 1735,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1659,
											"end": 1735,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1659,
											"end": 1735,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1659,
											"end": 1735,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 1659,
											"end": 1735,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1659,
											"end": 1735,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1659,
											"end": 1735,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1659,
											"end": 1735,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1659,
											"end": 1735,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1659,
											"end": 1735,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1659,
											"end": 1735,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1659,
											"end": 1735,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 1659,
											"end": 1735,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1659,
											"end": 1735,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1659,
											"end": 1735,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 945,
											"end": 964,
											"name": "tag",
											"source": 14,
											"value": "43"
										},
										{
											"begin": 945,
											"end": 964,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 945,
											"end": 964,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 945,
											"end": 964,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 945,
											"end": 964,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 945,
											"end": 964,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "235"
										},
										{
											"begin": 945,
											"end": 964,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 945,
											"end": 964,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 945,
											"end": 964,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 945,
											"end": 964,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 945,
											"end": 964,
											"name": "tag",
											"source": 14,
											"value": "235"
										},
										{
											"begin": 945,
											"end": 964,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 945,
											"end": 964,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 945,
											"end": 964,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 945,
											"end": 964,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "92"
										},
										{
											"begin": 945,
											"end": 964,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 945,
											"end": 964,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 945,
											"end": 964,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 945,
											"end": 964,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2454,
											"end": 3229,
											"name": "tag",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 2454,
											"end": 3229,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2454,
											"end": 3229,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 2454,
											"end": 3229,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2454,
											"end": 3229,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2454,
											"end": 3229,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "240"
										},
										{
											"begin": 2454,
											"end": 3229,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2454,
											"end": 3229,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2454,
											"end": 3229,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2454,
											"end": 3229,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2454,
											"end": 3229,
											"name": "tag",
											"source": 14,
											"value": "240"
										},
										{
											"begin": 2454,
											"end": 3229,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2454,
											"end": 3229,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "89"
										},
										{
											"begin": 2454,
											"end": 3229,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "242"
										},
										{
											"begin": 2454,
											"end": 3229,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 2454,
											"end": 3229,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 2454,
											"end": 3229,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "243"
										},
										{
											"begin": 2454,
											"end": 3229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2454,
											"end": 3229,
											"name": "tag",
											"source": 14,
											"value": "242"
										},
										{
											"begin": 2454,
											"end": 3229,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2454,
											"end": 3229,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "244"
										},
										{
											"begin": 2454,
											"end": 3229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5590,
											"end": 6875,
											"name": "tag",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 5590,
											"end": 6875,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5715,
											"end": 5722,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5734,
											"end": 5746,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1174,
											"end": 1178,
											"name": "PUSH",
											"source": 14,
											"value": "2540BE400"
										},
										{
											"begin": 5749,
											"end": 5777,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "246"
										},
										{
											"begin": 5763,
											"end": 5776,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 5749,
											"end": 5762,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "72"
										},
										{
											"begin": 5749,
											"end": 5777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5749,
											"end": 5777,
											"name": "tag",
											"source": 14,
											"value": "246"
										},
										{
											"begin": 5749,
											"end": 5777,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5749,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "247"
										},
										{
											"begin": 5749,
											"end": 5800,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5749,
											"end": 5800,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5749,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "248"
										},
										{
											"begin": 5749,
											"end": 5800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5749,
											"end": 5800,
											"name": "tag",
											"source": 14,
											"value": "247"
										},
										{
											"begin": 5749,
											"end": 5800,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5734,
											"end": 5800,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5734,
											"end": 5800,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5826,
											"end": 5827,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5818,
											"end": 5823,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5818,
											"end": 5827,
											"name": "SGT",
											"source": 14
										},
										{
											"begin": 5810,
											"end": 5850,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "249"
										},
										{
											"begin": 5810,
											"end": 5850,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5810,
											"end": 5850,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5810,
											"end": 5850,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5810,
											"end": 5850,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5810,
											"end": 5850,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8931,
											"end": 8933,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5810,
											"end": 5850,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 5810,
											"end": 5850,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5810,
											"end": 5850,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8913,
											"end": 8934,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8970,
											"end": 8972,
											"name": "PUSH",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 8950,
											"end": 8968,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 8950,
											"end": 8968,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8950,
											"end": 8968,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8943,
											"end": 8973,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "125B9D985B1A59081C1C9A58D94819995959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8989,
											"end": 9007,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 8989,
											"end": 9007,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8989,
											"end": 9007,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8982,
											"end": 9030,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9047,
											"end": 9065,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 9047,
											"end": 9065,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5810,
											"end": 5850,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "54"
										},
										{
											"begin": 8729,
											"end": 9071,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5810,
											"end": 5850,
											"name": "tag",
											"source": 14,
											"value": "249"
										},
										{
											"begin": 5810,
											"end": 5850,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5861,
											"end": 5882,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5885,
											"end": 5903,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "252"
										},
										{
											"begin": 16037,
											"end": 16046,
											"name": "PUSH",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 16037,
											"end": 16046,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 16037,
											"end": 16046,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15962,
											"end": 16053,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5885,
											"end": 5903,
											"name": "tag",
											"source": 14,
											"value": "252"
										},
										{
											"begin": 5885,
											"end": 5903,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5913,
											"end": 5930,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5933,
											"end": 5953,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5933,
											"end": 5953,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5933,
											"end": 5953,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5933,
											"end": 5938,
											"name": "PUSH",
											"source": 14,
											"value": "D"
										},
										{
											"begin": 5933,
											"end": 5953,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5933,
											"end": 5953,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5933,
											"end": 5953,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5933,
											"end": 5953,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5933,
											"end": 5953,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 5990,
											"end": 6008,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 5990,
											"end": 6008,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5990,
											"end": 6008,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5990,
											"end": 6008,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 5861,
											"end": 5903,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5861,
											"end": 5903,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5933,
											"end": 5953,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5990,
											"end": 6008,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5913,
											"end": 5930,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6092,
											"end": 6105,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 6092,
											"end": 6126,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 6092,
											"end": 6126,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6092,
											"end": 6126,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 6092,
											"end": 6126,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 6092,
											"end": 6126,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "257"
										},
										{
											"begin": 6092,
											"end": 6126,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6092,
											"end": 6126,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "257"
										},
										{
											"begin": 6092,
											"end": 6126,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "255"
										},
										{
											"begin": 6092,
											"end": 6126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6092,
											"end": 6126,
											"name": "tag",
											"source": 14,
											"value": "257"
										},
										{
											"begin": 6092,
											"end": 6126,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6092,
											"end": 6126,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 6088,
											"end": 6734,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "258"
										},
										{
											"begin": 6088,
											"end": 6734,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1216,
											"end": 1220,
											"name": "PUSH",
											"source": 14,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 6180,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "259"
										},
										{
											"begin": 6197,
											"end": 6210,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 6188,
											"end": 6193,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 6180,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "260"
										},
										{
											"begin": 6180,
											"end": 6210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6180,
											"end": 6210,
											"name": "tag",
											"source": 14,
											"value": "259"
										},
										{
											"begin": 6180,
											"end": 6210,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6179,
											"end": 6251,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "261"
										},
										{
											"begin": 6179,
											"end": 6251,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6179,
											"end": 6251,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6179,
											"end": 6251,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "262"
										},
										{
											"begin": 6179,
											"end": 6251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6179,
											"end": 6251,
											"name": "tag",
											"source": 14,
											"value": "261"
										},
										{
											"begin": 6179,
											"end": 6251,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6142,
											"end": 6251,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6142,
											"end": 6251,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6088,
											"end": 6734,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "281"
										},
										{
											"begin": 6088,
											"end": 6734,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6088,
											"end": 6734,
											"name": "tag",
											"source": 14,
											"value": "258"
										},
										{
											"begin": 6088,
											"end": 6734,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6302,
											"end": 6320,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 6285,
											"end": 6298,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 6285,
											"end": 6320,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 6285,
											"end": 6320,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6285,
											"end": 6320,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 6285,
											"end": 6320,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 6285,
											"end": 6320,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "267"
										},
										{
											"begin": 6285,
											"end": 6320,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6285,
											"end": 6320,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "267"
										},
										{
											"begin": 6285,
											"end": 6320,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "255"
										},
										{
											"begin": 6285,
											"end": 6320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6285,
											"end": 6320,
											"name": "tag",
											"source": 14,
											"value": "267"
										},
										{
											"begin": 6285,
											"end": 6320,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6285,
											"end": 6320,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 6285,
											"end": 6371,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6285,
											"end": 6371,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "268"
										},
										{
											"begin": 6285,
											"end": 6371,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6353,
											"end": 6371,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 6336,
											"end": 6349,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 6336,
											"end": 6371,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 6336,
											"end": 6371,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6336,
											"end": 6371,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 6336,
											"end": 6371,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 6336,
											"end": 6371,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "272"
										},
										{
											"begin": 6336,
											"end": 6371,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6336,
											"end": 6371,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "272"
										},
										{
											"begin": 6336,
											"end": 6371,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "255"
										},
										{
											"begin": 6336,
											"end": 6371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6336,
											"end": 6371,
											"name": "tag",
											"source": 14,
											"value": "272"
										},
										{
											"begin": 6336,
											"end": 6371,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6336,
											"end": 6371,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 6285,
											"end": 6371,
											"name": "tag",
											"source": 14,
											"value": "268"
										},
										{
											"begin": 6285,
											"end": 6371,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6268,
											"end": 6734,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 6268,
											"end": 6734,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "273"
										},
										{
											"begin": 6268,
											"end": 6734,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6425,
											"end": 6426,
											"name": "PUSH",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 6396,
											"end": 6422,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6505,
											"end": 6528,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "274"
										},
										{
											"begin": 6425,
											"end": 6426,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6505,
											"end": 6507,
											"name": "PUSH",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 6505,
											"end": 6528,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "275"
										},
										{
											"begin": 6505,
											"end": 6528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6505,
											"end": 6528,
											"name": "tag",
											"source": 14,
											"value": "274"
										},
										{
											"begin": 6505,
											"end": 6528,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6500,
											"end": 6529,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "276"
										},
										{
											"begin": 6500,
											"end": 6529,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6500,
											"end": 6502,
											"name": "PUSH",
											"source": 14,
											"value": "A"
										},
										{
											"begin": 6500,
											"end": 6529,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "277"
										},
										{
											"begin": 6500,
											"end": 6529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6500,
											"end": 6529,
											"name": "tag",
											"source": 14,
											"value": "276"
										},
										{
											"begin": 6500,
											"end": 6529,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6467,
											"end": 6530,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "278"
										},
										{
											"begin": 6467,
											"end": 6530,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6467,
											"end": 6480,
											"name": "DUP11",
											"source": 14
										},
										{
											"begin": 6467,
											"end": 6530,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "260"
										},
										{
											"begin": 6467,
											"end": 6530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6467,
											"end": 6530,
											"name": "tag",
											"source": 14,
											"value": "278"
										},
										{
											"begin": 6467,
											"end": 6530,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6440,
											"end": 6530,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1216,
											"end": 1220,
											"name": "PUSH",
											"source": 14,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 6582,
											"end": 6615,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "279"
										},
										{
											"begin": 6440,
											"end": 6530,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6590,
											"end": 6595,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 6582,
											"end": 6615,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "260"
										},
										{
											"begin": 6582,
											"end": 6615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6582,
											"end": 6615,
											"name": "tag",
											"source": 14,
											"value": "279"
										},
										{
											"begin": 6582,
											"end": 6615,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6581,
											"end": 6656,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "280"
										},
										{
											"begin": 6581,
											"end": 6656,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6581,
											"end": 6656,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6581,
											"end": 6656,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "262"
										},
										{
											"begin": 6581,
											"end": 6656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6581,
											"end": 6656,
											"name": "tag",
											"source": 14,
											"value": "280"
										},
										{
											"begin": 6581,
											"end": 6656,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6544,
											"end": 6656,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6544,
											"end": 6656,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6382,
											"end": 6667,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6382,
											"end": 6667,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6268,
											"end": 6734,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "281"
										},
										{
											"begin": 6268,
											"end": 6734,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6268,
											"end": 6734,
											"name": "tag",
											"source": 14,
											"value": "273"
										},
										{
											"begin": 6268,
											"end": 6734,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6687,
											"end": 6723,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 6687,
											"end": 6723,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6687,
											"end": 6723,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6687,
											"end": 6723,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11229,
											"end": 11231,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6687,
											"end": 6723,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 6687,
											"end": 6723,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6687,
											"end": 6723,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11211,
											"end": 11232,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11268,
											"end": 11270,
											"name": "PUSH",
											"source": 15,
											"value": "1A"
										},
										{
											"begin": 11248,
											"end": 11266,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 11248,
											"end": 11266,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11248,
											"end": 11266,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11241,
											"end": 11271,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11307,
											"end": 11335,
											"name": "PUSH",
											"source": 15,
											"value": "556E737570706F72746564207061796D656E74206D6574686F64000000000000"
										},
										{
											"begin": 11287,
											"end": 11305,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 11287,
											"end": 11305,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11287,
											"end": 11305,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11280,
											"end": 11336,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11353,
											"end": 11371,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 11353,
											"end": 11371,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6687,
											"end": 6723,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "54"
										},
										{
											"begin": 11027,
											"end": 11377,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6268,
											"end": 6734,
											"name": "tag",
											"source": 14,
											"value": "281"
										},
										{
											"begin": 6268,
											"end": 6734,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6744,
											"end": 6763,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6825,
											"end": 6840,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6767,
											"end": 6809,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "284"
										},
										{
											"begin": 1216,
											"end": 1220,
											"name": "PUSH",
											"source": 14,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 6767,
											"end": 6785,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6767,
											"end": 6809,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "260"
										},
										{
											"begin": 6767,
											"end": 6809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6767,
											"end": 6809,
											"name": "tag",
											"source": 14,
											"value": "284"
										},
										{
											"begin": 6767,
											"end": 6809,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6766,
											"end": 6840,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "285"
										},
										{
											"begin": 6766,
											"end": 6840,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6766,
											"end": 6840,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6766,
											"end": 6840,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "262"
										},
										{
											"begin": 6766,
											"end": 6840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6766,
											"end": 6840,
											"name": "tag",
											"source": 14,
											"value": "285"
										},
										{
											"begin": 6766,
											"end": 6840,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6744,
											"end": 6840,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5590,
											"end": 6875,
											"name": "tag",
											"source": 14,
											"value": "245"
										},
										{
											"begin": 5590,
											"end": 6875,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5590,
											"end": 6875,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5590,
											"end": 6875,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5590,
											"end": 6875,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5590,
											"end": 6875,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5590,
											"end": 6875,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3680,
											"end": 4326,
											"name": "tag",
											"source": 14,
											"value": "72"
										},
										{
											"begin": 3680,
											"end": 4326,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3777,
											"end": 3783,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3777,
											"end": 3783,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3803,
											"end": 3816,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3803,
											"end": 3837,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 3803,
											"end": 3837,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3803,
											"end": 3837,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 3803,
											"end": 3837,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3803,
											"end": 3837,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "291"
										},
										{
											"begin": 3803,
											"end": 3837,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3803,
											"end": 3837,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "291"
										},
										{
											"begin": 3803,
											"end": 3837,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "255"
										},
										{
											"begin": 3803,
											"end": 3837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3803,
											"end": 3837,
											"name": "tag",
											"source": 14,
											"value": "291"
										},
										{
											"begin": 3803,
											"end": 3837,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3803,
											"end": 3837,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3799,
											"end": 4320,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "292"
										},
										{
											"begin": 3799,
											"end": 4320,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3856,
											"end": 3868,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3878,
											"end": 3890,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3878,
											"end": 3890,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3878,
											"end": 3890,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3878,
											"end": 3890,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3878,
											"end": 3890,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3878,
											"end": 3890,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 3878,
											"end": 3890,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 3878,
											"end": 3890,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3878,
											"end": 3890,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3878,
											"end": 3890,
											"name": "AND",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3878,
											"end": 3906,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3878,
											"end": 3906,
											"name": "PUSH",
											"source": 14,
											"value": "FEAF968C"
										},
										{
											"begin": 3878,
											"end": 3908,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3878,
											"end": 3908,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3878,
											"end": 3908,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3878,
											"end": 3908,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3878,
											"end": 3908,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3878,
											"end": 3908,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 3878,
											"end": 3908,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 3878,
											"end": 3908,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3878,
											"end": 3908,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3878,
											"end": 3908,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3878,
											"end": 3908,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3878,
											"end": 3908,
											"name": "PUSH",
											"source": 14,
											"value": "A0"
										},
										{
											"begin": 3878,
											"end": 3908,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3878,
											"end": 3908,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3878,
											"end": 3908,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3878,
											"end": 3908,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3878,
											"end": 3908,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3878,
											"end": 3908,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3878,
											"end": 3908,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 3878,
											"end": 3908,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 3878,
											"end": 3908,
											"name": "STATICCALL",
											"source": 14
										},
										{
											"begin": 3878,
											"end": 3908,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3878,
											"end": 3908,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3878,
											"end": 3908,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3878,
											"end": 3908,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "294"
										},
										{
											"begin": 3878,
											"end": 3908,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3878,
											"end": 3908,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 3878,
											"end": 3908,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3878,
											"end": 3908,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3878,
											"end": 3908,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 3878,
											"end": 3908,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 3878,
											"end": 3908,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3878,
											"end": 3908,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3878,
											"end": 3908,
											"name": "tag",
											"source": 14,
											"value": "294"
										},
										{
											"begin": 3878,
											"end": 3908,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3878,
											"end": 3908,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3878,
											"end": 3908,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3878,
											"end": 3908,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3878,
											"end": 3908,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3878,
											"end": 3908,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3878,
											"end": 3908,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3878,
											"end": 3908,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 3878,
											"end": 3908,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 3878,
											"end": 3908,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 3878,
											"end": 3908,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 3878,
											"end": 3908,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3878,
											"end": 3908,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3878,
											"end": 3908,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3878,
											"end": 3908,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3878,
											"end": 3908,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3878,
											"end": 3908,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3878,
											"end": 3908,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3878,
											"end": 3908,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3878,
											"end": 3908,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3878,
											"end": 3908,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3878,
											"end": 3908,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3878,
											"end": 3908,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3878,
											"end": 3908,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "295"
										},
										{
											"begin": 3878,
											"end": 3908,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3878,
											"end": 3908,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3878,
											"end": 3908,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "296"
										},
										{
											"begin": 3878,
											"end": 3908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3878,
											"end": 3908,
											"name": "tag",
											"source": 14,
											"value": "295"
										},
										{
											"begin": 3878,
											"end": 3908,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3853,
											"end": 3908,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3853,
											"end": 3908,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 3680,
											"end": 4326,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3680,
											"end": 4326,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3799,
											"end": 4320,
											"name": "tag",
											"source": 14,
											"value": "292"
										},
										{
											"begin": 3799,
											"end": 4320,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3972,
											"end": 3990,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 3955,
											"end": 3968,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3955,
											"end": 3990,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 3955,
											"end": 3990,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3955,
											"end": 3990,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 3955,
											"end": 3990,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3955,
											"end": 3990,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "301"
										},
										{
											"begin": 3955,
											"end": 3990,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3955,
											"end": 3990,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "301"
										},
										{
											"begin": 3955,
											"end": 3990,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "255"
										},
										{
											"begin": 3955,
											"end": 3990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3955,
											"end": 3990,
											"name": "tag",
											"source": 14,
											"value": "301"
										},
										{
											"begin": 3955,
											"end": 3990,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3955,
											"end": 3990,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3951,
											"end": 4320,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "302"
										},
										{
											"begin": 3951,
											"end": 4320,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4031,
											"end": 4044,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 4031,
											"end": 4044,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 4031,
											"end": 4062,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4031,
											"end": 4062,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4031,
											"end": 4062,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3FABE5A3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4031,
											"end": 4062,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4031,
											"end": 4062,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4031,
											"end": 4062,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4031,
											"end": 4062,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4009,
											"end": 4021,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4009,
											"end": 4021,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4031,
											"end": 4044,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4031,
											"end": 4044,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4031,
											"end": 4060,
											"name": "PUSH",
											"source": 14,
											"value": "FEAF968C"
										},
										{
											"begin": 4031,
											"end": 4060,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4031,
											"end": 4062,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 4031,
											"end": 4062,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4031,
											"end": 4062,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4031,
											"end": 4062,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4031,
											"end": 4062,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4031,
											"end": 4062,
											"name": "PUSH",
											"source": 14,
											"value": "A0"
										},
										{
											"begin": 4031,
											"end": 4062,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4031,
											"end": 4062,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4031,
											"end": 4062,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4031,
											"end": 4062,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4031,
											"end": 4062,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4031,
											"end": 4062,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4031,
											"end": 4062,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4031,
											"end": 4062,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4031,
											"end": 4044,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4031,
											"end": 4062,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 4031,
											"end": 4062,
											"name": "STATICCALL",
											"source": 14
										},
										{
											"begin": 4031,
											"end": 4062,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4031,
											"end": 4062,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4031,
											"end": 4062,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4031,
											"end": 4062,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "294"
										},
										{
											"begin": 4031,
											"end": 4062,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4031,
											"end": 4062,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 4031,
											"end": 4062,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4031,
											"end": 4062,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4031,
											"end": 4062,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 4031,
											"end": 4062,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 4031,
											"end": 4062,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4031,
											"end": 4062,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3951,
											"end": 4320,
											"name": "tag",
											"source": 14,
											"value": "302"
										},
										{
											"begin": 3951,
											"end": 4320,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4126,
											"end": 4144,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 4109,
											"end": 4122,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4109,
											"end": 4144,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 4109,
											"end": 4144,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4109,
											"end": 4144,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 4109,
											"end": 4144,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4109,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "310"
										},
										{
											"begin": 4109,
											"end": 4144,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4109,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "310"
										},
										{
											"begin": 4109,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "255"
										},
										{
											"begin": 4109,
											"end": 4144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4109,
											"end": 4144,
											"name": "tag",
											"source": 14,
											"value": "310"
										},
										{
											"begin": 4109,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4109,
											"end": 4144,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4105,
											"end": 4320,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "273"
										},
										{
											"begin": 4105,
											"end": 4320,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4185,
											"end": 4198,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 4185,
											"end": 4198,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 4185,
											"end": 4216,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4185,
											"end": 4216,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4185,
											"end": 4216,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3FABE5A3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4185,
											"end": 4216,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4185,
											"end": 4216,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4185,
											"end": 4216,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4185,
											"end": 4216,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4163,
											"end": 4175,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4163,
											"end": 4175,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4185,
											"end": 4198,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4185,
											"end": 4198,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4185,
											"end": 4214,
											"name": "PUSH",
											"source": 14,
											"value": "FEAF968C"
										},
										{
											"begin": 4185,
											"end": 4214,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4185,
											"end": 4216,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 4185,
											"end": 4216,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4185,
											"end": 4216,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4185,
											"end": 4216,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4185,
											"end": 4216,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4185,
											"end": 4216,
											"name": "PUSH",
											"source": 14,
											"value": "A0"
										},
										{
											"begin": 4185,
											"end": 4216,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4185,
											"end": 4216,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4185,
											"end": 4216,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4185,
											"end": 4216,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4185,
											"end": 4216,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4185,
											"end": 4216,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4185,
											"end": 4216,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4185,
											"end": 4216,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4185,
											"end": 4198,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4185,
											"end": 4216,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 4185,
											"end": 4216,
											"name": "STATICCALL",
											"source": 14
										},
										{
											"begin": 4185,
											"end": 4216,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4185,
											"end": 4216,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4185,
											"end": 4216,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4185,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "294"
										},
										{
											"begin": 4185,
											"end": 4216,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4185,
											"end": 4216,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 4185,
											"end": 4216,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4185,
											"end": 4216,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4185,
											"end": 4216,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 4185,
											"end": 4216,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 4185,
											"end": 4216,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4185,
											"end": 4216,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4105,
											"end": 4320,
											"name": "tag",
											"source": 14,
											"value": "315"
										},
										{
											"begin": 4105,
											"end": 4320,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3680,
											"end": 4326,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3680,
											"end": 4326,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3680,
											"end": 4326,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3680,
											"end": 4326,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6881,
											"end": 8153,
											"name": "tag",
											"source": 14,
											"value": "78"
										},
										{
											"begin": 6881,
											"end": 8153,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7006,
											"end": 7013,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7047,
											"end": 7048,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7033,
											"end": 7044,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7033,
											"end": 7048,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 7025,
											"end": 7091,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "318"
										},
										{
											"begin": 7025,
											"end": 7091,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7025,
											"end": 7091,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 7025,
											"end": 7091,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7025,
											"end": 7091,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7025,
											"end": 7091,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12344,
											"end": 12346,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7025,
											"end": 7091,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 7025,
											"end": 7091,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7025,
											"end": 7091,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12326,
											"end": 12347,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12383,
											"end": 12385,
											"name": "PUSH",
											"source": 15,
											"value": "26"
										},
										{
											"begin": 12363,
											"end": 12381,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 12363,
											"end": 12381,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12363,
											"end": 12381,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12356,
											"end": 12386,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12422,
											"end": 12456,
											"name": "PUSH",
											"source": 15,
											"value": "546F6B656E20616D6F756E74206D757374206265206772656174657220746861"
										},
										{
											"begin": 12402,
											"end": 12420,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 12402,
											"end": 12420,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12402,
											"end": 12420,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12395,
											"end": 12457,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12473,
											"end": 12491,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 12473,
											"end": 12491,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12473,
											"end": 12491,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12466,
											"end": 12502,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12519,
											"end": 12538,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 12519,
											"end": 12538,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7025,
											"end": 7091,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "54"
										},
										{
											"begin": 12142,
											"end": 12544,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7025,
											"end": 7091,
											"name": "tag",
											"source": 14,
											"value": "318"
										},
										{
											"begin": 7025,
											"end": 7091,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7102,
											"end": 7114,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1174,
											"end": 1178,
											"name": "PUSH",
											"source": 14,
											"value": "2540BE400"
										},
										{
											"begin": 7117,
											"end": 7145,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "321"
										},
										{
											"begin": 7131,
											"end": 7144,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 7117,
											"end": 7130,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "72"
										},
										{
											"begin": 7117,
											"end": 7145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7117,
											"end": 7145,
											"name": "tag",
											"source": 14,
											"value": "321"
										},
										{
											"begin": 7117,
											"end": 7145,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7117,
											"end": 7168,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "322"
										},
										{
											"begin": 7117,
											"end": 7168,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7117,
											"end": 7168,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7117,
											"end": 7168,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "248"
										},
										{
											"begin": 7117,
											"end": 7168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7117,
											"end": 7168,
											"name": "tag",
											"source": 14,
											"value": "322"
										},
										{
											"begin": 7117,
											"end": 7168,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7102,
											"end": 7168,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7102,
											"end": 7168,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7222,
											"end": 7223,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7214,
											"end": 7219,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7214,
											"end": 7223,
											"name": "SGT",
											"source": 14
										},
										{
											"begin": 7206,
											"end": 7246,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "323"
										},
										{
											"begin": 7206,
											"end": 7246,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7206,
											"end": 7246,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 7206,
											"end": 7246,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7206,
											"end": 7246,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7206,
											"end": 7246,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8931,
											"end": 8933,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7206,
											"end": 7246,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 7206,
											"end": 7246,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7206,
											"end": 7246,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8913,
											"end": 8934,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8970,
											"end": 8972,
											"name": "PUSH",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 8950,
											"end": 8968,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 8950,
											"end": 8968,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8950,
											"end": 8968,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8943,
											"end": 8973,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "125B9D985B1A59081C1C9A58D94819995959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8989,
											"end": 9007,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 8989,
											"end": 9007,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8989,
											"end": 9007,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8982,
											"end": 9030,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9047,
											"end": 9065,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 9047,
											"end": 9065,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7206,
											"end": 7246,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "54"
										},
										{
											"begin": 8729,
											"end": 9071,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7206,
											"end": 7246,
											"name": "tag",
											"source": 14,
											"value": "323"
										},
										{
											"begin": 7206,
											"end": 7246,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7257,
											"end": 7278,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7281,
											"end": 7299,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "325"
										},
										{
											"begin": 16037,
											"end": 16046,
											"name": "PUSH",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 16037,
											"end": 16046,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 16037,
											"end": 16046,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15962,
											"end": 16053,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7281,
											"end": 7299,
											"name": "tag",
											"source": 14,
											"value": "325"
										},
										{
											"begin": 7281,
											"end": 7299,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7257,
											"end": 7299,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7257,
											"end": 7299,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7317,
											"end": 7330,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7334,
											"end": 7335,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7317,
											"end": 7335,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 7309,
											"end": 7354,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 7309,
											"end": 7354,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7309,
											"end": 7354,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 7309,
											"end": 7354,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7309,
											"end": 7354,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7309,
											"end": 7354,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12751,
											"end": 12753,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7309,
											"end": 7354,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 7309,
											"end": 7354,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7309,
											"end": 7354,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12733,
											"end": 12754,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12790,
											"end": 12792,
											"name": "PUSH",
											"source": 15,
											"value": "E"
										},
										{
											"begin": 12770,
											"end": 12788,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 12770,
											"end": 12788,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12770,
											"end": 12788,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12763,
											"end": 12793,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F206163746976652073616C65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "90"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12809,
											"end": 12827,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 12809,
											"end": 12827,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12809,
											"end": 12827,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12802,
											"end": 12846,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12863,
											"end": 12881,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 12863,
											"end": 12881,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7309,
											"end": 7354,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "54"
										},
										{
											"begin": 12549,
											"end": 12887,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7309,
											"end": 7354,
											"name": "tag",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 7309,
											"end": 7354,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7437,
											"end": 7454,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7457,
											"end": 7477,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7457,
											"end": 7477,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7457,
											"end": 7477,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7457,
											"end": 7462,
											"name": "PUSH",
											"source": 14,
											"value": "D"
										},
										{
											"begin": 7457,
											"end": 7477,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7457,
											"end": 7477,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7457,
											"end": 7477,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 7457,
											"end": 7477,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7457,
											"end": 7477,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 7513,
											"end": 7531,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 7513,
											"end": 7531,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7513,
											"end": 7531,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7513,
											"end": 7531,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 7457,
											"end": 7477,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7457,
											"end": 7477,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1216,
											"end": 1220,
											"name": "PUSH",
											"source": 14,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 7611,
											"end": 7640,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 7513,
											"end": 7531,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7611,
											"end": 7622,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 7611,
											"end": 7640,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "260"
										},
										{
											"begin": 7611,
											"end": 7640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7611,
											"end": 7640,
											"name": "tag",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 7611,
											"end": 7640,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7610,
											"end": 7668,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 7610,
											"end": 7668,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7610,
											"end": 7668,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7610,
											"end": 7668,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "262"
										},
										{
											"begin": 7610,
											"end": 7668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7610,
											"end": 7668,
											"name": "tag",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 7610,
											"end": 7668,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7582,
											"end": 7668,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7679,
											"end": 7700,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7679,
											"end": 7700,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7714,
											"end": 7727,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 7714,
											"end": 7748,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 7714,
											"end": 7748,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7714,
											"end": 7748,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 7714,
											"end": 7748,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7714,
											"end": 7748,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 7714,
											"end": 7748,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7714,
											"end": 7748,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 7714,
											"end": 7748,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "255"
										},
										{
											"begin": 7714,
											"end": 7748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7714,
											"end": 7748,
											"name": "tag",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 7714,
											"end": 7748,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7714,
											"end": 7748,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 7710,
											"end": 8116,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "335"
										},
										{
											"begin": 7710,
											"end": 8116,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7825,
											"end": 7830,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 7781,
											"end": 7813,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "336"
										},
										{
											"begin": 1216,
											"end": 1220,
											"name": "PUSH",
											"source": 14,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 7781,
											"end": 7798,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7781,
											"end": 7813,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "260"
										},
										{
											"begin": 7781,
											"end": 7813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7781,
											"end": 7813,
											"name": "tag",
											"source": 14,
											"value": "336"
										},
										{
											"begin": 7781,
											"end": 7813,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7780,
											"end": 7831,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 7780,
											"end": 7831,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7780,
											"end": 7831,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7780,
											"end": 7831,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "262"
										},
										{
											"begin": 7780,
											"end": 7831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7780,
											"end": 7831,
											"name": "tag",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 7780,
											"end": 7831,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7764,
											"end": 7831,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7764,
											"end": 7831,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7710,
											"end": 8116,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "351"
										},
										{
											"begin": 7710,
											"end": 8116,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7710,
											"end": 8116,
											"name": "tag",
											"source": 14,
											"value": "335"
										},
										{
											"begin": 7710,
											"end": 8116,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7882,
											"end": 7900,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 7865,
											"end": 7878,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 7865,
											"end": 7900,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 7865,
											"end": 7900,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7865,
											"end": 7900,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 7865,
											"end": 7900,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7865,
											"end": 7900,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "342"
										},
										{
											"begin": 7865,
											"end": 7900,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7865,
											"end": 7900,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "342"
										},
										{
											"begin": 7865,
											"end": 7900,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "255"
										},
										{
											"begin": 7865,
											"end": 7900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7865,
											"end": 7900,
											"name": "tag",
											"source": 14,
											"value": "342"
										},
										{
											"begin": 7865,
											"end": 7900,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7865,
											"end": 7900,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 7865,
											"end": 7951,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7865,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "343"
										},
										{
											"begin": 7865,
											"end": 7951,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7933,
											"end": 7951,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 7916,
											"end": 7929,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 7916,
											"end": 7951,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 7916,
											"end": 7951,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7916,
											"end": 7951,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 7916,
											"end": 7951,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7916,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "347"
										},
										{
											"begin": 7916,
											"end": 7951,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7916,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "347"
										},
										{
											"begin": 7916,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "255"
										},
										{
											"begin": 7916,
											"end": 7951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7916,
											"end": 7951,
											"name": "tag",
											"source": 14,
											"value": "347"
										},
										{
											"begin": 7916,
											"end": 7951,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7916,
											"end": 7951,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 7865,
											"end": 7951,
											"name": "tag",
											"source": 14,
											"value": "343"
										},
										{
											"begin": 7865,
											"end": 7951,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7848,
											"end": 8116,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7848,
											"end": 8116,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "273"
										},
										{
											"begin": 7848,
											"end": 8116,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8032,
											"end": 8037,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 7993,
											"end": 8020,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "336"
										},
										{
											"begin": 7993,
											"end": 8010,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8014,
											"end": 8019,
											"name": "PUSH",
											"source": 14,
											"value": "F4240"
										},
										{
											"begin": 7993,
											"end": 8020,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "260"
										},
										{
											"begin": 7993,
											"end": 8020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7848,
											"end": 8116,
											"name": "tag",
											"source": 14,
											"value": "351"
										},
										{
											"begin": 7848,
											"end": 8116,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8133,
											"end": 8146,
											"name": "SWAP9",
											"source": 14
										},
										{
											"begin": 6881,
											"end": 8153,
											"name": "SWAP8",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6881,
											"end": 8153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10742,
											"end": 11189,
											"name": "tag",
											"source": 14,
											"value": "90"
										},
										{
											"begin": 10742,
											"end": 11189,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3395,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "355"
										},
										{
											"begin": 3395,
											"end": 3414,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "356"
										},
										{
											"begin": 3395,
											"end": 3416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3395,
											"end": 3416,
											"name": "tag",
											"source": 5,
											"value": "355"
										},
										{
											"begin": 3395,
											"end": 3416,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2334,
											"end": 2347,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 2334,
											"end": 2345,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2347,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 2334,
											"end": 2347,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3281,
											"end": 3295,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 3281,
											"end": 3295,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3281,
											"end": 3295,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 3281,
											"end": 3295,
											"modifierDepth": 2,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3280,
											"end": 3295,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3272,
											"end": 3321,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "361"
										},
										{
											"begin": 3272,
											"end": 3321,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3272,
											"end": 3321,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3272,
											"end": 3321,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3272,
											"end": 3321,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3272,
											"end": 3321,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3272,
											"end": 3321,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3272,
											"end": 3321,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3272,
											"end": 3321,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "54"
										},
										{
											"begin": 3272,
											"end": 3321,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3272,
											"end": 3321,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "363"
										},
										{
											"begin": 3272,
											"end": 3321,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3272,
											"end": 3321,
											"modifierDepth": 2,
											"name": "tag",
											"source": 14,
											"value": "361"
										},
										{
											"begin": 3272,
											"end": 3321,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3383,
											"end": 3392,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 3383,
											"end": 3392,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3383,
											"end": 3392,
											"name": "PUSH",
											"source": 14,
											"value": "10000"
										},
										{
											"begin": 3383,
											"end": 3392,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3383,
											"end": 3392,
											"modifierDepth": 3,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 3383,
											"end": 3392,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 3383,
											"end": 3392,
											"modifierDepth": 3,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3382,
											"end": 3392,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3374,
											"end": 3404,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "365"
										},
										{
											"begin": 3374,
											"end": 3404,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3374,
											"end": 3404,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3374,
											"end": 3404,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3374,
											"end": 3404,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3374,
											"end": 3404,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3374,
											"end": 3404,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3374,
											"end": 3404,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3374,
											"end": 3404,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "54"
										},
										{
											"begin": 3374,
											"end": 3404,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3374,
											"end": 3404,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "367"
										},
										{
											"begin": 3374,
											"end": 3404,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3374,
											"end": 3404,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "365"
										},
										{
											"begin": 3374,
											"end": 3404,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10917,
											"end": 10929,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 10917,
											"end": 10929,
											"modifierDepth": 4,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 10894,
											"end": 10913,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 10894,
											"end": 10913,
											"modifierDepth": 4,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 10894,
											"end": 10929,
											"modifierDepth": 4,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 10894,
											"end": 10929,
											"modifierDepth": 4,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 10873,
											"end": 11011,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "369"
										},
										{
											"begin": 10873,
											"end": 11011,
											"modifierDepth": 4,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10873,
											"end": 11011,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 10873,
											"end": 11011,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10873,
											"end": 11011,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10873,
											"end": 11011,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13779,
											"end": 13781,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 10873,
											"end": 11011,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 10873,
											"end": 11011,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10873,
											"end": 11011,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13761,
											"end": 13782,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13818,
											"end": 13820,
											"name": "PUSH",
											"source": 15,
											"value": "38"
										},
										{
											"begin": 13798,
											"end": 13816,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 13798,
											"end": 13816,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13798,
											"end": 13816,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13791,
											"end": 13821,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13857,
											"end": 13891,
											"name": "PUSH",
											"source": 15,
											"value": "43616E6E6F742066696E616C697A653A20536F667420636170206E6F74207265"
										},
										{
											"begin": 13837,
											"end": 13855,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 13837,
											"end": 13855,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13837,
											"end": 13855,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13830,
											"end": 13892,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13928,
											"end": 13954,
											"name": "PUSH",
											"source": 15,
											"value": "6163686564206F722073616C65206973206F6E676F696E670000000000000000"
										},
										{
											"begin": 13908,
											"end": 13926,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 13908,
											"end": 13926,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13908,
											"end": 13926,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13901,
											"end": 13955,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13972,
											"end": 13991,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 13972,
											"end": 13991,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10873,
											"end": 11011,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "54"
										},
										{
											"begin": 13577,
											"end": 13997,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10873,
											"end": 11011,
											"modifierDepth": 4,
											"name": "tag",
											"source": 14,
											"value": "369"
										},
										{
											"begin": 10873,
											"end": 11011,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11029,
											"end": 11047,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 11029,
											"end": 11047,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 11029,
											"end": 11047,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 11029,
											"end": 11047,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11029,
											"end": 11047,
											"modifierDepth": 4,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 11029,
											"end": 11047,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 11029,
											"end": 11047,
											"modifierDepth": 4,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 11021,
											"end": 11073,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "372"
										},
										{
											"begin": 11021,
											"end": 11073,
											"modifierDepth": 4,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11021,
											"end": 11073,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 11021,
											"end": 11073,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11021,
											"end": 11073,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11021,
											"end": 11073,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14204,
											"end": 14206,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 11021,
											"end": 11073,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 11021,
											"end": 11073,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11021,
											"end": 11073,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14186,
											"end": 14207,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14243,
											"end": 14245,
											"name": "PUSH",
											"source": 15,
											"value": "15"
										},
										{
											"begin": 14223,
											"end": 14241,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 14223,
											"end": 14241,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14223,
											"end": 14241,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14216,
											"end": 14246,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "105A5C991C9BDC081B9BDD0818DBDB5C1B195D1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14262,
											"end": 14280,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 14262,
											"end": 14280,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14262,
											"end": 14280,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14255,
											"end": 14306,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14323,
											"end": 14341,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 14323,
											"end": 14341,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11021,
											"end": 11073,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "54"
										},
										{
											"begin": 14002,
											"end": 14347,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11021,
											"end": 11073,
											"modifierDepth": 4,
											"name": "tag",
											"source": 14,
											"value": "372"
										},
										{
											"begin": 11021,
											"end": 11073,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11084,
											"end": 11098,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 11084,
											"end": 11105,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11084,
											"end": 11105,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11084,
											"end": 11105,
											"modifierDepth": 4,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 11101,
											"end": 11105,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 11084,
											"end": 11105,
											"modifierDepth": 4,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 11084,
											"end": 11105,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11084,
											"end": 11105,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 11115,
											"end": 11138,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "375"
										},
										{
											"begin": 11115,
											"end": 11136,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "376"
										},
										{
											"begin": 11115,
											"end": 11138,
											"jumpType": "[in]",
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11115,
											"end": 11138,
											"modifierDepth": 4,
											"name": "tag",
											"source": 14,
											"value": "375"
										},
										{
											"begin": 11115,
											"end": 11138,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11166,
											"end": 11181,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 11166,
											"end": 11181,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 11153,
											"end": 11182,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 11153,
											"end": 11182,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 11153,
											"end": 11182,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "9C4B134DA32AAB35252391880A9F2A3C13A760D7817AE8823F2B301D3522045A"
										},
										{
											"begin": 11153,
											"end": 11182,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11153,
											"end": 11182,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11153,
											"end": 11182,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11153,
											"end": 11182,
											"modifierDepth": 4,
											"name": "LOG2",
											"source": 14
										},
										{
											"begin": 3437,
											"end": 3457,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "377"
										},
										{
											"begin": 1949,
											"end": 1950,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "C8669CF8EAF883002B9F48E28846A8D408C9B58EA6613BACE374265E43C9BC43"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4113,
											"end": 4136,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3860,
											"end": 4143,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3437,
											"end": 3457,
											"name": "tag",
											"source": 5,
											"value": "377"
										},
										{
											"begin": 3437,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10742,
											"end": 11189,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1350,
											"name": "tag",
											"source": 14,
											"value": "104"
										},
										{
											"begin": 1324,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1350,
											"name": "PUSH",
											"source": 14,
											"value": "A"
										},
										{
											"begin": 1324,
											"end": 1350,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1350,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1350,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1350,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1350,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "379"
										},
										{
											"begin": 1324,
											"end": 1350,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1350,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1324,
											"end": 1350,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1350,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1350,
											"name": "tag",
											"source": 14,
											"value": "379"
										},
										{
											"begin": 1324,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1350,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1324,
											"end": 1350,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1350,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1350,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1350,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1324,
											"end": 1350,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1350,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1350,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1350,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1350,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1324,
											"end": 1350,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1350,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1324,
											"end": 1350,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1350,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2655,
											"end": 2668,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "382"
										},
										{
											"begin": 2655,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "383"
										},
										{
											"begin": 2655,
											"end": 2668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2655,
											"end": 2668,
											"name": "tag",
											"source": 3,
											"value": "382"
										},
										{
											"begin": 2655,
											"end": 2668,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4312,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "385"
										},
										{
											"begin": 4294,
											"end": 4311,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "386"
										},
										{
											"begin": 4276,
											"end": 4312,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4312,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "385"
										},
										{
											"begin": 4276,
											"end": 4312,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4322,
											"end": 4368,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "387"
										},
										{
											"begin": 4344,
											"end": 4361,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4363,
											"end": 4367,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4322,
											"end": 4343,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "388"
										},
										{
											"begin": 4322,
											"end": 4368,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4322,
											"end": 4368,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "387"
										},
										{
											"begin": 4322,
											"end": 4368,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4161,
											"end": 4375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3777,
											"end": 3784,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "390"
										},
										{
											"begin": 2926,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "391"
										},
										{
											"begin": 2926,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2926,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "390"
										},
										{
											"begin": 2926,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3708,
											"end": 3842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3428,
											"end": 3546,
											"name": "tag",
											"source": 14,
											"value": "126"
										},
										{
											"begin": 3428,
											"end": 3546,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "394"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 1,
											"value": "394"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3484,
											"end": 3493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 3484,
											"end": 3493,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3484,
											"end": 3493,
											"name": "PUSH",
											"source": 14,
											"value": "10000"
										},
										{
											"begin": 3484,
											"end": 3493,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3484,
											"end": 3493,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 3484,
											"end": 3493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 3484,
											"end": 3493,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3483,
											"end": 3493,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3475,
											"end": 3513,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "396"
										},
										{
											"begin": 3475,
											"end": 3513,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3475,
											"end": 3513,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3475,
											"end": 3513,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3475,
											"end": 3513,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3475,
											"end": 3513,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14554,
											"end": 14556,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3475,
											"end": 3513,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3475,
											"end": 3513,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3475,
											"end": 3513,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14536,
											"end": 14557,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14593,
											"end": 14595,
											"name": "PUSH",
											"source": 15,
											"value": "F"
										},
										{
											"begin": 14573,
											"end": 14591,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 14573,
											"end": 14591,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14573,
											"end": 14591,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14566,
											"end": 14596,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "105B1C9958591E48119C99595E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14612,
											"end": 14630,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 14612,
											"end": 14630,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14612,
											"end": 14630,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14605,
											"end": 14650,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14667,
											"end": 14685,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 14667,
											"end": 14685,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3475,
											"end": 3513,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "54"
										},
										{
											"begin": 14352,
											"end": 14691,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3475,
											"end": 3513,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "396"
										},
										{
											"begin": 3475,
											"end": 3513,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3523,
											"end": 3532,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 3523,
											"end": 3539,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3523,
											"end": 3539,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF0000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3523,
											"end": 3539,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3523,
											"end": 3539,
											"name": "PUSH",
											"source": 14,
											"value": "10000"
										},
										{
											"begin": 3523,
											"end": 3539,
											"modifierDepth": 1,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 3523,
											"end": 3539,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3523,
											"end": 3539,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 3428,
											"end": 3546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4721,
											"end": 5584,
											"name": "tag",
											"source": 14,
											"value": "135"
										},
										{
											"begin": 4721,
											"end": 5584,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "400"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 1,
											"value": "400"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3281,
											"end": 3295,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 3281,
											"end": 3295,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3281,
											"end": 3295,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 3281,
											"end": 3295,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3280,
											"end": 3295,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3272,
											"end": 3321,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "402"
										},
										{
											"begin": 3272,
											"end": 3321,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3272,
											"end": 3321,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3272,
											"end": 3321,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3272,
											"end": 3321,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3272,
											"end": 3321,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3272,
											"end": 3321,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3272,
											"end": 3321,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3272,
											"end": 3321,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "54"
										},
										{
											"begin": 3272,
											"end": 3321,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3272,
											"end": 3321,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "363"
										},
										{
											"begin": 3272,
											"end": 3321,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3272,
											"end": 3321,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "402"
										},
										{
											"begin": 3272,
											"end": 3321,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3383,
											"end": 3392,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 3383,
											"end": 3392,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3383,
											"end": 3392,
											"name": "PUSH",
											"source": 14,
											"value": "10000"
										},
										{
											"begin": 3383,
											"end": 3392,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3383,
											"end": 3392,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 3383,
											"end": 3392,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 3383,
											"end": 3392,
											"modifierDepth": 2,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3382,
											"end": 3392,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3374,
											"end": 3404,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "405"
										},
										{
											"begin": 3374,
											"end": 3404,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3374,
											"end": 3404,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3374,
											"end": 3404,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3374,
											"end": 3404,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3374,
											"end": 3404,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3374,
											"end": 3404,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3374,
											"end": 3404,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3374,
											"end": 3404,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "54"
										},
										{
											"begin": 3374,
											"end": 3404,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3374,
											"end": 3404,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "367"
										},
										{
											"begin": 3374,
											"end": 3404,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3374,
											"end": 3404,
											"modifierDepth": 2,
											"name": "tag",
											"source": 14,
											"value": "405"
										},
										{
											"begin": 3374,
											"end": 3404,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4920,
											"end": 4935,
											"modifierDepth": 3,
											"name": "TIMESTAMP",
											"source": 14
										},
										{
											"begin": 4907,
											"end": 4917,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4907,
											"end": 4935,
											"modifierDepth": 3,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 4886,
											"end": 5005,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "408"
										},
										{
											"begin": 4886,
											"end": 5005,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4886,
											"end": 5005,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4886,
											"end": 5005,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4886,
											"end": 5005,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4886,
											"end": 5005,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14898,
											"end": 14900,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4886,
											"end": 5005,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 4886,
											"end": 5005,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4886,
											"end": 5005,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14880,
											"end": 14901,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14937,
											"end": 14939,
											"name": "PUSH",
											"source": 15,
											"value": "2C"
										},
										{
											"begin": 14917,
											"end": 14935,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 14917,
											"end": 14935,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14917,
											"end": 14935,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14910,
											"end": 14940,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14976,
											"end": 15010,
											"name": "PUSH",
											"source": 15,
											"value": "53746172742074696D65206D7573742062652067726561746572207468616E20"
										},
										{
											"begin": 14956,
											"end": 14974,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 14956,
											"end": 14974,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14956,
											"end": 14974,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14949,
											"end": 15011,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "63757272656E742074696D65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15027,
											"end": 15045,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 15027,
											"end": 15045,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15027,
											"end": 15045,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15020,
											"end": 15062,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15079,
											"end": 15098,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 15079,
											"end": 15098,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4886,
											"end": 5005,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "54"
										},
										{
											"begin": 14696,
											"end": 15104,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4886,
											"end": 5005,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "408"
										},
										{
											"begin": 4886,
											"end": 5005,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5047,
											"end": 5057,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5036,
											"end": 5044,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5036,
											"end": 5057,
											"modifierDepth": 3,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 5015,
											"end": 5123,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "411"
										},
										{
											"begin": 5015,
											"end": 5123,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5015,
											"end": 5123,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5015,
											"end": 5123,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5015,
											"end": 5123,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5015,
											"end": 5123,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15311,
											"end": 15313,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5015,
											"end": 5123,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 5015,
											"end": 5123,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5015,
											"end": 5123,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15293,
											"end": 15314,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15350,
											"end": 15352,
											"name": "PUSH",
											"source": 15,
											"value": "28"
										},
										{
											"begin": 15330,
											"end": 15348,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 15330,
											"end": 15348,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15330,
											"end": 15348,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15323,
											"end": 15353,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15389,
											"end": 15423,
											"name": "PUSH",
											"source": 15,
											"value": "456E642074696D65206D7573742062652067726561746572207468616E207374"
										},
										{
											"begin": 15369,
											"end": 15387,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 15369,
											"end": 15387,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15369,
											"end": 15387,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15362,
											"end": 15424,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6172742074696D65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15440,
											"end": 15458,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 15440,
											"end": 15458,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15440,
											"end": 15458,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15433,
											"end": 15471,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15488,
											"end": 15507,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 15488,
											"end": 15507,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5015,
											"end": 5123,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "54"
										},
										{
											"begin": 15109,
											"end": 15513,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5015,
											"end": 5123,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "411"
										},
										{
											"begin": 5015,
											"end": 5123,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16146,
											"end": 16155,
											"name": "PUSH",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 16146,
											"end": 16155,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 16114,
											"end": 16121,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16140,
											"end": 16156,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16140,
											"end": 16156,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16140,
											"end": 16156,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 16140,
											"end": 16145,
											"name": "PUSH",
											"source": 14,
											"value": "D"
										},
										{
											"begin": 16140,
											"end": 16156,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 16140,
											"end": 16156,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 16140,
											"end": 16156,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 16140,
											"end": 16156,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16140,
											"end": 16156,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 16140,
											"end": 16164,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 16140,
											"end": 16164,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16140,
											"end": 16164,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 5154,
											"end": 5169,
											"modifierDepth": 3,
											"name": "TIMESTAMP",
											"source": 14
										},
										{
											"begin": 5154,
											"end": 5194,
											"modifierDepth": 3,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 5133,
											"end": 5264,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "416"
										},
										{
											"begin": 5133,
											"end": 5264,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5133,
											"end": 5264,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5133,
											"end": 5264,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5133,
											"end": 5264,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5133,
											"end": 5264,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15720,
											"end": 15722,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5133,
											"end": 5264,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 5133,
											"end": 5264,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5133,
											"end": 5264,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15702,
											"end": 15723,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15759,
											"end": 15761,
											"name": "PUSH",
											"source": 15,
											"value": "2C"
										},
										{
											"begin": 15739,
											"end": 15757,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 15739,
											"end": 15757,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15739,
											"end": 15757,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15732,
											"end": 15762,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15798,
											"end": 15832,
											"name": "PUSH",
											"source": 15,
											"value": "4E65772073616C65206D75737420737461727420616674657220746865206C61"
										},
										{
											"begin": 15778,
											"end": 15796,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 15778,
											"end": 15796,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15778,
											"end": 15796,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15771,
											"end": 15833,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73742073616C6520656E6473"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15849,
											"end": 15867,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 15849,
											"end": 15867,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15849,
											"end": 15867,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15842,
											"end": 15884,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15901,
											"end": 15920,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 15901,
											"end": 15920,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5133,
											"end": 5264,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "54"
										},
										{
											"begin": 15518,
											"end": 15926,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5133,
											"end": 5264,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "416"
										},
										{
											"begin": 5133,
											"end": 5264,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5275,
											"end": 5284,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 5275,
											"end": 5286,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5275,
											"end": 5286,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 5275,
											"end": 5286,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5275,
											"end": 5284,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5275,
											"end": 5286,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "419"
										},
										{
											"begin": 5275,
											"end": 5286,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5275,
											"end": 5286,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "420"
										},
										{
											"begin": 5275,
											"end": 5286,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5275,
											"end": 5286,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "419"
										},
										{
											"begin": 5275,
											"end": 5286,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5275,
											"end": 5286,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5275,
											"end": 5286,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5275,
											"end": 5286,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5315,
											"end": 5499,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5315,
											"end": 5499,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5315,
											"end": 5499,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5315,
											"end": 5499,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "A0"
										},
										{
											"begin": 5315,
											"end": 5499,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5315,
											"end": 5499,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5315,
											"end": 5499,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5315,
											"end": 5499,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5315,
											"end": 5499,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5315,
											"end": 5499,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5315,
											"end": 5499,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5315,
											"end": 5499,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5315,
											"end": 5499,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5315,
											"end": 5499,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5315,
											"end": 5499,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5315,
											"end": 5499,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 5315,
											"end": 5499,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5315,
											"end": 5499,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5315,
											"end": 5499,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5315,
											"end": 5499,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5315,
											"end": 5499,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5315,
											"end": 5499,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 5315,
											"end": 5499,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5315,
											"end": 5499,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5315,
											"end": 5499,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 5315,
											"end": 5499,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5315,
											"end": 5499,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 5315,
											"end": 5499,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5315,
											"end": 5499,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5315,
											"end": 5499,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5315,
											"end": 5499,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5315,
											"end": 5499,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 5315,
											"end": 5499,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 5315,
											"end": 5499,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5315,
											"end": 5499,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5315,
											"end": 5499,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5315,
											"end": 5499,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5302,
											"end": 5311,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 5302,
											"end": 5311,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5302,
											"end": 5311,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 5296,
											"end": 5312,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 5296,
											"end": 5312,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5296,
											"end": 5301,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "D"
										},
										{
											"begin": 5296,
											"end": 5312,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 5296,
											"end": 5312,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5296,
											"end": 5312,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 5296,
											"end": 5312,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 5296,
											"end": 5312,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5296,
											"end": 5312,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 5296,
											"end": 5499,
											"name": "SWAP8",
											"source": 14
										},
										{
											"begin": 5296,
											"end": 5499,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5296,
											"end": 5499,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 5296,
											"end": 5499,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 5296,
											"end": 5499,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 5296,
											"end": 5499,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5315,
											"end": 5499,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 5296,
											"end": 5499,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 5296,
											"end": 5499,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5296,
											"end": 5499,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 5296,
											"end": 5499,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5296,
											"end": 5499,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5296,
											"end": 5499,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 5296,
											"end": 5499,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 5296,
											"end": 5499,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5296,
											"end": 5499,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 5296,
											"end": 5499,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5296,
											"end": 5499,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5296,
											"end": 5499,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 5296,
											"end": 5499,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 5296,
											"end": 5499,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5296,
											"end": 5499,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 5296,
											"end": 5499,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5296,
											"end": 5499,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5296,
											"end": 5499,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 5296,
											"end": 5499,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5296,
											"end": 5499,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 5296,
											"end": 5499,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5296,
											"end": 5499,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5296,
											"end": 5499,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5296,
											"end": 5499,
											"modifierDepth": 3,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 5296,
											"end": 5499,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 5296,
											"end": 5499,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5296,
											"end": 5499,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5296,
											"end": 5499,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 5296,
											"end": 5499,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5296,
											"end": 5499,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 5296,
											"end": 5499,
											"modifierDepth": 3,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 5296,
											"end": 5499,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5296,
											"end": 5499,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 5296,
											"end": 5499,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 5529,
											"end": 5538,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 5514,
											"end": 5577,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5514,
											"end": 5577,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 16273,
											"end": 16298,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 16273,
											"end": 16298,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16273,
											"end": 16298,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 16314,
											"end": 16332,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 16314,
											"end": 16332,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16314,
											"end": 16332,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16307,
											"end": 16341,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 16307,
											"end": 16341,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 16307,
											"end": 16341,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 16357,
											"end": 16375,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 16357,
											"end": 16375,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16357,
											"end": 16375,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16350,
											"end": 16384,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 16350,
											"end": 16384,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 16350,
											"end": 16384,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5514,
											"end": 5577,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "63B43FA153147ADE1DE28ED76841CDBC34E510ED94DD1FF5A88E278B0B1AD9BA"
										},
										{
											"begin": 5514,
											"end": 5577,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16246,
											"end": 16264,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5514,
											"end": 5577,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5514,
											"end": 5577,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5514,
											"end": 5577,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5514,
											"end": 5577,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5514,
											"end": 5577,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 5514,
											"end": 5577,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5514,
											"end": 5577,
											"modifierDepth": 3,
											"name": "LOG2",
											"source": 14
										},
										{
											"begin": 4721,
											"end": 5584,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4721,
											"end": 5584,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4721,
											"end": 5584,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4721,
											"end": 5584,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 3246,
											"end": 3247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3219,
											"end": 3237,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 3219,
											"end": 3249,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3552,
											"end": 3674,
											"name": "tag",
											"source": 14,
											"value": "145"
										},
										{
											"begin": 3552,
											"end": 3674,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3609,
											"end": 3618,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 3609,
											"end": 3618,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3609,
											"end": 3618,
											"name": "PUSH",
											"source": 14,
											"value": "10000"
										},
										{
											"begin": 3609,
											"end": 3618,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3609,
											"end": 3618,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 3609,
											"end": 3618,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 3609,
											"end": 3618,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3601,
											"end": 3640,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "431"
										},
										{
											"begin": 3601,
											"end": 3640,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3601,
											"end": 3640,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3601,
											"end": 3640,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3601,
											"end": 3640,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3601,
											"end": 3640,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 16597,
											"end": 16599,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3601,
											"end": 3640,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3601,
											"end": 3640,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3601,
											"end": 3640,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16579,
											"end": 16600,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 16636,
											"end": 16638,
											"name": "PUSH",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 16616,
											"end": 16634,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 16616,
											"end": 16634,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16616,
											"end": 16634,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16609,
											"end": 16639,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "105B1C9958591E48155B919C99595E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16655,
											"end": 16673,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 16655,
											"end": 16673,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16655,
											"end": 16673,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16648,
											"end": 16695,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 16712,
											"end": 16730,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 16712,
											"end": 16730,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3601,
											"end": 3640,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "54"
										},
										{
											"begin": 16395,
											"end": 16736,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3601,
											"end": 3640,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "431"
										},
										{
											"begin": 3601,
											"end": 3640,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3650,
											"end": 3659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 3650,
											"end": 3667,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3650,
											"end": 3667,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF0000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3650,
											"end": 3667,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3650,
											"end": 3667,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3650,
											"end": 3667,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 3552,
											"end": 3674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13601,
											"end": 15864,
											"name": "tag",
											"source": 14,
											"value": "148"
										},
										{
											"begin": 13601,
											"end": 15864,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3395,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "435"
										},
										{
											"begin": 3395,
											"end": 3414,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "356"
										},
										{
											"begin": 3395,
											"end": 3416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3395,
											"end": 3416,
											"name": "tag",
											"source": 5,
											"value": "435"
										},
										{
											"begin": 3395,
											"end": 3416,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2334,
											"end": 2347,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "437"
										},
										{
											"begin": 2334,
											"end": 2345,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2347,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "437"
										},
										{
											"begin": 2334,
											"end": 2347,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3281,
											"end": 3295,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 3281,
											"end": 3295,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3281,
											"end": 3295,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 3281,
											"end": 3295,
											"modifierDepth": 2,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3280,
											"end": 3295,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3272,
											"end": 3321,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "439"
										},
										{
											"begin": 3272,
											"end": 3321,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3272,
											"end": 3321,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3272,
											"end": 3321,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3272,
											"end": 3321,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3272,
											"end": 3321,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3272,
											"end": 3321,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3272,
											"end": 3321,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3272,
											"end": 3321,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "54"
										},
										{
											"begin": 3272,
											"end": 3321,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3272,
											"end": 3321,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "363"
										},
										{
											"begin": 3272,
											"end": 3321,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3272,
											"end": 3321,
											"modifierDepth": 2,
											"name": "tag",
											"source": 14,
											"value": "439"
										},
										{
											"begin": 3272,
											"end": 3321,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16146,
											"end": 16155,
											"name": "PUSH",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 16146,
											"end": 16155,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 16114,
											"end": 16121,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16140,
											"end": 16156,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16140,
											"end": 16156,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16140,
											"end": 16156,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 16140,
											"end": 16145,
											"name": "PUSH",
											"source": 14,
											"value": "D"
										},
										{
											"begin": 16140,
											"end": 16156,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 16140,
											"end": 16156,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 16140,
											"end": 16156,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 16140,
											"end": 16156,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16140,
											"end": 16156,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 16140,
											"end": 16164,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 16140,
											"end": 16164,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16140,
											"end": 16164,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 13693,
											"end": 13708,
											"modifierDepth": 3,
											"name": "TIMESTAMP",
											"source": 14
										},
										{
											"begin": 13693,
											"end": 13733,
											"modifierDepth": 3,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 13685,
											"end": 13750,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "443"
										},
										{
											"begin": 13685,
											"end": 13750,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13685,
											"end": 13750,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 13685,
											"end": 13750,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13685,
											"end": 13750,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13685,
											"end": 13750,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 16943,
											"end": 16945,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 13685,
											"end": 13750,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 13685,
											"end": 13750,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13685,
											"end": 13750,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16925,
											"end": 16946,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 16982,
											"end": 16984,
											"name": "PUSH",
											"source": 15,
											"value": "C"
										},
										{
											"begin": 16962,
											"end": 16980,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 16962,
											"end": 16980,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16962,
											"end": 16980,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16955,
											"end": 16985,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "53616C65206F6E676F696E67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17001,
											"end": 17019,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 17001,
											"end": 17019,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17001,
											"end": 17019,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16994,
											"end": 17036,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 17053,
											"end": 17071,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 17053,
											"end": 17071,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13685,
											"end": 13750,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "54"
										},
										{
											"begin": 16741,
											"end": 17077,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13685,
											"end": 13750,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "443"
										},
										{
											"begin": 13685,
											"end": 13750,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13790,
											"end": 13802,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 13790,
											"end": 13802,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 13768,
											"end": 13787,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 13768,
											"end": 13787,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 13768,
											"end": 13802,
											"modifierDepth": 3,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 13760,
											"end": 13823,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "446"
										},
										{
											"begin": 13760,
											"end": 13823,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13760,
											"end": 13823,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 13760,
											"end": 13823,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13760,
											"end": 13823,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13760,
											"end": 13823,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 17284,
											"end": 17286,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 13760,
											"end": 13823,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 13760,
											"end": 13823,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13760,
											"end": 13823,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17266,
											"end": 17287,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 17323,
											"end": 17325,
											"name": "PUSH",
											"source": 15,
											"value": "10"
										},
										{
											"begin": 17303,
											"end": 17321,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 17303,
											"end": 17321,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17303,
											"end": 17321,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17296,
											"end": 17326,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14DBD99D0818D85C081C995858DA1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17342,
											"end": 17360,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 17342,
											"end": 17360,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17342,
											"end": 17360,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17335,
											"end": 17381,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 17398,
											"end": 17416,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 17398,
											"end": 17416,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13760,
											"end": 13823,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "54"
										},
										{
											"begin": 17082,
											"end": 17422,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13760,
											"end": 13823,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "446"
										},
										{
											"begin": 13760,
											"end": 13823,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13859,
											"end": 13868,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "A"
										},
										{
											"begin": 13859,
											"end": 13875,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 13859,
											"end": 13875,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 13859,
											"end": 13875,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13834,
											"end": 13856,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13834,
											"end": 13856,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13925,
											"end": 13944,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13925,
											"end": 13944,
											"modifierDepth": 3,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 13921,
											"end": 14062,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 13921,
											"end": 14062,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "449"
										},
										{
											"begin": 13921,
											"end": 14062,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13980,
											"end": 13999,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "450"
										},
										{
											"begin": 13997,
											"end": 13999,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "B"
										},
										{
											"begin": 13980,
											"end": 13994,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13980,
											"end": 13999,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "275"
										},
										{
											"begin": 13980,
											"end": 13999,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13980,
											"end": 13999,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "450"
										},
										{
											"begin": 13980,
											"end": 13999,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13960,
											"end": 13999,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13960,
											"end": 13999,
											"modifierDepth": 3,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13921,
											"end": 14062,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "451"
										},
										{
											"begin": 13921,
											"end": 14062,
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13921,
											"end": 14062,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "449"
										},
										{
											"begin": 13921,
											"end": 14062,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14050,
											"end": 14051,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13921,
											"end": 14062,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "451"
										},
										{
											"begin": 13921,
											"end": 14062,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14131,
											"end": 14140,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14143,
											"end": 14161,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "455"
										},
										{
											"begin": 14160,
											"end": 14161,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 14143,
											"end": 14157,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 14143,
											"end": 14161,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "275"
										},
										{
											"begin": 14143,
											"end": 14161,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14143,
											"end": 14161,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "455"
										},
										{
											"begin": 14143,
											"end": 14161,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14131,
											"end": 14161,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14131,
											"end": 14161,
											"modifierDepth": 3,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14126,
											"end": 15776,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "452"
										},
										{
											"begin": 14126,
											"end": 15776,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14168,
											"end": 14185,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14163,
											"end": 14164,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14163,
											"end": 14185,
											"modifierDepth": 3,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 14126,
											"end": 15776,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "453"
										},
										{
											"begin": 14126,
											"end": 15776,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 14206,
											"end": 14222,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14225,
											"end": 14234,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "A"
										},
										{
											"begin": 14235,
											"end": 14236,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14225,
											"end": 14237,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14225,
											"end": 14237,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 14225,
											"end": 14237,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14225,
											"end": 14237,
											"modifierDepth": 3,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 14225,
											"end": 14237,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "457"
										},
										{
											"begin": 14225,
											"end": 14237,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 14225,
											"end": 14237,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "457"
										},
										{
											"begin": 14225,
											"end": 14237,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "458"
										},
										{
											"begin": 14225,
											"end": 14237,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14225,
											"end": 14237,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "457"
										},
										{
											"begin": 14225,
											"end": 14237,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14225,
											"end": 14237,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14225,
											"end": 14237,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14225,
											"end": 14237,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14225,
											"end": 14237,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14225,
											"end": 14237,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 14225,
											"end": 14237,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14225,
											"end": 14237,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 14225,
											"end": 14237,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14225,
											"end": 14237,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14225,
											"end": 14237,
											"modifierDepth": 3,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 14225,
											"end": 14237,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14312,
											"end": 15666,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "460"
										},
										{
											"begin": 14312,
											"end": 15666,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14334,
											"end": 14335,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 14330,
											"end": 14331,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14330,
											"end": 14335,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 14330,
											"end": 14335,
											"modifierDepth": 3,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 14330,
											"end": 14335,
											"modifierDepth": 3,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 14312,
											"end": 15666,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 14312,
											"end": 15666,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "461"
										},
										{
											"begin": 14312,
											"end": 15666,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 14360,
											"end": 14387,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14404,
											"end": 14405,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14390,
											"end": 14406,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 14390,
											"end": 14406,
											"modifierDepth": 3,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 14390,
											"end": 14406,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 14390,
											"end": 14406,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14390,
											"end": 14406,
											"modifierDepth": 3,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 14390,
											"end": 14406,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 14390,
											"end": 14406,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "464"
										},
										{
											"begin": 14390,
											"end": 14406,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 14390,
											"end": 14406,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "464"
										},
										{
											"begin": 14390,
											"end": 14406,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "255"
										},
										{
											"begin": 14390,
											"end": 14406,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14390,
											"end": 14406,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "464"
										},
										{
											"begin": 14390,
											"end": 14406,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14441,
											"end": 14467,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 14441,
											"end": 14467,
											"modifierDepth": 3,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 14424,
											"end": 14438,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14441,
											"end": 14467,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14441,
											"end": 14467,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14441,
											"end": 14467,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14441,
											"end": 14457,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 14441,
											"end": 14467,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 14441,
											"end": 14467,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14441,
											"end": 14467,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 14441,
											"end": 14467,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14441,
											"end": 14467,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 14360,
											"end": 14406,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14360,
											"end": 14406,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14424,
											"end": 14438,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14424,
											"end": 14438,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14360,
											"end": 14406,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14441,
											"end": 14482,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 14441,
											"end": 14482,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14441,
											"end": 14482,
											"modifierDepth": 3,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 14441,
											"end": 14482,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 14441,
											"end": 14482,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "466"
										},
										{
											"begin": 14441,
											"end": 14482,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 14441,
											"end": 14482,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "466"
										},
										{
											"begin": 14441,
											"end": 14482,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "255"
										},
										{
											"begin": 14441,
											"end": 14482,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14441,
											"end": 14482,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "466"
										},
										{
											"begin": 14441,
											"end": 14482,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14441,
											"end": 14482,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 14441,
											"end": 14482,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14441,
											"end": 14482,
											"modifierDepth": 3,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 14441,
											"end": 14482,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 14441,
											"end": 14482,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "468"
										},
										{
											"begin": 14441,
											"end": 14482,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 14441,
											"end": 14482,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "468"
										},
										{
											"begin": 14441,
											"end": 14482,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "255"
										},
										{
											"begin": 14441,
											"end": 14482,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14441,
											"end": 14482,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "468"
										},
										{
											"begin": 14441,
											"end": 14482,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14441,
											"end": 14482,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14441,
											"end": 14482,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14441,
											"end": 14482,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 14441,
											"end": 14482,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14441,
											"end": 14482,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14441,
											"end": 14482,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14441,
											"end": 14482,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14441,
											"end": 14482,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 14441,
											"end": 14482,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14441,
											"end": 14482,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14441,
											"end": 14482,
											"modifierDepth": 3,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 14441,
											"end": 14482,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 14424,
											"end": 14482,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14424,
											"end": 14482,
											"modifierDepth": 3,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14514,
											"end": 14515,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14505,
											"end": 14511,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14505,
											"end": 14515,
											"modifierDepth": 3,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 14501,
											"end": 15635,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 14501,
											"end": 15635,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "469"
										},
										{
											"begin": 14501,
											"end": 15635,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14539,
											"end": 14565,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 14539,
											"end": 14565,
											"modifierDepth": 3,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 14583,
											"end": 14584,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14539,
											"end": 14565,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14539,
											"end": 14565,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14539,
											"end": 14565,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14539,
											"end": 14555,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 14539,
											"end": 14565,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 14539,
											"end": 14565,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14539,
											"end": 14565,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 14539,
											"end": 14565,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14539,
											"end": 14565,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 14583,
											"end": 14584,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14566,
											"end": 14579,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 14539,
											"end": 14580,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 14539,
											"end": 14580,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14539,
											"end": 14580,
											"modifierDepth": 3,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 14539,
											"end": 14580,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 14539,
											"end": 14580,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "471"
										},
										{
											"begin": 14539,
											"end": 14580,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 14539,
											"end": 14580,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "471"
										},
										{
											"begin": 14539,
											"end": 14580,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "255"
										},
										{
											"begin": 14539,
											"end": 14580,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14539,
											"end": 14580,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "471"
										},
										{
											"begin": 14539,
											"end": 14580,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14539,
											"end": 14580,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 14539,
											"end": 14580,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14539,
											"end": 14580,
											"modifierDepth": 3,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 14539,
											"end": 14580,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 14539,
											"end": 14580,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "473"
										},
										{
											"begin": 14539,
											"end": 14580,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 14539,
											"end": 14580,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "473"
										},
										{
											"begin": 14539,
											"end": 14580,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "255"
										},
										{
											"begin": 14539,
											"end": 14580,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14539,
											"end": 14580,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "473"
										},
										{
											"begin": 14539,
											"end": 14580,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14539,
											"end": 14580,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14539,
											"end": 14580,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14539,
											"end": 14580,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 14539,
											"end": 14580,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14539,
											"end": 14580,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14539,
											"end": 14580,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14539,
											"end": 14580,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14539,
											"end": 14580,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14539,
											"end": 14580,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14539,
											"end": 14580,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 14539,
											"end": 14580,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 14539,
											"end": 14580,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14539,
											"end": 14580,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14539,
											"end": 14580,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 14539,
											"end": 14584,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14539,
											"end": 14584,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14539,
											"end": 14584,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14539,
											"end": 14584,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 14610,
											"end": 14623,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14610,
											"end": 14644,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 14610,
											"end": 14644,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14610,
											"end": 14644,
											"modifierDepth": 3,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 14610,
											"end": 14644,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 14610,
											"end": 14644,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "477"
										},
										{
											"begin": 14610,
											"end": 14644,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 14610,
											"end": 14644,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "477"
										},
										{
											"begin": 14610,
											"end": 14644,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "255"
										},
										{
											"begin": 14610,
											"end": 14644,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14610,
											"end": 14644,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "477"
										},
										{
											"begin": 14610,
											"end": 14644,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14610,
											"end": 14644,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 14606,
											"end": 15521,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "478"
										},
										{
											"begin": 14606,
											"end": 15521,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 14673,
											"end": 14682,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14696,
											"end": 14704,
											"modifierDepth": 3,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14688,
											"end": 14710,
											"modifierDepth": 3,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 14718,
											"end": 14724,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14688,
											"end": 14783,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 14688,
											"end": 14783,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 14688,
											"end": 14783,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14688,
											"end": 14783,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 14688,
											"end": 14783,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 14688,
											"end": 14783,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 14688,
											"end": 14783,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14688,
											"end": 14783,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 14688,
											"end": 14783,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14688,
											"end": 14783,
											"modifierDepth": 3,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 14688,
											"end": 14783,
											"modifierDepth": 3,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 14688,
											"end": 14783,
											"modifierDepth": 3,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 14688,
											"end": 14783,
											"modifierDepth": 3,
											"name": "CALL",
											"source": 14
										},
										{
											"begin": 14688,
											"end": 14783,
											"modifierDepth": 3,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 14688,
											"end": 14783,
											"modifierDepth": 3,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14688,
											"end": 14783,
											"modifierDepth": 3,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14688,
											"end": 14783,
											"modifierDepth": 3,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14688,
											"end": 14783,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 14688,
											"end": 14783,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 14688,
											"end": 14783,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14688,
											"end": 14783,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14688,
											"end": 14783,
											"modifierDepth": 3,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 14688,
											"end": 14783,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "483"
										},
										{
											"begin": 14688,
											"end": 14783,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 14688,
											"end": 14783,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 14688,
											"end": 14783,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 14688,
											"end": 14783,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14688,
											"end": 14783,
											"modifierDepth": 3,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14688,
											"end": 14783,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 14688,
											"end": 14783,
											"modifierDepth": 3,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 14688,
											"end": 14783,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "3F"
										},
										{
											"begin": 14688,
											"end": 14783,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 14688,
											"end": 14783,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14688,
											"end": 14783,
											"modifierDepth": 3,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 14688,
											"end": 14783,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14688,
											"end": 14783,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14688,
											"end": 14783,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 14688,
											"end": 14783,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14688,
											"end": 14783,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 14688,
											"end": 14783,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14688,
											"end": 14783,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14688,
											"end": 14783,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 14688,
											"end": 14783,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14688,
											"end": 14783,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 14688,
											"end": 14783,
											"modifierDepth": 3,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 14688,
											"end": 14783,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14688,
											"end": 14783,
											"modifierDepth": 3,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 14688,
											"end": 14783,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "482"
										},
										{
											"begin": 14688,
											"end": 14783,
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14688,
											"end": 14783,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "483"
										},
										{
											"begin": 14688,
											"end": 14783,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14688,
											"end": 14783,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 14688,
											"end": 14783,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14688,
											"end": 14783,
											"modifierDepth": 3,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14688,
											"end": 14783,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "482"
										},
										{
											"begin": 14688,
											"end": 14783,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14688,
											"end": 14783,
											"modifierDepth": 3,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14672,
											"end": 14783,
											"modifierDepth": 3,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14672,
											"end": 14783,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14672,
											"end": 14783,
											"modifierDepth": 3,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14817,
											"end": 14821,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 14809,
											"end": 14843,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "484"
										},
										{
											"begin": 14809,
											"end": 14843,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 14809,
											"end": 14843,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 14809,
											"end": 14843,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14809,
											"end": 14843,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14809,
											"end": 14843,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 17971,
											"end": 17973,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 14809,
											"end": 14843,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 14809,
											"end": 14843,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14809,
											"end": 14843,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17953,
											"end": 17974,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 18010,
											"end": 18012,
											"name": "PUSH",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 17990,
											"end": 18008,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 17990,
											"end": 18008,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17990,
											"end": 18008,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17983,
											"end": 18013,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "109390881C99599D5B990819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18029,
											"end": 18047,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 18029,
											"end": 18047,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18029,
											"end": 18047,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 18022,
											"end": 18069,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 18086,
											"end": 18104,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 18086,
											"end": 18104,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14809,
											"end": 14843,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "54"
										},
										{
											"begin": 17769,
											"end": 18110,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14809,
											"end": 14843,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "484"
										},
										{
											"begin": 14809,
											"end": 14843,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14646,
											"end": 14866,
											"modifierDepth": 3,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14606,
											"end": 15521,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "513"
										},
										{
											"begin": 14606,
											"end": 15521,
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14606,
											"end": 15521,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "478"
										},
										{
											"begin": 14606,
											"end": 15521,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14918,
											"end": 14936,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 14901,
											"end": 14914,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14901,
											"end": 14936,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 14901,
											"end": 14936,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14901,
											"end": 14936,
											"modifierDepth": 3,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 14901,
											"end": 14936,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 14901,
											"end": 14936,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "491"
										},
										{
											"begin": 14901,
											"end": 14936,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 14901,
											"end": 14936,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "491"
										},
										{
											"begin": 14901,
											"end": 14936,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "255"
										},
										{
											"begin": 14901,
											"end": 14936,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14901,
											"end": 14936,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "491"
										},
										{
											"begin": 14901,
											"end": 14936,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14901,
											"end": 14936,
											"modifierDepth": 3,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 14901,
											"end": 14999,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 14901,
											"end": 14999,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "492"
										},
										{
											"begin": 14901,
											"end": 14999,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14981,
											"end": 14999,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 14964,
											"end": 14977,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14964,
											"end": 14999,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 14964,
											"end": 14999,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14964,
											"end": 14999,
											"modifierDepth": 3,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 14964,
											"end": 14999,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 14964,
											"end": 14999,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "496"
										},
										{
											"begin": 14964,
											"end": 14999,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 14964,
											"end": 14999,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "496"
										},
										{
											"begin": 14964,
											"end": 14999,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "255"
										},
										{
											"begin": 14964,
											"end": 14999,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14964,
											"end": 14999,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "496"
										},
										{
											"begin": 14964,
											"end": 14999,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14964,
											"end": 14999,
											"modifierDepth": 3,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 14901,
											"end": 14999,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "492"
										},
										{
											"begin": 14901,
											"end": 14999,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14872,
											"end": 15521,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 14872,
											"end": 15521,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "497"
										},
										{
											"begin": 14872,
											"end": 15521,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 15048,
											"end": 15065,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15085,
											"end": 15103,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 15068,
											"end": 15081,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 15068,
											"end": 15103,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 15068,
											"end": 15103,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15068,
											"end": 15103,
											"modifierDepth": 3,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 15068,
											"end": 15103,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 15068,
											"end": 15103,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "501"
										},
										{
											"begin": 15068,
											"end": 15103,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 15068,
											"end": 15103,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "501"
										},
										{
											"begin": 15068,
											"end": 15103,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "255"
										},
										{
											"begin": 15068,
											"end": 15103,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15068,
											"end": 15103,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "501"
										},
										{
											"begin": 15068,
											"end": 15103,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15068,
											"end": 15103,
											"modifierDepth": 3,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 15068,
											"end": 15189,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "502"
										},
										{
											"begin": 15068,
											"end": 15189,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 15184,
											"end": 15188,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "C"
										},
										{
											"begin": 15184,
											"end": 15188,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15184,
											"end": 15188,
											"modifierDepth": 3,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 15068,
											"end": 15189,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "503"
										},
										{
											"begin": 15068,
											"end": 15189,
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15068,
											"end": 15189,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "502"
										},
										{
											"begin": 15068,
											"end": 15189,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15141,
											"end": 15145,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "B"
										},
										{
											"begin": 15141,
											"end": 15145,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15141,
											"end": 15145,
											"modifierDepth": 3,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 15068,
											"end": 15189,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "503"
										},
										{
											"begin": 15068,
											"end": 15189,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15252,
											"end": 15289,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 15252,
											"end": 15289,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15252,
											"end": 15289,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15252,
											"end": 15289,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18307,
											"end": 18339,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 18307,
											"end": 18339,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 18307,
											"end": 18339,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 15252,
											"end": 15289,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 15252,
											"end": 15289,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 15252,
											"end": 15289,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18289,
											"end": 18340,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 18356,
											"end": 18374,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 18356,
											"end": 18374,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18356,
											"end": 18374,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 18349,
											"end": 18383,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 18349,
											"end": 18383,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 18349,
											"end": 18383,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15048,
											"end": 15189,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15048,
											"end": 15189,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15252,
											"end": 15271,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15252,
											"end": 15271,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15252,
											"end": 15271,
											"modifierDepth": 3,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 15252,
											"end": 15271,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15252,
											"end": 15271,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "A9059CBB"
										},
										{
											"begin": 15252,
											"end": 15271,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18262,
											"end": 18280,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 18262,
											"end": 18280,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15252,
											"end": 15289,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 15252,
											"end": 15289,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 15252,
											"end": 15289,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 15252,
											"end": 15289,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 15252,
											"end": 15289,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 15252,
											"end": 15289,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 15252,
											"end": 15289,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15252,
											"end": 15289,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15252,
											"end": 15289,
											"modifierDepth": 3,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 15252,
											"end": 15289,
											"modifierDepth": 3,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 15252,
											"end": 15289,
											"modifierDepth": 3,
											"name": "CALL",
											"source": 14
										},
										{
											"begin": 15252,
											"end": 15289,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 15252,
											"end": 15289,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 15252,
											"end": 15289,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 15252,
											"end": 15289,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "507"
										},
										{
											"begin": 15252,
											"end": 15289,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 15252,
											"end": 15289,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 15252,
											"end": 15289,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15252,
											"end": 15289,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 15252,
											"end": 15289,
											"modifierDepth": 3,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 15252,
											"end": 15289,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 15252,
											"end": 15289,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15252,
											"end": 15289,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 15252,
											"end": 15289,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "507"
										},
										{
											"begin": 15252,
											"end": 15289,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15252,
											"end": 15289,
											"modifierDepth": 3,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15252,
											"end": 15289,
											"modifierDepth": 3,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15252,
											"end": 15289,
											"modifierDepth": 3,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15252,
											"end": 15289,
											"modifierDepth": 3,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15252,
											"end": 15289,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 15252,
											"end": 15289,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 15252,
											"end": 15289,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 15252,
											"end": 15289,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 15252,
											"end": 15289,
											"modifierDepth": 3,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 15252,
											"end": 15289,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 15252,
											"end": 15289,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15252,
											"end": 15289,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15252,
											"end": 15289,
											"modifierDepth": 3,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 15252,
											"end": 15289,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15252,
											"end": 15289,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15252,
											"end": 15289,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 15252,
											"end": 15289,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 15252,
											"end": 15289,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15252,
											"end": 15289,
											"modifierDepth": 3,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15252,
											"end": 15289,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15252,
											"end": 15289,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15252,
											"end": 15289,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15252,
											"end": 15289,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "508"
										},
										{
											"begin": 15252,
											"end": 15289,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15252,
											"end": 15289,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15252,
											"end": 15289,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "509"
										},
										{
											"begin": 15252,
											"end": 15289,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15252,
											"end": 15289,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "508"
										},
										{
											"begin": 15252,
											"end": 15289,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15215,
											"end": 15371,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "484"
										},
										{
											"begin": 15215,
											"end": 15371,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 15215,
											"end": 15371,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 15215,
											"end": 15371,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15215,
											"end": 15371,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15215,
											"end": 15371,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 18878,
											"end": 18880,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 15215,
											"end": 15371,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 15215,
											"end": 15371,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15215,
											"end": 15371,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18860,
											"end": 18881,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 18917,
											"end": 18919,
											"name": "PUSH",
											"source": 15,
											"value": "18"
										},
										{
											"begin": 18897,
											"end": 18915,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 18897,
											"end": 18915,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18897,
											"end": 18915,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 18890,
											"end": 18920,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 18956,
											"end": 18982,
											"name": "PUSH",
											"source": 15,
											"value": "537461626C65636F696E20726566756E64206661696C65640000000000000000"
										},
										{
											"begin": 18936,
											"end": 18954,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 18936,
											"end": 18954,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18936,
											"end": 18954,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 18929,
											"end": 18983,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 19000,
											"end": 19018,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 19000,
											"end": 19018,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15215,
											"end": 15371,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "54"
										},
										{
											"begin": 18676,
											"end": 19024,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14872,
											"end": 15521,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "497"
										},
										{
											"begin": 14872,
											"end": 15521,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15451,
											"end": 15498,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 15451,
											"end": 15498,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15451,
											"end": 15498,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15451,
											"end": 15498,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 19231,
											"end": 19233,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 15451,
											"end": 15498,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 15451,
											"end": 15498,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15451,
											"end": 15498,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19213,
											"end": 19234,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 19270,
											"end": 19272,
											"name": "PUSH",
											"source": 15,
											"value": "25"
										},
										{
											"begin": 19250,
											"end": 19268,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 19250,
											"end": 19268,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 19250,
											"end": 19268,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 19243,
											"end": 19273,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 19309,
											"end": 19343,
											"name": "PUSH",
											"source": 15,
											"value": "556E737570706F72746564207061796D656E74206D6574686F6420666F722072"
										},
										{
											"begin": 19289,
											"end": 19307,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 19289,
											"end": 19307,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 19289,
											"end": 19307,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 19282,
											"end": 19344,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "19599D5B99"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19360,
											"end": 19378,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 19360,
											"end": 19378,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 19360,
											"end": 19378,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 19353,
											"end": 19388,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 19405,
											"end": 19424,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 19405,
											"end": 19424,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15451,
											"end": 15498,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "54"
										},
										{
											"begin": 19029,
											"end": 19430,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14872,
											"end": 15521,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "513"
										},
										{
											"begin": 14872,
											"end": 15521,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15584,
											"end": 15592,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15568,
											"end": 15616,
											"modifierDepth": 3,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 15568,
											"end": 15616,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "3829AB241648D7348F97E4F77D36451330F2276EA8EEB3428E462012F9699E7"
										},
										{
											"begin": 15594,
											"end": 15600,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15602,
											"end": 15615,
											"modifierDepth": 3,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 15568,
											"end": 15616,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 15568,
											"end": 15616,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 15568,
											"end": 15616,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "516"
										},
										{
											"begin": 15568,
											"end": 15616,
											"modifierDepth": 3,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 15568,
											"end": 15616,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15568,
											"end": 15616,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15568,
											"end": 15616,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "517"
										},
										{
											"begin": 15568,
											"end": 15616,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15568,
											"end": 15616,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "516"
										},
										{
											"begin": 15568,
											"end": 15616,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15568,
											"end": 15616,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 15568,
											"end": 15616,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 15568,
											"end": 15616,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 15568,
											"end": 15616,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15568,
											"end": 15616,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 15568,
											"end": 15616,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15568,
											"end": 15616,
											"modifierDepth": 3,
											"name": "LOG2",
											"source": 14
										},
										{
											"begin": 14501,
											"end": 15635,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "469"
										},
										{
											"begin": 14501,
											"end": 15635,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14337,
											"end": 14340,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 14337,
											"end": 14340,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14312,
											"end": 15666,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "460"
										},
										{
											"begin": 14312,
											"end": 15666,
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14312,
											"end": 15666,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "461"
										},
										{
											"begin": 14312,
											"end": 15666,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14312,
											"end": 15666,
											"modifierDepth": 3,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15679,
											"end": 15688,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "A"
										},
										{
											"begin": 15679,
											"end": 15694,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 15679,
											"end": 15694,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 15679,
											"end": 15694,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 15679,
											"end": 15694,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "519"
										},
										{
											"begin": 15679,
											"end": 15694,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 15679,
											"end": 15694,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "519"
										},
										{
											"begin": 15679,
											"end": 15694,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "520"
										},
										{
											"begin": 15679,
											"end": 15694,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15679,
											"end": 15694,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "519"
										},
										{
											"begin": 15679,
											"end": 15694,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15679,
											"end": 15694,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15679,
											"end": 15694,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15679,
											"end": 15694,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15679,
											"end": 15694,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15679,
											"end": 15694,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 15679,
											"end": 15694,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15679,
											"end": 15694,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 15679,
											"end": 15694,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15679,
											"end": 15694,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15679,
											"end": 15694,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15679,
											"end": 15694,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15679,
											"end": 15694,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15679,
											"end": 15694,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 15679,
											"end": 15694,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15679,
											"end": 15694,
											"modifierDepth": 3,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 15679,
											"end": 15694,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15679,
											"end": 15694,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 15679,
											"end": 15694,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15679,
											"end": 15694,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15679,
											"end": 15694,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15679,
											"end": 15694,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15679,
											"end": 15694,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15679,
											"end": 15694,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 15712,
											"end": 15718,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15712,
											"end": 15718,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15712,
											"end": 15718,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 15708,
											"end": 15766,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "522"
										},
										{
											"begin": 15708,
											"end": 15766,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 15742,
											"end": 15747,
											"modifierDepth": 3,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15742,
											"end": 15747,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "453"
										},
										{
											"begin": 15742,
											"end": 15747,
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15708,
											"end": 15766,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "522"
										},
										{
											"begin": 15708,
											"end": 15766,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14187,
											"end": 14190,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 14187,
											"end": 14190,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "523"
										},
										{
											"begin": 14187,
											"end": 14190,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14187,
											"end": 14190,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "524"
										},
										{
											"begin": 14187,
											"end": 14190,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14187,
											"end": 14190,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "523"
										},
										{
											"begin": 14187,
											"end": 14190,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14187,
											"end": 14190,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14187,
											"end": 14190,
											"modifierDepth": 3,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14187,
											"end": 14190,
											"modifierDepth": 3,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14126,
											"end": 15776,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "452"
										},
										{
											"begin": 14126,
											"end": 15776,
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14126,
											"end": 15776,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "453"
										},
										{
											"begin": 14126,
											"end": 15776,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15789,
											"end": 15798,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "A"
										},
										{
											"begin": 15789,
											"end": 15805,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 15809,
											"end": 15810,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15789,
											"end": 15810,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 15785,
											"end": 15858,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "525"
										},
										{
											"begin": 15785,
											"end": 15858,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 15826,
											"end": 15840,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 15826,
											"end": 15847,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 15826,
											"end": 15847,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15826,
											"end": 15847,
											"modifierDepth": 3,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 15843,
											"end": 15847,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 15826,
											"end": 15847,
											"modifierDepth": 3,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 15826,
											"end": 15847,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15826,
											"end": 15847,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 15785,
											"end": 15858,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "525"
										},
										{
											"begin": 15785,
											"end": 15858,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13675,
											"end": 15864,
											"modifierDepth": 3,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13675,
											"end": 15864,
											"modifierDepth": 3,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3437,
											"end": 3457,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "377"
										},
										{
											"begin": 1949,
											"end": 1950,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "C8669CF8EAF883002B9F48E28846A8D408C9B58EA6613BACE374265E43C9BC43"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4113,
											"end": 4136,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3860,
											"end": 4143,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"source": 1,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12018,
											"end": 13595,
											"name": "tag",
											"source": 14,
											"value": "155"
										},
										{
											"begin": 12018,
											"end": 13595,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3395,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "531"
										},
										{
											"begin": 3395,
											"end": 3414,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "356"
										},
										{
											"begin": 3395,
											"end": 3416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3395,
											"end": 3416,
											"name": "tag",
											"source": 5,
											"value": "531"
										},
										{
											"begin": 3395,
											"end": 3416,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2334,
											"end": 2347,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "533"
										},
										{
											"begin": 2334,
											"end": 2345,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2347,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "533"
										},
										{
											"begin": 2334,
											"end": 2347,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3281,
											"end": 3295,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 3281,
											"end": 3295,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3281,
											"end": 3295,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 3281,
											"end": 3295,
											"modifierDepth": 2,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3280,
											"end": 3295,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3272,
											"end": 3321,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "535"
										},
										{
											"begin": 3272,
											"end": 3321,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3272,
											"end": 3321,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3272,
											"end": 3321,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3272,
											"end": 3321,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3272,
											"end": 3321,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3272,
											"end": 3321,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3272,
											"end": 3321,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3272,
											"end": 3321,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "54"
										},
										{
											"begin": 3272,
											"end": 3321,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3272,
											"end": 3321,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "363"
										},
										{
											"begin": 3272,
											"end": 3321,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3272,
											"end": 3321,
											"modifierDepth": 2,
											"name": "tag",
											"source": 14,
											"value": "535"
										},
										{
											"begin": 3272,
											"end": 3321,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3383,
											"end": 3392,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 3383,
											"end": 3392,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3383,
											"end": 3392,
											"name": "PUSH",
											"source": 14,
											"value": "10000"
										},
										{
											"begin": 3383,
											"end": 3392,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3383,
											"end": 3392,
											"modifierDepth": 3,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 3383,
											"end": 3392,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 3383,
											"end": 3392,
											"modifierDepth": 3,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3382,
											"end": 3392,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3374,
											"end": 3404,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "538"
										},
										{
											"begin": 3374,
											"end": 3404,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3374,
											"end": 3404,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3374,
											"end": 3404,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3374,
											"end": 3404,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3374,
											"end": 3404,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3374,
											"end": 3404,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3374,
											"end": 3404,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3374,
											"end": 3404,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "54"
										},
										{
											"begin": 3374,
											"end": 3404,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3374,
											"end": 3404,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "367"
										},
										{
											"begin": 3374,
											"end": 3404,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3374,
											"end": 3404,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "538"
										},
										{
											"begin": 3374,
											"end": 3404,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12162,
											"end": 12180,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 12162,
											"end": 12180,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 12162,
											"end": 12180,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 12162,
											"end": 12180,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12162,
											"end": 12180,
											"modifierDepth": 4,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 12162,
											"end": 12180,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 12162,
											"end": 12180,
											"modifierDepth": 4,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 12161,
											"end": 12180,
											"modifierDepth": 4,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 12153,
											"end": 12210,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "541"
										},
										{
											"begin": 12153,
											"end": 12210,
											"modifierDepth": 4,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12153,
											"end": 12210,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 12153,
											"end": 12210,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12153,
											"end": 12210,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12153,
											"end": 12210,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 20202,
											"end": 20204,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 12153,
											"end": 12210,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 12153,
											"end": 12210,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12153,
											"end": 12210,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 20184,
											"end": 20205,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 20241,
											"end": 20243,
											"name": "PUSH",
											"source": 15,
											"value": "19"
										},
										{
											"begin": 20221,
											"end": 20239,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 20221,
											"end": 20239,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 20221,
											"end": 20239,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 20214,
											"end": 20244,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 20280,
											"end": 20307,
											"name": "PUSH",
											"source": 15,
											"value": "41697264726F7020616C726561647920636F6D706C6574656400000000000000"
										},
										{
											"begin": 20260,
											"end": 20278,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 20260,
											"end": 20278,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 20260,
											"end": 20278,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 20253,
											"end": 20308,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 20325,
											"end": 20343,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 20325,
											"end": 20343,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12153,
											"end": 12210,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "54"
										},
										{
											"begin": 20000,
											"end": 20349,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12153,
											"end": 12210,
											"modifierDepth": 4,
											"name": "tag",
											"source": 14,
											"value": "541"
										},
										{
											"begin": 12153,
											"end": 12210,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12272,
											"end": 12287,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 12272,
											"end": 12287,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12246,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 12241,
											"end": 12246,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12268,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 12241,
											"end": 12268,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12241,
											"end": 12268,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12268,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12257,
											"end": 12267,
											"modifierDepth": 4,
											"name": "CALLER",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12268,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 12241,
											"end": 12268,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12268,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1788,
											"end": 1839,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12241,
											"end": 12246,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12246,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12246,
											"modifierDepth": 4,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12246,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12256,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "70A08231"
										},
										{
											"begin": 12241,
											"end": 12256,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1761,
											"end": 1779,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 1761,
											"end": 1779,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12241,
											"end": 12268,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12241,
											"end": 12268,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 12241,
											"end": 12268,
											"modifierDepth": 4,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12268,
											"modifierDepth": 4,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12268,
											"modifierDepth": 4,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12268,
											"modifierDepth": 4,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12268,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12268,
											"modifierDepth": 4,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12268,
											"modifierDepth": 4,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12268,
											"modifierDepth": 4,
											"name": "STATICCALL",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12268,
											"modifierDepth": 4,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12268,
											"modifierDepth": 4,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12268,
											"modifierDepth": 4,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12268,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "546"
										},
										{
											"begin": 12241,
											"end": 12268,
											"modifierDepth": 4,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12268,
											"modifierDepth": 4,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12268,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12241,
											"end": 12268,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12268,
											"modifierDepth": 4,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12268,
											"modifierDepth": 4,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12268,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12241,
											"end": 12268,
											"modifierDepth": 4,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12268,
											"modifierDepth": 4,
											"name": "tag",
											"source": 14,
											"value": "546"
										},
										{
											"begin": 12241,
											"end": 12268,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12268,
											"modifierDepth": 4,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12268,
											"modifierDepth": 4,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12268,
											"modifierDepth": 4,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12268,
											"modifierDepth": 4,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12268,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 12241,
											"end": 12268,
											"modifierDepth": 4,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12268,
											"modifierDepth": 4,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12268,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 12241,
											"end": 12268,
											"modifierDepth": 4,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12268,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 12241,
											"end": 12268,
											"modifierDepth": 4,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12268,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12268,
											"modifierDepth": 4,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12268,
											"modifierDepth": 4,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12268,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12268,
											"modifierDepth": 4,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12268,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 12241,
											"end": 12268,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12268,
											"modifierDepth": 4,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12268,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12268,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12268,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12268,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "547"
										},
										{
											"begin": 12241,
											"end": 12268,
											"modifierDepth": 4,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12268,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12268,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "548"
										},
										{
											"begin": 12241,
											"end": 12268,
											"jumpType": "[in]",
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12268,
											"modifierDepth": 4,
											"name": "tag",
											"source": 14,
											"value": "547"
										},
										{
											"begin": 12241,
											"end": 12268,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12287,
											"modifierDepth": 4,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12287,
											"modifierDepth": 4,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 12220,
											"end": 12331,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "549"
										},
										{
											"begin": 12220,
											"end": 12331,
											"modifierDepth": 4,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12220,
											"end": 12331,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 12220,
											"end": 12331,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12220,
											"end": 12331,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12220,
											"end": 12331,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 20791,
											"end": 20793,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 12220,
											"end": 12331,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 12220,
											"end": 12331,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12220,
											"end": 12331,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 20773,
											"end": 20794,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 20830,
											"end": 20832,
											"name": "PUSH",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 20810,
											"end": 20828,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 20810,
											"end": 20828,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 20810,
											"end": 20828,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 20803,
											"end": 20833,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E73756666696369656E742046756E6473"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20849,
											"end": 20867,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 20849,
											"end": 20867,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 20849,
											"end": 20867,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 20842,
											"end": 20890,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 20907,
											"end": 20925,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 20907,
											"end": 20925,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12220,
											"end": 12331,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "54"
										},
										{
											"begin": 20589,
											"end": 20931,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12220,
											"end": 12331,
											"modifierDepth": 4,
											"name": "tag",
											"source": 14,
											"value": "549"
										},
										{
											"begin": 12220,
											"end": 12331,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16146,
											"end": 16155,
											"name": "PUSH",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 16146,
											"end": 16155,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 16114,
											"end": 16121,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16140,
											"end": 16156,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16140,
											"end": 16156,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16140,
											"end": 16156,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 16140,
											"end": 16145,
											"name": "PUSH",
											"source": 14,
											"value": "D"
										},
										{
											"begin": 16140,
											"end": 16156,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 16140,
											"end": 16156,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 16140,
											"end": 16156,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 16140,
											"end": 16156,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16140,
											"end": 16156,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 16140,
											"end": 16164,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 16140,
											"end": 16164,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16140,
											"end": 16164,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 12349,
											"end": 12364,
											"modifierDepth": 4,
											"name": "TIMESTAMP",
											"source": 14
										},
										{
											"begin": 12349,
											"end": 12389,
											"modifierDepth": 4,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 12341,
											"end": 12406,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "553"
										},
										{
											"begin": 12341,
											"end": 12406,
											"modifierDepth": 4,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12341,
											"end": 12406,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 12341,
											"end": 12406,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12341,
											"end": 12406,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12341,
											"end": 12406,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 16943,
											"end": 16945,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 12341,
											"end": 12406,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 12341,
											"end": 12406,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12341,
											"end": 12406,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16925,
											"end": 16946,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 16982,
											"end": 16984,
											"name": "PUSH",
											"source": 15,
											"value": "C"
										},
										{
											"begin": 16962,
											"end": 16980,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 16962,
											"end": 16980,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16962,
											"end": 16980,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16955,
											"end": 16985,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "53616C65206F6E676F696E67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17001,
											"end": 17019,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 17001,
											"end": 17019,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17001,
											"end": 17019,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16994,
											"end": 17036,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 17053,
											"end": 17071,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 17053,
											"end": 17071,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12341,
											"end": 12406,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "54"
										},
										{
											"begin": 16741,
											"end": 17077,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12341,
											"end": 12406,
											"modifierDepth": 4,
											"name": "tag",
											"source": 14,
											"value": "553"
										},
										{
											"begin": 12341,
											"end": 12406,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12442,
											"end": 12451,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "A"
										},
										{
											"begin": 12442,
											"end": 12458,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 12442,
											"end": 12458,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 12442,
											"end": 12458,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12417,
											"end": 12439,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12417,
											"end": 12439,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12508,
											"end": 12527,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12508,
											"end": 12527,
											"modifierDepth": 4,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 12504,
											"end": 12645,
											"modifierDepth": 4,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 12504,
											"end": 12645,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "555"
										},
										{
											"begin": 12504,
											"end": 12645,
											"modifierDepth": 4,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12563,
											"end": 12582,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "556"
										},
										{
											"begin": 12580,
											"end": 12582,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "B"
										},
										{
											"begin": 12563,
											"end": 12577,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12563,
											"end": 12582,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "275"
										},
										{
											"begin": 12563,
											"end": 12582,
											"jumpType": "[in]",
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12563,
											"end": 12582,
											"modifierDepth": 4,
											"name": "tag",
											"source": 14,
											"value": "556"
										},
										{
											"begin": 12563,
											"end": 12582,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12543,
											"end": 12582,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12543,
											"end": 12582,
											"modifierDepth": 4,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12504,
											"end": 12645,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "557"
										},
										{
											"begin": 12504,
											"end": 12645,
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12504,
											"end": 12645,
											"modifierDepth": 4,
											"name": "tag",
											"source": 14,
											"value": "555"
										},
										{
											"begin": 12504,
											"end": 12645,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12633,
											"end": 12634,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12504,
											"end": 12645,
											"modifierDepth": 4,
											"name": "tag",
											"source": 14,
											"value": "557"
										},
										{
											"begin": 12504,
											"end": 12645,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12659,
											"end": 12668,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12671,
											"end": 12689,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "561"
										},
										{
											"begin": 12688,
											"end": 12689,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 12671,
											"end": 12685,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 12671,
											"end": 12689,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "275"
										},
										{
											"begin": 12671,
											"end": 12689,
											"jumpType": "[in]",
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12671,
											"end": 12689,
											"modifierDepth": 4,
											"name": "tag",
											"source": 14,
											"value": "561"
										},
										{
											"begin": 12671,
											"end": 12689,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12659,
											"end": 12689,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12659,
											"end": 12689,
											"modifierDepth": 4,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12654,
											"end": 13503,
											"modifierDepth": 4,
											"name": "tag",
											"source": 14,
											"value": "558"
										},
										{
											"begin": 12654,
											"end": 13503,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12696,
											"end": 12713,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12691,
											"end": 12692,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12691,
											"end": 12713,
											"modifierDepth": 4,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 12654,
											"end": 13503,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "559"
										},
										{
											"begin": 12654,
											"end": 13503,
											"modifierDepth": 4,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12734,
											"end": 12750,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12753,
											"end": 12762,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "A"
										},
										{
											"begin": 12763,
											"end": 12764,
											"modifierDepth": 4,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12753,
											"end": 12765,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12753,
											"end": 12765,
											"modifierDepth": 4,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 12753,
											"end": 12765,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12753,
											"end": 12765,
											"modifierDepth": 4,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 12753,
											"end": 12765,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "563"
										},
										{
											"begin": 12753,
											"end": 12765,
											"modifierDepth": 4,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12753,
											"end": 12765,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "563"
										},
										{
											"begin": 12753,
											"end": 12765,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "458"
										},
										{
											"begin": 12753,
											"end": 12765,
											"jumpType": "[in]",
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12753,
											"end": 12765,
											"modifierDepth": 4,
											"name": "tag",
											"source": 14,
											"value": "563"
										},
										{
											"begin": 12753,
											"end": 12765,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12753,
											"end": 12765,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12753,
											"end": 12765,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12753,
											"end": 12765,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12753,
											"end": 12765,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12753,
											"end": 12765,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12753,
											"end": 12765,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 12753,
											"end": 12765,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12753,
											"end": 12765,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 12753,
											"end": 12765,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12753,
											"end": 12765,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12753,
											"end": 12765,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12753,
											"end": 12765,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12753,
											"end": 12765,
											"modifierDepth": 4,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 12802,
											"end": 12834,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 12802,
											"end": 12834,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12802,
											"end": 12834,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12802,
											"end": 12824,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "F"
										},
										{
											"begin": 12802,
											"end": 12834,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12802,
											"end": 12834,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12802,
											"end": 12834,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12802,
											"end": 12834,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 12802,
											"end": 12834,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12802,
											"end": 12834,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12802,
											"end": 12834,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 12802,
											"end": 12834,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 12753,
											"end": 12765,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12753,
											"end": 12765,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12961,
											"end": 12977,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 12961,
											"end": 12977,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 12957,
											"end": 13430,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "565"
										},
										{
											"begin": 12957,
											"end": 13430,
											"modifierDepth": 4,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13084,
											"end": 13089,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 13084,
											"end": 13089,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 13069,
											"end": 13081,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13069,
											"end": 13081,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13084,
											"end": 13089,
											"modifierDepth": 4,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 13084,
											"end": 13102,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "23B872DD"
										},
										{
											"begin": 13124,
											"end": 13131,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "566"
										},
										{
											"begin": 13124,
											"end": 13129,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "151"
										},
										{
											"begin": 13124,
											"end": 13131,
											"jumpType": "[in]",
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13124,
											"end": 13131,
											"modifierDepth": 4,
											"name": "tag",
											"source": 14,
											"value": "566"
										},
										{
											"begin": 13124,
											"end": 13131,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13084,
											"end": 13213,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 13084,
											"end": 13213,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13084,
											"end": 13213,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 13084,
											"end": 13213,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 13084,
											"end": 13213,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13084,
											"end": 13213,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 13084,
											"end": 13213,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 13084,
											"end": 13213,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13084,
											"end": 13213,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21156,
											"end": 21188,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 21156,
											"end": 21188,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 21156,
											"end": 21188,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 13084,
											"end": 13213,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 13084,
											"end": 13213,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13084,
											"end": 13213,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 21138,
											"end": 21189,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 21225,
											"end": 21257,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 21225,
											"end": 21257,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 21225,
											"end": 21257,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 21205,
											"end": 21223,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 21205,
											"end": 21223,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 21205,
											"end": 21223,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 21198,
											"end": 21258,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 21274,
											"end": 21292,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 21274,
											"end": 21292,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 21274,
											"end": 21292,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 21267,
											"end": 21301,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 21267,
											"end": 21301,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 21267,
											"end": 21301,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 21111,
											"end": 21129,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 21111,
											"end": 21129,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13084,
											"end": 13213,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 13084,
											"end": 13213,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 13084,
											"end": 13213,
											"modifierDepth": 4,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 13084,
											"end": 13213,
											"modifierDepth": 4,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 13084,
											"end": 13213,
											"modifierDepth": 4,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13084,
											"end": 13213,
											"modifierDepth": 4,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 13084,
											"end": 13213,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13084,
											"end": 13213,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13084,
											"end": 13213,
											"modifierDepth": 4,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 13084,
											"end": 13213,
											"modifierDepth": 4,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 13084,
											"end": 13213,
											"modifierDepth": 4,
											"name": "CALL",
											"source": 14
										},
										{
											"begin": 13084,
											"end": 13213,
											"modifierDepth": 4,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 13084,
											"end": 13213,
											"modifierDepth": 4,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 13084,
											"end": 13213,
											"modifierDepth": 4,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 13084,
											"end": 13213,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "570"
										},
										{
											"begin": 13084,
											"end": 13213,
											"modifierDepth": 4,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13084,
											"end": 13213,
											"modifierDepth": 4,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 13084,
											"end": 13213,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13084,
											"end": 13213,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 13084,
											"end": 13213,
											"modifierDepth": 4,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 13084,
											"end": 13213,
											"modifierDepth": 4,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 13084,
											"end": 13213,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13084,
											"end": 13213,
											"modifierDepth": 4,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 13084,
											"end": 13213,
											"modifierDepth": 4,
											"name": "tag",
											"source": 14,
											"value": "570"
										},
										{
											"begin": 13084,
											"end": 13213,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13084,
											"end": 13213,
											"modifierDepth": 4,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13084,
											"end": 13213,
											"modifierDepth": 4,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13084,
											"end": 13213,
											"modifierDepth": 4,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13084,
											"end": 13213,
											"modifierDepth": 4,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13084,
											"end": 13213,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 13084,
											"end": 13213,
											"modifierDepth": 4,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 13084,
											"end": 13213,
											"modifierDepth": 4,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 13084,
											"end": 13213,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 13084,
											"end": 13213,
											"modifierDepth": 4,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 13084,
											"end": 13213,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 13084,
											"end": 13213,
											"modifierDepth": 4,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13084,
											"end": 13213,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13084,
											"end": 13213,
											"modifierDepth": 4,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 13084,
											"end": 13213,
											"modifierDepth": 4,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13084,
											"end": 13213,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13084,
											"end": 13213,
											"modifierDepth": 4,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 13084,
											"end": 13213,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 13084,
											"end": 13213,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13084,
											"end": 13213,
											"modifierDepth": 4,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13084,
											"end": 13213,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13084,
											"end": 13213,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13084,
											"end": 13213,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13084,
											"end": 13213,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "571"
										},
										{
											"begin": 13084,
											"end": 13213,
											"modifierDepth": 4,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13084,
											"end": 13213,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13084,
											"end": 13213,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "509"
										},
										{
											"begin": 13084,
											"end": 13213,
											"jumpType": "[in]",
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13084,
											"end": 13213,
											"modifierDepth": 4,
											"name": "tag",
											"source": 14,
											"value": "571"
										},
										{
											"begin": 13084,
											"end": 13213,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13069,
											"end": 13213,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13069,
											"end": 13213,
											"modifierDepth": 4,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13239,
											"end": 13246,
											"modifierDepth": 4,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 13231,
											"end": 13272,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "572"
										},
										{
											"begin": 13231,
											"end": 13272,
											"modifierDepth": 4,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13231,
											"end": 13272,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 13231,
											"end": 13272,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13231,
											"end": 13272,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13231,
											"end": 13272,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 21514,
											"end": 21516,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 13231,
											"end": 13272,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 13231,
											"end": 13272,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13231,
											"end": 13272,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 21496,
											"end": 21517,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 21553,
											"end": 21555,
											"name": "PUSH",
											"source": 15,
											"value": "15"
										},
										{
											"begin": 21533,
											"end": 21551,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 21533,
											"end": 21551,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 21533,
											"end": 21551,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 21526,
											"end": 21556,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "151BDAD95B881D1C985B9CD9995C8819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21572,
											"end": 21590,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 21572,
											"end": 21590,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 21572,
											"end": 21590,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 21565,
											"end": 21616,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 21633,
											"end": 21651,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 21633,
											"end": 21651,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13231,
											"end": 13272,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "54"
										},
										{
											"begin": 21312,
											"end": 21657,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13231,
											"end": 13272,
											"modifierDepth": 4,
											"name": "tag",
											"source": 14,
											"value": "572"
										},
										{
											"begin": 13231,
											"end": 13272,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13290,
											"end": 13299,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "A"
										},
										{
											"begin": 13290,
											"end": 13305,
											"modifierDepth": 4,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 13290,
											"end": 13305,
											"modifierDepth": 4,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 13290,
											"end": 13305,
											"modifierDepth": 4,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 13290,
											"end": 13305,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "576"
										},
										{
											"begin": 13290,
											"end": 13305,
											"modifierDepth": 4,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13290,
											"end": 13305,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "576"
										},
										{
											"begin": 13290,
											"end": 13305,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "520"
										},
										{
											"begin": 13290,
											"end": 13305,
											"jumpType": "[in]",
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13290,
											"end": 13305,
											"modifierDepth": 4,
											"name": "tag",
											"source": 14,
											"value": "576"
										},
										{
											"begin": 13290,
											"end": 13305,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13290,
											"end": 13305,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13290,
											"end": 13305,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13290,
											"end": 13305,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13290,
											"end": 13305,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13290,
											"end": 13305,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 13290,
											"end": 13305,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13290,
											"end": 13305,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 13290,
											"end": 13305,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13290,
											"end": 13305,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13290,
											"end": 13305,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13290,
											"end": 13305,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13290,
											"end": 13305,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13290,
											"end": 13305,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 13290,
											"end": 13305,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13290,
											"end": 13305,
											"modifierDepth": 4,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 13290,
											"end": 13305,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13290,
											"end": 13305,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 13290,
											"end": 13305,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13290,
											"end": 13305,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13290,
											"end": 13305,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 13376,
											"end": 13415,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 13376,
											"end": 13415,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13376,
											"end": 13415,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 13376,
											"end": 13415,
											"modifierDepth": 4,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 13376,
											"end": 13415,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13376,
											"end": 13415,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "9BDCD0CC5503FB9A8DD7311D9617E33108C4B7C8948CC544B16C1FD63C6F475B"
										},
										{
											"begin": 13376,
											"end": 13415,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13376,
											"end": 13415,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "578"
										},
										{
											"begin": 13376,
											"end": 13415,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13402,
											"end": 13414,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1014,
											"end": 1039,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1014,
											"end": 1039,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1002,
											"end": 1004,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 987,
											"end": 1005,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 987,
											"end": 1005,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 868,
											"end": 1045,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13376,
											"end": 13415,
											"modifierDepth": 4,
											"name": "tag",
											"source": 14,
											"value": "578"
										},
										{
											"begin": 13376,
											"end": 13415,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13376,
											"end": 13415,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 13376,
											"end": 13415,
											"modifierDepth": 4,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 13376,
											"end": 13415,
											"modifierDepth": 4,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 13376,
											"end": 13415,
											"modifierDepth": 4,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13376,
											"end": 13415,
											"modifierDepth": 4,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 13376,
											"end": 13415,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13376,
											"end": 13415,
											"modifierDepth": 4,
											"name": "LOG2",
											"source": 14
										},
										{
											"begin": 12979,
											"end": 13430,
											"modifierDepth": 4,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12957,
											"end": 13430,
											"modifierDepth": 4,
											"name": "tag",
											"source": 14,
											"value": "565"
										},
										{
											"begin": 12957,
											"end": 13430,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13447,
											"end": 13448,
											"modifierDepth": 4,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13452,
											"end": 13453,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13447,
											"end": 13453,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 13443,
											"end": 13493,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "579"
										},
										{
											"begin": 13443,
											"end": 13493,
											"modifierDepth": 4,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13473,
											"end": 13478,
											"modifierDepth": 4,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13473,
											"end": 13478,
											"modifierDepth": 4,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13473,
											"end": 13478,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "559"
										},
										{
											"begin": 13473,
											"end": 13478,
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13443,
											"end": 13493,
											"modifierDepth": 4,
											"name": "tag",
											"source": 14,
											"value": "579"
										},
										{
											"begin": 13443,
											"end": 13493,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12720,
											"end": 13503,
											"modifierDepth": 4,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12720,
											"end": 13503,
											"modifierDepth": 4,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12715,
											"end": 12718,
											"modifierDepth": 4,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 12715,
											"end": 12718,
											"modifierDepth": 4,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 12715,
											"end": 12718,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "580"
										},
										{
											"begin": 12715,
											"end": 12718,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12715,
											"end": 12718,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "524"
										},
										{
											"begin": 12715,
											"end": 12718,
											"jumpType": "[in]",
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12715,
											"end": 12718,
											"modifierDepth": 4,
											"name": "tag",
											"source": 14,
											"value": "580"
										},
										{
											"begin": 12715,
											"end": 12718,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12715,
											"end": 12718,
											"modifierDepth": 4,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12715,
											"end": 12718,
											"modifierDepth": 4,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12715,
											"end": 12718,
											"modifierDepth": 4,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12654,
											"end": 13503,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "558"
										},
										{
											"begin": 12654,
											"end": 13503,
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12654,
											"end": 13503,
											"modifierDepth": 4,
											"name": "tag",
											"source": 14,
											"value": "559"
										},
										{
											"begin": 12654,
											"end": 13503,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13516,
											"end": 13525,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "A"
										},
										{
											"begin": 13516,
											"end": 13532,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 13536,
											"end": 13537,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13516,
											"end": 13537,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 13512,
											"end": 13589,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "525"
										},
										{
											"begin": 13512,
											"end": 13589,
											"modifierDepth": 4,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13553,
											"end": 13571,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 13553,
											"end": 13578,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 13553,
											"end": 13578,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13553,
											"end": 13578,
											"modifierDepth": 4,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 13553,
											"end": 13578,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 13553,
											"end": 13578,
											"modifierDepth": 4,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 13553,
											"end": 13578,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13553,
											"end": 13578,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 12143,
											"end": 13595,
											"modifierDepth": 4,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12143,
											"end": 13595,
											"modifierDepth": 4,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3437,
											"end": 3457,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "377"
										},
										{
											"begin": 1949,
											"end": 1950,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "C8669CF8EAF883002B9F48E28846A8D408C9B58EA6613BACE374265E43C9BC43"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4113,
											"end": 4136,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3860,
											"end": 4143,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8159,
											"end": 10736,
											"name": "tag",
											"source": 14,
											"value": "162"
										},
										{
											"begin": 8159,
											"end": 10736,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3281,
											"end": 3295,
											"name": "PUSH",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 3281,
											"end": 3295,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3281,
											"end": 3295,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 3281,
											"end": 3295,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3280,
											"end": 3295,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3272,
											"end": 3321,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "585"
										},
										{
											"begin": 3272,
											"end": 3321,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3272,
											"end": 3321,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3272,
											"end": 3321,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3272,
											"end": 3321,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3272,
											"end": 3321,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3272,
											"end": 3321,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3272,
											"end": 3321,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3272,
											"end": 3321,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "54"
										},
										{
											"begin": 3272,
											"end": 3321,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3272,
											"end": 3321,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "363"
										},
										{
											"begin": 3272,
											"end": 3321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3272,
											"end": 3321,
											"name": "tag",
											"source": 14,
											"value": "585"
										},
										{
											"begin": 3272,
											"end": 3321,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3383,
											"end": 3392,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 3383,
											"end": 3392,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3383,
											"end": 3392,
											"name": "PUSH",
											"source": 14,
											"value": "10000"
										},
										{
											"begin": 3383,
											"end": 3392,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3383,
											"end": 3392,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 3383,
											"end": 3392,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 3383,
											"end": 3392,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3382,
											"end": 3392,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3374,
											"end": 3404,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "588"
										},
										{
											"begin": 3374,
											"end": 3404,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3374,
											"end": 3404,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3374,
											"end": 3404,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3374,
											"end": 3404,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3374,
											"end": 3404,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3374,
											"end": 3404,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3374,
											"end": 3404,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3374,
											"end": 3404,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "54"
										},
										{
											"begin": 3374,
											"end": 3404,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3374,
											"end": 3404,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "367"
										},
										{
											"begin": 3374,
											"end": 3404,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3374,
											"end": 3404,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "588"
										},
										{
											"begin": 3374,
											"end": 3404,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8339,
											"end": 8346,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "591"
										},
										{
											"begin": 8339,
											"end": 8344,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "151"
										},
										{
											"begin": 8339,
											"end": 8346,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8339,
											"end": 8346,
											"modifierDepth": 2,
											"name": "tag",
											"source": 14,
											"value": "591"
										},
										{
											"begin": 8339,
											"end": 8346,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8325,
											"end": 8346,
											"modifierDepth": 2,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 8325,
											"end": 8335,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 14
										},
										{
											"begin": 8325,
											"end": 8346,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 8317,
											"end": 8374,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "592"
										},
										{
											"begin": 8317,
											"end": 8374,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8317,
											"end": 8374,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 8317,
											"end": 8374,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8317,
											"end": 8374,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8317,
											"end": 8374,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 21864,
											"end": 21866,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8317,
											"end": 8374,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 8317,
											"end": 8374,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8317,
											"end": 8374,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 21846,
											"end": 21867,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 21903,
											"end": 21905,
											"name": "PUSH",
											"source": 15,
											"value": "17"
										},
										{
											"begin": 21883,
											"end": 21901,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 21883,
											"end": 21901,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 21883,
											"end": 21901,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 21876,
											"end": 21906,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 21942,
											"end": 21967,
											"name": "PUSH",
											"source": 15,
											"value": "4F776E65722063616E6E6F742062757920746F6B656E73000000000000000000"
										},
										{
											"begin": 21922,
											"end": 21940,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 21922,
											"end": 21940,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 21922,
											"end": 21940,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 21915,
											"end": 21968,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 21985,
											"end": 22003,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 21985,
											"end": 22003,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8317,
											"end": 8374,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "54"
										},
										{
											"begin": 21662,
											"end": 22009,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8317,
											"end": 8374,
											"modifierDepth": 2,
											"name": "tag",
											"source": 14,
											"value": "592"
										},
										{
											"begin": 8317,
											"end": 8374,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8392,
											"end": 8401,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 8392,
											"end": 8401,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 8405,
											"end": 8406,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8392,
											"end": 8406,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 8384,
											"end": 8418,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "595"
										},
										{
											"begin": 8384,
											"end": 8418,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8384,
											"end": 8418,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 8384,
											"end": 8418,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8384,
											"end": 8418,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8384,
											"end": 8418,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 22216,
											"end": 22218,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8384,
											"end": 8418,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 8384,
											"end": 8418,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8384,
											"end": 8418,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 22198,
											"end": 22219,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 22255,
											"end": 22256,
											"name": "PUSH",
											"source": 15,
											"value": "7"
										},
										{
											"begin": 22235,
											"end": 22253,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 22235,
											"end": 22253,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 22235,
											"end": 22253,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 22228,
											"end": 22257,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F2073616C65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22273,
											"end": 22291,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 22273,
											"end": 22291,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 22273,
											"end": 22291,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 22266,
											"end": 22303,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 22320,
											"end": 22338,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 22320,
											"end": 22338,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8384,
											"end": 8418,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "54"
										},
										{
											"begin": 22014,
											"end": 22344,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8384,
											"end": 8418,
											"modifierDepth": 2,
											"name": "tag",
											"source": 14,
											"value": "595"
										},
										{
											"begin": 8384,
											"end": 8418,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8443,
											"end": 8452,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 8443,
											"end": 8452,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 8437,
											"end": 8453,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8437,
											"end": 8453,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8437,
											"end": 8453,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8437,
											"end": 8453,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8437,
											"end": 8442,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "D"
										},
										{
											"begin": 8437,
											"end": 8453,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8437,
											"end": 8453,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8437,
											"end": 8453,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 8437,
											"end": 8453,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8437,
											"end": 8453,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 8437,
											"end": 8465,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 8437,
											"end": 8465,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8437,
											"end": 8465,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 8437,
											"end": 8465,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 8437,
											"end": 8465,
											"modifierDepth": 2,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 8436,
											"end": 8465,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 8428,
											"end": 8492,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "598"
										},
										{
											"begin": 8428,
											"end": 8492,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8428,
											"end": 8492,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 8428,
											"end": 8492,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8428,
											"end": 8492,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8428,
											"end": 8492,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 22551,
											"end": 22553,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8428,
											"end": 8492,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 8428,
											"end": 8492,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8428,
											"end": 8492,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 22533,
											"end": 22554,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 22590,
											"end": 22592,
											"name": "PUSH",
											"source": 15,
											"value": "16"
										},
										{
											"begin": 22570,
											"end": 22588,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 22570,
											"end": 22588,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 22570,
											"end": 22588,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 22563,
											"end": 22593,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14D85B1948185B1C9958591E48199A5B985B1A5E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "52"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22609,
											"end": 22627,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 22609,
											"end": 22627,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 22609,
											"end": 22627,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 22602,
											"end": 22654,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 22671,
											"end": 22689,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 22671,
											"end": 22689,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8428,
											"end": 8492,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "54"
										},
										{
											"begin": 22349,
											"end": 22695,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8428,
											"end": 8492,
											"modifierDepth": 2,
											"name": "tag",
											"source": 14,
											"value": "598"
										},
										{
											"begin": 8428,
											"end": 8492,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8502,
											"end": 8521,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8502,
											"end": 8521,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 8535,
											"end": 8548,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8535,
											"end": 8569,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 8535,
											"end": 8569,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8535,
											"end": 8569,
											"modifierDepth": 2,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 8535,
											"end": 8569,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 8535,
											"end": 8569,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "604"
										},
										{
											"begin": 8535,
											"end": 8569,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8535,
											"end": 8569,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "604"
										},
										{
											"begin": 8535,
											"end": 8569,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "255"
										},
										{
											"begin": 8535,
											"end": 8569,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8535,
											"end": 8569,
											"modifierDepth": 2,
											"name": "tag",
											"source": 14,
											"value": "604"
										},
										{
											"begin": 8535,
											"end": 8569,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8535,
											"end": 8569,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 8531,
											"end": 9743,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "605"
										},
										{
											"begin": 8531,
											"end": 9743,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8658,
											"end": 8659,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8646,
											"end": 8655,
											"modifierDepth": 2,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 8646,
											"end": 8659,
											"modifierDepth": 2,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 8638,
											"end": 8687,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "606"
										},
										{
											"begin": 8638,
											"end": 8687,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8638,
											"end": 8687,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 8638,
											"end": 8687,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8638,
											"end": 8687,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8638,
											"end": 8687,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 22902,
											"end": 22904,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8638,
											"end": 8687,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 8638,
											"end": 8687,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8638,
											"end": 8687,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 22884,
											"end": 22905,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 22941,
											"end": 22943,
											"name": "PUSH",
											"source": 15,
											"value": "17"
										},
										{
											"begin": 22921,
											"end": 22939,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 22921,
											"end": 22939,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 22921,
											"end": 22939,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 22914,
											"end": 22944,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 22980,
											"end": 23005,
											"name": "PUSH",
											"source": 15,
											"value": "53656E6420612076616C696420424E4220616D6F756E74000000000000000000"
										},
										{
											"begin": 22960,
											"end": 22978,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 22960,
											"end": 22978,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 22960,
											"end": 22978,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 22953,
											"end": 23006,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 23023,
											"end": 23041,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 23023,
											"end": 23041,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8638,
											"end": 8687,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "54"
										},
										{
											"begin": 22700,
											"end": 23047,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8638,
											"end": 8687,
											"modifierDepth": 2,
											"name": "tag",
											"source": 14,
											"value": "606"
										},
										{
											"begin": 8638,
											"end": 8687,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8715,
											"end": 8761,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "609"
										},
										{
											"begin": 8736,
											"end": 8749,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8751,
											"end": 8760,
											"modifierDepth": 2,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 8715,
											"end": 8735,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 8715,
											"end": 8761,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8715,
											"end": 8761,
											"modifierDepth": 2,
											"name": "tag",
											"source": 14,
											"value": "609"
										},
										{
											"begin": 8715,
											"end": 8761,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8792,
											"end": 8802,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 14
										},
										{
											"begin": 8775,
											"end": 8803,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8775,
											"end": 8803,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8775,
											"end": 8803,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8775,
											"end": 8803,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8775,
											"end": 8791,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 8775,
											"end": 8803,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8775,
											"end": 8803,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8775,
											"end": 8803,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 8775,
											"end": 8803,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8775,
											"end": 8803,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 8701,
											"end": 8761,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8701,
											"end": 8761,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8822,
											"end": 8831,
											"modifierDepth": 2,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 8822,
											"end": 8831,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8775,
											"end": 8803,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8804,
											"end": 8817,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 8775,
											"end": 8818,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 8775,
											"end": 8818,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8775,
											"end": 8818,
											"modifierDepth": 2,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 8775,
											"end": 8818,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 8775,
											"end": 8818,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "611"
										},
										{
											"begin": 8775,
											"end": 8818,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8775,
											"end": 8818,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "611"
										},
										{
											"begin": 8775,
											"end": 8818,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "255"
										},
										{
											"begin": 8775,
											"end": 8818,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8775,
											"end": 8818,
											"modifierDepth": 2,
											"name": "tag",
											"source": 14,
											"value": "611"
										},
										{
											"begin": 8775,
											"end": 8818,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8775,
											"end": 8818,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 8775,
											"end": 8818,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8775,
											"end": 8818,
											"modifierDepth": 2,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 8775,
											"end": 8818,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 8775,
											"end": 8818,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "613"
										},
										{
											"begin": 8775,
											"end": 8818,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8775,
											"end": 8818,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "613"
										},
										{
											"begin": 8775,
											"end": 8818,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "255"
										},
										{
											"begin": 8775,
											"end": 8818,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8775,
											"end": 8818,
											"modifierDepth": 2,
											"name": "tag",
											"source": 14,
											"value": "613"
										},
										{
											"begin": 8775,
											"end": 8818,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8775,
											"end": 8818,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8775,
											"end": 8818,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8775,
											"end": 8818,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8775,
											"end": 8818,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8775,
											"end": 8818,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8775,
											"end": 8818,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8775,
											"end": 8818,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8775,
											"end": 8818,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8775,
											"end": 8818,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8775,
											"end": 8818,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8775,
											"end": 8818,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 8775,
											"end": 8818,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8775,
											"end": 8831,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8775,
											"end": 8831,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8775,
											"end": 8831,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 8775,
											"end": 8831,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "614"
										},
										{
											"begin": 8775,
											"end": 8831,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8775,
											"end": 8831,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8775,
											"end": 8831,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "615"
										},
										{
											"begin": 8775,
											"end": 8831,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8775,
											"end": 8831,
											"modifierDepth": 2,
											"name": "tag",
											"source": 14,
											"value": "614"
										},
										{
											"begin": 8775,
											"end": 8831,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8775,
											"end": 8831,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8775,
											"end": 8831,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8775,
											"end": 8831,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8531,
											"end": 9743,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "649"
										},
										{
											"begin": 8531,
											"end": 9743,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8531,
											"end": 9743,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8531,
											"end": 9743,
											"modifierDepth": 2,
											"name": "tag",
											"source": 14,
											"value": "605"
										},
										{
											"begin": 8531,
											"end": 9743,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8882,
											"end": 8900,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 8865,
											"end": 8878,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8865,
											"end": 8900,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 8865,
											"end": 8900,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8865,
											"end": 8900,
											"modifierDepth": 2,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 8865,
											"end": 8900,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 8865,
											"end": 8900,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "620"
										},
										{
											"begin": 8865,
											"end": 8900,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8865,
											"end": 8900,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "620"
										},
										{
											"begin": 8865,
											"end": 8900,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "255"
										},
										{
											"begin": 8865,
											"end": 8900,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8865,
											"end": 8900,
											"modifierDepth": 2,
											"name": "tag",
											"source": 14,
											"value": "620"
										},
										{
											"begin": 8865,
											"end": 8900,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8865,
											"end": 8900,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 8865,
											"end": 8951,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 8865,
											"end": 8951,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "621"
										},
										{
											"begin": 8865,
											"end": 8951,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8933,
											"end": 8951,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 8916,
											"end": 8929,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8916,
											"end": 8951,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 8916,
											"end": 8951,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8916,
											"end": 8951,
											"modifierDepth": 2,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 8916,
											"end": 8951,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 8916,
											"end": 8951,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "625"
										},
										{
											"begin": 8916,
											"end": 8951,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8916,
											"end": 8951,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "625"
										},
										{
											"begin": 8916,
											"end": 8951,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "255"
										},
										{
											"begin": 8916,
											"end": 8951,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8916,
											"end": 8951,
											"modifierDepth": 2,
											"name": "tag",
											"source": 14,
											"value": "625"
										},
										{
											"begin": 8916,
											"end": 8951,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8916,
											"end": 8951,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 8865,
											"end": 8951,
											"modifierDepth": 2,
											"name": "tag",
											"source": 14,
											"value": "621"
										},
										{
											"begin": 8865,
											"end": 8951,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8848,
											"end": 9743,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 8848,
											"end": 9743,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "273"
										},
										{
											"begin": 8848,
											"end": 9743,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 9042,
											"end": 9043,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9026,
											"end": 9039,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9026,
											"end": 9043,
											"modifierDepth": 2,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 9018,
											"end": 9079,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "627"
										},
										{
											"begin": 9018,
											"end": 9079,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 9018,
											"end": 9079,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 9018,
											"end": 9079,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9018,
											"end": 9079,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9018,
											"end": 9079,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 23384,
											"end": 23386,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 9018,
											"end": 9079,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 9018,
											"end": 9079,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9018,
											"end": 9079,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 23366,
											"end": 23387,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 23423,
											"end": 23425,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 23403,
											"end": 23421,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 23403,
											"end": 23421,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 23403,
											"end": 23421,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 23396,
											"end": 23426,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 23462,
											"end": 23495,
											"name": "PUSH",
											"source": 15,
											"value": "456E74657220612076616C696420737461626C65636F696E20616D6F756E7400"
										},
										{
											"begin": 23442,
											"end": 23460,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 23442,
											"end": 23460,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 23442,
											"end": 23460,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 23435,
											"end": 23496,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 23513,
											"end": 23531,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 23513,
											"end": 23531,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9018,
											"end": 9079,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "54"
										},
										{
											"begin": 23182,
											"end": 23537,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9018,
											"end": 9079,
											"modifierDepth": 2,
											"name": "tag",
											"source": 14,
											"value": "627"
										},
										{
											"begin": 9018,
											"end": 9079,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9093,
											"end": 9110,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9130,
											"end": 9148,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 9113,
											"end": 9126,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9113,
											"end": 9148,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 9113,
											"end": 9148,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9113,
											"end": 9148,
											"modifierDepth": 2,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 9113,
											"end": 9148,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 9113,
											"end": 9148,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "633"
										},
										{
											"begin": 9113,
											"end": 9148,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 9113,
											"end": 9148,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "633"
										},
										{
											"begin": 9113,
											"end": 9148,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "255"
										},
										{
											"begin": 9113,
											"end": 9148,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9113,
											"end": 9148,
											"modifierDepth": 2,
											"name": "tag",
											"source": 14,
											"value": "633"
										},
										{
											"begin": 9113,
											"end": 9148,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9113,
											"end": 9148,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 9113,
											"end": 9210,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "634"
										},
										{
											"begin": 9113,
											"end": 9210,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 9205,
											"end": 9209,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "C"
										},
										{
											"begin": 9205,
											"end": 9209,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9205,
											"end": 9209,
											"modifierDepth": 2,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 9113,
											"end": 9210,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "635"
										},
										{
											"begin": 9113,
											"end": 9210,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9113,
											"end": 9210,
											"modifierDepth": 2,
											"name": "tag",
											"source": 14,
											"value": "634"
										},
										{
											"begin": 9113,
											"end": 9210,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9174,
											"end": 9178,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "B"
										},
										{
											"begin": 9174,
											"end": 9178,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9174,
											"end": 9178,
											"modifierDepth": 2,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 9113,
											"end": 9210,
											"modifierDepth": 2,
											"name": "tag",
											"source": 14,
											"value": "635"
										},
										{
											"begin": 9113,
											"end": 9210,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9249,
											"end": 9392,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 9249,
											"end": 9392,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9249,
											"end": 9392,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9249,
											"end": 9392,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9294,
											"end": 9304,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 14
										},
										{
											"begin": 9249,
											"end": 9392,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 9249,
											"end": 9392,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9249,
											"end": 9392,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 21138,
											"end": 21189,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9334,
											"end": 9338,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 21205,
											"end": 21223,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 21205,
											"end": 21223,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 21205,
											"end": 21223,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 21198,
											"end": 21258,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 21274,
											"end": 21292,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 21274,
											"end": 21292,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 21274,
											"end": 21292,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 21267,
											"end": 21301,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 21267,
											"end": 21301,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 21267,
											"end": 21301,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9093,
											"end": 9210,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9093,
											"end": 9210,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9249,
											"end": 9272,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9249,
											"end": 9272,
											"modifierDepth": 2,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 9249,
											"end": 9272,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9249,
											"end": 9272,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "23B872DD"
										},
										{
											"begin": 9249,
											"end": 9272,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 21111,
											"end": 21129,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 21111,
											"end": 21129,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9249,
											"end": 9392,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9249,
											"end": 9392,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 9249,
											"end": 9392,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 9249,
											"end": 9392,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 9249,
											"end": 9392,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 9249,
											"end": 9392,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 9249,
											"end": 9392,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9249,
											"end": 9392,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9249,
											"end": 9392,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 9249,
											"end": 9392,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 9249,
											"end": 9392,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 14
										},
										{
											"begin": 9249,
											"end": 9392,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 9249,
											"end": 9392,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 9249,
											"end": 9392,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 9249,
											"end": 9392,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "638"
										},
										{
											"begin": 9249,
											"end": 9392,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 9249,
											"end": 9392,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 9249,
											"end": 9392,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9249,
											"end": 9392,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 9249,
											"end": 9392,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 9249,
											"end": 9392,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 9249,
											"end": 9392,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9249,
											"end": 9392,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 9249,
											"end": 9392,
											"modifierDepth": 2,
											"name": "tag",
											"source": 14,
											"value": "638"
										},
										{
											"begin": 9249,
											"end": 9392,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9249,
											"end": 9392,
											"modifierDepth": 2,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9249,
											"end": 9392,
											"modifierDepth": 2,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9249,
											"end": 9392,
											"modifierDepth": 2,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9249,
											"end": 9392,
											"modifierDepth": 2,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9249,
											"end": 9392,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 9249,
											"end": 9392,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 9249,
											"end": 9392,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 9249,
											"end": 9392,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 9249,
											"end": 9392,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 9249,
											"end": 9392,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 9249,
											"end": 9392,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9249,
											"end": 9392,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9249,
											"end": 9392,
											"modifierDepth": 2,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 9249,
											"end": 9392,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9249,
											"end": 9392,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9249,
											"end": 9392,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 9249,
											"end": 9392,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 9249,
											"end": 9392,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9249,
											"end": 9392,
											"modifierDepth": 2,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9249,
											"end": 9392,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9249,
											"end": 9392,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9249,
											"end": 9392,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9249,
											"end": 9392,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "639"
										},
										{
											"begin": 9249,
											"end": 9392,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9249,
											"end": 9392,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9249,
											"end": 9392,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "509"
										},
										{
											"begin": 9249,
											"end": 9392,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9249,
											"end": 9392,
											"modifierDepth": 2,
											"name": "tag",
											"source": 14,
											"value": "639"
										},
										{
											"begin": 9249,
											"end": 9392,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9224,
											"end": 9452,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "640"
										},
										{
											"begin": 9224,
											"end": 9452,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 9224,
											"end": 9452,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 9224,
											"end": 9452,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9224,
											"end": 9452,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9224,
											"end": 9452,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 23744,
											"end": 23746,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 9224,
											"end": 9452,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 9224,
											"end": 9452,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9224,
											"end": 9452,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 23726,
											"end": 23747,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 23783,
											"end": 23785,
											"name": "PUSH",
											"source": 15,
											"value": "1A"
										},
										{
											"begin": 23763,
											"end": 23781,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 23763,
											"end": 23781,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 23763,
											"end": 23781,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 23756,
											"end": 23786,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 23822,
											"end": 23850,
											"name": "PUSH",
											"source": 15,
											"value": "537461626C65636F696E207472616E73666572206661696C6564000000000000"
										},
										{
											"begin": 23802,
											"end": 23820,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 23802,
											"end": 23820,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 23802,
											"end": 23820,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 23795,
											"end": 23851,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 23868,
											"end": 23886,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 23868,
											"end": 23886,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9224,
											"end": 9452,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "54"
										},
										{
											"begin": 23542,
											"end": 23892,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9224,
											"end": 9452,
											"modifierDepth": 2,
											"name": "tag",
											"source": 14,
											"value": "640"
										},
										{
											"begin": 9224,
											"end": 9452,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9541,
											"end": 9591,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "643"
										},
										{
											"begin": 9562,
											"end": 9575,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9577,
											"end": 9590,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9541,
											"end": 9561,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 9541,
											"end": 9591,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9541,
											"end": 9591,
											"modifierDepth": 2,
											"name": "tag",
											"source": 14,
											"value": "643"
										},
										{
											"begin": 9541,
											"end": 9591,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9622,
											"end": 9632,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 14
										},
										{
											"begin": 9605,
											"end": 9633,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9605,
											"end": 9633,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9605,
											"end": 9633,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9605,
											"end": 9633,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9605,
											"end": 9621,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 9605,
											"end": 9633,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9605,
											"end": 9633,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9605,
											"end": 9633,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 9605,
											"end": 9633,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9605,
											"end": 9633,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 9527,
											"end": 9591,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9527,
											"end": 9591,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9652,
											"end": 9665,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9652,
											"end": 9665,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9605,
											"end": 9633,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9634,
											"end": 9647,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 9605,
											"end": 9648,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 9605,
											"end": 9648,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9605,
											"end": 9648,
											"modifierDepth": 2,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 9605,
											"end": 9648,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 9605,
											"end": 9648,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "645"
										},
										{
											"begin": 9605,
											"end": 9648,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 9605,
											"end": 9648,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "645"
										},
										{
											"begin": 9605,
											"end": 9648,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "255"
										},
										{
											"begin": 9605,
											"end": 9648,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9605,
											"end": 9648,
											"modifierDepth": 2,
											"name": "tag",
											"source": 14,
											"value": "645"
										},
										{
											"begin": 9605,
											"end": 9648,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9605,
											"end": 9648,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 9605,
											"end": 9648,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9605,
											"end": 9648,
											"modifierDepth": 2,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 9605,
											"end": 9648,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 9605,
											"end": 9648,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "647"
										},
										{
											"begin": 9605,
											"end": 9648,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 9605,
											"end": 9648,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "647"
										},
										{
											"begin": 9605,
											"end": 9648,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "255"
										},
										{
											"begin": 9605,
											"end": 9648,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9605,
											"end": 9648,
											"modifierDepth": 2,
											"name": "tag",
											"source": 14,
											"value": "647"
										},
										{
											"begin": 9605,
											"end": 9648,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9605,
											"end": 9648,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9605,
											"end": 9648,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9605,
											"end": 9648,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9605,
											"end": 9648,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9605,
											"end": 9648,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9605,
											"end": 9648,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9605,
											"end": 9648,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9605,
											"end": 9648,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9605,
											"end": 9648,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9605,
											"end": 9648,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9605,
											"end": 9648,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 9605,
											"end": 9648,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9605,
											"end": 9665,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9605,
											"end": 9665,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9605,
											"end": 9665,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 9605,
											"end": 9665,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "648"
										},
										{
											"begin": 9605,
											"end": 9665,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9605,
											"end": 9665,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9605,
											"end": 9665,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "615"
										},
										{
											"begin": 9605,
											"end": 9665,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9605,
											"end": 9665,
											"modifierDepth": 2,
											"name": "tag",
											"source": 14,
											"value": "648"
										},
										{
											"begin": 9605,
											"end": 9665,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9605,
											"end": 9665,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9605,
											"end": 9665,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9605,
											"end": 9665,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8848,
											"end": 9743,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "649"
										},
										{
											"begin": 8848,
											"end": 9743,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8848,
											"end": 9743,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8848,
											"end": 9743,
											"modifierDepth": 2,
											"name": "tag",
											"source": 14,
											"value": "649"
										},
										{
											"begin": 8848,
											"end": 9743,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9774,
											"end": 9775,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9760,
											"end": 9771,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9760,
											"end": 9775,
											"modifierDepth": 2,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 9752,
											"end": 9800,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "651"
										},
										{
											"begin": 9752,
											"end": 9800,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 9752,
											"end": 9800,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 9752,
											"end": 9800,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9752,
											"end": 9800,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9752,
											"end": 9800,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 24099,
											"end": 24101,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 9752,
											"end": 9800,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 9752,
											"end": 9800,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9752,
											"end": 9800,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 24081,
											"end": 24102,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 24138,
											"end": 24140,
											"name": "PUSH",
											"source": 15,
											"value": "14"
										},
										{
											"begin": 24118,
											"end": 24136,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 24118,
											"end": 24136,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 24118,
											"end": 24136,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 24111,
											"end": 24141,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "125B9D985B1A59081D1BDAD95B88185B5BDD5B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24157,
											"end": 24175,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 24157,
											"end": 24175,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 24157,
											"end": 24175,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 24150,
											"end": 24200,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 24217,
											"end": 24235,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 24217,
											"end": 24235,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9752,
											"end": 9800,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "54"
										},
										{
											"begin": 23897,
											"end": 24241,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9752,
											"end": 9800,
											"modifierDepth": 2,
											"name": "tag",
											"source": 14,
											"value": "651"
										},
										{
											"begin": 9752,
											"end": 9800,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9928,
											"end": 9937,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 9928,
											"end": 9937,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 9870,
											"end": 9892,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9922,
											"end": 9938,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9922,
											"end": 9938,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9922,
											"end": 9938,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9922,
											"end": 9927,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "D"
										},
										{
											"begin": 9922,
											"end": 9938,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9922,
											"end": 9938,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9922,
											"end": 9938,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 9922,
											"end": 9938,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9922,
											"end": 9938,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 9922,
											"end": 9952,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 9922,
											"end": 9952,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9922,
											"end": 9952,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1216,
											"end": 1220,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1216,
											"end": 1220,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9896,
											"end": 9952,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "654"
										},
										{
											"begin": 9896,
											"end": 9952,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9896,
											"end": 9907,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9896,
											"end": 9952,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "260"
										},
										{
											"begin": 9896,
											"end": 9952,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9896,
											"end": 9952,
											"modifierDepth": 2,
											"name": "tag",
											"source": 14,
											"value": "654"
										},
										{
											"begin": 9896,
											"end": 9952,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9895,
											"end": 9968,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "655"
										},
										{
											"begin": 9895,
											"end": 9968,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9895,
											"end": 9968,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9895,
											"end": 9968,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "262"
										},
										{
											"begin": 9895,
											"end": 9968,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9895,
											"end": 9968,
											"modifierDepth": 2,
											"name": "tag",
											"source": 14,
											"value": "655"
										},
										{
											"begin": 9895,
											"end": 9968,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9870,
											"end": 9968,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9870,
											"end": 9968,
											"modifierDepth": 2,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10039,
											"end": 10051,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 10039,
											"end": 10051,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 10021,
											"end": 10035,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9999,
											"end": 10018,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 9999,
											"end": 10018,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 9999,
											"end": 10035,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "656"
										},
										{
											"begin": 9999,
											"end": 10035,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9999,
											"end": 10035,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9999,
											"end": 10035,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "615"
										},
										{
											"begin": 9999,
											"end": 10035,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9999,
											"end": 10035,
											"modifierDepth": 2,
											"name": "tag",
											"source": 14,
											"value": "656"
										},
										{
											"begin": 9999,
											"end": 10035,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9999,
											"end": 10051,
											"modifierDepth": 2,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 9999,
											"end": 10051,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 9978,
											"end": 10093,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "657"
										},
										{
											"begin": 9978,
											"end": 10093,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 9978,
											"end": 10093,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 9978,
											"end": 10093,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9978,
											"end": 10093,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9978,
											"end": 10093,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 24448,
											"end": 24450,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 9978,
											"end": 10093,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 9978,
											"end": 10093,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9978,
											"end": 10093,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 24430,
											"end": 24451,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 24487,
											"end": 24489,
											"name": "PUSH",
											"source": 15,
											"value": "10"
										},
										{
											"begin": 24467,
											"end": 24485,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 24467,
											"end": 24485,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 24467,
											"end": 24485,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 24460,
											"end": 24490,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "12185C990818D85C081C995858DA1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24506,
											"end": 24524,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 24506,
											"end": 24524,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 24506,
											"end": 24524,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 24499,
											"end": 24545,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 24562,
											"end": 24580,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 24562,
											"end": 24580,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9978,
											"end": 10093,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "54"
										},
										{
											"begin": 24246,
											"end": 24586,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9978,
											"end": 10093,
											"modifierDepth": 2,
											"name": "tag",
											"source": 14,
											"value": "657"
										},
										{
											"begin": 9978,
											"end": 10093,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10123,
											"end": 10133,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 14
										},
										{
											"begin": 10104,
											"end": 10134,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10104,
											"end": 10134,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10104,
											"end": 10134,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10104,
											"end": 10134,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10104,
											"end": 10122,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "E"
										},
										{
											"begin": 10104,
											"end": 10134,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10104,
											"end": 10134,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10104,
											"end": 10134,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 10104,
											"end": 10134,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10104,
											"end": 10134,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 10104,
											"end": 10152,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 10104,
											"end": 10152,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 10138,
											"end": 10152,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10138,
											"end": 10152,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10104,
											"end": 10134,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10104,
											"end": 10152,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "660"
										},
										{
											"begin": 10104,
											"end": 10152,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10138,
											"end": 10152,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 10138,
											"end": 10152,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10104,
											"end": 10152,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "615"
										},
										{
											"begin": 10104,
											"end": 10152,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10104,
											"end": 10152,
											"modifierDepth": 2,
											"name": "tag",
											"source": 14,
											"value": "660"
										},
										{
											"begin": 10104,
											"end": 10152,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10104,
											"end": 10152,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10104,
											"end": 10152,
											"modifierDepth": 2,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10104,
											"end": 10152,
											"modifierDepth": 2,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10104,
											"end": 10152,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10104,
											"end": 10152,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10104,
											"end": 10152,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 10104,
											"end": 10152,
											"modifierDepth": 2,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10185,
											"end": 10199,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 10162,
											"end": 10181,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 10162,
											"end": 10181,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10162,
											"end": 10199,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10162,
											"end": 10199,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10162,
											"end": 10199,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 10162,
											"end": 10199,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "661"
										},
										{
											"begin": 10162,
											"end": 10199,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10162,
											"end": 10199,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10162,
											"end": 10199,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "615"
										},
										{
											"begin": 10162,
											"end": 10199,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10162,
											"end": 10199,
											"modifierDepth": 2,
											"name": "tag",
											"source": 14,
											"value": "661"
										},
										{
											"begin": 10162,
											"end": 10199,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10162,
											"end": 10199,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10162,
											"end": 10199,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10162,
											"end": 10199,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10215,
											"end": 10224,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 10215,
											"end": 10224,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 10209,
											"end": 10225,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10209,
											"end": 10225,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10209,
											"end": 10225,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10209,
											"end": 10225,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10209,
											"end": 10214,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "D"
										},
										{
											"begin": 10209,
											"end": 10225,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10209,
											"end": 10225,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10209,
											"end": 10225,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 10209,
											"end": 10225,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10209,
											"end": 10225,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 10209,
											"end": 10236,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 10209,
											"end": 10236,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10209,
											"end": 10251,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 10209,
											"end": 10251,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 10240,
											"end": 10251,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 10240,
											"end": 10251,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10209,
											"end": 10225,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10209,
											"end": 10251,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "662"
										},
										{
											"begin": 10209,
											"end": 10251,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10240,
											"end": 10251,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 10240,
											"end": 10251,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10209,
											"end": 10251,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "615"
										},
										{
											"begin": 10209,
											"end": 10251,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10209,
											"end": 10251,
											"modifierDepth": 2,
											"name": "tag",
											"source": 14,
											"value": "662"
										},
										{
											"begin": 10209,
											"end": 10251,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10209,
											"end": 10251,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10209,
											"end": 10251,
											"modifierDepth": 2,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10209,
											"end": 10251,
											"modifierDepth": 2,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10209,
											"end": 10251,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10209,
											"end": 10251,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10209,
											"end": 10251,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 10209,
											"end": 10251,
											"modifierDepth": 2,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10280,
											"end": 10291,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10261,
											"end": 10276,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 10261,
											"end": 10276,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10261,
											"end": 10291,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10261,
											"end": 10291,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10261,
											"end": 10291,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 10261,
											"end": 10291,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "663"
										},
										{
											"begin": 10261,
											"end": 10291,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10261,
											"end": 10291,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10261,
											"end": 10291,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "615"
										},
										{
											"begin": 10261,
											"end": 10291,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10261,
											"end": 10291,
											"modifierDepth": 2,
											"name": "tag",
											"source": 14,
											"value": "663"
										},
										{
											"begin": 10261,
											"end": 10291,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10261,
											"end": 10291,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10261,
											"end": 10291,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10261,
											"end": 10291,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10329,
											"end": 10339,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 14
										},
										{
											"begin": 10306,
											"end": 10340,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10306,
											"end": 10340,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10306,
											"end": 10340,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10306,
											"end": 10340,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10306,
											"end": 10328,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "F"
										},
										{
											"begin": 10306,
											"end": 10340,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10306,
											"end": 10340,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10306,
											"end": 10340,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 10306,
											"end": 10340,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10306,
											"end": 10340,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 10306,
											"end": 10340,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 10306,
											"end": 10345,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10306,
											"end": 10345,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 10302,
											"end": 10398,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "664"
										},
										{
											"begin": 10302,
											"end": 10398,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10361,
											"end": 10370,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "A"
										},
										{
											"begin": 10361,
											"end": 10387,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 10361,
											"end": 10387,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 10361,
											"end": 10387,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 10361,
											"end": 10387,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10361,
											"end": 10387,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10361,
											"end": 10387,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10361,
											"end": 10387,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 10361,
											"end": 10387,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10361,
											"end": 10387,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10361,
											"end": 10387,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10361,
											"end": 10387,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10361,
											"end": 10387,
											"name": "PUSH",
											"source": 14,
											"value": "C65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8"
										},
										{
											"begin": 10361,
											"end": 10387,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10361,
											"end": 10387,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 10361,
											"end": 10387,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10361,
											"end": 10387,
											"modifierDepth": 2,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 10376,
											"end": 10386,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 14
										},
										{
											"begin": 10361,
											"end": 10387,
											"modifierDepth": 2,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 10361,
											"end": 10387,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10361,
											"end": 10387,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 10302,
											"end": 10398,
											"modifierDepth": 2,
											"name": "tag",
											"source": 14,
											"value": "664"
										},
										{
											"begin": 10302,
											"end": 10398,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10430,
											"end": 10440,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 14
										},
										{
											"begin": 10407,
											"end": 10441,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10407,
											"end": 10441,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10407,
											"end": 10441,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10407,
											"end": 10441,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10407,
											"end": 10429,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "F"
										},
										{
											"begin": 10407,
											"end": 10441,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10407,
											"end": 10441,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10407,
											"end": 10441,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 10407,
											"end": 10441,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10407,
											"end": 10441,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 10407,
											"end": 10456,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 10407,
											"end": 10456,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 10445,
											"end": 10456,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 10445,
											"end": 10456,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10407,
											"end": 10441,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10407,
											"end": 10456,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "666"
										},
										{
											"begin": 10407,
											"end": 10456,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10445,
											"end": 10456,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 10445,
											"end": 10456,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10407,
											"end": 10456,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "615"
										},
										{
											"begin": 10407,
											"end": 10456,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10407,
											"end": 10456,
											"modifierDepth": 2,
											"name": "tag",
											"source": 14,
											"value": "666"
										},
										{
											"begin": 10407,
											"end": 10456,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10407,
											"end": 10456,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10407,
											"end": 10456,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10407,
											"end": 10456,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10491,
											"end": 10501,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 14
										},
										{
											"begin": 10466,
											"end": 10502,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10466,
											"end": 10502,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10466,
											"end": 10502,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10466,
											"end": 10502,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10466,
											"end": 10490,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 10466,
											"end": 10502,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10466,
											"end": 10502,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10466,
											"end": 10502,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 10466,
											"end": 10502,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10466,
											"end": 10502,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 10466,
											"end": 10518,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 10466,
											"end": 10518,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 10505,
											"end": 10518,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 10505,
											"end": 10518,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10466,
											"end": 10502,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10466,
											"end": 10518,
											"modifierDepth": 2,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 10466,
											"end": 10518,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 10505,
											"end": 10518,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10466,
											"end": 10518,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 10466,
											"end": 10518,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10466,
											"end": 10518,
											"modifierDepth": 2,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 10466,
											"end": 10518,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 10466,
											"end": 10518,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "668"
										},
										{
											"begin": 10466,
											"end": 10518,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10466,
											"end": 10518,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "668"
										},
										{
											"begin": 10466,
											"end": 10518,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "255"
										},
										{
											"begin": 10466,
											"end": 10518,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10466,
											"end": 10518,
											"modifierDepth": 2,
											"name": "tag",
											"source": 14,
											"value": "668"
										},
										{
											"begin": 10466,
											"end": 10518,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10466,
											"end": 10518,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 10466,
											"end": 10518,
											"modifierDepth": 2,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 10466,
											"end": 10518,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10466,
											"end": 10518,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10587,
											"end": 10596,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 10587,
											"end": 10596,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 10635,
											"end": 10651,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10635,
											"end": 10651,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10635,
											"end": 10651,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10635,
											"end": 10651,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10635,
											"end": 10640,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "D"
										},
										{
											"begin": 10635,
											"end": 10651,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10635,
											"end": 10651,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10635,
											"end": 10651,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 10635,
											"end": 10651,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10635,
											"end": 10651,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10635,
											"end": 10651,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10635,
											"end": 10651,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 10635,
											"end": 10665,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 10635,
											"end": 10665,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10635,
											"end": 10665,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 10534,
											"end": 10729,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10534,
											"end": 10729,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 10563,
											"end": 10573,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 14
										},
										{
											"begin": 10563,
											"end": 10573,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10534,
											"end": 10729,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "DBCEF474A632721725D49E3F35D9DEFE0257100B01D1E4B4B135B14D6FE296E8"
										},
										{
											"begin": 10534,
											"end": 10729,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10534,
											"end": 10729,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "669"
										},
										{
											"begin": 10534,
											"end": 10729,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10610,
											"end": 10621,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 10610,
											"end": 10621,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10679,
											"end": 10692,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 10679,
											"end": 10692,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10706,
											"end": 10719,
											"name": "DUP12",
											"source": 14
										},
										{
											"begin": 10706,
											"end": 10719,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10534,
											"end": 10729,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "670"
										},
										{
											"begin": 10534,
											"end": 10729,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10534,
											"end": 10729,
											"modifierDepth": 2,
											"name": "tag",
											"source": 14,
											"value": "669"
										},
										{
											"begin": 10534,
											"end": 10729,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10534,
											"end": 10729,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 10534,
											"end": 10729,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 10534,
											"end": 10729,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 10534,
											"end": 10729,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10534,
											"end": 10729,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 10534,
											"end": 10729,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10534,
											"end": 10729,
											"modifierDepth": 2,
											"name": "LOG3",
											"source": 14
										},
										{
											"begin": 8307,
											"end": 10736,
											"modifierDepth": 2,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8307,
											"end": 10736,
											"modifierDepth": 2,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8159,
											"end": 10736,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8159,
											"end": 10736,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8159,
											"end": 10736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "674"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 1,
											"value": "674"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3489,
											"end": 3511,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "676"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3534,
											"end": 3565,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3565,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3562,
											"end": 3563,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3534,
											"end": 3565,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1788,
											"end": 1839,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1761,
											"end": 1779,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 1761,
											"end": 1779,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1642,
											"end": 1845,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "676"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "678"
										},
										{
											"begin": 3604,
											"end": 3612,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3585,
											"end": 3603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 3585,
											"end": 3613,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "678"
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2454,
											"end": 3229,
											"name": "tag",
											"source": 14,
											"value": "244"
										},
										{
											"begin": 2454,
											"end": 3229,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "PUSH",
											"source": 2,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4188,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "682"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4746,
											"end": 4760,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "tag",
											"source": 2,
											"value": "682"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4787,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4790,
											"end": 4801,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4805,
											"end": 4806,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "683"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4818,
											"end": 4822,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 4810,
											"end": 4840,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "tag",
											"source": 2,
											"value": "683"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4856,
											"end": 4868,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4855,
											"end": 4868,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "684"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4873,
											"end": 4885,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4872,
											"end": 4885,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "tag",
											"source": 2,
											"value": "684"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "685"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F92EE8A9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "tag",
											"source": 2,
											"value": "685"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4968,
											"end": 4969,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "686"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "tag",
											"source": 2,
											"value": "686"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2735,
											"end": 2761,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "688"
										},
										{
											"begin": 2750,
											"end": 2760,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 14
										},
										{
											"begin": 2735,
											"end": 2749,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "689"
										},
										{
											"begin": 2735,
											"end": 2761,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2735,
											"end": 2761,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "688"
										},
										{
											"begin": 2735,
											"end": 2761,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2771,
											"end": 2795,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "690"
										},
										{
											"begin": 2771,
											"end": 2793,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "691"
										},
										{
											"begin": 2771,
											"end": 2795,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2771,
											"end": 2795,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "690"
										},
										{
											"begin": 2771,
											"end": 2795,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2814,
											"end": 2820,
											"modifierDepth": 1,
											"name": "DUP13",
											"source": 14
										},
										{
											"begin": 2806,
											"end": 2811,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 2806,
											"end": 2811,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2806,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 2806,
											"end": 2820,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 2806,
											"end": 2820,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2806,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2806,
											"end": 2820,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2806,
											"end": 2820,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 2806,
											"end": 2820,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 2806,
											"end": 2820,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2806,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2806,
											"end": 2820,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2806,
											"end": 2820,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2806,
											"end": 2820,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 2806,
											"end": 2820,
											"modifierDepth": 1,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 2806,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2806,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 2806,
											"end": 2820,
											"modifierDepth": 1,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2845,
											"end": 2858,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 2830,
											"end": 2842,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 2830,
											"end": 2858,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2830,
											"end": 2858,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2830,
											"end": 2858,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 2830,
											"end": 2858,
											"modifierDepth": 1,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2883,
											"end": 2896,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 2868,
											"end": 2880,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 2868,
											"end": 2896,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2868,
											"end": 2896,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2868,
											"end": 2896,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 2868,
											"end": 2896,
											"modifierDepth": 1,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2913,
											"end": 2918,
											"modifierDepth": 1,
											"name": "DUP12",
											"source": 14
										},
										{
											"begin": 2906,
											"end": 2910,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "B"
										},
										{
											"begin": 2906,
											"end": 2910,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2906,
											"end": 2918,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 2906,
											"end": 2918,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 2906,
											"end": 2918,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2906,
											"end": 2918,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2906,
											"end": 2918,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2906,
											"end": 2918,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 2906,
											"end": 2918,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 2906,
											"end": 2918,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2906,
											"end": 2918,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2906,
											"end": 2918,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2906,
											"end": 2918,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2906,
											"end": 2918,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 2906,
											"end": 2918,
											"modifierDepth": 1,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 2906,
											"end": 2918,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2906,
											"end": 2918,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 2906,
											"end": 2918,
											"modifierDepth": 1,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2935,
											"end": 2940,
											"modifierDepth": 1,
											"name": "DUP11",
											"source": 14
										},
										{
											"begin": 2928,
											"end": 2932,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "C"
										},
										{
											"begin": 2928,
											"end": 2932,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2928,
											"end": 2940,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 2928,
											"end": 2940,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 2928,
											"end": 2940,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2928,
											"end": 2940,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2928,
											"end": 2940,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2928,
											"end": 2940,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 2928,
											"end": 2940,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 2928,
											"end": 2940,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2928,
											"end": 2940,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2928,
											"end": 2940,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2928,
											"end": 2940,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2928,
											"end": 2940,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 2928,
											"end": 2940,
											"modifierDepth": 1,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 2928,
											"end": 2940,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2928,
											"end": 2940,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 2928,
											"end": 2940,
											"modifierDepth": 1,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2987,
											"end": 3000,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 2950,
											"end": 2962,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2950,
											"end": 2962,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2950,
											"end": 3001,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 2950,
											"end": 3001,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 2950,
											"end": 3001,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2950,
											"end": 3001,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2950,
											"end": 3001,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2950,
											"end": 3001,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 2950,
											"end": 3001,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 2950,
											"end": 3001,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2950,
											"end": 3001,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2950,
											"end": 3001,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2950,
											"end": 3001,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2950,
											"end": 3001,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 2950,
											"end": 3001,
											"modifierDepth": 1,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 2950,
											"end": 3001,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2950,
											"end": 3001,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 2950,
											"end": 3001,
											"modifierDepth": 1,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3049,
											"end": 3063,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 3011,
											"end": 3024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 3011,
											"end": 3024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3011,
											"end": 3064,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 3011,
											"end": 3064,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 3011,
											"end": 3064,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3011,
											"end": 3064,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3011,
											"end": 3064,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3011,
											"end": 3064,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 3011,
											"end": 3064,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 3011,
											"end": 3064,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3011,
											"end": 3064,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3011,
											"end": 3064,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3011,
											"end": 3064,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3011,
											"end": 3064,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 3011,
											"end": 3064,
											"modifierDepth": 1,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 3011,
											"end": 3064,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3011,
											"end": 3064,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 3011,
											"end": 3064,
											"modifierDepth": 1,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3112,
											"end": 3126,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3074,
											"end": 3087,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 3074,
											"end": 3087,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3074,
											"end": 3127,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 3074,
											"end": 3127,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 3074,
											"end": 3127,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3074,
											"end": 3127,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3074,
											"end": 3127,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3074,
											"end": 3127,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 3074,
											"end": 3127,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 3074,
											"end": 3127,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3074,
											"end": 3127,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3074,
											"end": 3127,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3074,
											"end": 3127,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3074,
											"end": 3127,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 3074,
											"end": 3127,
											"modifierDepth": 1,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 3074,
											"end": 3127,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3074,
											"end": 3127,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 3074,
											"end": 3127,
											"modifierDepth": 1,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5070,
											"end": 5084,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "692"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 25179,
											"end": 25229,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 25179,
											"end": 25229,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 2,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 25167,
											"end": 25169,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 25152,
											"end": 25170,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "tag",
											"source": 2,
											"value": "692"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2454,
											"end": 3229,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2454,
											"end": 3229,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2454,
											"end": 3229,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2454,
											"end": 3229,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2454,
											"end": 3229,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2454,
											"end": 3229,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2454,
											"end": 3229,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2454,
											"end": 3229,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2454,
											"end": 3229,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3470,
											"end": 3854,
											"name": "tag",
											"source": 5,
											"value": "356"
										},
										{
											"begin": 3470,
											"end": 3854,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "C8669CF8EAF883002B9F48E28846A8D408C9B58EA6613BACE374265E43C9BC43"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3670,
											"end": 3679,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3670,
											"end": 3679,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3670,
											"end": 3690,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3666,
											"end": 3754,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "698"
										},
										{
											"begin": 3666,
											"end": 3754,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3EE5AEB5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3666,
											"end": 3754,
											"name": "tag",
											"source": 5,
											"value": "698"
										},
										{
											"begin": 3666,
											"end": 3754,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1991,
											"end": 1992,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 3828,
											"end": 3847,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3828,
											"end": 3847,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3470,
											"end": 3854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "tag",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "702"
										},
										{
											"begin": 2717,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 2717,
											"end": 2724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "tag",
											"source": 1,
											"value": "702"
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1788,
											"end": 1839,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1761,
											"end": 1779,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 1761,
											"end": 1779,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1642,
											"end": 1845,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11195,
											"end": 12012,
											"name": "tag",
											"source": 14,
											"value": "376"
										},
										{
											"begin": 11195,
											"end": 12012,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11270,
											"end": 11291,
											"name": "SELFBALANCE",
											"source": 14
										},
										{
											"begin": 11305,
											"end": 11322,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11305,
											"end": 11322,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11301,
											"end": 11464,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "707"
										},
										{
											"begin": 11301,
											"end": 11464,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11339,
											"end": 11351,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11365,
											"end": 11372,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "708"
										},
										{
											"begin": 11365,
											"end": 11370,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "151"
										},
										{
											"begin": 11365,
											"end": 11372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11365,
											"end": 11372,
											"name": "tag",
											"source": 14,
											"value": "708"
										},
										{
											"begin": 11365,
											"end": 11372,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11357,
											"end": 11378,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 11386,
											"end": 11399,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11357,
											"end": 11404,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 11357,
											"end": 11404,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 11357,
											"end": 11404,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11357,
											"end": 11404,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 11357,
											"end": 11404,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 11357,
											"end": 11404,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11357,
											"end": 11404,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11357,
											"end": 11404,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 11357,
											"end": 11404,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11357,
											"end": 11404,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 11357,
											"end": 11404,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 11357,
											"end": 11404,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 11357,
											"end": 11404,
											"name": "CALL",
											"source": 14
										},
										{
											"begin": 11357,
											"end": 11404,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 11357,
											"end": 11404,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11357,
											"end": 11404,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11357,
											"end": 11404,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11357,
											"end": 11404,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 11357,
											"end": 11404,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11357,
											"end": 11404,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11357,
											"end": 11404,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11357,
											"end": 11404,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 11357,
											"end": 11404,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "712"
										},
										{
											"begin": 11357,
											"end": 11404,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11357,
											"end": 11404,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 11357,
											"end": 11404,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 11357,
											"end": 11404,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11357,
											"end": 11404,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11357,
											"end": 11404,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 11357,
											"end": 11404,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 11357,
											"end": 11404,
											"name": "PUSH",
											"source": 14,
											"value": "3F"
										},
										{
											"begin": 11357,
											"end": 11404,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 11357,
											"end": 11404,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11357,
											"end": 11404,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 11357,
											"end": 11404,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11357,
											"end": 11404,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11357,
											"end": 11404,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 11357,
											"end": 11404,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11357,
											"end": 11404,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 11357,
											"end": 11404,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11357,
											"end": 11404,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11357,
											"end": 11404,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 11357,
											"end": 11404,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11357,
											"end": 11404,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11357,
											"end": 11404,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 11357,
											"end": 11404,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11357,
											"end": 11404,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 11357,
											"end": 11404,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "711"
										},
										{
											"begin": 11357,
											"end": 11404,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11357,
											"end": 11404,
											"name": "tag",
											"source": 14,
											"value": "712"
										},
										{
											"begin": 11357,
											"end": 11404,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11357,
											"end": 11404,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 11357,
											"end": 11404,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11357,
											"end": 11404,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11357,
											"end": 11404,
											"name": "tag",
											"source": 14,
											"value": "711"
										},
										{
											"begin": 11357,
											"end": 11404,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11357,
											"end": 11404,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11338,
											"end": 11404,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11338,
											"end": 11404,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11338,
											"end": 11404,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11426,
											"end": 11433,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11418,
											"end": 11453,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "713"
										},
										{
											"begin": 11418,
											"end": 11453,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11418,
											"end": 11453,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 11418,
											"end": 11453,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11418,
											"end": 11453,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11418,
											"end": 11453,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 25442,
											"end": 25444,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 11418,
											"end": 11453,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 11418,
											"end": 11453,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11418,
											"end": 11453,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 25424,
											"end": 25445,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 25481,
											"end": 25483,
											"name": "PUSH",
											"source": 15,
											"value": "F"
										},
										{
											"begin": 25461,
											"end": 25479,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 25461,
											"end": 25479,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 25461,
											"end": 25479,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 25454,
											"end": 25484,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "151C985B9CD9995C8819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 25500,
											"end": 25518,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 25500,
											"end": 25518,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 25500,
											"end": 25518,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 25493,
											"end": 25538,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 25555,
											"end": 25573,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 25555,
											"end": 25573,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11418,
											"end": 11453,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "54"
										},
										{
											"begin": 25240,
											"end": 25579,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11418,
											"end": 11453,
											"name": "tag",
											"source": 14,
											"value": "713"
										},
										{
											"begin": 11418,
											"end": 11453,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11324,
											"end": 11464,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11301,
											"end": 11464,
											"name": "tag",
											"source": 14,
											"value": "707"
										},
										{
											"begin": 11301,
											"end": 11464,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11552,
											"end": 11556,
											"name": "PUSH",
											"source": 14,
											"value": "B"
										},
										{
											"begin": 11552,
											"end": 11556,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 11545,
											"end": 11582,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 11545,
											"end": 11582,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11545,
											"end": 11582,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11545,
											"end": 11582,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11576,
											"end": 11580,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 11545,
											"end": 11582,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 11545,
											"end": 11582,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11545,
											"end": 11582,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1788,
											"end": 1839,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11523,
											"end": 11542,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11523,
											"end": 11542,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11552,
											"end": 11556,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 11552,
											"end": 11556,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11545,
											"end": 11567,
											"name": "PUSH",
											"source": 14,
											"value": "70A08231"
										},
										{
											"begin": 11545,
											"end": 11567,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1761,
											"end": 1779,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 1761,
											"end": 1779,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11545,
											"end": 11582,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11545,
											"end": 11582,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 11545,
											"end": 11582,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 11545,
											"end": 11582,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11545,
											"end": 11582,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11545,
											"end": 11582,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 11545,
											"end": 11582,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11545,
											"end": 11582,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 11545,
											"end": 11582,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 11545,
											"end": 11582,
											"name": "STATICCALL",
											"source": 14
										},
										{
											"begin": 11545,
											"end": 11582,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11545,
											"end": 11582,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11545,
											"end": 11582,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11545,
											"end": 11582,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "718"
										},
										{
											"begin": 11545,
											"end": 11582,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11545,
											"end": 11582,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 11545,
											"end": 11582,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11545,
											"end": 11582,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11545,
											"end": 11582,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 11545,
											"end": 11582,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 11545,
											"end": 11582,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11545,
											"end": 11582,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 11545,
											"end": 11582,
											"name": "tag",
											"source": 14,
											"value": "718"
										},
										{
											"begin": 11545,
											"end": 11582,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11545,
											"end": 11582,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11545,
											"end": 11582,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11545,
											"end": 11582,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11545,
											"end": 11582,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11545,
											"end": 11582,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 11545,
											"end": 11582,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 11545,
											"end": 11582,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 11545,
											"end": 11582,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 11545,
											"end": 11582,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 11545,
											"end": 11582,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 11545,
											"end": 11582,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11545,
											"end": 11582,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11545,
											"end": 11582,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 11545,
											"end": 11582,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11545,
											"end": 11582,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11545,
											"end": 11582,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11545,
											"end": 11582,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 11545,
											"end": 11582,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11545,
											"end": 11582,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11545,
											"end": 11582,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11545,
											"end": 11582,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11545,
											"end": 11582,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11545,
											"end": 11582,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "719"
										},
										{
											"begin": 11545,
											"end": 11582,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11545,
											"end": 11582,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11545,
											"end": 11582,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "548"
										},
										{
											"begin": 11545,
											"end": 11582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11545,
											"end": 11582,
											"name": "tag",
											"source": 14,
											"value": "719"
										},
										{
											"begin": 11545,
											"end": 11582,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11523,
											"end": 11582,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11596,
											"end": 11611,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11596,
											"end": 11611,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11592,
											"end": 11760,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "726"
										},
										{
											"begin": 11592,
											"end": 11760,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11659,
											"end": 11663,
											"name": "PUSH",
											"source": 14,
											"value": "B"
										},
										{
											"begin": 11659,
											"end": 11663,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11659,
											"end": 11663,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "PUSH",
											"source": 14,
											"value": "A9059CBB"
										},
										{
											"begin": 11674,
											"end": 11681,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "721"
										},
										{
											"begin": 11674,
											"end": 11679,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "151"
										},
										{
											"begin": 11674,
											"end": 11681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11674,
											"end": 11681,
											"name": "tag",
											"source": 14,
											"value": "721"
										},
										{
											"begin": 11674,
											"end": 11681,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11652,
											"end": 11695,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 11652,
											"end": 11695,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11652,
											"end": 11695,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 11652,
											"end": 11695,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 11652,
											"end": 11695,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11652,
											"end": 11695,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 11652,
											"end": 11695,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 11652,
											"end": 11695,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11652,
											"end": 11695,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18307,
											"end": 18339,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 18307,
											"end": 18339,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 18307,
											"end": 18339,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 11652,
											"end": 11695,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 11652,
											"end": 11695,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11652,
											"end": 11695,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18289,
											"end": 18340,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 18356,
											"end": 18374,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 18356,
											"end": 18374,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 18356,
											"end": 18374,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 18349,
											"end": 18383,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 18349,
											"end": 18383,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 18349,
											"end": 18383,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 18262,
											"end": 18280,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 18262,
											"end": 18280,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11652,
											"end": 11695,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11652,
											"end": 11695,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 11652,
											"end": 11695,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 11652,
											"end": 11695,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11652,
											"end": 11695,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11652,
											"end": 11695,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 11652,
											"end": 11695,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11652,
											"end": 11695,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11652,
											"end": 11695,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 11652,
											"end": 11695,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 11652,
											"end": 11695,
											"name": "CALL",
											"source": 14
										},
										{
											"begin": 11652,
											"end": 11695,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11652,
											"end": 11695,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11652,
											"end": 11695,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11652,
											"end": 11695,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "724"
										},
										{
											"begin": 11652,
											"end": 11695,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11652,
											"end": 11695,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 11652,
											"end": 11695,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11652,
											"end": 11695,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11652,
											"end": 11695,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 11652,
											"end": 11695,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 11652,
											"end": 11695,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11652,
											"end": 11695,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 11652,
											"end": 11695,
											"name": "tag",
											"source": 14,
											"value": "724"
										},
										{
											"begin": 11652,
											"end": 11695,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11652,
											"end": 11695,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11652,
											"end": 11695,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11652,
											"end": 11695,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11652,
											"end": 11695,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11652,
											"end": 11695,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 11652,
											"end": 11695,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 11652,
											"end": 11695,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 11652,
											"end": 11695,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 11652,
											"end": 11695,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 11652,
											"end": 11695,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 11652,
											"end": 11695,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11652,
											"end": 11695,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11652,
											"end": 11695,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 11652,
											"end": 11695,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11652,
											"end": 11695,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11652,
											"end": 11695,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11652,
											"end": 11695,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 11652,
											"end": 11695,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11652,
											"end": 11695,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11652,
											"end": 11695,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11652,
											"end": 11695,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11652,
											"end": 11695,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11652,
											"end": 11695,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "725"
										},
										{
											"begin": 11652,
											"end": 11695,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11652,
											"end": 11695,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11652,
											"end": 11695,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "509"
										},
										{
											"begin": 11652,
											"end": 11695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11652,
											"end": 11695,
											"name": "tag",
											"source": 14,
											"value": "725"
										},
										{
											"begin": 11652,
											"end": 11695,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11627,
											"end": 11749,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "726"
										},
										{
											"begin": 11627,
											"end": 11749,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11627,
											"end": 11749,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 11627,
											"end": 11749,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11627,
											"end": 11749,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11627,
											"end": 11749,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 25786,
											"end": 25788,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 11627,
											"end": 11749,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 11627,
											"end": 11749,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11627,
											"end": 11749,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 25768,
											"end": 25789,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 25825,
											"end": 25827,
											"name": "PUSH",
											"source": 15,
											"value": "14"
										},
										{
											"begin": 25805,
											"end": 25823,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 25805,
											"end": 25823,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 25805,
											"end": 25823,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 25798,
											"end": 25828,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1554D115081D1C985B9CD9995C8819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 25844,
											"end": 25862,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 25844,
											"end": 25862,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 25844,
											"end": 25862,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 25837,
											"end": 25887,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 25904,
											"end": 25922,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 25904,
											"end": 25922,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11627,
											"end": 11749,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "54"
										},
										{
											"begin": 25584,
											"end": 25928,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11627,
											"end": 11749,
											"name": "tag",
											"source": 14,
											"value": "726"
										},
										{
											"begin": 11627,
											"end": 11749,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11798,
											"end": 11802,
											"name": "PUSH",
											"source": 14,
											"value": "C"
										},
										{
											"begin": 11798,
											"end": 11802,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 11791,
											"end": 11828,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 11791,
											"end": 11828,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11791,
											"end": 11828,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11791,
											"end": 11828,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11822,
											"end": 11826,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 11791,
											"end": 11828,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 11791,
											"end": 11828,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11791,
											"end": 11828,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1788,
											"end": 1839,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11769,
											"end": 11788,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11769,
											"end": 11788,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11798,
											"end": 11802,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 11798,
											"end": 11802,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11791,
											"end": 11813,
											"name": "PUSH",
											"source": 14,
											"value": "70A08231"
										},
										{
											"begin": 11791,
											"end": 11813,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1761,
											"end": 1779,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 1761,
											"end": 1779,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11791,
											"end": 11828,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11791,
											"end": 11828,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 11791,
											"end": 11828,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 11791,
											"end": 11828,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11791,
											"end": 11828,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11791,
											"end": 11828,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 11791,
											"end": 11828,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11791,
											"end": 11828,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 11791,
											"end": 11828,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 11791,
											"end": 11828,
											"name": "STATICCALL",
											"source": 14
										},
										{
											"begin": 11791,
											"end": 11828,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11791,
											"end": 11828,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11791,
											"end": 11828,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11791,
											"end": 11828,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "731"
										},
										{
											"begin": 11791,
											"end": 11828,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11791,
											"end": 11828,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 11791,
											"end": 11828,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11791,
											"end": 11828,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11791,
											"end": 11828,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 11791,
											"end": 11828,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 11791,
											"end": 11828,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11791,
											"end": 11828,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 11791,
											"end": 11828,
											"name": "tag",
											"source": 14,
											"value": "731"
										},
										{
											"begin": 11791,
											"end": 11828,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11791,
											"end": 11828,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11791,
											"end": 11828,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11791,
											"end": 11828,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11791,
											"end": 11828,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11791,
											"end": 11828,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 11791,
											"end": 11828,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 11791,
											"end": 11828,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 11791,
											"end": 11828,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 11791,
											"end": 11828,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 11791,
											"end": 11828,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 11791,
											"end": 11828,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11791,
											"end": 11828,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11791,
											"end": 11828,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 11791,
											"end": 11828,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11791,
											"end": 11828,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11791,
											"end": 11828,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11791,
											"end": 11828,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 11791,
											"end": 11828,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11791,
											"end": 11828,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11791,
											"end": 11828,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11791,
											"end": 11828,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11791,
											"end": 11828,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11791,
											"end": 11828,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "732"
										},
										{
											"begin": 11791,
											"end": 11828,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11791,
											"end": 11828,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11791,
											"end": 11828,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "548"
										},
										{
											"begin": 11791,
											"end": 11828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11791,
											"end": 11828,
											"name": "tag",
											"source": 14,
											"value": "732"
										},
										{
											"begin": 11791,
											"end": 11828,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11769,
											"end": 11828,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11842,
											"end": 11857,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11842,
											"end": 11857,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11838,
											"end": 12006,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "739"
										},
										{
											"begin": 11838,
											"end": 12006,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11905,
											"end": 11909,
											"name": "PUSH",
											"source": 14,
											"value": "C"
										},
										{
											"begin": 11905,
											"end": 11909,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11905,
											"end": 11909,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 11898,
											"end": 11919,
											"name": "PUSH",
											"source": 14,
											"value": "A9059CBB"
										},
										{
											"begin": 11920,
											"end": 11927,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "734"
										},
										{
											"begin": 11920,
											"end": 11925,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "151"
										},
										{
											"begin": 11920,
											"end": 11927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11920,
											"end": 11927,
											"name": "tag",
											"source": 14,
											"value": "734"
										},
										{
											"begin": 11920,
											"end": 11927,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11898,
											"end": 11941,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 11898,
											"end": 11941,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11898,
											"end": 11941,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 11898,
											"end": 11941,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 11898,
											"end": 11941,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11898,
											"end": 11941,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 11898,
											"end": 11941,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 11898,
											"end": 11941,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11898,
											"end": 11941,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18307,
											"end": 18339,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 18307,
											"end": 18339,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 18307,
											"end": 18339,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 11898,
											"end": 11941,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 11898,
											"end": 11941,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11898,
											"end": 11941,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18289,
											"end": 18340,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 18356,
											"end": 18374,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 18356,
											"end": 18374,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 18356,
											"end": 18374,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 18349,
											"end": 18383,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 18349,
											"end": 18383,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 18349,
											"end": 18383,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 18262,
											"end": 18280,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 18262,
											"end": 18280,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11898,
											"end": 11941,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11898,
											"end": 11941,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 11898,
											"end": 11941,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 11898,
											"end": 11941,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11898,
											"end": 11941,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11898,
											"end": 11941,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 11898,
											"end": 11941,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11898,
											"end": 11941,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11898,
											"end": 11941,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 11898,
											"end": 11941,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 11898,
											"end": 11941,
											"name": "CALL",
											"source": 14
										},
										{
											"begin": 11898,
											"end": 11941,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11898,
											"end": 11941,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11898,
											"end": 11941,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11898,
											"end": 11941,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "737"
										},
										{
											"begin": 11898,
											"end": 11941,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11898,
											"end": 11941,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 11898,
											"end": 11941,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11898,
											"end": 11941,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11898,
											"end": 11941,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 11898,
											"end": 11941,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 11898,
											"end": 11941,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11898,
											"end": 11941,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 11898,
											"end": 11941,
											"name": "tag",
											"source": 14,
											"value": "737"
										},
										{
											"begin": 11898,
											"end": 11941,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11898,
											"end": 11941,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11898,
											"end": 11941,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11898,
											"end": 11941,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11898,
											"end": 11941,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11898,
											"end": 11941,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 11898,
											"end": 11941,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 11898,
											"end": 11941,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 11898,
											"end": 11941,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 11898,
											"end": 11941,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 11898,
											"end": 11941,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 11898,
											"end": 11941,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11898,
											"end": 11941,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11898,
											"end": 11941,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 11898,
											"end": 11941,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11898,
											"end": 11941,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11898,
											"end": 11941,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11898,
											"end": 11941,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 11898,
											"end": 11941,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11898,
											"end": 11941,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11898,
											"end": 11941,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11898,
											"end": 11941,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11898,
											"end": 11941,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11898,
											"end": 11941,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "738"
										},
										{
											"begin": 11898,
											"end": 11941,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11898,
											"end": 11941,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11898,
											"end": 11941,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "509"
										},
										{
											"begin": 11898,
											"end": 11941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11898,
											"end": 11941,
											"name": "tag",
											"source": 14,
											"value": "738"
										},
										{
											"begin": 11898,
											"end": 11941,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11873,
											"end": 11995,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "739"
										},
										{
											"begin": 11873,
											"end": 11995,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11873,
											"end": 11995,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 11873,
											"end": 11995,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11873,
											"end": 11995,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11873,
											"end": 11995,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 26135,
											"end": 26137,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 11873,
											"end": 11995,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 11873,
											"end": 11995,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11873,
											"end": 11995,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 26117,
											"end": 26138,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 26174,
											"end": 26176,
											"name": "PUSH",
											"source": 15,
											"value": "14"
										},
										{
											"begin": 26154,
											"end": 26172,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 26154,
											"end": 26172,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 26154,
											"end": 26172,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 26147,
											"end": 26177,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1554D110C81D1C985B9CD9995C8819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 26193,
											"end": 26211,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 26193,
											"end": 26211,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 26193,
											"end": 26211,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 26186,
											"end": 26236,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 26253,
											"end": 26271,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 26253,
											"end": 26271,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11873,
											"end": 11995,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "54"
										},
										{
											"begin": 25933,
											"end": 26277,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11873,
											"end": 11995,
											"name": "tag",
											"source": 14,
											"value": "739"
										},
										{
											"begin": 11873,
											"end": 11995,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11236,
											"end": 12012,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11236,
											"end": 12012,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11236,
											"end": 12012,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11195,
											"end": 12012,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4603,
											"end": 4915,
											"name": "tag",
											"source": 3,
											"value": "383"
										},
										{
											"begin": 4603,
											"end": 4915,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4683,
											"end": 4687,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4692,
											"end": 4698,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "514"
										},
										{
											"begin": 4675,
											"end": 4698,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4675,
											"end": 4698,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 4675,
											"end": 4698,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4675,
											"end": 4795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "745"
										},
										{
											"begin": 4675,
											"end": 4795,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4675,
											"end": 4795,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4789,
											"end": 4795,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "514"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4753,
											"end": 4795,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4753,
											"end": 4785,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "746"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1441,
											"end": 1579,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4753,
											"end": 4785,
											"name": "tag",
											"source": 3,
											"value": "746"
										},
										{
											"begin": 4753,
											"end": 4785,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4753,
											"end": 4795,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4753,
											"end": 4795,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 4753,
											"end": 4795,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4675,
											"end": 4795,
											"name": "tag",
											"source": 3,
											"value": "745"
										},
										{
											"begin": 4675,
											"end": 4795,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4658,
											"end": 4909,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4658,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "377"
										},
										{
											"begin": 4658,
											"end": 4909,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "703E46DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 16810,
											"end": 16894,
											"name": "tag",
											"source": 14,
											"value": "386"
										},
										{
											"begin": 16810,
											"end": 16894,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "678"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6057,
											"end": 6595,
											"name": "tag",
											"source": 3,
											"value": "388"
										},
										{
											"begin": 6057,
											"end": 6595,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6174,
											"end": 6191,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6156,
											"end": 6206,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6206,
											"name": "PUSH",
											"source": 3,
											"value": "52D1902D"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "753"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "754"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "548"
										},
										{
											"begin": 6156,
											"end": 6208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "tag",
											"source": 3,
											"value": "754"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "tag",
											"source": 3,
											"value": "753"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6152,
											"end": 6589,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "756"
										},
										{
											"begin": 6152,
											"end": 6589,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4C9C8CE3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1806,
											"end": 1838,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1806,
											"end": 1838,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1788,
											"end": 1839,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1761,
											"end": 1779,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 1761,
											"end": 1779,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1642,
											"end": 1845,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6152,
											"end": 6589,
											"name": "tag",
											"source": 3,
											"value": "756"
										},
										{
											"begin": 6152,
											"end": 6589,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 6250,
											"end": 6290,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6250,
											"end": 6290,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 6246,
											"end": 6366,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "762"
										},
										{
											"begin": 6246,
											"end": 6366,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2A875269"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1014,
											"end": 1039,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1014,
											"end": 1039,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1014,
											"end": 1039,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 987,
											"end": 1005,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 987,
											"end": 1005,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 868,
											"end": 1045,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6246,
											"end": 6366,
											"name": "tag",
											"source": 3,
											"value": "762"
										},
										{
											"begin": 6246,
											"end": 6366,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6379,
											"end": 6433,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "739"
										},
										{
											"begin": 6409,
											"end": 6426,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6428,
											"end": 6432,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6379,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "765"
										},
										{
											"begin": 6379,
											"end": 6433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5032,
											"end": 5245,
											"name": "tag",
											"source": 3,
											"value": "391"
										},
										{
											"begin": 5032,
											"end": 5245,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5106,
											"end": 5110,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5115,
											"end": 5121,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "514"
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5094,
											"end": 5239,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "377"
										},
										{
											"begin": 5094,
											"end": 5239,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "703E46DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "tag",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"source": 1,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3847,
											"end": 3871,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3847,
											"end": 3871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3774,
											"end": 4022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "tag",
											"source": 1,
											"value": "689"
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "774"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "775"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 2,
											"value": "774"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "678"
										},
										{
											"begin": 1954,
											"end": 1966,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 1953,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "778"
										},
										{
											"begin": 1929,
											"end": 1967,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3037,
											"name": "tag",
											"source": 3,
											"value": "691"
										},
										{
											"begin": 2970,
											"end": 3037,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "377"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "775"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2264,
											"end": 2608,
											"name": "tag",
											"source": 8,
											"value": "765"
										},
										{
											"begin": 2264,
											"end": 2608,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2355,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "788"
										},
										{
											"begin": 2374,
											"end": 2391,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2355,
											"end": 2373,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "789"
										},
										{
											"begin": 2355,
											"end": 2392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2355,
											"end": 2392,
											"name": "tag",
											"source": 8,
											"value": "788"
										},
										{
											"begin": 2355,
											"end": 2392,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "PUSH",
											"source": 8,
											"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 2458,
											"end": 2469,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2458,
											"end": 2469,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2458,
											"end": 2473,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "790"
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2489,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "739"
										},
										{
											"begin": 2518,
											"end": 2535,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2537,
											"end": 2541,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2489,
											"end": 2517,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "792"
										},
										{
											"begin": 2489,
											"end": 2542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "tag",
											"source": 8,
											"value": "790"
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 2573,
											"end": 2589,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "795"
										},
										{
											"begin": 2573,
											"end": 2591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "tag",
											"source": 2,
											"value": "775"
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "PUSH",
											"source": 2,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "377"
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1AFCD79F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "tag",
											"source": 1,
											"value": "778"
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "674"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "775"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1952,
											"name": "tag",
											"source": 8,
											"value": "789"
										},
										{
											"begin": 1671,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1765,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1748,
											"end": 1777,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1777,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 1781,
											"end": 1782,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1748,
											"end": 1782,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "808"
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4C9C8CE3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1806,
											"end": 1838,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1806,
											"end": 1838,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1788,
											"end": 1839,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1761,
											"end": 1779,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 1761,
											"end": 1779,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 1642,
											"end": 1845,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "tag",
											"source": 8,
											"value": "808"
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "AND",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1671,
											"end": 1952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3900,
											"end": 4153,
											"name": "tag",
											"source": 11,
											"value": "792"
										},
										{
											"begin": 3900,
											"end": 4153,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3983,
											"end": 3995,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4022,
											"end": 4045,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4055,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4049,
											"end": 4068,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4069,
											"end": 4073,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "812"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "813"
										},
										{
											"begin": 4049,
											"end": 4074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "tag",
											"source": 11,
											"value": "812"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DELEGATECALL",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "816"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 11,
											"value": "3F"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "815"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "tag",
											"source": 11,
											"value": "816"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "tag",
											"source": 11,
											"value": "815"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4007,
											"end": 4074,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4007,
											"end": 4074,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4007,
											"end": 4074,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4007,
											"end": 4074,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4091,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "817"
										},
										{
											"begin": 4118,
											"end": 4124,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4126,
											"end": 4133,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4135,
											"end": 4145,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4091,
											"end": 4117,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "818"
										},
										{
											"begin": 4091,
											"end": 4146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4091,
											"end": 4146,
											"name": "tag",
											"source": 11,
											"value": "817"
										},
										{
											"begin": 4091,
											"end": 4146,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4084,
											"end": 4146,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 3900,
											"end": 4153,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3900,
											"end": 4153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6113,
											"end": 6235,
											"name": "tag",
											"source": 8,
											"value": "795"
										},
										{
											"begin": 6113,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6163,
											"end": 6172,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 6163,
											"end": 6176,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6159,
											"end": 6229,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 6159,
											"end": 6229,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B398979F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "tag",
											"source": 11,
											"value": "818"
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4565,
											"end": 4577,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 4594,
											"end": 4601,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "824"
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4617,
											"end": 4636,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "825"
										},
										{
											"begin": 4625,
											"end": 4635,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4617,
											"end": 4624,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "826"
										},
										{
											"begin": 4617,
											"end": 4636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4617,
											"end": 4636,
											"name": "tag",
											"source": 11,
											"value": "825"
										},
										{
											"begin": 4617,
											"end": 4636,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "827"
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "tag",
											"source": 11,
											"value": "824"
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4841,
											"end": 4858,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4841,
											"end": 4858,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4841,
											"end": 4863,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4841,
											"end": 4890,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4841,
											"end": 4890,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4841,
											"end": 4890,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "828"
										},
										{
											"begin": 4841,
											"end": 4890,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4867,
											"end": 4885,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4867,
											"end": 4885,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4867,
											"end": 4885,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 4867,
											"end": 4890,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4841,
											"end": 4890,
											"name": "tag",
											"source": 11,
											"value": "828"
										},
										{
											"begin": 4841,
											"end": 4890,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4837,
											"end": 4956,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4837,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "829"
										},
										{
											"begin": 4837,
											"end": 4956,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9996B315"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1806,
											"end": 1838,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1806,
											"end": 1838,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1788,
											"end": 1839,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1761,
											"end": 1779,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 1761,
											"end": 1779,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 1642,
											"end": 1845,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4837,
											"end": 4956,
											"name": "tag",
											"source": 11,
											"value": "829"
										},
										{
											"begin": 4837,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4976,
											"end": 4986,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "tag",
											"source": 11,
											"value": "827"
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4421,
											"end": 5003,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5543,
											"end": 6030,
											"name": "tag",
											"source": 11,
											"value": "826"
										},
										{
											"begin": 5543,
											"end": 6030,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5674,
											"end": 5691,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5674,
											"end": 5691,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5674,
											"end": 5695,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5670,
											"end": 6024,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "832"
										},
										{
											"begin": 5670,
											"end": 6024,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5871,
											"end": 5881,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5865,
											"end": 5882,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5927,
											"end": 5942,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5914,
											"end": 5924,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5910,
											"end": 5912,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5906,
											"end": 5925,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5899,
											"end": 5943,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5670,
											"end": 6024,
											"name": "tag",
											"source": 11,
											"value": "832"
										},
										{
											"begin": 5670,
											"end": 6024,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D6BDA275"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 375,
											"end": 529,
											"name": "tag",
											"source": 15,
											"value": "834"
										},
										{
											"begin": 375,
											"end": 529,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 454,
											"end": 474,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 454,
											"end": 474,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 503,
											"end": 504,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 493,
											"end": 505,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 493,
											"end": 505,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 483,
											"end": 523,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "315"
										},
										{
											"begin": 483,
											"end": 523,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 519,
											"end": 520,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 517,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 509,
											"end": 521,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 534,
											"end": 863,
											"name": "tag",
											"source": 15,
											"value": "59"
										},
										{
											"begin": 534,
											"end": 863,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 620,
											"end": 626,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 634,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 681,
											"end": 683,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 669,
											"end": 678,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 660,
											"end": 667,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 656,
											"end": 679,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 652,
											"end": 684,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 649,
											"end": 701,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 649,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "848"
										},
										{
											"begin": 649,
											"end": 701,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 697,
											"end": 698,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 694,
											"end": 695,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 687,
											"end": 699,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 649,
											"end": 701,
											"name": "tag",
											"source": 15,
											"value": "848"
										},
										{
											"begin": 649,
											"end": 701,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 720,
											"end": 760,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "849"
										},
										{
											"begin": 750,
											"end": 759,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 720,
											"end": 760,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "834"
										},
										{
											"begin": 720,
											"end": 760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 720,
											"end": 760,
											"name": "tag",
											"source": 15,
											"value": "849"
										},
										{
											"begin": 720,
											"end": 760,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 710,
											"end": 760,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 829,
											"end": 831,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 814,
											"end": 832,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 814,
											"end": 832,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 814,
											"end": 832,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 814,
											"end": 832,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 801,
											"end": 833,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 801,
											"end": 833,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 534,
											"end": 863,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1242,
											"end": 1457,
											"name": "tag",
											"source": 15,
											"value": "71"
										},
										{
											"begin": 1242,
											"end": 1457,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1319,
											"end": 1325,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1372,
											"end": 1374,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1360,
											"end": 1369,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1351,
											"end": 1358,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1347,
											"end": 1370,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1343,
											"end": 1375,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 1340,
											"end": 1392,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1340,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "853"
										},
										{
											"begin": 1340,
											"end": 1392,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1388,
											"end": 1389,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1385,
											"end": 1386,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1378,
											"end": 1390,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1340,
											"end": 1392,
											"name": "tag",
											"source": 15,
											"value": "853"
										},
										{
											"begin": 1340,
											"end": 1392,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1411,
											"end": 1451,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "827"
										},
										{
											"begin": 1441,
											"end": 1450,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1411,
											"end": 1451,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "834"
										},
										{
											"begin": 1411,
											"end": 1451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1850,
											"end": 2076,
											"name": "tag",
											"source": 15,
											"value": "103"
										},
										{
											"begin": 1850,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1909,
											"end": 1915,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1962,
											"end": 1964,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1950,
											"end": 1959,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1941,
											"end": 1948,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1937,
											"end": 1960,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1933,
											"end": 1965,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 1930,
											"end": 1982,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1930,
											"end": 1982,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "858"
										},
										{
											"begin": 1930,
											"end": 1982,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1978,
											"end": 1979,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1975,
											"end": 1976,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1968,
											"end": 1980,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1930,
											"end": 1982,
											"name": "tag",
											"source": 15,
											"value": "858"
										},
										{
											"begin": 1930,
											"end": 1982,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2023,
											"end": 2046,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 2023,
											"end": 2046,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1850,
											"end": 2076,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1850,
											"end": 2076,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2081,
											"end": 2212,
											"name": "tag",
											"source": 15,
											"value": "835"
										},
										{
											"begin": 2081,
											"end": 2212,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2156,
											"end": 2187,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2156,
											"end": 2187,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2146,
											"end": 2188,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2146,
											"end": 2188,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 2136,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "678"
										},
										{
											"begin": 2136,
											"end": 2206,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2202,
											"end": 2203,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2199,
											"end": 2200,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2192,
											"end": 2204,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2217,
											"end": 2344,
											"name": "tag",
											"source": 15,
											"value": "836"
										},
										{
											"begin": 2217,
											"end": 2344,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2278,
											"end": 2288,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 2273,
											"end": 2276,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 2269,
											"end": 2289,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 2266,
											"end": 2267,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2259,
											"end": 2290,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2309,
											"end": 2313,
											"name": "PUSH",
											"source": 15,
											"value": "41"
										},
										{
											"begin": 2306,
											"end": 2307,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 2299,
											"end": 2314,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2333,
											"end": 2337,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 2330,
											"end": 2331,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2323,
											"end": 2338,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2349,
											"end": 3428,
											"name": "tag",
											"source": 15,
											"value": "112"
										},
										{
											"begin": 2349,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2434,
											"end": 2440,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2487,
											"end": 2489,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2475,
											"end": 2484,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2466,
											"end": 2473,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2462,
											"end": 2485,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2458,
											"end": 2490,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 2455,
											"end": 2507,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2455,
											"end": 2507,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "863"
										},
										{
											"begin": 2455,
											"end": 2507,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2503,
											"end": 2504,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2500,
											"end": 2501,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2493,
											"end": 2505,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2455,
											"end": 2507,
											"name": "tag",
											"source": 15,
											"value": "863"
										},
										{
											"begin": 2455,
											"end": 2507,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2542,
											"end": 2551,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2529,
											"end": 2552,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 2561,
											"end": 2592,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "864"
										},
										{
											"begin": 2586,
											"end": 2591,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2561,
											"end": 2592,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "835"
										},
										{
											"begin": 2561,
											"end": 2592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2561,
											"end": 2592,
											"name": "tag",
											"source": 15,
											"value": "864"
										},
										{
											"begin": 2561,
											"end": 2592,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2611,
											"end": 2616,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2667,
											"end": 2669,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2652,
											"end": 2670,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2652,
											"end": 2670,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2639,
											"end": 2671,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 2694,
											"end": 2712,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2683,
											"end": 2713,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2683,
											"end": 2713,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 2680,
											"end": 2730,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2680,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "865"
										},
										{
											"begin": 2680,
											"end": 2730,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2726,
											"end": 2727,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2723,
											"end": 2724,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2716,
											"end": 2728,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2680,
											"end": 2730,
											"name": "tag",
											"source": 15,
											"value": "865"
										},
										{
											"begin": 2680,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2749,
											"end": 2771,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2749,
											"end": 2771,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2802,
											"end": 2806,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 2794,
											"end": 2807,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2794,
											"end": 2807,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2790,
											"end": 2817,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 2780,
											"end": 2835,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "866"
										},
										{
											"begin": 2780,
											"end": 2835,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2831,
											"end": 2832,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2828,
											"end": 2829,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2821,
											"end": 2833,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2780,
											"end": 2835,
											"name": "tag",
											"source": 15,
											"value": "866"
										},
										{
											"begin": 2780,
											"end": 2835,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2871,
											"end": 2873,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2858,
											"end": 2874,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 2897,
											"end": 2915,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2889,
											"end": 2895,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2886,
											"end": 2916,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 2883,
											"end": 2939,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2883,
											"end": 2939,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "868"
										},
										{
											"begin": 2883,
											"end": 2939,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2919,
											"end": 2937,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "868"
										},
										{
											"begin": 2919,
											"end": 2937,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "836"
										},
										{
											"begin": 2919,
											"end": 2937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2919,
											"end": 2937,
											"name": "tag",
											"source": 15,
											"value": "868"
										},
										{
											"begin": 2919,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2968,
											"end": 2970,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2962,
											"end": 2971,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 3060,
											"end": 3062,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 3022,
											"end": 3039,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3022,
											"end": 3039,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3018,
											"end": 3049,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3018,
											"end": 3049,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3018,
											"end": 3049,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3051,
											"end": 3053,
											"name": "PUSH",
											"source": 15,
											"value": "3F"
										},
										{
											"begin": 3014,
											"end": 3054,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3010,
											"end": 3064,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2998,
											"end": 3065,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2998,
											"end": 3065,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3080,
											"end": 3114,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3080,
											"end": 3114,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 3116,
											"end": 3138,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3116,
											"end": 3138,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3116,
											"end": 3138,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 3077,
											"end": 3139,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 3074,
											"end": 3162,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3074,
											"end": 3162,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "870"
										},
										{
											"begin": 3074,
											"end": 3162,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3142,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "870"
										},
										{
											"begin": 3142,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "836"
										},
										{
											"begin": 3142,
											"end": 3160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3142,
											"end": 3160,
											"name": "tag",
											"source": 15,
											"value": "870"
										},
										{
											"begin": 3142,
											"end": 3160,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3178,
											"end": 3180,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3171,
											"end": 3193,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3202,
											"end": 3224,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3202,
											"end": 3224,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3202,
											"end": 3224,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3243,
											"end": 3258,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3243,
											"end": 3258,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3243,
											"end": 3258,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3260,
											"end": 3262,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3239,
											"end": 3263,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3236,
											"end": 3273,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 3233,
											"end": 3290,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3233,
											"end": 3290,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "871"
										},
										{
											"begin": 3233,
											"end": 3290,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3286,
											"end": 3287,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3283,
											"end": 3284,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3276,
											"end": 3288,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3233,
											"end": 3290,
											"name": "tag",
											"source": 15,
											"value": "871"
										},
										{
											"begin": 3233,
											"end": 3290,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3342,
											"end": 3348,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3337,
											"end": 3339,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3333,
											"end": 3335,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3329,
											"end": 3340,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3324,
											"end": 3326,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3316,
											"end": 3322,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3312,
											"end": 3327,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3299,
											"end": 3349,
											"name": "CALLDATACOPY",
											"source": 15
										},
										{
											"begin": 3395,
											"end": 3396,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3392,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3381,
											"end": 3387,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3373,
											"end": 3379,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3369,
											"end": 3388,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3365,
											"end": 3393,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3358,
											"end": 3397,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3416,
											"end": 3422,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3406,
											"end": 3422,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 3406,
											"end": 3422,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3406,
											"end": 3422,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3406,
											"end": 3422,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3406,
											"end": 3422,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2349,
											"end": 3428,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2349,
											"end": 3428,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2349,
											"end": 3428,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2349,
											"end": 3428,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2349,
											"end": 3428,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2349,
											"end": 3428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3851,
											"end": 4317,
											"name": "tag",
											"source": 15,
											"value": "134"
										},
										{
											"begin": 3851,
											"end": 4317,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3928,
											"end": 3934,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3936,
											"end": 3942,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3944,
											"end": 3950,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3997,
											"end": 3999,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 3985,
											"end": 3994,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3976,
											"end": 3983,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 3972,
											"end": 3995,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 3968,
											"end": 4000,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 3965,
											"end": 4017,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3965,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "875"
										},
										{
											"begin": 3965,
											"end": 4017,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4013,
											"end": 4014,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4010,
											"end": 4011,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4003,
											"end": 4015,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3965,
											"end": 4017,
											"name": "tag",
											"source": 15,
											"value": "875"
										},
										{
											"begin": 3965,
											"end": 4017,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4058,
											"end": 4081,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4058,
											"end": 4081,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 4058,
											"end": 4081,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 4178,
											"end": 4180,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4163,
											"end": 4181,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4163,
											"end": 4181,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4150,
											"end": 4182,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 4150,
											"end": 4182,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4281,
											"end": 4283,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4266,
											"end": 4284,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4266,
											"end": 4284,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4266,
											"end": 4284,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4253,
											"end": 4285,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 4253,
											"end": 4285,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3851,
											"end": 4317,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3851,
											"end": 4317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4322,
											"end": 4572,
											"name": "tag",
											"source": 15,
											"value": "837"
										},
										{
											"begin": 4322,
											"end": 4572,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4407,
											"end": 4408,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4417,
											"end": 4530,
											"name": "tag",
											"source": 15,
											"value": "877"
										},
										{
											"begin": 4417,
											"end": 4530,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4431,
											"end": 4437,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4428,
											"end": 4429,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4425,
											"end": 4438,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 4417,
											"end": 4530,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4417,
											"end": 4530,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "879"
										},
										{
											"begin": 4417,
											"end": 4530,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4507,
											"end": 4518,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4507,
											"end": 4518,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4507,
											"end": 4518,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4501,
											"end": 4519,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 4488,
											"end": 4499,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4488,
											"end": 4499,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4488,
											"end": 4499,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4481,
											"end": 4520,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4453,
											"end": 4455,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4446,
											"end": 4456,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4417,
											"end": 4530,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "877"
										},
										{
											"begin": 4417,
											"end": 4530,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4417,
											"end": 4530,
											"name": "tag",
											"source": 15,
											"value": "879"
										},
										{
											"begin": 4417,
											"end": 4530,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4564,
											"end": 4565,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4546,
											"end": 4562,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4546,
											"end": 4562,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4539,
											"end": 4566,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4322,
											"end": 4572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4577,
											"end": 4973,
											"name": "tag",
											"source": 15,
											"value": "179"
										},
										{
											"begin": 4577,
											"end": 4973,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4726,
											"end": 4728,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4715,
											"end": 4724,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4708,
											"end": 4729,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4689,
											"end": 4693,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4758,
											"end": 4764,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4752,
											"end": 4765,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 4801,
											"end": 4807,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4796,
											"end": 4798,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4785,
											"end": 4794,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4774,
											"end": 4808,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4817,
											"end": 4896,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "881"
										},
										{
											"begin": 4889,
											"end": 4895,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4884,
											"end": 4886,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4882,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4869,
											"end": 4887,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4864,
											"end": 4866,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4856,
											"end": 4862,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 4852,
											"end": 4867,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4817,
											"end": 4896,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "837"
										},
										{
											"begin": 4817,
											"end": 4896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4817,
											"end": 4896,
											"name": "tag",
											"source": 15,
											"value": "881"
										},
										{
											"begin": 4817,
											"end": 4896,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4957,
											"end": 4959,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 4936,
											"end": 4951,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4932,
											"end": 4961,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4917,
											"end": 4962,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4917,
											"end": 4962,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4917,
											"end": 4962,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4917,
											"end": 4962,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4964,
											"end": 4966,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4913,
											"end": 4967,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4913,
											"end": 4967,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4577,
											"end": 4973,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4577,
											"end": 4973,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5709,
											"end": 5956,
											"name": "tag",
											"source": 15,
											"value": "203"
										},
										{
											"begin": 5709,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5768,
											"end": 5774,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5821,
											"end": 5823,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5809,
											"end": 5818,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5800,
											"end": 5807,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5796,
											"end": 5819,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 5792,
											"end": 5824,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 5789,
											"end": 5841,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5789,
											"end": 5841,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "885"
										},
										{
											"begin": 5789,
											"end": 5841,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5837,
											"end": 5838,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5834,
											"end": 5835,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5827,
											"end": 5839,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 5789,
											"end": 5841,
											"name": "tag",
											"source": 15,
											"value": "885"
										},
										{
											"begin": 5789,
											"end": 5841,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5876,
											"end": 5885,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5863,
											"end": 5886,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 5895,
											"end": 5926,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "827"
										},
										{
											"begin": 5920,
											"end": 5925,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5895,
											"end": 5926,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "835"
										},
										{
											"begin": 5895,
											"end": 5926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5961,
											"end": 6088,
											"name": "tag",
											"source": 15,
											"value": "255"
										},
										{
											"begin": 5961,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6022,
											"end": 6032,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 6017,
											"end": 6020,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 6013,
											"end": 6033,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 6010,
											"end": 6011,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6003,
											"end": 6034,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6053,
											"end": 6057,
											"name": "PUSH",
											"source": 15,
											"value": "21"
										},
										{
											"begin": 6050,
											"end": 6051,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 6043,
											"end": 6058,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6077,
											"end": 6081,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 6074,
											"end": 6075,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6067,
											"end": 6082,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 6093,
											"end": 6334,
											"name": "tag",
											"source": 15,
											"value": "838"
										},
										{
											"begin": 6093,
											"end": 6334,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6178,
											"end": 6179,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 6171,
											"end": 6176,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6168,
											"end": 6180,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 6158,
											"end": 6301,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "889"
										},
										{
											"begin": 6158,
											"end": 6301,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6223,
											"end": 6233,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 6218,
											"end": 6221,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 6214,
											"end": 6234,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 6211,
											"end": 6212,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6204,
											"end": 6235,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6258,
											"end": 6262,
											"name": "PUSH",
											"source": 15,
											"value": "21"
										},
										{
											"begin": 6255,
											"end": 6256,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 6248,
											"end": 6263,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6286,
											"end": 6290,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 6283,
											"end": 6284,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6276,
											"end": 6291,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 6158,
											"end": 6301,
											"name": "tag",
											"source": 15,
											"value": "889"
										},
										{
											"begin": 6158,
											"end": 6301,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6310,
											"end": 6328,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6310,
											"end": 6328,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6093,
											"end": 6334,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6339,
											"end": 6555,
											"name": "tag",
											"source": 15,
											"value": "219"
										},
										{
											"begin": 6339,
											"end": 6555,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6489,
											"end": 6491,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6474,
											"end": 6492,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6474,
											"end": 6492,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6501,
											"end": 6549,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "245"
										},
										{
											"begin": 6478,
											"end": 6487,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6531,
											"end": 6537,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6501,
											"end": 6549,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "838"
										},
										{
											"begin": 6501,
											"end": 6549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6560,
											"end": 6910,
											"name": "tag",
											"source": 15,
											"value": "228"
										},
										{
											"begin": 6560,
											"end": 6910,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6646,
											"end": 6652,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6654,
											"end": 6660,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6707,
											"end": 6709,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 6695,
											"end": 6704,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6686,
											"end": 6693,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 6682,
											"end": 6705,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 6678,
											"end": 6710,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 6675,
											"end": 6727,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6675,
											"end": 6727,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "893"
										},
										{
											"begin": 6675,
											"end": 6727,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6723,
											"end": 6724,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6720,
											"end": 6721,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6713,
											"end": 6725,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 6675,
											"end": 6727,
											"name": "tag",
											"source": 15,
											"value": "893"
										},
										{
											"begin": 6675,
											"end": 6727,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6762,
											"end": 6771,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6749,
											"end": 6772,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 6781,
											"end": 6812,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "894"
										},
										{
											"begin": 6806,
											"end": 6811,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6781,
											"end": 6812,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "835"
										},
										{
											"begin": 6781,
											"end": 6812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6781,
											"end": 6812,
											"name": "tag",
											"source": 15,
											"value": "894"
										},
										{
											"begin": 6781,
											"end": 6812,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6831,
											"end": 6836,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6855,
											"end": 6904,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "895"
										},
										{
											"begin": 6900,
											"end": 6902,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6885,
											"end": 6903,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6885,
											"end": 6903,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6855,
											"end": 6904,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "834"
										},
										{
											"begin": 6855,
											"end": 6904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6855,
											"end": 6904,
											"name": "tag",
											"source": 15,
											"value": "895"
										},
										{
											"begin": 6855,
											"end": 6904,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6845,
											"end": 6904,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6845,
											"end": 6904,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6560,
											"end": 6910,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6560,
											"end": 6910,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6560,
											"end": 6910,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6560,
											"end": 6910,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6560,
											"end": 6910,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6560,
											"end": 6910,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7138,
											"end": 8350,
											"name": "tag",
											"source": 15,
											"value": "243"
										},
										{
											"begin": 7138,
											"end": 8350,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7275,
											"end": 7281,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7283,
											"end": 7289,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7291,
											"end": 7297,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7299,
											"end": 7305,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7307,
											"end": 7313,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7315,
											"end": 7321,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7323,
											"end": 7329,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7331,
											"end": 7337,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7384,
											"end": 7387,
											"name": "PUSH",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 7372,
											"end": 7381,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 7363,
											"end": 7370,
											"name": "DUP12",
											"source": 15
										},
										{
											"begin": 7359,
											"end": 7382,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 7355,
											"end": 7388,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 7352,
											"end": 7405,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 7352,
											"end": 7405,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "898"
										},
										{
											"begin": 7352,
											"end": 7405,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7401,
											"end": 7402,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7398,
											"end": 7399,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7391,
											"end": 7403,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 7352,
											"end": 7405,
											"name": "tag",
											"source": 15,
											"value": "898"
										},
										{
											"begin": 7352,
											"end": 7405,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7440,
											"end": 7449,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 7427,
											"end": 7450,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 7459,
											"end": 7490,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "899"
										},
										{
											"begin": 7484,
											"end": 7489,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7459,
											"end": 7490,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "835"
										},
										{
											"begin": 7459,
											"end": 7490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7459,
											"end": 7490,
											"name": "tag",
											"source": 15,
											"value": "899"
										},
										{
											"begin": 7459,
											"end": 7490,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7509,
											"end": 7514,
											"name": "SWAP8",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7566,
											"end": 7568,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7551,
											"end": 7569,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 7551,
											"end": 7569,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7538,
											"end": 7570,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 7579,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "900"
										},
										{
											"begin": 7538,
											"end": 7570,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7579,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "835"
										},
										{
											"begin": 7579,
											"end": 7612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7579,
											"end": 7612,
											"name": "tag",
											"source": 15,
											"value": "900"
										},
										{
											"begin": 7579,
											"end": 7612,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7631,
											"end": 7638,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7690,
											"end": 7692,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 7675,
											"end": 7693,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 7675,
											"end": 7693,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7662,
											"end": 7694,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 7703,
											"end": 7736,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "901"
										},
										{
											"begin": 7662,
											"end": 7694,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7703,
											"end": 7736,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "835"
										},
										{
											"begin": 7703,
											"end": 7736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7703,
											"end": 7736,
											"name": "tag",
											"source": 15,
											"value": "901"
										},
										{
											"begin": 7703,
											"end": 7736,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7755,
											"end": 7762,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7835,
											"end": 7837,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 7820,
											"end": 7838,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 7820,
											"end": 7838,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7807,
											"end": 7839,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 7807,
											"end": 7839,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7938,
											"end": 7941,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 7923,
											"end": 7942,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 7923,
											"end": 7942,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7910,
											"end": 7943,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 7910,
											"end": 7943,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8021,
											"end": 8024,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 8006,
											"end": 8025,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 8006,
											"end": 8025,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7993,
											"end": 8026,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 8035,
											"end": 8068,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "902"
										},
										{
											"begin": 7993,
											"end": 8026,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8035,
											"end": 8068,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "835"
										},
										{
											"begin": 8035,
											"end": 8068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8035,
											"end": 8068,
											"name": "tag",
											"source": 15,
											"value": "902"
										},
										{
											"begin": 8035,
											"end": 8068,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8087,
											"end": 8094,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8146,
											"end": 8149,
											"name": "PUSH",
											"source": 15,
											"value": "C0"
										},
										{
											"begin": 8131,
											"end": 8150,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 8131,
											"end": 8150,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8118,
											"end": 8151,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 8160,
											"end": 8193,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "903"
										},
										{
											"begin": 8118,
											"end": 8151,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8160,
											"end": 8193,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "835"
										},
										{
											"begin": 8160,
											"end": 8193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8160,
											"end": 8193,
											"name": "tag",
											"source": 15,
											"value": "903"
										},
										{
											"begin": 8160,
											"end": 8193,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8212,
											"end": 8219,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8271,
											"end": 8274,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 8256,
											"end": 8275,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 8256,
											"end": 8275,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8243,
											"end": 8276,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 8285,
											"end": 8318,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "904"
										},
										{
											"begin": 8243,
											"end": 8276,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8285,
											"end": 8318,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "835"
										},
										{
											"begin": 8285,
											"end": 8318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8285,
											"end": 8318,
											"name": "tag",
											"source": 15,
											"value": "904"
										},
										{
											"begin": 8285,
											"end": 8318,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8337,
											"end": 8344,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8327,
											"end": 8344,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8327,
											"end": 8344,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8327,
											"end": 8344,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7138,
											"end": 8350,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 7138,
											"end": 8350,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 7138,
											"end": 8350,
											"name": "SWAP9",
											"source": 15
										},
										{
											"begin": 7138,
											"end": 8350,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7138,
											"end": 8350,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 7138,
											"end": 8350,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 7138,
											"end": 8350,
											"name": "SWAP9",
											"source": 15
										},
										{
											"begin": 7138,
											"end": 8350,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7138,
											"end": 8350,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 7138,
											"end": 8350,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": 7138,
											"end": 8350,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7138,
											"end": 8350,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8355,
											"end": 8482,
											"name": "tag",
											"source": 15,
											"value": "839"
										},
										{
											"begin": 8355,
											"end": 8482,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8416,
											"end": 8426,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 8411,
											"end": 8414,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 8407,
											"end": 8427,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 8404,
											"end": 8405,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8397,
											"end": 8428,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8447,
											"end": 8451,
											"name": "PUSH",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 8444,
											"end": 8445,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 8437,
											"end": 8452,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8471,
											"end": 8475,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 8468,
											"end": 8469,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8461,
											"end": 8476,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 8487,
											"end": 8724,
											"name": "tag",
											"source": 15,
											"value": "248"
										},
										{
											"begin": 8487,
											"end": 8724,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8559,
											"end": 8568,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8559,
											"end": 8568,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8559,
											"end": 8568,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 8526,
											"end": 8533,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8584,
											"end": 8593,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8584,
											"end": 8593,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8595,
											"end": 8613,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8595,
											"end": 8613,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 8580,
											"end": 8614,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 8577,
											"end": 8637,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8577,
											"end": 8637,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "908"
										},
										{
											"begin": 8577,
											"end": 8637,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8617,
											"end": 8635,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "908"
										},
										{
											"begin": 8617,
											"end": 8635,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "839"
										},
										{
											"begin": 8617,
											"end": 8635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8617,
											"end": 8635,
											"name": "tag",
											"source": 15,
											"value": "908"
										},
										{
											"begin": 8617,
											"end": 8635,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8690,
											"end": 8691,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8681,
											"end": 8688,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8676,
											"end": 8692,
											"name": "SDIV",
											"source": 15
										},
										{
											"begin": 8673,
											"end": 8674,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8670,
											"end": 8693,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 8666,
											"end": 8667,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8659,
											"end": 8668,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8656,
											"end": 8694,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 8646,
											"end": 8718,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "245"
										},
										{
											"begin": 8646,
											"end": 8718,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8698,
											"end": 8716,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "245"
										},
										{
											"begin": 8698,
											"end": 8716,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "839"
										},
										{
											"begin": 8698,
											"end": 8716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9076,
											"end": 9244,
											"name": "tag",
											"source": 15,
											"value": "260"
										},
										{
											"begin": 9076,
											"end": 9244,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9149,
											"end": 9158,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 9149,
											"end": 9158,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9149,
											"end": 9158,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 9180,
											"end": 9189,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9180,
											"end": 9189,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 9197,
											"end": 9212,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9197,
											"end": 9212,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9197,
											"end": 9212,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 9191,
											"end": 9213,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 9191,
											"end": 9213,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 9177,
											"end": 9214,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 9167,
											"end": 9238,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "245"
										},
										{
											"begin": 9167,
											"end": 9238,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 9218,
											"end": 9236,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "245"
										},
										{
											"begin": 9218,
											"end": 9236,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "839"
										},
										{
											"begin": 9218,
											"end": 9236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9249,
											"end": 9466,
											"name": "tag",
											"source": 15,
											"value": "262"
										},
										{
											"begin": 9249,
											"end": 9466,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9289,
											"end": 9290,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9315,
											"end": 9316,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9305,
											"end": 9437,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "916"
										},
										{
											"begin": 9305,
											"end": 9437,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 9359,
											"end": 9369,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 9354,
											"end": 9357,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 9350,
											"end": 9370,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 9347,
											"end": 9348,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9340,
											"end": 9371,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9394,
											"end": 9398,
											"name": "PUSH",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 9391,
											"end": 9392,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 9384,
											"end": 9399,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9422,
											"end": 9426,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 9419,
											"end": 9420,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9412,
											"end": 9427,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 9305,
											"end": 9437,
											"name": "tag",
											"source": 15,
											"value": "916"
										},
										{
											"begin": 9305,
											"end": 9437,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9451,
											"end": 9460,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 9451,
											"end": 9460,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9249,
											"end": 9466,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9471,
											"end": 9599,
											"name": "tag",
											"source": 15,
											"value": "275"
										},
										{
											"begin": 9471,
											"end": 9599,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9538,
											"end": 9547,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9538,
											"end": 9547,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9538,
											"end": 9547,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 9559,
											"end": 9570,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9559,
											"end": 9570,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9559,
											"end": 9570,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 9556,
											"end": 9593,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 9556,
											"end": 9593,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "245"
										},
										{
											"begin": 9556,
											"end": 9593,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 9573,
											"end": 9591,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "245"
										},
										{
											"begin": 9573,
											"end": 9591,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "839"
										},
										{
											"begin": 9573,
											"end": 9591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9604,
											"end": 9979,
											"name": "tag",
											"source": 15,
											"value": "840"
										},
										{
											"begin": 9604,
											"end": 9979,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9692,
											"end": 9693,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 9710,
											"end": 9715,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9724,
											"end": 9973,
											"name": "tag",
											"source": 15,
											"value": "921"
										},
										{
											"begin": 9724,
											"end": 9973,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9745,
											"end": 9746,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 9735,
											"end": 9743,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 9732,
											"end": 9747,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 9724,
											"end": 9973,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 9724,
											"end": 9973,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "923"
										},
										{
											"begin": 9724,
											"end": 9973,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 9795,
											"end": 9799,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 9790,
											"end": 9793,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 9786,
											"end": 9800,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 9780,
											"end": 9784,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9777,
											"end": 9801,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 9774,
											"end": 9824,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 9774,
											"end": 9824,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "925"
										},
										{
											"begin": 9774,
											"end": 9824,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 9804,
											"end": 9822,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "925"
										},
										{
											"begin": 9804,
											"end": 9822,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "839"
										},
										{
											"begin": 9804,
											"end": 9822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9804,
											"end": 9822,
											"name": "tag",
											"source": 15,
											"value": "925"
										},
										{
											"begin": 9804,
											"end": 9822,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9854,
											"end": 9855,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 9844,
											"end": 9852,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 9840,
											"end": 9856,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 9837,
											"end": 9886,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 9837,
											"end": 9886,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "926"
										},
										{
											"begin": 9837,
											"end": 9886,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 9868,
											"end": 9884,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9868,
											"end": 9884,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9868,
											"end": 9884,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 9868,
											"end": 9884,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9837,
											"end": 9886,
											"name": "tag",
											"source": 15,
											"value": "926"
										},
										{
											"begin": 9837,
											"end": 9886,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9951,
											"end": 9952,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 9947,
											"end": 9963,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 9947,
											"end": 9963,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9947,
											"end": 9963,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 9947,
											"end": 9963,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 9947,
											"end": 9963,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 9907,
											"end": 9922,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 9907,
											"end": 9922,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 9724,
											"end": 9973,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "921"
										},
										{
											"begin": 9724,
											"end": 9973,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9724,
											"end": 9973,
											"name": "tag",
											"source": 15,
											"value": "923"
										},
										{
											"begin": 9724,
											"end": 9973,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9604,
											"end": 9979,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 9604,
											"end": 9979,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9604,
											"end": 9979,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 9604,
											"end": 9979,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9604,
											"end": 9979,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9604,
											"end": 9979,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9604,
											"end": 9979,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9984,
											"end": 10886,
											"name": "tag",
											"source": 15,
											"value": "841"
										},
										{
											"begin": 9984,
											"end": 10886,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10033,
											"end": 10038,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10063,
											"end": 10071,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10053,
											"end": 10133,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "928"
										},
										{
											"begin": 10053,
											"end": 10133,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10104,
											"end": 10105,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 10118,
											"end": 10123,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "245"
										},
										{
											"begin": 10118,
											"end": 10123,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10053,
											"end": 10133,
											"name": "tag",
											"source": 15,
											"value": "928"
										},
										{
											"begin": 10053,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10152,
											"end": 10156,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10142,
											"end": 10218,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "929"
										},
										{
											"begin": 10142,
											"end": 10218,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10189,
											"end": 10190,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10208,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "245"
										},
										{
											"begin": 10203,
											"end": 10208,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10142,
											"end": 10218,
											"name": "tag",
											"source": 15,
											"value": "929"
										},
										{
											"begin": 10142,
											"end": 10218,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10234,
											"end": 10238,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10252,
											"end": 10253,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 10247,
											"end": 10306,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10247,
											"end": 10306,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 10247,
											"end": 10306,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "931"
										},
										{
											"begin": 10247,
											"end": 10306,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10320,
											"end": 10321,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 10315,
											"end": 10489,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10315,
											"end": 10489,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 10315,
											"end": 10489,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "932"
										},
										{
											"begin": 10315,
											"end": 10489,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10227,
											"end": 10489,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "930"
										},
										{
											"begin": 10227,
											"end": 10489,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10247,
											"end": 10306,
											"name": "tag",
											"source": 15,
											"value": "931"
										},
										{
											"begin": 10247,
											"end": 10306,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10277,
											"end": 10278,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 10268,
											"end": 10278,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 10268,
											"end": 10278,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10291,
											"end": 10296,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10291,
											"end": 10296,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "245"
										},
										{
											"begin": 10291,
											"end": 10296,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10315,
											"end": 10489,
											"name": "tag",
											"source": 15,
											"value": "932"
										},
										{
											"begin": 10315,
											"end": 10489,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10352,
											"end": 10355,
											"name": "PUSH",
											"source": 15,
											"value": "FF"
										},
										{
											"begin": 10342,
											"end": 10350,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 10339,
											"end": 10356,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 10336,
											"end": 10379,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 10336,
											"end": 10379,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "934"
										},
										{
											"begin": 10336,
											"end": 10379,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10359,
											"end": 10377,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "934"
										},
										{
											"begin": 10359,
											"end": 10377,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "839"
										},
										{
											"begin": 10359,
											"end": 10377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10359,
											"end": 10377,
											"name": "tag",
											"source": 15,
											"value": "934"
										},
										{
											"begin": 10359,
											"end": 10377,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10415,
											"end": 10416,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 10401,
											"end": 10417,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10401,
											"end": 10417,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 10474,
											"end": 10479,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "245"
										},
										{
											"begin": 10474,
											"end": 10479,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10227,
											"end": 10489,
											"name": "tag",
											"source": 15,
											"value": "930"
										},
										{
											"begin": 10227,
											"end": 10489,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10227,
											"end": 10489,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10573,
											"end": 10575,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 10563,
											"end": 10571,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 10560,
											"end": 10576,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 10554,
											"end": 10557,
											"name": "PUSH",
											"source": 15,
											"value": "133"
										},
										{
											"begin": 10548,
											"end": 10552,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 10545,
											"end": 10558,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 10541,
											"end": 10577,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 10535,
											"end": 10537,
											"name": "PUSH",
											"source": 15,
											"value": "4E"
										},
										{
											"begin": 10525,
											"end": 10533,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 10522,
											"end": 10538,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 10517,
											"end": 10519,
											"name": "PUSH",
											"source": 15,
											"value": "B"
										},
										{
											"begin": 10511,
											"end": 10515,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 10504,
											"end": 10539,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 10501,
											"end": 10578,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 10498,
											"end": 10701,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 10498,
											"end": 10701,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "935"
										},
										{
											"begin": 10498,
											"end": 10701,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10610,
											"end": 10629,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10610,
											"end": 10629,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10610,
											"end": 10629,
											"name": "EXP",
											"source": 15
										},
										{
											"begin": 10686,
											"end": 10691,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "245"
										},
										{
											"begin": 10686,
											"end": 10691,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10498,
											"end": 10701,
											"name": "tag",
											"source": 15,
											"value": "935"
										},
										{
											"begin": 10498,
											"end": 10701,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10733,
											"end": 10775,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "936"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10758,
											"end": 10766,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 10752,
											"end": 10756,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 10733,
											"end": 10775,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "840"
										},
										{
											"begin": 10733,
											"end": 10775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10733,
											"end": 10775,
											"name": "tag",
											"source": 15,
											"value": "936"
										},
										{
											"begin": 10733,
											"end": 10775,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10811,
											"end": 10817,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 10807,
											"end": 10808,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10803,
											"end": 10809,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 10799,
											"end": 10818,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 10790,
											"end": 10797,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10787,
											"end": 10819,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 10784,
											"end": 10842,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 10784,
											"end": 10842,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "938"
										},
										{
											"begin": 10784,
											"end": 10842,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10822,
											"end": 10840,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "938"
										},
										{
											"begin": 10822,
											"end": 10840,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "839"
										},
										{
											"begin": 10822,
											"end": 10840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10822,
											"end": 10840,
											"name": "tag",
											"source": 15,
											"value": "938"
										},
										{
											"begin": 10822,
											"end": 10840,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10860,
											"end": 10880,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 10860,
											"end": 10880,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 9984,
											"end": 10886,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9984,
											"end": 10886,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10891,
											"end": 11022,
											"name": "tag",
											"source": 15,
											"value": "277"
										},
										{
											"begin": 10891,
											"end": 11022,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10951,
											"end": 10956,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10980,
											"end": 11016,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "827"
										},
										{
											"begin": 11007,
											"end": 11015,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 11001,
											"end": 11005,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 10980,
											"end": 11016,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "841"
										},
										{
											"begin": 10980,
											"end": 11016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11382,
											"end": 11561,
											"name": "tag",
											"source": 15,
											"value": "842"
										},
										{
											"begin": 11382,
											"end": 11561,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11460,
											"end": 11473,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 11460,
											"end": 11473,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 11513,
											"end": 11535,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11502,
											"end": 11536,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11502,
											"end": 11536,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 11492,
											"end": 11537,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11492,
											"end": 11537,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 11482,
											"end": 11555,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "315"
										},
										{
											"begin": 11482,
											"end": 11555,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 11551,
											"end": 11552,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11548,
											"end": 11549,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 11541,
											"end": 11553,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 11566,
											"end": 12137,
											"name": "tag",
											"source": 15,
											"value": "296"
										},
										{
											"begin": 11566,
											"end": 12137,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11669,
											"end": 11675,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11677,
											"end": 11683,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 11685,
											"end": 11691,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11693,
											"end": 11699,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 11701,
											"end": 11707,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11754,
											"end": 11757,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 11742,
											"end": 11751,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 11733,
											"end": 11740,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 11729,
											"end": 11752,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 11725,
											"end": 11758,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 11722,
											"end": 11775,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 11722,
											"end": 11775,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "945"
										},
										{
											"begin": 11722,
											"end": 11775,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 11771,
											"end": 11772,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11768,
											"end": 11769,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 11761,
											"end": 11773,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 11722,
											"end": 11775,
											"name": "tag",
											"source": 15,
											"value": "945"
										},
										{
											"begin": 11722,
											"end": 11775,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11794,
											"end": 11833,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "946"
										},
										{
											"begin": 11823,
											"end": 11832,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 11794,
											"end": 11833,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "842"
										},
										{
											"begin": 11794,
											"end": 11833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11794,
											"end": 11833,
											"name": "tag",
											"source": 15,
											"value": "946"
										},
										{
											"begin": 11794,
											"end": 11833,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11873,
											"end": 11875,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 11858,
											"end": 11876,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 11858,
											"end": 11876,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11852,
											"end": 11877,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 11939,
											"end": 11941,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 11924,
											"end": 11942,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 11924,
											"end": 11942,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11918,
											"end": 11943,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 12033,
											"end": 12035,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 12018,
											"end": 12036,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 12018,
											"end": 12036,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12012,
											"end": 12037,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 11784,
											"end": 11833,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 11784,
											"end": 11833,
											"name": "SWAP8",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11852,
											"end": 11877,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11852,
											"end": 11877,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11918,
											"end": 11943,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12012,
											"end": 12037,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12082,
											"end": 12131,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "947"
										},
										{
											"begin": 12126,
											"end": 12129,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 12111,
											"end": 12130,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 12111,
											"end": 12130,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12082,
											"end": 12131,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "842"
										},
										{
											"begin": 12082,
											"end": 12131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12082,
											"end": 12131,
											"name": "tag",
											"source": 15,
											"value": "947"
										},
										{
											"begin": 12082,
											"end": 12131,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12072,
											"end": 12131,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12072,
											"end": 12131,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11566,
											"end": 12137,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 11566,
											"end": 12137,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 11566,
											"end": 12137,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11566,
											"end": 12137,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 11566,
											"end": 12137,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 11566,
											"end": 12137,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11566,
											"end": 12137,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 11566,
											"end": 12137,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11566,
											"end": 12137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12892,
											"end": 13237,
											"name": "tag",
											"source": 15,
											"value": "363"
										},
										{
											"begin": 12892,
											"end": 13237,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13094,
											"end": 13096,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 13076,
											"end": 13097,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 13076,
											"end": 13097,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13076,
											"end": 13097,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13133,
											"end": 13135,
											"name": "PUSH",
											"source": 15,
											"value": "15"
										},
										{
											"begin": 13113,
											"end": 13131,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13113,
											"end": 13131,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13113,
											"end": 13131,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13106,
											"end": 13136,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1250D3C8185B1C9958591E48199A5B985B1A5E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13167,
											"end": 13169,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 13152,
											"end": 13170,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13152,
											"end": 13170,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13145,
											"end": 13196,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13228,
											"end": 13230,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 13213,
											"end": 13231,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13213,
											"end": 13231,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12892,
											"end": 13237,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13242,
											"end": 13572,
											"name": "tag",
											"source": 15,
											"value": "367"
										},
										{
											"begin": 13242,
											"end": 13572,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13444,
											"end": 13446,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 13426,
											"end": 13447,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 13426,
											"end": 13447,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13426,
											"end": 13447,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13483,
											"end": 13484,
											"name": "PUSH",
											"source": 15,
											"value": "7"
										},
										{
											"begin": 13463,
											"end": 13481,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13463,
											"end": 13481,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13463,
											"end": 13481,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13456,
											"end": 13485,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "199C99595E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13516,
											"end": 13518,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 13501,
											"end": 13519,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13501,
											"end": 13519,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13494,
											"end": 13531,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13563,
											"end": 13565,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 13548,
											"end": 13566,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13548,
											"end": 13566,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13242,
											"end": 13572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15931,
											"end": 16066,
											"name": "tag",
											"source": 15,
											"value": "420"
										},
										{
											"begin": 15931,
											"end": 16066,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15970,
											"end": 15973,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15991,
											"end": 16008,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 15991,
											"end": 16008,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15991,
											"end": 16008,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15988,
											"end": 16031,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "960"
										},
										{
											"begin": 15988,
											"end": 16031,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 16011,
											"end": 16029,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "960"
										},
										{
											"begin": 16011,
											"end": 16029,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "839"
										},
										{
											"begin": 16011,
											"end": 16029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16011,
											"end": 16029,
											"name": "tag",
											"source": 15,
											"value": "960"
										},
										{
											"begin": 16011,
											"end": 16029,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16058,
											"end": 16059,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 16047,
											"end": 16060,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16047,
											"end": 16060,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15931,
											"end": 16066,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17427,
											"end": 17554,
											"name": "tag",
											"source": 15,
											"value": "458"
										},
										{
											"begin": 17427,
											"end": 17554,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17488,
											"end": 17498,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 17483,
											"end": 17486,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 17479,
											"end": 17499,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 17476,
											"end": 17477,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17469,
											"end": 17500,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 17519,
											"end": 17523,
											"name": "PUSH",
											"source": 15,
											"value": "32"
										},
										{
											"begin": 17516,
											"end": 17517,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 17509,
											"end": 17524,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 17543,
											"end": 17547,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 17540,
											"end": 17541,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17533,
											"end": 17548,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 18394,
											"end": 18671,
											"name": "tag",
											"source": 15,
											"value": "509"
										},
										{
											"begin": 18394,
											"end": 18671,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18461,
											"end": 18467,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 18514,
											"end": 18516,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 18502,
											"end": 18511,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18493,
											"end": 18500,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 18489,
											"end": 18512,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 18485,
											"end": 18517,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 18482,
											"end": 18534,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 18482,
											"end": 18534,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "970"
										},
										{
											"begin": 18482,
											"end": 18534,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 18530,
											"end": 18531,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 18527,
											"end": 18528,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 18520,
											"end": 18532,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 18482,
											"end": 18534,
											"name": "tag",
											"source": 15,
											"value": "970"
										},
										{
											"begin": 18482,
											"end": 18534,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18562,
											"end": 18571,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 18556,
											"end": 18572,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 18615,
											"end": 18620,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 18608,
											"end": 18621,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 18601,
											"end": 18622,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 18594,
											"end": 18599,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 18591,
											"end": 18623,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 18581,
											"end": 18641,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "827"
										},
										{
											"begin": 18581,
											"end": 18641,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 18637,
											"end": 18638,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 18634,
											"end": 18635,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 18627,
											"end": 18639,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 19435,
											"end": 19722,
											"name": "tag",
											"source": 15,
											"value": "517"
										},
										{
											"begin": 19435,
											"end": 19722,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19625,
											"end": 19650,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 19625,
											"end": 19650,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 19625,
											"end": 19650,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 19613,
											"end": 19615,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 19598,
											"end": 19616,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 19598,
											"end": 19616,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 19659,
											"end": 19716,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "827"
										},
										{
											"begin": 19712,
											"end": 19714,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 19697,
											"end": 19715,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 19697,
											"end": 19715,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 19689,
											"end": 19695,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 19659,
											"end": 19716,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "838"
										},
										{
											"begin": 19659,
											"end": 19716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19727,
											"end": 19854,
											"name": "tag",
											"source": 15,
											"value": "520"
										},
										{
											"begin": 19727,
											"end": 19854,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19788,
											"end": 19798,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 19783,
											"end": 19786,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 19779,
											"end": 19799,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 19776,
											"end": 19777,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 19769,
											"end": 19800,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 19819,
											"end": 19823,
											"name": "PUSH",
											"source": 15,
											"value": "31"
										},
										{
											"begin": 19816,
											"end": 19817,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 19809,
											"end": 19824,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 19843,
											"end": 19847,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 19840,
											"end": 19841,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 19833,
											"end": 19848,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 19859,
											"end": 19995,
											"name": "tag",
											"source": 15,
											"value": "524"
										},
										{
											"begin": 19859,
											"end": 19995,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19898,
											"end": 19901,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 19926,
											"end": 19931,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 19916,
											"end": 19955,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "979"
										},
										{
											"begin": 19916,
											"end": 19955,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 19935,
											"end": 19953,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "979"
										},
										{
											"begin": 19935,
											"end": 19953,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "839"
										},
										{
											"begin": 19935,
											"end": 19953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19935,
											"end": 19953,
											"name": "tag",
											"source": 15,
											"value": "979"
										},
										{
											"begin": 19935,
											"end": 19953,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 19971,
											"end": 19989,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 19971,
											"end": 19989,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 19859,
											"end": 19995,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20354,
											"end": 20584,
											"name": "tag",
											"source": 15,
											"value": "548"
										},
										{
											"begin": 20354,
											"end": 20584,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20424,
											"end": 20430,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 20477,
											"end": 20479,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 20465,
											"end": 20474,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 20456,
											"end": 20463,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 20452,
											"end": 20475,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 20448,
											"end": 20480,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 20445,
											"end": 20497,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 20445,
											"end": 20497,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "982"
										},
										{
											"begin": 20445,
											"end": 20497,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 20493,
											"end": 20494,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 20490,
											"end": 20491,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 20483,
											"end": 20495,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 20445,
											"end": 20497,
											"name": "tag",
											"source": 15,
											"value": "982"
										},
										{
											"begin": 20445,
											"end": 20497,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20538,
											"end": 20554,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 20538,
											"end": 20554,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 20354,
											"end": 20584,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20354,
											"end": 20584,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23052,
											"end": 23177,
											"name": "tag",
											"source": 15,
											"value": "615"
										},
										{
											"begin": 23052,
											"end": 23177,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23117,
											"end": 23126,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 23117,
											"end": 23126,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 23117,
											"end": 23126,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 23138,
											"end": 23148,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 23138,
											"end": 23148,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 23138,
											"end": 23148,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 23135,
											"end": 23171,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 23135,
											"end": 23171,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "245"
										},
										{
											"begin": 23135,
											"end": 23171,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 23151,
											"end": 23169,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "245"
										},
										{
											"begin": 23151,
											"end": 23169,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "839"
										},
										{
											"begin": 23151,
											"end": 23169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 24591,
											"end": 25021,
											"name": "tag",
											"source": 15,
											"value": "670"
										},
										{
											"begin": 24591,
											"end": 25021,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24838,
											"end": 24863,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 24838,
											"end": 24863,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 24838,
											"end": 24863,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 24894,
											"end": 24896,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 24879,
											"end": 24897,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 24879,
											"end": 24897,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 24872,
											"end": 24906,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 24872,
											"end": 24906,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 24872,
											"end": 24906,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 24937,
											"end": 24939,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 24922,
											"end": 24940,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 24922,
											"end": 24940,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 24915,
											"end": 24949,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 24915,
											"end": 24949,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 24915,
											"end": 24949,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 24825,
											"end": 24828,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 24810,
											"end": 24829,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 24810,
											"end": 24829,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 24958,
											"end": 25015,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "817"
										},
										{
											"begin": 25011,
											"end": 25013,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 24996,
											"end": 25014,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 24996,
											"end": 25014,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 24988,
											"end": 24994,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 24958,
											"end": 25015,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "838"
										},
										{
											"begin": 24958,
											"end": 25015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 26471,
											"end": 26758,
											"name": "tag",
											"source": 15,
											"value": "813"
										},
										{
											"begin": 26471,
											"end": 26758,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26600,
											"end": 26603,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 26638,
											"end": 26644,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 26632,
											"end": 26645,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 26654,
											"end": 26720,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "1006"
										},
										{
											"begin": 26713,
											"end": 26719,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 26708,
											"end": 26711,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 26701,
											"end": 26705,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 26693,
											"end": 26699,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 26689,
											"end": 26706,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 26654,
											"end": 26720,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "837"
										},
										{
											"begin": 26654,
											"end": 26720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 26654,
											"end": 26720,
											"name": "tag",
											"source": 15,
											"value": "1006"
										},
										{
											"begin": 26654,
											"end": 26720,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26736,
											"end": 26752,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 26736,
											"end": 26752,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 26736,
											"end": 26752,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 26736,
											"end": 26752,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 26736,
											"end": 26752,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 26471,
											"end": 26758,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26471,
											"end": 26758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										}
									],
									".data": {
										"75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D": "360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc",
										"C8669CF8EAF883002B9F48E28846A8D408C9B58EA6613BACE374265E43C9BC43": "9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00"
									}
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"ICO/IcoOptimized.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"_getPriceFeed(uint8)": "115afc3a",
							"airdropTokens()": "91152c5c",
							"buyTokens(uint8,uint256)": "940c333e",
							"calculatePaymentAmount(uint8,uint256)": "117d260f",
							"calculateTokenAmount(uint8,uint256)": "05834e67",
							"contributionsInUSD(address)": "c81ffdea",
							"createSale(uint256,uint256,uint256)": "6c1909ed",
							"finalizeICO()": "23cc75a8",
							"freeze()": "62a5af3b",
							"getCurrentSaleId()": "212ea247",
							"getHardCapReached()": "91d8730a",
							"getInvestorCount()": "960524e3",
							"getSaleStartEndTime(uint256)": "c211e1f9",
							"getSoftCapReached()": "06e4d36f",
							"hardCapInUSD()": "c1560a14",
							"initialize(address,address,address,uint256,uint256,address,address,address)": "fd663da2",
							"initiateRefund()": "7fb12001",
							"investorPayments(address,uint8)": "efdcdb45",
							"investors(uint256)": "3feb5f2b",
							"isFreezed()": "b9469e1a",
							"isICOFinalized()": "d1f3b23e",
							"isTokensAirdropped()": "4dee1dc3",
							"owner()": "8da5cb5b",
							"paymentMethodForInvestor(address)": "df4e0593",
							"priceFeedBNB()": "99131e7e",
							"priceFeedUSDC()": "d3d9d1e4",
							"priceFeedUSDT()": "62a469e9",
							"proxiableUUID()": "52d1902d",
							"renounceOwnership()": "715018a6",
							"saleCount()": "a1e89aec",
							"sales(uint256)": "b5f522f7",
							"softCapInUSD()": "2151206e",
							"token()": "fc0c546a",
							"tokensBoughtByInvestor(address)": "e8e87389",
							"totalFundsRaisedUSD()": "721bc38b",
							"totalTokensSold()": "63b20117",
							"transferOwnership(address)": "f2fde38b",
							"unFreeze()": "7cf12b90",
							"upgradeToAndCall(address,bytes)": "4f1ef286",
							"usdc()": "3e413bee",
							"usdt()": "2f48ab7d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"totalTokensSold\",\"type\":\"uint256\"}],\"name\":\"ICOFinalized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"saleId\",\"type\":\"uint256\"}],\"name\":\"ImmediateFinalization\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"saleId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenPriceUSD\",\"type\":\"uint256\"}],\"name\":\"NewSaleCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum ICO.PaymentMethod\",\"name\":\"paymentMethod\",\"type\":\"uint8\"}],\"name\":\"RefundInitiated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"airdroppedAmount\",\"type\":\"uint256\"}],\"name\":\"TokenAirdropped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"saleId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenPurchaseAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenPriceUSD\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountPaid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum ICO.PaymentMethod\",\"name\":\"paymentMethod\",\"type\":\"uint8\"}],\"name\":\"TokensPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum ICO.PaymentMethod\",\"name\":\"paymentMethod\",\"type\":\"uint8\"}],\"name\":\"_getPriceFeed\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"airdropTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum ICO.PaymentMethod\",\"name\":\"paymentMethod\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"paymentAmount\",\"type\":\"uint256\"}],\"name\":\"buyTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum ICO.PaymentMethod\",\"name\":\"paymentMethod\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"calculatePaymentAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum ICO.PaymentMethod\",\"name\":\"paymentMethod\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"paymentAmount\",\"type\":\"uint256\"}],\"name\":\"calculateTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"contributionsInUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tokenPriceUSD\",\"type\":\"uint256\"}],\"name\":\"createSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finalizeICO\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"freeze\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentSaleId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHardCapReached\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getInvestorCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"investorCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getSaleStartEndTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSoftCapReached\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hardCapInUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdt\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdc\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_softCapInUSD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_hardCapInUSD\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_priceFeedBNB\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_priceFeedUSDT\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_priceFeedUSDC\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initiateRefund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"enum ICO.PaymentMethod\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"investorPayments\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"investors\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isFreezed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isICOFinalized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isTokensAirdropped\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"paymentMethodForInvestor\",\"outputs\":[{\"internalType\":\"enum ICO.PaymentMethod\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeedBNB\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeedUSDC\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeedUSDT\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"sales\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenPriceUSD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokensSold\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isFinalized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"softCapInUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokensBoughtByInvestor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalFundsRaisedUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalTokensSold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unFreeze\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdc\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ICO/IcoOptimized.sol\":\"ICO\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xf72d3b11f41fccbbdcacd121f994daab8267ccfceb1fb4f247e4ba274c169d27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e46ee40ddc9e2009176ce5d76aa2c046fd68f2ed52d02d77db191365b7c5b2e\",\"dweb:/ipfs/QmZnxgPmCCHosdvbh4J65uTaFYeGtZGzQ1sXRdeh1y68Zr\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x361126a17677994081cd9cb69c3f50cffff6e920d25cb7e428acdb1ae41d1866\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19ae787a7dd001269cd60a394b1a5261b78925a0fc3a6f927beb2986a9aa56cf\",\"dweb:/ipfs/QmYLfXiuKmcRgTDBEDXMMjXU8t6JxsspUmjxYzqWS55oEv\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x911c3346ee26afe188f3b9dc267ef62a7ccf940aba1afa963e3922f0ca3d8a06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04539f4419e44a831807d7203375d2bc6a733da256efd02e51290f5d5015218c\",\"dweb:/ipfs/QmPZ97gsAAgaMRPiE2WJfkzRsudQnW5tPAvMgGj1jcTJtR\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"ICO/IcoOptimized.sol\":{\"keccak256\":\"0xe65d8d94dff3c4e23ee70ce66a675a58b3d7e450a88a77b1ec36834ffbe78c12\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b46220fb01bf6b1fcb3bf634086b5b2e0f6618265e46f2f8eb403bd7516a890f\",\"dweb:/ipfs/QmX3LmvHVfSj99DZSKQLWxviBV8HQGCoyX1wBqEz9i8JW6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1685,
								"contract": "ICO/IcoOptimized.sol:ICO",
								"label": "priceFeedBNB",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(AggregatorV3Interface)45"
							},
							{
								"astId": 1688,
								"contract": "ICO/IcoOptimized.sol:ICO",
								"label": "priceFeedUSDT",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(AggregatorV3Interface)45"
							},
							{
								"astId": 1691,
								"contract": "ICO/IcoOptimized.sol:ICO",
								"label": "priceFeedUSDC",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(AggregatorV3Interface)45"
							},
							{
								"astId": 1709,
								"contract": "ICO/IcoOptimized.sol:ICO",
								"label": "token",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(IERC20)1264"
							},
							{
								"astId": 1711,
								"contract": "ICO/IcoOptimized.sol:ICO",
								"label": "softCapInUSD",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 1713,
								"contract": "ICO/IcoOptimized.sol:ICO",
								"label": "hardCapInUSD",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 1715,
								"contract": "ICO/IcoOptimized.sol:ICO",
								"label": "saleCount",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1717,
								"contract": "ICO/IcoOptimized.sol:ICO",
								"label": "totalFundsRaisedUSD",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1719,
								"contract": "ICO/IcoOptimized.sol:ICO",
								"label": "totalTokensSold",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1727,
								"contract": "ICO/IcoOptimized.sol:ICO",
								"label": "isICOFinalized",
								"offset": 0,
								"slot": "9",
								"type": "t_bool"
							},
							{
								"astId": 1729,
								"contract": "ICO/IcoOptimized.sol:ICO",
								"label": "isTokensAirdropped",
								"offset": 1,
								"slot": "9",
								"type": "t_bool"
							},
							{
								"astId": 1731,
								"contract": "ICO/IcoOptimized.sol:ICO",
								"label": "isFreezed",
								"offset": 2,
								"slot": "9",
								"type": "t_bool"
							},
							{
								"astId": 1734,
								"contract": "ICO/IcoOptimized.sol:ICO",
								"label": "investors",
								"offset": 0,
								"slot": "10",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 1736,
								"contract": "ICO/IcoOptimized.sol:ICO",
								"label": "usdt",
								"offset": 0,
								"slot": "11",
								"type": "t_address"
							},
							{
								"astId": 1738,
								"contract": "ICO/IcoOptimized.sol:ICO",
								"label": "usdc",
								"offset": 0,
								"slot": "12",
								"type": "t_address"
							},
							{
								"astId": 1743,
								"contract": "ICO/IcoOptimized.sol:ICO",
								"label": "sales",
								"offset": 0,
								"slot": "13",
								"type": "t_mapping(t_uint256,t_struct(Sale)1702_storage)"
							},
							{
								"astId": 1747,
								"contract": "ICO/IcoOptimized.sol:ICO",
								"label": "contributionsInUSD",
								"offset": 0,
								"slot": "14",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1751,
								"contract": "ICO/IcoOptimized.sol:ICO",
								"label": "tokensBoughtByInvestor",
								"offset": 0,
								"slot": "15",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1756,
								"contract": "ICO/IcoOptimized.sol:ICO",
								"label": "paymentMethodForInvestor",
								"offset": 0,
								"slot": "16",
								"type": "t_mapping(t_address,t_enum(PaymentMethod)1706)"
							},
							{
								"astId": 1763,
								"contract": "ICO/IcoOptimized.sol:ICO",
								"label": "investorPayments",
								"offset": 0,
								"slot": "17",
								"type": "t_mapping(t_address,t_mapping(t_enum(PaymentMethod)1706,t_uint256))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(AggregatorV3Interface)45": {
								"encoding": "inplace",
								"label": "contract AggregatorV3Interface",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)1264": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_enum(PaymentMethod)1706": {
								"encoding": "inplace",
								"label": "enum ICO.PaymentMethod",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_enum(PaymentMethod)1706)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => enum ICO.PaymentMethod)",
								"numberOfBytes": "32",
								"value": "t_enum(PaymentMethod)1706"
							},
							"t_mapping(t_address,t_mapping(t_enum(PaymentMethod)1706,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(enum ICO.PaymentMethod => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_enum(PaymentMethod)1706,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_enum(PaymentMethod)1706,t_uint256)": {
								"encoding": "mapping",
								"key": "t_enum(PaymentMethod)1706",
								"label": "mapping(enum ICO.PaymentMethod => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_struct(Sale)1702_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct ICO.Sale)",
								"numberOfBytes": "32",
								"value": "t_struct(Sale)1702_storage"
							},
							"t_struct(Sale)1702_storage": {
								"encoding": "inplace",
								"label": "struct ICO.Sale",
								"members": [
									{
										"astId": 1693,
										"contract": "ICO/IcoOptimized.sol:ICO",
										"label": "startTime",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1695,
										"contract": "ICO/IcoOptimized.sol:ICO",
										"label": "endTime",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1697,
										"contract": "ICO/IcoOptimized.sol:ICO",
										"label": "tokenPriceUSD",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1699,
										"contract": "ICO/IcoOptimized.sol:ICO",
										"label": "tokensSold",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1701,
										"contract": "ICO/IcoOptimized.sol:ICO",
										"label": "isFinalized",
										"offset": 0,
										"slot": "4",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "160"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							45
						]
					},
					"id": 46,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AggregatorV3Interface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 45,
							"linearizedBaseContracts": [
								45
							],
							"name": "AggregatorV3Interface",
							"nameLocation": "67:21:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "313ce567",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "102:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "110:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "136:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "136:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "135:7:0"
									},
									"scope": 45,
									"src": "93:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7284e416",
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "description",
									"nameLocation": "156:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "167:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "193:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 8,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "193:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "192:15:0"
									},
									"scope": 45,
									"src": "147:61:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "54fd4d50",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nameLocation": "221:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "228:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "254:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "254:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "253:9:0"
									},
									"scope": 45,
									"src": "212:51:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9a6fc8f5",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoundData",
									"nameLocation": "276:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "301:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "294:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 17,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "294:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "288:25:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "344:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "337:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 20,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "337:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "360:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "353:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 22,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "353:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "376:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "368:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "368:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "395:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "387:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "387:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "413:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "406:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 28,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "406:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "336:93:0"
									},
									"scope": 45,
									"src": "267:163:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "feaf968c",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestRoundData",
									"nameLocation": "443:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "458:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "503:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "496:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 33,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "496:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "519:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "512:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 35,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "512:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "535:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "527:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "527:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "554:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "546:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "546:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "572:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "565:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 41,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "565:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "495:93:0"
									},
									"scope": 45,
									"src": "434:155:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 46,
							"src": "57:534:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:560:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							722
						],
						"Initializable": [
							494
						],
						"OwnableUpgradeable": [
							240
						]
					},
					"id": 241,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 47,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 49,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 241,
							"sourceUnit": 723,
							"src": "128:67:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 48,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 722,
										"src": "136:18:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 51,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 241,
							"sourceUnit": 495,
							"src": "196:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 50,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 494,
										"src": "204:13:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 53,
										"name": "Initializable",
										"nameLocations": [
											"789:13:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 494,
										"src": "789:13:1"
									},
									"id": 54,
									"nodeType": "InheritanceSpecifier",
									"src": "789:13:1"
								},
								{
									"baseName": {
										"id": 55,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"804:18:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 722,
										"src": "804:18:1"
									},
									"id": 56,
									"nodeType": "InheritanceSpecifier",
									"src": "804:18:1"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 52,
								"nodeType": "StructuredDocumentation",
								"src": "261:487:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 240,
							"linearizedBaseContracts": [
								240,
								722,
								494
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "767:18:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "OwnableUpgradeable.OwnableStorage",
									"documentation": {
										"id": 57,
										"nodeType": "StructuredDocumentation",
										"src": "829:65:1",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.Ownable"
									},
									"id": 60,
									"members": [
										{
											"constant": false,
											"id": 59,
											"mutability": "mutable",
											"name": "_owner",
											"nameLocation": "939:6:1",
											"nodeType": "VariableDeclaration",
											"scope": 60,
											"src": "931:14:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 58,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "931:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "OwnableStorage",
									"nameLocation": "906:14:1",
									"nodeType": "StructDefinition",
									"scope": 240,
									"src": "899:53:1",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 63,
									"mutability": "constant",
									"name": "OwnableStorageLocation",
									"nameLocation": "1094:22:1",
									"nodeType": "VariableDeclaration",
									"scope": 240,
									"src": "1069:116:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 61,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1069:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030",
										"id": 62,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1119:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1",
											"typeString": "int_const 6517...(69 digits omitted)...7328"
										},
										"value": "0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 70,
										"nodeType": "Block",
										"src": "1270:81:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1289:56:1",
													"nodeType": "YulBlock",
													"src": "1289:56:1",
													"statements": [
														{
															"nativeSrc": "1303:32:1",
															"nodeType": "YulAssignment",
															"src": "1303:32:1",
															"value": {
																"name": "OwnableStorageLocation",
																"nativeSrc": "1313:22:1",
																"nodeType": "YulIdentifier",
																"src": "1313:22:1"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "1303:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1303:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 67,
														"isOffset": false,
														"isSlot": true,
														"src": "1303:6:1",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 63,
														"isOffset": false,
														"isSlot": false,
														"src": "1313:22:1",
														"valueSize": 1
													}
												],
												"id": 69,
												"nodeType": "InlineAssembly",
												"src": "1280:65:1"
											}
										]
									},
									"id": 71,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getOwnableStorage",
									"nameLocation": "1201:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1219:2:1"
									},
									"returnParameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "1267:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "1244:24:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_OwnableStorage_$60_storage_ptr",
													"typeString": "struct OwnableUpgradeable.OwnableStorage"
												},
												"typeName": {
													"id": 66,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 65,
														"name": "OwnableStorage",
														"nameLocations": [
															"1244:14:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 60,
														"src": "1244:14:1"
													},
													"referencedDeclaration": 60,
													"src": "1244:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$60_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:26:1"
									},
									"scope": 240,
									"src": "1192:159:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "1357:85:1",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 76,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "1453:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1488:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "1480:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1479:17:1"
									},
									"src": "1447:50:1"
								},
								{
									"documentation": {
										"id": 77,
										"nodeType": "StructuredDocumentation",
										"src": "1503:82:1",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 81,
									"name": "OwnableInvalidOwner",
									"nameLocation": "1596:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1624:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "1616:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 78,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1616:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1615:15:1"
									},
									"src": "1590:41:1"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 87,
									"name": "OwnershipTransferred",
									"nameLocation": "1643:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1680:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "1664:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1711:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "1695:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1695:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:57:1"
									},
									"src": "1637:84:1"
								},
								{
									"body": {
										"id": 99,
										"nodeType": "Block",
										"src": "1919:55:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 96,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "1954:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 95,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 127,
														"src": "1929:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 97,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1929:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 98,
												"nodeType": "ExpressionStatement",
												"src": "1929:38:1"
											}
										]
									},
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "1727:115:1",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 100,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 93,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 92,
												"name": "onlyInitializing",
												"nameLocations": [
													"1902:16:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 403,
												"src": "1902:16:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1902:16:1"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "1856:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1879:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "1871:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 89,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1871:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1870:22:1"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1919:0:1"
									},
									"scope": 240,
									"src": "1847:127:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 126,
										"nodeType": "Block",
										"src": "2062:153:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 107,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 102,
														"src": "2076:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 110,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 109,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2092:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 108,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2092:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 111,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2092:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2076:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 121,
												"nodeType": "IfStatement",
												"src": "2072:95:1",
												"trueBody": {
													"id": 120,
													"nodeType": "Block",
													"src": "2104:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 116,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2153:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 115,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2145:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 114,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2145:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 117,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2145:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 113,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 81,
																	"src": "2125:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 118,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2125:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 119,
															"nodeType": "RevertStatement",
															"src": "2118:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 123,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 102,
															"src": "2195:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 122,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 239,
														"src": "2176:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2176:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 125,
												"nodeType": "ExpressionStatement",
												"src": "2176:32:1"
											}
										]
									},
									"id": 127,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 105,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 104,
												"name": "onlyInitializing",
												"nameLocations": [
													"2045:16:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 403,
												"src": "2045:16:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2045:16:1"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1989:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "2022:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "2014:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2014:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2013:22:1"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2062:0:1"
									},
									"scope": 240,
									"src": "1980:235:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 134,
										"nodeType": "Block",
										"src": "2324:41:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 130,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 168,
														"src": "2334:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2334:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 132,
												"nodeType": "ExpressionStatement",
												"src": "2334:13:1"
											},
											{
												"id": 133,
												"nodeType": "PlaceholderStatement",
												"src": "2357:1:1"
											}
										]
									},
									"documentation": {
										"id": 128,
										"nodeType": "StructuredDocumentation",
										"src": "2221:77:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 135,
									"name": "onlyOwner",
									"nameLocation": "2312:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2321:2:1"
									},
									"src": "2303:62:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 150,
										"nodeType": "Block",
										"src": "2496:89:1",
										"statements": [
											{
												"assignments": [
													143
												],
												"declarations": [
													{
														"constant": false,
														"id": 143,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2529:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 150,
														"src": "2506:24:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$60_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 142,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 141,
																"name": "OwnableStorage",
																"nameLocations": [
																	"2506:14:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 60,
																"src": "2506:14:1"
															},
															"referencedDeclaration": 60,
															"src": "2506:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$60_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 146,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 144,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 71,
														"src": "2533:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$60_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2533:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$60_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:47:1"
											},
											{
												"expression": {
													"expression": {
														"id": 147,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 143,
														"src": "2570:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$60_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 148,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2572:6:1",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 59,
													"src": "2570:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 140,
												"id": 149,
												"nodeType": "Return",
												"src": "2563:15:1"
											}
										]
									},
									"documentation": {
										"id": 136,
										"nodeType": "StructuredDocumentation",
										"src": "2371:65:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 151,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2450:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2455:2:1"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "2487:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2486:9:1"
									},
									"scope": 240,
									"src": "2441:144:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 167,
										"nodeType": "Block",
										"src": "2703:117:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 155,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "2717:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 156,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2717:7:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 157,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 704,
															"src": "2728:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 158,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2728:12:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2717:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 166,
												"nodeType": "IfStatement",
												"src": "2713:101:1",
												"trueBody": {
													"id": 165,
													"nodeType": "Block",
													"src": "2742:72:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 161,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 704,
																			"src": "2790:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2790:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 160,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 76,
																	"src": "2763:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 163,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2763:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 164,
															"nodeType": "RevertStatement",
															"src": "2756:47:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 152,
										"nodeType": "StructuredDocumentation",
										"src": "2591:62:1",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "2667:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2678:2:1"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2703:0:1"
									},
									"scope": 240,
									"src": "2658:162:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "3209:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 177,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3246:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 176,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3238:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 175,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3238:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 178,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3238:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 174,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 239,
														"src": "3219:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3219:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 180,
												"nodeType": "ExpressionStatement",
												"src": "3219:30:1"
											}
										]
									},
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "2826:324:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 182,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 172,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 171,
												"name": "onlyOwner",
												"nameLocations": [
													"3199:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 135,
												"src": "3199:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "3199:9:1"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "3164:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3181:2:1"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3209:0:1"
									},
									"scope": 240,
									"src": "3155:101:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 209,
										"nodeType": "Block",
										"src": "3475:145:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 190,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 185,
														"src": "3489:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 193,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3509:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 192,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3501:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 191,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3501:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 194,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3501:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3489:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 204,
												"nodeType": "IfStatement",
												"src": "3485:91:1",
												"trueBody": {
													"id": 203,
													"nodeType": "Block",
													"src": "3513:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 199,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3562:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 198,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3554:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 197,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3554:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 200,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3554:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 196,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 81,
																	"src": "3534:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 201,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 202,
															"nodeType": "RevertStatement",
															"src": "3527:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 206,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "3604:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 205,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 239,
														"src": "3585:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3585:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 208,
												"nodeType": "ExpressionStatement",
												"src": "3585:28:1"
											}
										]
									},
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "3262:138:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 210,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 188,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 187,
												"name": "onlyOwner",
												"nameLocations": [
													"3465:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 135,
												"src": "3465:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "3465:9:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "3414:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3440:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "3432:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3432:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3431:18:1"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3475:0:1"
									},
									"scope": 240,
									"src": "3405:215:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "3837:185:1",
										"statements": [
											{
												"assignments": [
													218
												],
												"declarations": [
													{
														"constant": false,
														"id": 218,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3870:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 238,
														"src": "3847:24:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$60_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 217,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 216,
																"name": "OwnableStorage",
																"nameLocations": [
																	"3847:14:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 60,
																"src": "3847:14:1"
															},
															"referencedDeclaration": 60,
															"src": "3847:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$60_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 221,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 219,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 71,
														"src": "3874:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$60_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3874:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$60_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3847:47:1"
											},
											{
												"assignments": [
													223
												],
												"declarations": [
													{
														"constant": false,
														"id": 223,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3912:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 238,
														"src": "3904:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 222,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3904:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 226,
												"initialValue": {
													"expression": {
														"id": 224,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 218,
														"src": "3923:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$60_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 225,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3925:6:1",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 59,
													"src": "3923:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3904:27:1"
											},
											{
												"expression": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 227,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "3941:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$60_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
															}
														},
														"id": 229,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3943:6:1",
														"memberName": "_owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 59,
														"src": "3941:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 230,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 213,
														"src": "3952:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3941:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 232,
												"nodeType": "ExpressionStatement",
												"src": "3941:19:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 234,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 223,
															"src": "3996:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 235,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 213,
															"src": "4006:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 233,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "3975:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3975:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 237,
												"nodeType": "EmitStatement",
												"src": "3970:45:1"
											}
										]
									},
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "3626:143:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3783:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3810:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "3802:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3802:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3801:18:1"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3837:0:1"
									},
									"scope": 240,
									"src": "3774:248:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 241,
							"src": "749:3275:1",
							"usedErrors": [
								76,
								81,
								257,
								260
							],
							"usedEvents": [
								87,
								265
							]
						}
					],
					"src": "102:3923:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							494
						]
					},
					"id": 495,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 242,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 243,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:2",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 494,
							"linearizedBaseContracts": [
								494
							],
							"name": "Initializable",
							"nameLocation": "2367:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 244,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:2",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 251,
									"members": [
										{
											"constant": false,
											"id": 247,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:2",
											"nodeType": "VariableDeclaration",
											"scope": 251,
											"src": "2813:19:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 246,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 250,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:2",
											"nodeType": "VariableDeclaration",
											"scope": 251,
											"src": "2950:18:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 249,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:2",
									"nodeType": "StructDefinition",
									"scope": 494,
									"src": "2685:290:2",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 254,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:2",
									"nodeType": "VariableDeclaration",
									"scope": 494,
									"src": "3098:115:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 252,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 253,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:2",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 257,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:2"
									},
									"src": "3285:30:2"
								},
								{
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:2",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 260,
									"name": "NotInitializing",
									"nameLocation": "3389:15:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:2"
									},
									"src": "3383:24:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:2",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 265,
									"name": "Initialized",
									"nameLocation": "3514:11:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "3526:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 262,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:2"
									},
									"src": "3508:34:2"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "4092:1081:2",
										"statements": [
											{
												"assignments": [
													270
												],
												"declarations": [
													{
														"constant": false,
														"id": 270,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 347,
														"src": "4158:30:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 269,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 268,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 251,
																"src": "4158:20:2"
															},
															"referencedDeclaration": 251,
															"src": "4158:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 273,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 271,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 493,
														"src": "4191:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$251_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:2"
											},
											{
												"assignments": [
													275
												],
												"declarations": [
													{
														"constant": false,
														"id": 275,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:2",
														"nodeType": "VariableDeclaration",
														"scope": 347,
														"src": "4279:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 274,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 279,
												"initialValue": {
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:2",
													"subExpression": {
														"expression": {
															"id": 276,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 270,
															"src": "4302:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 277,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:2",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 250,
														"src": "4302:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:2"
											},
											{
												"assignments": [
													281
												],
												"declarations": [
													{
														"constant": false,
														"id": 281,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 347,
														"src": "4327:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 280,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 284,
												"initialValue": {
													"expression": {
														"id": 282,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 270,
														"src": "4348:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 283,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:2",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 247,
													"src": "4348:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:2"
											},
											{
												"assignments": [
													286
												],
												"declarations": [
													{
														"constant": false,
														"id": 286,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4711:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 347,
														"src": "4706:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 285,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4706:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 289,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 287,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4726:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 288,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4741:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4726:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 290,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 275,
														"src": "4746:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4726:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4706:54:2"
											},
											{
												"assignments": [
													294
												],
												"declarations": [
													{
														"constant": false,
														"id": 294,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4775:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 347,
														"src": "4770:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 293,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4770:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 307,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 297,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 295,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4790:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4805:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4790:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 305,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 300,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4818:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$494",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$494",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4810:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 298,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4810:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 301,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4810:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4824:4:2",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4810:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 303,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4829:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4810:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 304,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4839:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4810:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4790:50:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4770:70:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 309,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4855:13:2",
														"subExpression": {
															"id": 308,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 286,
															"src": "4856:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 311,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4872:13:2",
														"subExpression": {
															"id": 310,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 294,
															"src": "4873:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4855:30:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 317,
												"nodeType": "IfStatement",
												"src": "4851:91:2",
												"trueBody": {
													"id": 316,
													"nodeType": "Block",
													"src": "4887:55:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 313,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 257,
																	"src": "4908:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 314,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4908:23:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 315,
															"nodeType": "RevertStatement",
															"src": "4901:30:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 318,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 270,
															"src": "4951:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 320,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4953:12:2",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 247,
														"src": "4951:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 321,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4968:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4951:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "4951:18:2"
											},
											{
												"condition": {
													"id": 324,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 275,
													"src": "4983:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 332,
												"nodeType": "IfStatement",
												"src": "4979:67:2",
												"trueBody": {
													"id": 331,
													"nodeType": "Block",
													"src": "4999:47:2",
													"statements": [
														{
															"expression": {
																"id": 329,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 325,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 270,
																		"src": "5013:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 327,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5015:13:2",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 250,
																	"src": "5013:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 328,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5031:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5013:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 330,
															"nodeType": "ExpressionStatement",
															"src": "5013:22:2"
														}
													]
												}
											},
											{
												"id": 333,
												"nodeType": "PlaceholderStatement",
												"src": "5055:1:2"
											},
											{
												"condition": {
													"id": 334,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 275,
													"src": "5070:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 346,
												"nodeType": "IfStatement",
												"src": "5066:101:2",
												"trueBody": {
													"id": 345,
													"nodeType": "Block",
													"src": "5086:81:2",
													"statements": [
														{
															"expression": {
																"id": 339,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 335,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 270,
																		"src": "5100:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 337,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5102:13:2",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 250,
																	"src": "5100:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 338,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5118:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5100:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 340,
															"nodeType": "ExpressionStatement",
															"src": "5100:23:2"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 342,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5154:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 341,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 265,
																	"src": "5142:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 343,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5142:14:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 344,
															"nodeType": "EmitStatement",
															"src": "5137:19:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 266,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:2",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 348,
									"name": "initializer",
									"nameLocation": "4078:11:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:2"
									},
									"src": "4069:1104:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 394,
										"nodeType": "Block",
										"src": "6291:392:2",
										"statements": [
											{
												"assignments": [
													355
												],
												"declarations": [
													{
														"constant": false,
														"id": 355,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6386:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 394,
														"src": "6357:30:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 354,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 353,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6357:20:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 251,
																"src": "6357:20:2"
															},
															"referencedDeclaration": 251,
															"src": "6357:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 358,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 356,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 493,
														"src": "6390:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$251_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6357:59:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 359,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "6431:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 360,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6433:13:2",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 250,
														"src": "6431:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 364,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 361,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 355,
																"src": "6450:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 362,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6452:12:2",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 247,
															"src": "6450:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 363,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "6468:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6450:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6431:44:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 370,
												"nodeType": "IfStatement",
												"src": "6427:105:2",
												"trueBody": {
													"id": 369,
													"nodeType": "Block",
													"src": "6477:55:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 366,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 257,
																	"src": "6498:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 367,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6498:23:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 368,
															"nodeType": "RevertStatement",
															"src": "6491:30:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 371,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "6541:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 373,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6543:12:2",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 247,
														"src": "6541:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 374,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "6558:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6541:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 376,
												"nodeType": "ExpressionStatement",
												"src": "6541:24:2"
											},
											{
												"expression": {
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 377,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "6575:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 379,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6577:13:2",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 250,
														"src": "6575:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 380,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6593:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6575:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 382,
												"nodeType": "ExpressionStatement",
												"src": "6575:22:2"
											},
											{
												"id": 383,
												"nodeType": "PlaceholderStatement",
												"src": "6607:1:2"
											},
											{
												"expression": {
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 384,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "6618:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 386,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6620:13:2",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 250,
														"src": "6618:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 387,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6636:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6618:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 389,
												"nodeType": "ExpressionStatement",
												"src": "6618:23:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 391,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "6668:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 390,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 265,
														"src": "6656:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6656:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 393,
												"nodeType": "EmitStatement",
												"src": "6651:25:2"
											}
										]
									},
									"documentation": {
										"id": 349,
										"nodeType": "StructuredDocumentation",
										"src": "5179:1068:2",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 395,
									"name": "reinitializer",
									"nameLocation": "6261:13:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6282:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "6275:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 350,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6275:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6274:16:2"
									},
									"src": "6252:431:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "6921:48:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 398,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 416,
														"src": "6931:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6931:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 400,
												"nodeType": "ExpressionStatement",
												"src": "6931:20:2"
											},
											{
												"id": 401,
												"nodeType": "PlaceholderStatement",
												"src": "6961:1:2"
											}
										]
									},
									"documentation": {
										"id": 396,
										"nodeType": "StructuredDocumentation",
										"src": "6689:199:2",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 403,
									"name": "onlyInitializing",
									"nameLocation": "6902:16:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6918:2:2"
									},
									"src": "6893:76:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "7136:89:2",
										"statements": [
											{
												"condition": {
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7150:18:2",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 407,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 484,
															"src": "7151:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 408,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7151:17:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 414,
												"nodeType": "IfStatement",
												"src": "7146:73:2",
												"trueBody": {
													"id": 413,
													"nodeType": "Block",
													"src": "7170:49:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 410,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 260,
																	"src": "7191:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7191:17:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 412,
															"nodeType": "RevertStatement",
															"src": "7184:24:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "6975:104:2",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7093:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7111:2:2"
									},
									"returnParameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7136:0:2"
									},
									"scope": 494,
									"src": "7084:141:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 461,
										"nodeType": "Block",
										"src": "7760:373:2",
										"statements": [
											{
												"assignments": [
													422
												],
												"declarations": [
													{
														"constant": false,
														"id": 422,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7855:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 461,
														"src": "7826:30:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 421,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 420,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7826:20:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 251,
																"src": "7826:20:2"
															},
															"referencedDeclaration": 251,
															"src": "7826:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 425,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 423,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 493,
														"src": "7859:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$251_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7859:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7826:59:2"
											},
											{
												"condition": {
													"expression": {
														"id": 426,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 422,
														"src": "7900:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 427,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7902:13:2",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 250,
													"src": "7900:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 432,
												"nodeType": "IfStatement",
												"src": "7896:76:2",
												"trueBody": {
													"id": 431,
													"nodeType": "Block",
													"src": "7917:55:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 428,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 257,
																	"src": "7938:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7938:23:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 430,
															"nodeType": "RevertStatement",
															"src": "7931:30:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 433,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 422,
															"src": "7985:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7987:12:2",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 247,
														"src": "7985:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 437,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8008:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 436,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8008:6:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 435,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8003:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8003:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 439,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8016:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8003:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7985:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 460,
												"nodeType": "IfStatement",
												"src": "7981:146:2",
												"trueBody": {
													"id": 459,
													"nodeType": "Block",
													"src": "8021:106:2",
													"statements": [
														{
															"expression": {
																"id": 449,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 441,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 422,
																		"src": "8035:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 443,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8037:12:2",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 247,
																	"src": "8035:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 446,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8057:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 445,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8057:6:2",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 444,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8052:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 447,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8052:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 448,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8065:3:2",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8052:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8035:33:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 450,
															"nodeType": "ExpressionStatement",
															"src": "8035:33:2"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 454,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8104:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 453,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8104:6:2",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 452,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8099:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 455,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8099:12:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 456,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8112:3:2",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8099:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 451,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 265,
																	"src": "8087:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 457,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8087:29:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 458,
															"nodeType": "EmitStatement",
															"src": "8082:34:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "7231:475:2",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 462,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7720:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7740:2:2"
									},
									"returnParameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7760:0:2"
									},
									"scope": 494,
									"src": "7711:422:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 472,
										"nodeType": "Block",
										"src": "8308:63:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 468,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "8325:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$251_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 469,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8325:26:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 470,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8352:12:2",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 247,
													"src": "8325:39:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 467,
												"id": 471,
												"nodeType": "Return",
												"src": "8318:46:2"
											}
										]
									},
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "8139:99:2",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 473,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8252:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8274:2:2"
									},
									"returnParameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "8300:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 465,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8300:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8299:8:2"
									},
									"scope": 494,
									"src": "8243:128:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 483,
										"nodeType": "Block",
										"src": "8543:64:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 479,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "8560:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$251_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 480,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8560:26:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 481,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8587:13:2",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 250,
													"src": "8560:40:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 478,
												"id": 482,
												"nodeType": "Return",
												"src": "8553:47:2"
											}
										]
									},
									"documentation": {
										"id": 474,
										"nodeType": "StructuredDocumentation",
										"src": "8377:105:2",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 484,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8496:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8511:2:2"
									},
									"returnParameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "8537:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 476,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8537:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8536:6:2"
									},
									"scope": 494,
									"src": "8487:120:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 492,
										"nodeType": "Block",
										"src": "8827:80:2",
										"statements": [
											{
												"AST": {
													"nativeSrc": "8846:55:2",
													"nodeType": "YulBlock",
													"src": "8846:55:2",
													"statements": [
														{
															"nativeSrc": "8860:31:2",
															"nodeType": "YulAssignment",
															"src": "8860:31:2",
															"value": {
																"name": "INITIALIZABLE_STORAGE",
																"nativeSrc": "8870:21:2",
																"nodeType": "YulIdentifier",
																"src": "8870:21:2"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "8860:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "8860:6:2"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 489,
														"isOffset": false,
														"isSlot": true,
														"src": "8860:6:2",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 254,
														"isOffset": false,
														"isSlot": false,
														"src": "8870:21:2",
														"valueSize": 1
													}
												],
												"id": 491,
												"nodeType": "InlineAssembly",
												"src": "8837:64:2"
											}
										]
									},
									"documentation": {
										"id": 485,
										"nodeType": "StructuredDocumentation",
										"src": "8613:67:2",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 493,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "8746:24:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8770:2:2"
									},
									"returnParameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "8824:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "8795:30:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 488,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 487,
														"name": "InitializableStorage",
														"nameLocations": [
															"8795:20:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 251,
														"src": "8795:20:2"
													},
													"referencedDeclaration": 251,
													"src": "8795:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8794:32:2"
									},
									"scope": 494,
									"src": "8737:170:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 495,
							"src": "2349:6560:2",
							"usedErrors": [
								257,
								260
							],
							"usedEvents": [
								265
							]
						}
					],
					"src": "113:8797:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
					"exportedSymbols": {
						"ERC1967Utils": [
							1176
						],
						"IERC1822Proxiable": [
							882
						],
						"Initializable": [
							494
						],
						"UUPSUpgradeable": [
							676
						]
					},
					"id": 677,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 496,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"file": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"id": 498,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 677,
							"sourceUnit": 883,
							"src": "141:88:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 497,
										"name": "IERC1822Proxiable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 882,
										"src": "149:17:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"file": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"id": 500,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 677,
							"sourceUnit": 1177,
							"src": "230:84:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 499,
										"name": "ERC1967Utils",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1176,
										"src": "238:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "./Initializable.sol",
							"id": 502,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 677,
							"sourceUnit": 495,
							"src": "315:50:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 501,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 494,
										"src": "323:13:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 504,
										"name": "Initializable",
										"nameLocations": [
											"1023:13:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 494,
										"src": "1023:13:3"
									},
									"id": 505,
									"nodeType": "InheritanceSpecifier",
									"src": "1023:13:3"
								},
								{
									"baseName": {
										"id": 506,
										"name": "IERC1822Proxiable",
										"nameLocations": [
											"1038:17:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 882,
										"src": "1038:17:3"
									},
									"id": 507,
									"nodeType": "InheritanceSpecifier",
									"src": "1038:17:3"
								}
							],
							"canonicalName": "UUPSUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 503,
								"nodeType": "StructuredDocumentation",
								"src": "367:618:3",
								"text": " @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism."
							},
							"fullyImplemented": false,
							"id": 676,
							"linearizedBaseContracts": [
								676,
								882,
								494
							],
							"name": "UUPSUpgradeable",
							"nameLocation": "1004:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "1062:61:3",
										"text": "@custom:oz-upgrades-unsafe-allow state-variable-immutable"
									},
									"id": 514,
									"mutability": "immutable",
									"name": "__self",
									"nameLocation": "1154:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 676,
									"src": "1128:48:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 509,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1128:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 512,
												"name": "this",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967268,
												"src": "1171:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$676",
													"typeString": "contract UUPSUpgradeable"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$676",
													"typeString": "contract UUPSUpgradeable"
												}
											],
											"id": 511,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "1163:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 510,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1163:7:3",
												"typeDescriptions": {}
											}
										},
										"id": 513,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1163:13:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 515,
										"nodeType": "StructuredDocumentation",
										"src": "1183:631:3",
										"text": " @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."
									},
									"functionSelector": "ad3cb1cc",
									"id": 518,
									"mutability": "constant",
									"name": "UPGRADE_INTERFACE_VERSION",
									"nameLocation": "1842:25:3",
									"nodeType": "VariableDeclaration",
									"scope": 676,
									"src": "1819:58:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 516,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1819:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "352e302e30",
										"id": 517,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1870:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c",
											"typeString": "literal_string \"5.0.0\""
										},
										"value": "5.0.0"
									},
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 519,
										"nodeType": "StructuredDocumentation",
										"src": "1884:65:3",
										"text": " @dev The call is from an unauthorized context."
									},
									"errorSelector": "e07c8dba",
									"id": 521,
									"name": "UUPSUnauthorizedCallContext",
									"nameLocation": "1960:27:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1987:2:3"
									},
									"src": "1954:36:3"
								},
								{
									"documentation": {
										"id": 522,
										"nodeType": "StructuredDocumentation",
										"src": "1996:68:3",
										"text": " @dev The storage `slot` is unsupported as a UUID."
									},
									"errorSelector": "aa1d49a4",
									"id": 526,
									"name": "UUPSUnsupportedProxiableUUID",
									"nameLocation": "2075:28:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2112:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "2104:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 523,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2104:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2103:14:3"
									},
									"src": "2069:49:3"
								},
								{
									"body": {
										"id": 533,
										"nodeType": "Block",
										"src": "2645:41:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 529,
														"name": "_checkProxy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 608,
														"src": "2655:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2655:13:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 531,
												"nodeType": "ExpressionStatement",
												"src": "2655:13:3"
											},
											{
												"id": 532,
												"nodeType": "PlaceholderStatement",
												"src": "2678:1:3"
											}
										]
									},
									"documentation": {
										"id": 527,
										"nodeType": "StructuredDocumentation",
										"src": "2124:495:3",
										"text": " @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."
									},
									"id": 534,
									"name": "onlyProxy",
									"nameLocation": "2633:9:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2642:2:3"
									},
									"src": "2624:62:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "2916:48:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 537,
														"name": "_checkNotDelegated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 624,
														"src": "2926:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2926:20:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 539,
												"nodeType": "ExpressionStatement",
												"src": "2926:20:3"
											},
											{
												"id": 540,
												"nodeType": "PlaceholderStatement",
												"src": "2956:1:3"
											}
										]
									},
									"documentation": {
										"id": 535,
										"nodeType": "StructuredDocumentation",
										"src": "2692:195:3",
										"text": " @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."
									},
									"id": 542,
									"name": "notDelegated",
									"nameLocation": "2901:12:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2913:2:3"
									},
									"src": "2892:72:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 547,
										"nodeType": "Block",
										"src": "3030:7:3",
										"statements": []
									},
									"id": 548,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 545,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 544,
												"name": "onlyInitializing",
												"nameLocations": [
													"3013:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 403,
												"src": "3013:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "3013:16:3"
										}
									],
									"name": "__UUPSUpgradeable_init",
									"nameLocation": "2979:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3001:2:3"
									},
									"returnParameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3030:0:3"
									},
									"scope": 676,
									"src": "2970:67:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 553,
										"nodeType": "Block",
										"src": "3113:7:3",
										"statements": []
									},
									"id": 554,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 551,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 550,
												"name": "onlyInitializing",
												"nameLocations": [
													"3096:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 403,
												"src": "3096:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "3096:16:3"
										}
									],
									"name": "__UUPSUpgradeable_init_unchained",
									"nameLocation": "3052:32:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3084:2:3"
									},
									"returnParameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3113:0:3"
									},
									"scope": 676,
									"src": "3043:77:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										881
									],
									"body": {
										"id": 565,
										"nodeType": "Block",
										"src": "3786:56:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 562,
														"name": "ERC1967Utils",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1176,
														"src": "3803:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1176_$",
															"typeString": "type(library ERC1967Utils)"
														}
													},
													"id": 563,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "3816:19:3",
													"memberName": "IMPLEMENTATION_SLOT",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 897,
													"src": "3803:32:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 561,
												"id": 564,
												"nodeType": "Return",
												"src": "3796:39:3"
											}
										]
									},
									"documentation": {
										"id": 555,
										"nodeType": "StructuredDocumentation",
										"src": "3125:578:3",
										"text": " @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
									},
									"functionSelector": "52d1902d",
									"id": 566,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 558,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 557,
												"name": "notDelegated",
												"nameLocations": [
													"3755:12:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 542,
												"src": "3755:12:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "3755:12:3"
										}
									],
									"name": "proxiableUUID",
									"nameLocation": "3717:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3730:2:3"
									},
									"returnParameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "3777:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 559,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3777:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3776:9:3"
									},
									"scope": 676,
									"src": "3708:134:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 585,
										"nodeType": "Block",
										"src": "4266:109:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 577,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 569,
															"src": "4294:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 576,
														"name": "_authorizeUpgrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 630,
														"src": "4276:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4276:36:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 579,
												"nodeType": "ExpressionStatement",
												"src": "4276:36:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 581,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 569,
															"src": "4344:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 582,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 571,
															"src": "4363:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 580,
														"name": "_upgradeToAndCallUUPS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 675,
														"src": "4322:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,bytes memory)"
														}
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4322:46:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 584,
												"nodeType": "ExpressionStatement",
												"src": "4322:46:3"
											}
										]
									},
									"documentation": {
										"id": 567,
										"nodeType": "StructuredDocumentation",
										"src": "3848:308:3",
										"text": " @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"
									},
									"functionSelector": "4f1ef286",
									"id": 586,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 574,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 573,
												"name": "onlyProxy",
												"nameLocations": [
													"4256:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 534,
												"src": "4256:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "4256:9:3"
										}
									],
									"name": "upgradeToAndCall",
									"nameLocation": "4170:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "4195:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 586,
												"src": "4187:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 568,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4187:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4227:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 586,
												"src": "4214:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 570,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4214:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4186:46:3"
									},
									"returnParameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4266:0:3"
									},
									"scope": 676,
									"src": "4161:214:3",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 607,
										"nodeType": "Block",
										"src": "4648:267:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 595,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 592,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4683:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$676",
																		"typeString": "contract UUPSUpgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$676",
																		"typeString": "contract UUPSUpgradeable"
																	}
																],
																"id": 591,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4675:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 590,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4675:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4675:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 594,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 514,
															"src": "4692:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4675:23:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 600,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 596,
																	"name": "ERC1967Utils",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1176,
																	"src": "4753:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1176_$",
																		"typeString": "type(library ERC1967Utils)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4766:17:3",
																"memberName": "getImplementation",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 928,
																"src": "4753:30:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4753:32:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 599,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 514,
															"src": "4789:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4753:42:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4675:120:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 606,
												"nodeType": "IfStatement",
												"src": "4658:251:3",
												"trueBody": {
													"id": 605,
													"nodeType": "Block",
													"src": "4848:61:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 602,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 521,
																	"src": "4869:27:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4869:29:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 604,
															"nodeType": "RevertStatement",
															"src": "4862:36:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 587,
										"nodeType": "StructuredDocumentation",
										"src": "4381:217:3",
										"text": " @dev Reverts if the execution is not performed via delegatecall or the execution\n context is not of a proxy with an ERC-1967 compliant implementation pointing to self.\n See {_onlyProxy}."
									},
									"id": 608,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkProxy",
									"nameLocation": "4612:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4623:2:3"
									},
									"returnParameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4648:0:3"
									},
									"scope": 676,
									"src": "4603:312:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 623,
										"nodeType": "Block",
										"src": "5084:161:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 614,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "5106:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$676",
																	"typeString": "contract UUPSUpgradeable"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$676",
																	"typeString": "contract UUPSUpgradeable"
																}
															],
															"id": 613,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5098:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 612,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5098:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 615,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5098:13:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 616,
														"name": "__self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "5115:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5098:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 622,
												"nodeType": "IfStatement",
												"src": "5094:145:3",
												"trueBody": {
													"id": 621,
													"nodeType": "Block",
													"src": "5123:116:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 618,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 521,
																	"src": "5199:27:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 619,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5199:29:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 620,
															"nodeType": "RevertStatement",
															"src": "5192:36:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 609,
										"nodeType": "StructuredDocumentation",
										"src": "4921:106:3",
										"text": " @dev Reverts if the execution is performed via delegatecall.\n See {notDelegated}."
									},
									"id": 624,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNotDelegated",
									"nameLocation": "5041:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5059:2:3"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5084:0:3"
									},
									"scope": 676,
									"src": "5032:213:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 625,
										"nodeType": "StructuredDocumentation",
										"src": "5251:372:3",
										"text": " @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal onlyOwner {}\n ```"
									},
									"id": 630,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_authorizeUpgrade",
									"nameLocation": "5637:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "5663:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "5655:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 626,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5655:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5654:27:3"
									},
									"returnParameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5698:0:3"
									},
									"scope": 676,
									"src": "5628:71:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 674,
										"nodeType": "Block",
										"src": "6142:453:3",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 663,
															"nodeType": "Block",
															"src": "6232:212:3",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		"id": 649,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 646,
																			"name": "slot",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 644,
																			"src": "6250:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"expression": {
																				"id": 647,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1176,
																				"src": "6258:12:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1176_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 648,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "6271:19:3",
																			"memberName": "IMPLEMENTATION_SLOT",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 897,
																			"src": "6258:32:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"src": "6250:40:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 655,
																	"nodeType": "IfStatement",
																	"src": "6246:120:3",
																	"trueBody": {
																		"id": 654,
																		"nodeType": "Block",
																		"src": "6292:74:3",
																		"statements": [
																			{
																				"errorCall": {
																					"arguments": [
																						{
																							"id": 651,
																							"name": "slot",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 644,
																							"src": "6346:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 650,
																						"name": "UUPSUnsupportedProxiableUUID",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 526,
																						"src": "6317:28:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$_t_error_$",
																							"typeString": "function (bytes32) pure returns (error)"
																						}
																					},
																					"id": 652,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6317:34:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_error",
																						"typeString": "error"
																					}
																				},
																				"id": 653,
																				"nodeType": "RevertStatement",
																				"src": "6310:41:3"
																			}
																		]
																	}
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 659,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 633,
																				"src": "6409:17:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 660,
																				"name": "data",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 635,
																				"src": "6428:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"expression": {
																				"id": 656,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1176,
																				"src": "6379:12:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1176_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 658,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6392:16:3",
																			"memberName": "upgradeToAndCall",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 991,
																			"src": "6379:29:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
																				"typeString": "function (address,bytes memory)"
																			}
																		},
																		"id": 661,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6379:54:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 662,
																	"nodeType": "ExpressionStatement",
																	"src": "6379:54:3"
																}
															]
														},
														"errorName": "",
														"id": 664,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 645,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 644,
																	"mutability": "mutable",
																	"name": "slot",
																	"nameLocation": "6226:4:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 664,
																	"src": "6218:12:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 643,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "6218:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "6217:14:3"
														},
														"src": "6209:235:3"
													},
													{
														"block": {
															"id": 671,
															"nodeType": "Block",
															"src": "6451:138:3",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 668,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 633,
																				"src": "6560:17:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"id": 665,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1176,
																				"src": "6518:12:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1176_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 667,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6531:28:3",
																			"memberName": "ERC1967InvalidImplementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 902,
																			"src": "6518:41:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																				"typeString": "function (address) pure returns (error)"
																			}
																		},
																		"id": 669,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6518:60:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 670,
																	"nodeType": "RevertStatement",
																	"src": "6511:67:3"
																}
															]
														},
														"errorName": "",
														"id": 672,
														"nodeType": "TryCatchClause",
														"src": "6445:144:3"
													}
												],
												"externalCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 639,
																	"name": "newImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 633,
																	"src": "6174:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 638,
																"name": "IERC1822Proxiable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 882,
																"src": "6156:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC1822Proxiable_$882_$",
																	"typeString": "type(contract IERC1822Proxiable)"
																}
															},
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6156:36:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1822Proxiable_$882",
																"typeString": "contract IERC1822Proxiable"
															}
														},
														"id": 641,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6193:13:3",
														"memberName": "proxiableUUID",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 881,
														"src": "6156:50:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
															"typeString": "function () view external returns (bytes32)"
														}
													},
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6156:52:3",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 673,
												"nodeType": "TryStatement",
												"src": "6152:437:3"
											}
										]
									},
									"documentation": {
										"id": 631,
										"nodeType": "StructuredDocumentation",
										"src": "5705:347:3",
										"text": " @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n is expected to be the implementation slot in ERC-1967.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 675,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCallUUPS",
									"nameLocation": "6066:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "6096:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "6088:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6088:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6128:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "6115:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 634,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6115:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6087:46:3"
									},
									"returnParameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6142:0:3"
									},
									"scope": 676,
									"src": "6057:538:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 677,
							"src": "986:5611:3",
							"usedErrors": [
								257,
								260,
								521,
								526,
								902,
								915,
								1274,
								1536
							],
							"usedEvents": [
								265,
								859
							]
						}
					],
					"src": "115:6483:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							722
						],
						"Initializable": [
							494
						]
					},
					"id": 723,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 678,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 680,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 723,
							"sourceUnit": 495,
							"src": "126:63:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 679,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 494,
										"src": "134:13:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 682,
										"name": "Initializable",
										"nameLocations": [
											"728:13:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 494,
										"src": "728:13:4"
									},
									"id": 683,
									"nodeType": "InheritanceSpecifier",
									"src": "728:13:4"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 681,
								"nodeType": "StructuredDocumentation",
								"src": "191:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 722,
							"linearizedBaseContracts": [
								722,
								494
							],
							"name": "ContextUpgradeable",
							"nameLocation": "706:18:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 688,
										"nodeType": "Block",
										"src": "800:7:4",
										"statements": []
									},
									"id": 689,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 686,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 685,
												"name": "onlyInitializing",
												"nameLocations": [
													"783:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 403,
												"src": "783:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "783:16:4"
										}
									],
									"name": "__Context_init",
									"nameLocation": "757:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:2:4"
									},
									"returnParameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "800:0:4"
									},
									"scope": 722,
									"src": "748:59:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 694,
										"nodeType": "Block",
										"src": "875:7:4",
										"statements": []
									},
									"id": 695,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 692,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 691,
												"name": "onlyInitializing",
												"nameLocations": [
													"858:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 403,
												"src": "858:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "858:16:4"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "822:24:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:2:4"
									},
									"returnParameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "875:0:4"
									},
									"scope": 722,
									"src": "813:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 703,
										"nodeType": "Block",
										"src": "949:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 700,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "966:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "970:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "966:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 699,
												"id": 702,
												"nodeType": "Return",
												"src": "959:17:4"
											}
										]
									},
									"id": 704,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "896:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "906:2:4"
									},
									"returnParameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "940:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 697,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:9:4"
									},
									"scope": 722,
									"src": "887:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 712,
										"nodeType": "Block",
										"src": "1056:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 709,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1073:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1077:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1073:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 708,
												"id": 711,
												"nodeType": "Return",
												"src": "1066:15:4"
											}
										]
									},
									"id": 713,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "998:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1006:2:4"
									},
									"returnParameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "1040:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 706,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1040:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:16:4"
									},
									"scope": 722,
									"src": "989:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 720,
										"nodeType": "Block",
										"src": "1166:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 718,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1183:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 717,
												"id": 719,
												"nodeType": "Return",
												"src": "1176:8:4"
											}
										]
									},
									"id": 721,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "1103:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1123:2:4"
									},
									"returnParameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "1157:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:9:4"
									},
									"scope": 722,
									"src": "1094:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 723,
							"src": "688:505:4",
							"usedErrors": [
								257,
								260
							],
							"usedEvents": [
								265
							]
						}
					],
					"src": "101:1093:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol",
					"exportedSymbols": {
						"Initializable": [
							494
						],
						"ReentrancyGuardUpgradeable": [
							851
						]
					},
					"id": 852,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 724,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 726,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 852,
							"sourceUnit": 495,
							"src": "134:63:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 725,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 494,
										"src": "142:13:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 728,
										"name": "Initializable",
										"nameLocations": [
											"1142:13:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 494,
										"src": "1142:13:5"
									},
									"id": 729,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:13:5"
								}
							],
							"canonicalName": "ReentrancyGuardUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 727,
								"nodeType": "StructuredDocumentation",
								"src": "199:894:5",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 851,
							"linearizedBaseContracts": [
								851,
								494
							],
							"name": "ReentrancyGuardUpgradeable",
							"nameLocation": "1112:26:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 732,
									"mutability": "constant",
									"name": "NOT_ENTERED",
									"nameLocation": "1935:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 851,
									"src": "1910:40:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 730,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1910:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 731,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1949:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 735,
									"mutability": "constant",
									"name": "ENTERED",
									"nameLocation": "1981:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 851,
									"src": "1956:36:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 733,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1956:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 734,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1991:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"canonicalName": "ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
									"documentation": {
										"id": 736,
										"nodeType": "StructuredDocumentation",
										"src": "1999:73:5",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.ReentrancyGuard"
									},
									"id": 739,
									"members": [
										{
											"constant": false,
											"id": 738,
											"mutability": "mutable",
											"name": "_status",
											"nameLocation": "2125:7:5",
											"nodeType": "VariableDeclaration",
											"scope": 739,
											"src": "2117:15:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 737,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2117:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ReentrancyGuardStorage",
									"nameLocation": "2084:22:5",
									"nodeType": "StructDefinition",
									"scope": 851,
									"src": "2077:62:5",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 742,
									"mutability": "constant",
									"name": "ReentrancyGuardStorageLocation",
									"nameLocation": "2289:30:5",
									"nodeType": "VariableDeclaration",
									"scope": 851,
									"src": "2264:124:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 740,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2264:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307839623737396231373432326430646639323232333031386233326234643166613436653037313732336436383137653234383664303033626563633535663030",
										"id": 741,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2322:66:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_70319816728846589445362000750570655803700195216363692647688146666176345628416_by_1",
											"typeString": "int_const 7031...(69 digits omitted)...8416"
										},
										"value": "0x9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "2489:89:5",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2508:64:5",
													"nodeType": "YulBlock",
													"src": "2508:64:5",
													"statements": [
														{
															"nativeSrc": "2522:40:5",
															"nodeType": "YulAssignment",
															"src": "2522:40:5",
															"value": {
																"name": "ReentrancyGuardStorageLocation",
																"nativeSrc": "2532:30:5",
																"nodeType": "YulIdentifier",
																"src": "2532:30:5"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "2522:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2522:6:5"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 746,
														"isOffset": false,
														"isSlot": true,
														"src": "2522:6:5",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 742,
														"isOffset": false,
														"isSlot": false,
														"src": "2532:30:5",
														"valueSize": 1
													}
												],
												"id": 748,
												"nodeType": "InlineAssembly",
												"src": "2499:73:5"
											}
										]
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getReentrancyGuardStorage",
									"nameLocation": "2404:26:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2430:2:5"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "2486:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "2455:32:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$739_storage_ptr",
													"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"
												},
												"typeName": {
													"id": 745,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 744,
														"name": "ReentrancyGuardStorage",
														"nameLocations": [
															"2455:22:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 739,
														"src": "2455:22:5"
													},
													"referencedDeclaration": 739,
													"src": "2455:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$739_storage_ptr",
														"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2454:34:5"
									},
									"scope": 851,
									"src": "2395:183:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "2584:52:5",
										"text": " @dev Unauthorized reentrant call."
									},
									"errorSelector": "3ee5aeb5",
									"id": 753,
									"name": "ReentrancyGuardReentrantCall",
									"nameLocation": "2647:28:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2675:2:5"
									},
									"src": "2641:37:5"
								},
								{
									"body": {
										"id": 761,
										"nodeType": "Block",
										"src": "2744:51:5",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 758,
														"name": "__ReentrancyGuard_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 780,
														"src": "2754:32:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2754:34:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 760,
												"nodeType": "ExpressionStatement",
												"src": "2754:34:5"
											}
										]
									},
									"id": 762,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 756,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 755,
												"name": "onlyInitializing",
												"nameLocations": [
													"2727:16:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 403,
												"src": "2727:16:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "2727:16:5"
										}
									],
									"name": "__ReentrancyGuard_init",
									"nameLocation": "2693:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2715:2:5"
									},
									"returnParameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2744:0:5"
									},
									"scope": 851,
									"src": "2684:111:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 779,
										"nodeType": "Block",
										"src": "2871:113:5",
										"statements": [
											{
												"assignments": [
													769
												],
												"declarations": [
													{
														"constant": false,
														"id": 769,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2912:1:5",
														"nodeType": "VariableDeclaration",
														"scope": 779,
														"src": "2881:32:5",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$739_storage_ptr",
															"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"
														},
														"typeName": {
															"id": 768,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 767,
																"name": "ReentrancyGuardStorage",
																"nameLocations": [
																	"2881:22:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 739,
																"src": "2881:22:5"
															},
															"referencedDeclaration": 739,
															"src": "2881:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$739_storage_ptr",
																"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 772,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 770,
														"name": "_getReentrancyGuardStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 750,
														"src": "2916:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$739_storage_ptr_$",
															"typeString": "function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"
														}
													},
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2916:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$739_storage_ptr",
														"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2881:63:5"
											},
											{
												"expression": {
													"id": 777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 773,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 769,
															"src": "2954:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$739_storage_ptr",
																"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"
															}
														},
														"id": 775,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2956:7:5",
														"memberName": "_status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 738,
														"src": "2954:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 776,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 732,
														"src": "2966:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2954:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 778,
												"nodeType": "ExpressionStatement",
												"src": "2954:23:5"
											}
										]
									},
									"id": 780,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 765,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 764,
												"name": "onlyInitializing",
												"nameLocations": [
													"2854:16:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 403,
												"src": "2854:16:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "2854:16:5"
										}
									],
									"name": "__ReentrancyGuard_init_unchained",
									"nameLocation": "2810:32:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2842:2:5"
									},
									"returnParameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2871:0:5"
									},
									"scope": 851,
									"src": "2801:183:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 790,
										"nodeType": "Block",
										"src": "3385:79:5",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 783,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 816,
														"src": "3395:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3395:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 785,
												"nodeType": "ExpressionStatement",
												"src": "3395:21:5"
											},
											{
												"id": 786,
												"nodeType": "PlaceholderStatement",
												"src": "3426:1:5"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 787,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 832,
														"src": "3437:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3437:20:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 789,
												"nodeType": "ExpressionStatement",
												"src": "3437:20:5"
											}
										]
									},
									"documentation": {
										"id": 781,
										"nodeType": "StructuredDocumentation",
										"src": "2990:366:5",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 791,
									"name": "nonReentrant",
									"nameLocation": "3370:12:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3382:2:5"
									},
									"src": "3361:103:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 815,
										"nodeType": "Block",
										"src": "3509:345:5",
										"statements": [
											{
												"assignments": [
													796
												],
												"declarations": [
													{
														"constant": false,
														"id": 796,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3550:1:5",
														"nodeType": "VariableDeclaration",
														"scope": 815,
														"src": "3519:32:5",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$739_storage_ptr",
															"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"
														},
														"typeName": {
															"id": 795,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 794,
																"name": "ReentrancyGuardStorage",
																"nameLocations": [
																	"3519:22:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 739,
																"src": "3519:22:5"
															},
															"referencedDeclaration": 739,
															"src": "3519:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$739_storage_ptr",
																"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 799,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 797,
														"name": "_getReentrancyGuardStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 750,
														"src": "3554:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$739_storage_ptr_$",
															"typeString": "function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"
														}
													},
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3554:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$739_storage_ptr",
														"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3519:63:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 800,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "3670:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$739_storage_ptr",
																"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"
															}
														},
														"id": 801,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3672:7:5",
														"memberName": "_status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 738,
														"src": "3670:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 802,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 735,
														"src": "3683:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3670:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 808,
												"nodeType": "IfStatement",
												"src": "3666:88:5",
												"trueBody": {
													"id": 807,
													"nodeType": "Block",
													"src": "3692:62:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 804,
																	"name": "ReentrancyGuardReentrantCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 753,
																	"src": "3713:28:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 805,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3713:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 806,
															"nodeType": "RevertStatement",
															"src": "3706:37:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 809,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "3828:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$739_storage_ptr",
																"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"
															}
														},
														"id": 811,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3830:7:5",
														"memberName": "_status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 738,
														"src": "3828:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 812,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 735,
														"src": "3840:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3828:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 814,
												"nodeType": "ExpressionStatement",
												"src": "3828:19:5"
											}
										]
									},
									"id": 816,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "3479:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3498:2:5"
									},
									"returnParameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3509:0:5"
									},
									"scope": 851,
									"src": "3470:384:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 831,
										"nodeType": "Block",
										"src": "3898:245:5",
										"statements": [
											{
												"assignments": [
													821
												],
												"declarations": [
													{
														"constant": false,
														"id": 821,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3939:1:5",
														"nodeType": "VariableDeclaration",
														"scope": 831,
														"src": "3908:32:5",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$739_storage_ptr",
															"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"
														},
														"typeName": {
															"id": 820,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 819,
																"name": "ReentrancyGuardStorage",
																"nameLocations": [
																	"3908:22:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 739,
																"src": "3908:22:5"
															},
															"referencedDeclaration": 739,
															"src": "3908:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$739_storage_ptr",
																"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 824,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 822,
														"name": "_getReentrancyGuardStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 750,
														"src": "3943:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$739_storage_ptr_$",
															"typeString": "function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"
														}
													},
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3943:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$739_storage_ptr",
														"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3908:63:5"
											},
											{
												"expression": {
													"id": 829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 825,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 821,
															"src": "4113:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$739_storage_ptr",
																"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"
															}
														},
														"id": 827,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4115:7:5",
														"memberName": "_status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 738,
														"src": "4113:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 828,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 732,
														"src": "4125:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4113:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 830,
												"nodeType": "ExpressionStatement",
												"src": "4113:23:5"
											}
										]
									},
									"id": 832,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "3869:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3887:2:5"
									},
									"returnParameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3898:0:5"
									},
									"scope": 851,
									"src": "3860:283:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 849,
										"nodeType": "Block",
										"src": "4386:117:5",
										"statements": [
											{
												"assignments": [
													840
												],
												"declarations": [
													{
														"constant": false,
														"id": 840,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4427:1:5",
														"nodeType": "VariableDeclaration",
														"scope": 849,
														"src": "4396:32:5",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$739_storage_ptr",
															"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"
														},
														"typeName": {
															"id": 839,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 838,
																"name": "ReentrancyGuardStorage",
																"nameLocations": [
																	"4396:22:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 739,
																"src": "4396:22:5"
															},
															"referencedDeclaration": 739,
															"src": "4396:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$739_storage_ptr",
																"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 843,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 841,
														"name": "_getReentrancyGuardStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 750,
														"src": "4431:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$739_storage_ptr_$",
															"typeString": "function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"
														}
													},
													"id": 842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4431:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$739_storage_ptr",
														"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4396:63:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 844,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 840,
															"src": "4476:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$739_storage_ptr",
																"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"
															}
														},
														"id": 845,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4478:7:5",
														"memberName": "_status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 738,
														"src": "4476:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 846,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 735,
														"src": "4489:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4476:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 837,
												"id": 848,
												"nodeType": "Return",
												"src": "4469:27:5"
											}
										]
									},
									"documentation": {
										"id": 833,
										"nodeType": "StructuredDocumentation",
										"src": "4149:168:5",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 850,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "4331:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4354:2:5"
									},
									"returnParameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "4380:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 835,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4380:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4379:6:5"
									},
									"scope": 851,
									"src": "4322:181:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 852,
							"src": "1094:3411:5",
							"usedErrors": [
								257,
								260,
								753
							],
							"usedEvents": [
								265
							]
						}
					],
					"src": "109:4397:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1967.sol",
					"exportedSymbols": {
						"IERC1967": [
							872
						]
					},
					"id": 873,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 853,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1967",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 854,
								"nodeType": "StructuredDocumentation",
								"src": "133:101:6",
								"text": " @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC."
							},
							"fullyImplemented": true,
							"id": 872,
							"linearizedBaseContracts": [
								872
							],
							"name": "IERC1967",
							"nameLocation": "245:8:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "260:68:6",
										"text": " @dev Emitted when the implementation is upgraded."
									},
									"eventSelector": "bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
									"id": 859,
									"name": "Upgraded",
									"nameLocation": "339:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "364:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "348:30:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "348:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "347:32:6"
									},
									"src": "333:47:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 860,
										"nodeType": "StructuredDocumentation",
										"src": "386:67:6",
										"text": " @dev Emitted when the admin account has changed."
									},
									"eventSelector": "7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f",
									"id": 866,
									"name": "AdminChanged",
									"nameLocation": "464:12:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousAdmin",
												"nameLocation": "485:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "477:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 861,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "477:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 864,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "508:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "500:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 863,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "500:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "476:41:6"
									},
									"src": "458:60:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 867,
										"nodeType": "StructuredDocumentation",
										"src": "524:59:6",
										"text": " @dev Emitted when the beacon is changed."
									},
									"eventSelector": "1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e",
									"id": 871,
									"name": "BeaconUpgraded",
									"nameLocation": "594:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 869,
												"indexed": true,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "625:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "609:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "609:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "608:24:6"
									},
									"src": "588:45:6"
								}
							],
							"scope": 873,
							"src": "235:400:6",
							"usedErrors": [],
							"usedEvents": [
								859,
								866,
								871
							]
						}
					],
					"src": "107:529:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
					"exportedSymbols": {
						"IERC1822Proxiable": [
							882
						]
					},
					"id": 883,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 874,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1822Proxiable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 875,
								"nodeType": "StructuredDocumentation",
								"src": "139:204:7",
								"text": " @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."
							},
							"fullyImplemented": false,
							"id": 882,
							"linearizedBaseContracts": [
								882
							],
							"name": "IERC1822Proxiable",
							"nameLocation": "354:17:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 876,
										"nodeType": "StructuredDocumentation",
										"src": "378:438:7",
										"text": " @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."
									},
									"functionSelector": "52d1902d",
									"id": 881,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "proxiableUUID",
									"nameLocation": "830:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "843:2:7"
									},
									"returnParameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "869:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 878,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "869:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "868:9:7"
									},
									"scope": 882,
									"src": "821:57:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 883,
							"src": "344:536:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "113:768:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
					"exportedSymbols": {
						"Address": [
							1523
						],
						"ERC1967Utils": [
							1176
						],
						"IBeacon": [
							1186
						],
						"IERC1967": [
							872
						],
						"StorageSlot": [
							1669
						]
					},
					"id": 1177,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 884,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".21"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
							"file": "../beacon/IBeacon.sol",
							"id": 886,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1177,
							"sourceUnit": 1187,
							"src": "140:46:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 885,
										"name": "IBeacon",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1186,
										"src": "148:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1967.sol",
							"file": "../../interfaces/IERC1967.sol",
							"id": 888,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1177,
							"sourceUnit": 873,
							"src": "187:55:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 887,
										"name": "IERC1967",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 872,
										"src": "195:8:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 890,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1177,
							"sourceUnit": 1524,
							"src": "243:48:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 889,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1523,
										"src": "251:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
							"file": "../../utils/StorageSlot.sol",
							"id": 892,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1177,
							"sourceUnit": 1670,
							"src": "292:56:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 891,
										"name": "StorageSlot",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1669,
										"src": "300:11:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC1967Utils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 893,
								"nodeType": "StructuredDocumentation",
								"src": "350:145:8",
								"text": " @dev This library provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots."
							},
							"fullyImplemented": true,
							"id": 1176,
							"linearizedBaseContracts": [
								1176
							],
							"name": "ERC1967Utils",
							"nameLocation": "504:12:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 894,
										"nodeType": "StructuredDocumentation",
										"src": "523:170:8",
										"text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
									},
									"id": 897,
									"mutability": "constant",
									"name": "IMPLEMENTATION_SLOT",
									"nameLocation": "789:19:8",
									"nodeType": "VariableDeclaration",
									"scope": 1176,
									"src": "763:114:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 895,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "763:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
										"id": 896,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "811:66:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
											"typeString": "int_const 2444...(69 digits omitted)...5612"
										},
										"value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									},
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 898,
										"nodeType": "StructuredDocumentation",
										"src": "884:69:8",
										"text": " @dev The `implementation` of the proxy is invalid."
									},
									"errorSelector": "4c9c8ce3",
									"id": 902,
									"name": "ERC1967InvalidImplementation",
									"nameLocation": "964:28:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1001:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "993:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 899,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "993:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "992:24:8"
									},
									"src": "958:59:8"
								},
								{
									"documentation": {
										"id": 903,
										"nodeType": "StructuredDocumentation",
										"src": "1023:60:8",
										"text": " @dev The `admin` of the proxy is invalid."
									},
									"errorSelector": "62e77ba2",
									"id": 907,
									"name": "ERC1967InvalidAdmin",
									"nameLocation": "1094:19:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1122:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "1114:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 904,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1114:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1113:15:8"
									},
									"src": "1088:41:8"
								},
								{
									"documentation": {
										"id": 908,
										"nodeType": "StructuredDocumentation",
										"src": "1135:61:8",
										"text": " @dev The `beacon` of the proxy is invalid."
									},
									"errorSelector": "64ced0ec",
									"id": 912,
									"name": "ERC1967InvalidBeacon",
									"nameLocation": "1207:20:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "1236:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "1228:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 909,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1228:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1227:16:8"
									},
									"src": "1201:43:8"
								},
								{
									"documentation": {
										"id": 913,
										"nodeType": "StructuredDocumentation",
										"src": "1250:82:8",
										"text": " @dev An upgrade function sees `msg.value > 0` that may be lost."
									},
									"errorSelector": "b398979f",
									"id": 915,
									"name": "ERC1967NonPayable",
									"nameLocation": "1343:17:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1360:2:8"
									},
									"src": "1337:26:8"
								},
								{
									"body": {
										"id": 927,
										"nodeType": "Block",
										"src": "1502:77:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 923,
																"name": "IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 897,
																"src": "1546:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 921,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1669,
																"src": "1519:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1669_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 922,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1531:14:8",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1580,
															"src": "1519:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1551_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 924,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1519:47:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1551_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 925,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1567:5:8",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1550,
													"src": "1519:53:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 920,
												"id": 926,
												"nodeType": "Return",
												"src": "1512:60:8"
											}
										]
									},
									"documentation": {
										"id": 916,
										"nodeType": "StructuredDocumentation",
										"src": "1369:67:8",
										"text": " @dev Returns the current implementation address."
									},
									"id": 928,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getImplementation",
									"nameLocation": "1450:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1467:2:8"
									},
									"returnParameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "1493:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 918,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1493:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1492:9:8"
									},
									"scope": 1176,
									"src": "1441:138:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 954,
										"nodeType": "Block",
										"src": "1734:218:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 934,
																"name": "newImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 931,
																"src": "1748:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 935,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1766:4:8",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1748:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 936,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1771:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1748:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 937,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1781:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1748:34:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 944,
												"nodeType": "IfStatement",
												"src": "1744:119:8",
												"trueBody": {
													"id": 943,
													"nodeType": "Block",
													"src": "1784:79:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 940,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 931,
																		"src": "1834:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 939,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 902,
																	"src": "1805:28:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 941,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1805:47:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 942,
															"nodeType": "RevertStatement",
															"src": "1798:54:8"
														}
													]
												}
											},
											{
												"expression": {
													"id": 952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 948,
																	"name": "IMPLEMENTATION_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 897,
																	"src": "1899:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 945,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1669,
																	"src": "1872:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1669_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 947,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1884:14:8",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1580,
																"src": "1872:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1551_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 949,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1872:47:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1551_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 950,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1920:5:8",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1550,
														"src": "1872:53:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 951,
														"name": "newImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 931,
														"src": "1928:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1872:73:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 953,
												"nodeType": "ExpressionStatement",
												"src": "1872:73:8"
											}
										]
									},
									"documentation": {
										"id": 929,
										"nodeType": "StructuredDocumentation",
										"src": "1585:81:8",
										"text": " @dev Stores a new address in the ERC-1967 implementation slot."
									},
									"id": 955,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nameLocation": "1680:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "1707:17:8",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "1699:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 930,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1699:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1698:27:8"
									},
									"returnParameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1734:0:8"
									},
									"scope": 1176,
									"src": "1671:281:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 990,
										"nodeType": "Block",
										"src": "2345:263:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 964,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 958,
															"src": "2374:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 963,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 955,
														"src": "2355:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2355:37:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 966,
												"nodeType": "ExpressionStatement",
												"src": "2355:37:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 970,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 958,
															"src": "2425:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 967,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "2407:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$872_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 969,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2416:8:8",
														"memberName": "Upgraded",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 859,
														"src": "2407:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2407:36:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 972,
												"nodeType": "EmitStatement",
												"src": "2402:41:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 973,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 960,
															"src": "2458:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 974,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2463:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2458:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 975,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2472:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2458:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 988,
													"nodeType": "Block",
													"src": "2559:43:8",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 985,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1175,
																	"src": "2573:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 986,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2573:18:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 987,
															"nodeType": "ExpressionStatement",
															"src": "2573:18:8"
														}
													]
												},
												"id": 989,
												"nodeType": "IfStatement",
												"src": "2454:148:8",
												"trueBody": {
													"id": 984,
													"nodeType": "Block",
													"src": "2475:78:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 980,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 958,
																		"src": "2518:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 981,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 960,
																		"src": "2537:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 977,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1523,
																		"src": "2489:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$1523_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 979,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2497:20:8",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1440,
																	"src": "2489:28:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 982,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2489:53:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 983,
															"nodeType": "ExpressionStatement",
															"src": "2489:53:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 956,
										"nodeType": "StructuredDocumentation",
										"src": "1958:301:8",
										"text": " @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 991,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeToAndCall",
									"nameLocation": "2273:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2298:17:8",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "2290:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 957,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2290:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2330:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "2317:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 959,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2317:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2289:46:8"
									},
									"returnParameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2345:0:8"
									},
									"scope": 1176,
									"src": "2264:344:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 992,
										"nodeType": "StructuredDocumentation",
										"src": "2614:145:8",
										"text": " @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
									},
									"id": 995,
									"mutability": "constant",
									"name": "ADMIN_SLOT",
									"nameLocation": "2855:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 1176,
									"src": "2829:105:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 993,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2829:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
										"id": 994,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2868:66:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
											"typeString": "int_const 8195...(69 digits omitted)...7091"
										},
										"value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1007,
										"nodeType": "Block",
										"src": "3339:68:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1003,
																"name": "ADMIN_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 995,
																"src": "3383:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1001,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1669,
																"src": "3356:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1669_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 1002,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3368:14:8",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1580,
															"src": "3356:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1551_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 1004,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3356:38:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1551_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 1005,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3395:5:8",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1550,
													"src": "3356:44:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1000,
												"id": 1006,
												"nodeType": "Return",
												"src": "3349:51:8"
											}
										]
									},
									"documentation": {
										"id": 996,
										"nodeType": "StructuredDocumentation",
										"src": "2941:341:8",
										"text": " @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
									},
									"id": 1008,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAdmin",
									"nameLocation": "3296:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3304:2:8"
									},
									"returnParameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "3330:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 998,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3330:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3329:9:8"
									},
									"scope": 1176,
									"src": "3287:120:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1038,
										"nodeType": "Block",
										"src": "3535:172:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1014,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1011,
														"src": "3549:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1017,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3569:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1016,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3561:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1015,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3561:7:8",
																"typeDescriptions": {}
															}
														},
														"id": 1018,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3561:10:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3549:22:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1028,
												"nodeType": "IfStatement",
												"src": "3545:91:8",
												"trueBody": {
													"id": 1027,
													"nodeType": "Block",
													"src": "3573:63:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1023,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3622:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1022,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3614:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1021,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3614:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1024,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3614:10:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1020,
																	"name": "ERC1967InvalidAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 907,
																	"src": "3594:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1025,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3594:31:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1026,
															"nodeType": "RevertStatement",
															"src": "3587:38:8"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 1032,
																	"name": "ADMIN_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 995,
																	"src": "3672:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1029,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1669,
																	"src": "3645:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1669_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 1031,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3657:14:8",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1580,
																"src": "3645:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1551_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 1033,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3645:38:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1551_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 1034,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3684:5:8",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1550,
														"src": "3645:44:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1035,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1011,
														"src": "3692:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3645:55:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1037,
												"nodeType": "ExpressionStatement",
												"src": "3645:55:8"
											}
										]
									},
									"documentation": {
										"id": 1009,
										"nodeType": "StructuredDocumentation",
										"src": "3413:72:8",
										"text": " @dev Stores a new address in the ERC-1967 admin slot."
									},
									"id": 1039,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAdmin",
									"nameLocation": "3499:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "3517:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "3509:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1010,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3508:18:8"
									},
									"returnParameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3535:0:8"
									},
									"scope": 1176,
									"src": "3490:217:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1057,
										"nodeType": "Block",
										"src": "3875:94:8",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1048,
																"name": "getAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1008,
																"src": "3912:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3912:10:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1050,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1042,
															"src": "3924:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1045,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "3890:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$872_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 1047,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3899:12:8",
														"memberName": "AdminChanged",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 866,
														"src": "3890:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3890:43:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1052,
												"nodeType": "EmitStatement",
												"src": "3885:48:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1054,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1042,
															"src": "3953:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1053,
														"name": "_setAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1039,
														"src": "3943:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3943:19:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1056,
												"nodeType": "ExpressionStatement",
												"src": "3943:19:8"
											}
										]
									},
									"documentation": {
										"id": 1040,
										"nodeType": "StructuredDocumentation",
										"src": "3713:109:8",
										"text": " @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."
									},
									"id": 1058,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "changeAdmin",
									"nameLocation": "3836:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "3856:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1058,
												"src": "3848:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1041,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3848:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3847:18:8"
									},
									"returnParameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3875:0:8"
									},
									"scope": 1176,
									"src": "3827:142:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1059,
										"nodeType": "StructuredDocumentation",
										"src": "3975:201:8",
										"text": " @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
									},
									"id": 1062,
									"mutability": "constant",
									"name": "BEACON_SLOT",
									"nameLocation": "4272:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 1176,
									"src": "4246:106:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1060,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4246:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530",
										"id": 1061,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4286:66:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1",
											"typeString": "int_const 7415...(69 digits omitted)...4704"
										},
										"value": "0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1074,
										"nodeType": "Block",
										"src": "4468:69:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1070,
																"name": "BEACON_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1062,
																"src": "4512:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1068,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1669,
																"src": "4485:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1669_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 1069,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4497:14:8",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1580,
															"src": "4485:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1551_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 1071,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4485:39:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1551_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 1072,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4525:5:8",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1550,
													"src": "4485:45:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1067,
												"id": 1073,
												"nodeType": "Return",
												"src": "4478:52:8"
											}
										]
									},
									"documentation": {
										"id": 1063,
										"nodeType": "StructuredDocumentation",
										"src": "4359:51:8",
										"text": " @dev Returns the current beacon."
									},
									"id": 1075,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBeacon",
									"nameLocation": "4424:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4433:2:8"
									},
									"returnParameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "4459:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1065,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4459:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4458:9:8"
									},
									"scope": 1176,
									"src": "4415:122:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1120,
										"nodeType": "Block",
										"src": "4667:390:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1081,
																"name": "newBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1078,
																"src": "4681:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1082,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4691:4:8",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "4681:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1083,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4696:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4681:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1084,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4706:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4681:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1091,
												"nodeType": "IfStatement",
												"src": "4677:95:8",
												"trueBody": {
													"id": 1090,
													"nodeType": "Block",
													"src": "4709:63:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1087,
																		"name": "newBeacon",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1078,
																		"src": "4751:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1086,
																	"name": "ERC1967InvalidBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 912,
																	"src": "4730:20:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1088,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4730:31:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1089,
															"nodeType": "RevertStatement",
															"src": "4723:38:8"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 1095,
																	"name": "BEACON_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1062,
																	"src": "4809:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1092,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1669,
																	"src": "4782:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1669_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 1094,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4794:14:8",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1580,
																"src": "4782:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1551_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 1096,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4782:39:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1551_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 1097,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4822:5:8",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1550,
														"src": "4782:45:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1098,
														"name": "newBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1078,
														"src": "4830:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4782:57:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1100,
												"nodeType": "ExpressionStatement",
												"src": "4782:57:8"
											},
											{
												"assignments": [
													1102
												],
												"declarations": [
													{
														"constant": false,
														"id": 1102,
														"mutability": "mutable",
														"name": "beaconImplementation",
														"nameLocation": "4858:20:8",
														"nodeType": "VariableDeclaration",
														"scope": 1120,
														"src": "4850:28:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1101,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4850:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1108,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 1104,
																	"name": "newBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1078,
																	"src": "4889:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1103,
																"name": "IBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1186,
																"src": "4881:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBeacon_$1186_$",
																	"typeString": "type(contract IBeacon)"
																}
															},
															"id": 1105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4881:18:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBeacon_$1186",
																"typeString": "contract IBeacon"
															}
														},
														"id": 1106,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4900:14:8",
														"memberName": "implementation",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1185,
														"src": "4881:33:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 1107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4881:35:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4850:66:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1109,
																"name": "beaconImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1102,
																"src": "4930:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4951:4:8",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "4930:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1111,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4956:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4930:32:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1112,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4966:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4930:37:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1119,
												"nodeType": "IfStatement",
												"src": "4926:125:8",
												"trueBody": {
													"id": 1118,
													"nodeType": "Block",
													"src": "4969:82:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1115,
																		"name": "beaconImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1102,
																		"src": "5019:20:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1114,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 902,
																	"src": "4990:28:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1116,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4990:50:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1117,
															"nodeType": "RevertStatement",
															"src": "4983:57:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1076,
										"nodeType": "StructuredDocumentation",
										"src": "4543:72:8",
										"text": " @dev Stores a new beacon in the ERC-1967 beacon slot."
									},
									"id": 1121,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setBeacon",
									"nameLocation": "4629:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "4648:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "4640:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1077,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4640:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4639:19:8"
									},
									"returnParameters": {
										"id": 1080,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4667:0:8"
									},
									"scope": 1176,
									"src": "4620:437:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1160,
										"nodeType": "Block",
										"src": "5661:263:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1130,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1124,
															"src": "5682:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1129,
														"name": "_setBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1121,
														"src": "5671:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5671:21:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1132,
												"nodeType": "ExpressionStatement",
												"src": "5671:21:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1136,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1124,
															"src": "5731:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1133,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "5707:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$872_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 1135,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5716:14:8",
														"memberName": "BeaconUpgraded",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 871,
														"src": "5707:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5707:34:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1138,
												"nodeType": "EmitStatement",
												"src": "5702:39:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1139,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1126,
															"src": "5756:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1140,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5761:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5756:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1141,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5770:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5756:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1158,
													"nodeType": "Block",
													"src": "5875:43:8",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1155,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1175,
																	"src": "5889:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1156,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5889:18:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1157,
															"nodeType": "ExpressionStatement",
															"src": "5889:18:8"
														}
													]
												},
												"id": 1159,
												"nodeType": "IfStatement",
												"src": "5752:166:8",
												"trueBody": {
													"id": 1154,
													"nodeType": "Block",
													"src": "5773:96:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1147,
																						"name": "newBeacon",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1124,
																						"src": "5824:9:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 1146,
																					"name": "IBeacon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1186,
																					"src": "5816:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IBeacon_$1186_$",
																						"typeString": "type(contract IBeacon)"
																					}
																				},
																				"id": 1148,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5816:18:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IBeacon_$1186",
																					"typeString": "contract IBeacon"
																				}
																			},
																			"id": 1149,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5835:14:8",
																			"memberName": "implementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1185,
																			"src": "5816:33:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 1150,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5816:35:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1151,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1126,
																		"src": "5853:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 1143,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1523,
																		"src": "5787:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$1523_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 1145,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5795:20:8",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1440,
																	"src": "5787:28:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 1152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5787:71:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1153,
															"nodeType": "ExpressionStatement",
															"src": "5787:71:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1122,
										"nodeType": "StructuredDocumentation",
										"src": "5063:514:8",
										"text": " @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."
									},
									"id": 1161,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeBeaconToAndCall",
									"nameLocation": "5591:22:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1124,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "5622:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "5614:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5614:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1126,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5646:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "5633:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1125,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5633:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5613:38:8"
									},
									"returnParameters": {
										"id": 1128,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5661:0:8"
									},
									"scope": 1176,
									"src": "5582:342:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1174,
										"nodeType": "Block",
										"src": "6149:86:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1165,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6163:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1166,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6167:5:8",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "6163:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1167,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6175:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6163:13:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1173,
												"nodeType": "IfStatement",
												"src": "6159:70:8",
												"trueBody": {
													"id": 1172,
													"nodeType": "Block",
													"src": "6178:51:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1169,
																	"name": "ERC1967NonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 915,
																	"src": "6199:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1170,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6199:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1171,
															"nodeType": "RevertStatement",
															"src": "6192:26:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1162,
										"nodeType": "StructuredDocumentation",
										"src": "5930:178:8",
										"text": " @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."
									},
									"id": 1175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNonPayable",
									"nameLocation": "6122:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6138:2:8"
									},
									"returnParameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6149:0:8"
									},
									"scope": 1176,
									"src": "6113:122:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1177,
							"src": "496:5741:8",
							"usedErrors": [
								902,
								907,
								912,
								915
							],
							"usedEvents": []
						}
					],
					"src": "114:6124:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
					"exportedSymbols": {
						"IBeacon": [
							1186
						]
					},
					"id": 1187,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1178,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBeacon",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1179,
								"nodeType": "StructuredDocumentation",
								"src": "134:79:9",
								"text": " @dev This is the interface that {BeaconProxy} expects of its beacon."
							},
							"fullyImplemented": false,
							"id": 1186,
							"linearizedBaseContracts": [
								1186
							],
							"name": "IBeacon",
							"nameLocation": "224:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1180,
										"nodeType": "StructuredDocumentation",
										"src": "238:168:9",
										"text": " @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."
									},
									"functionSelector": "5c60da1b",
									"id": 1185,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "420:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "434:2:9"
									},
									"returnParameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "460:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "459:9:9"
									},
									"scope": 1186,
									"src": "411:58:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1187,
							"src": "214:257:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "108:364:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1264
						]
					},
					"id": 1265,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1188,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1189,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:10",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 1264,
							"linearizedBaseContracts": [
								1264
							],
							"name": "IERC20",
							"nameLocation": "214:6:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1190,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:10",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1198,
									"name": "Transfer",
									"nameLocation": "396:8:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1192,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "405:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1194,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "427:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1196,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "447:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:10"
									},
									"src": "390:72:10"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1199,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:10",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1207,
									"name": "Approval",
									"nameLocation": "627:8:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1201,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "636:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1203,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "659:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1205,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "684:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:10"
									},
									"src": "621:78:10"
								},
								{
									"documentation": {
										"id": 1208,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:10",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1213,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:10"
									},
									"returnParameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "821:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:10"
									},
									"scope": 1264,
									"src": "775:55:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1214,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:10",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1221,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "931:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:10"
									},
									"returnParameters": {
										"id": 1220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "971:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:10"
									},
									"scope": 1264,
									"src": "912:68:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1222,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:10",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1231,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "1222:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1226,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "1234:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:10"
									},
									"returnParameters": {
										"id": 1230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1229,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "1267:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1228,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:10"
									},
									"scope": 1264,
									"src": "1204:69:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1232,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:10",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1241,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "1567:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "1582:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:10"
									},
									"returnParameters": {
										"id": 1240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1239,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "1622:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:10"
									},
									"scope": 1264,
									"src": "1548:83:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1242,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:10",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1251,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "2326:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "2343:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:10"
									},
									"returnParameters": {
										"id": 1250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1249,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "2376:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1248,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:10"
									},
									"scope": 1264,
									"src": "2309:73:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1252,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:10",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1263,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "2712:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "2726:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "2738:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:10"
									},
									"returnParameters": {
										"id": 1262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "2771:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1260,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:10"
									},
									"scope": 1264,
									"src": "2690:87:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1265,
							"src": "204:2575:10",
							"usedErrors": [],
							"usedEvents": [
								1198,
								1207
							]
						}
					],
					"src": "106:2674:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1523
						],
						"Errors": [
							1545
						]
					},
					"id": 1524,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1266,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
							"file": "./Errors.sol",
							"id": 1268,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1524,
							"sourceUnit": 1546,
							"src": "127:36:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1267,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1545,
										"src": "135:6:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1269,
								"nodeType": "StructuredDocumentation",
								"src": "165:67:11",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1523,
							"linearizedBaseContracts": [
								1523
							],
							"name": "Address",
							"nameLocation": "241:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1270,
										"nodeType": "StructuredDocumentation",
										"src": "255:75:11",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 1274,
									"name": "AddressEmptyCode",
									"nameLocation": "341:16:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "366:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1274,
												"src": "358:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "357:16:11"
									},
									"src": "335:39:11"
								},
								{
									"body": {
										"id": 1320,
										"nodeType": "Block",
										"src": "1361:278:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1284,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1383:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1523",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1523",
																		"typeString": "library Address"
																	}
																],
																"id": 1283,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1375:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1282,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1375:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1375:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1286,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1389:7:11",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1375:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1287,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1279,
														"src": "1399:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1375:30:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1301,
												"nodeType": "IfStatement",
												"src": "1371:125:11",
												"trueBody": {
													"id": 1300,
													"nodeType": "Block",
													"src": "1407:89:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1294,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1463:4:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$1523",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$1523",
																						"typeString": "library Address"
																					}
																				],
																				"id": 1293,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1455:7:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1292,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1455:7:11",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1295,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1455:13:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1469:7:11",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "1455:21:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1297,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1279,
																		"src": "1478:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1289,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1545,
																		"src": "1428:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1545_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1291,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1435:19:11",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1533,
																	"src": "1428:26:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1298,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1428:57:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1299,
															"nodeType": "RevertStatement",
															"src": "1421:64:11"
														}
													]
												}
											},
											{
												"assignments": [
													1303,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1303,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1512:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 1320,
														"src": "1507:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1302,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1507:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1310,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1308,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1555:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1304,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1277,
																"src": "1525:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1535:4:11",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1525:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1307,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1306,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1279,
																"src": "1547:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1525:29:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1525:33:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1506:52:11"
											},
											{
												"condition": {
													"id": 1312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1572:8:11",
													"subExpression": {
														"id": 1311,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1303,
														"src": "1573:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1319,
												"nodeType": "IfStatement",
												"src": "1568:65:11",
												"trueBody": {
													"id": 1318,
													"nodeType": "Block",
													"src": "1582:51:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1313,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1545,
																		"src": "1603:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1545_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1610:10:11",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1536,
																	"src": "1603:17:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1316,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1603:19:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1317,
															"nodeType": "RevertStatement",
															"src": "1596:26:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1275,
										"nodeType": "StructuredDocumentation",
										"src": "380:905:11",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1321,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1299:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1325:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "1309:25:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1309:15:11",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1279,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1344:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "1336:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1308:43:11"
									},
									"returnParameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1361:0:11"
									},
									"scope": 1523,
									"src": "1290:349:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1337,
										"nodeType": "Block",
										"src": "2573:62:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1332,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1324,
															"src": "2612:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1333,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1326,
															"src": "2620:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1334,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1331,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1388,
														"src": "2590:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 1335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2590:38:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1330,
												"id": 1336,
												"nodeType": "Return",
												"src": "2583:45:11"
											}
										]
									},
									"documentation": {
										"id": 1322,
										"nodeType": "StructuredDocumentation",
										"src": "1645:834:11",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 1338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2493:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2514:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "2506:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2506:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1326,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2535:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "2522:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1325,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2522:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2505:35:11"
									},
									"returnParameters": {
										"id": 1330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1329,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "2559:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1328,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2559:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2558:14:11"
									},
									"scope": 1523,
									"src": "2484:151:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1387,
										"nodeType": "Block",
										"src": "3072:294:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1352,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3094:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1523",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1523",
																		"typeString": "library Address"
																	}
																],
																"id": 1351,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3086:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1350,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3086:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3086:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1354,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3100:7:11",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3086:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1355,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1345,
														"src": "3110:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3086:29:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1369,
												"nodeType": "IfStatement",
												"src": "3082:123:11",
												"trueBody": {
													"id": 1368,
													"nodeType": "Block",
													"src": "3117:88:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1362,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3173:4:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$1523",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$1523",
																						"typeString": "library Address"
																					}
																				],
																				"id": 1361,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3165:7:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1360,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3165:7:11",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1363,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3165:13:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1364,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3179:7:11",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3165:21:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1365,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1345,
																		"src": "3188:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1357,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1545,
																		"src": "3138:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1545_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1359,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3145:19:11",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1533,
																	"src": "3138:26:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1366,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3138:56:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1367,
															"nodeType": "RevertStatement",
															"src": "3131:63:11"
														}
													]
												}
											},
											{
												"assignments": [
													1371,
													1373
												],
												"declarations": [
													{
														"constant": false,
														"id": 1371,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3220:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 1387,
														"src": "3215:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1370,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3215:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1373,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3242:10:11",
														"nodeType": "VariableDeclaration",
														"scope": 1387,
														"src": "3229:23:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1372,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3229:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1380,
												"initialValue": {
													"arguments": [
														{
															"id": 1378,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1343,
															"src": "3282:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1374,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1341,
																"src": "3256:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3263:4:11",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3256:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1377,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1376,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1345,
																"src": "3275:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3256:25:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3256:31:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3214:73:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1382,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1341,
															"src": "3331:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1383,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1371,
															"src": "3339:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1384,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1373,
															"src": "3348:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1381,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1480,
														"src": "3304:26:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3304:55:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1349,
												"id": 1386,
												"nodeType": "Return",
												"src": "3297:62:11"
											}
										]
									},
									"documentation": {
										"id": 1339,
										"nodeType": "StructuredDocumentation",
										"src": "2641:313:11",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 1388,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "2968:21:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2998:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1388,
												"src": "2990:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2990:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1343,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3019:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1388,
												"src": "3006:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1342,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3006:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3033:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1388,
												"src": "3025:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3025:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2989:50:11"
									},
									"returnParameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1388,
												"src": "3058:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1347,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3058:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3057:14:11"
									},
									"scope": 1523,
									"src": "2959:407:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1413,
										"nodeType": "Block",
										"src": "3605:154:11",
										"statements": [
											{
												"assignments": [
													1399,
													1401
												],
												"declarations": [
													{
														"constant": false,
														"id": 1399,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3621:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 1413,
														"src": "3616:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1398,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3616:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1401,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3643:10:11",
														"nodeType": "VariableDeclaration",
														"scope": 1413,
														"src": "3630:23:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1400,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3630:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1406,
												"initialValue": {
													"arguments": [
														{
															"id": 1404,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1393,
															"src": "3675:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1402,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1391,
															"src": "3657:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1403,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3664:10:11",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3657:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3657:23:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3615:65:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1408,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1391,
															"src": "3724:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1409,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1399,
															"src": "3732:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1410,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1401,
															"src": "3741:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1407,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1480,
														"src": "3697:26:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3697:55:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1397,
												"id": 1412,
												"nodeType": "Return",
												"src": "3690:62:11"
											}
										]
									},
									"documentation": {
										"id": 1389,
										"nodeType": "StructuredDocumentation",
										"src": "3372:128:11",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 1414,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3514:18:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3541:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "3533:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1390,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3533:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3562:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "3549:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1392,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3549:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3532:35:11"
									},
									"returnParameters": {
										"id": 1397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1396,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "3591:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1395,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3591:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3590:14:11"
									},
									"scope": 1523,
									"src": "3505:254:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1439,
										"nodeType": "Block",
										"src": "3997:156:11",
										"statements": [
											{
												"assignments": [
													1425,
													1427
												],
												"declarations": [
													{
														"constant": false,
														"id": 1425,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4013:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 1439,
														"src": "4008:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1424,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4008:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1427,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4035:10:11",
														"nodeType": "VariableDeclaration",
														"scope": 1439,
														"src": "4022:23:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1426,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4022:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1432,
												"initialValue": {
													"arguments": [
														{
															"id": 1430,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1419,
															"src": "4069:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1428,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1417,
															"src": "4049:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1429,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4056:12:11",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4049:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4049:25:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4007:67:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1434,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1417,
															"src": "4118:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1435,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1425,
															"src": "4126:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1436,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1427,
															"src": "4135:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1433,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1480,
														"src": "4091:26:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4091:55:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1423,
												"id": 1438,
												"nodeType": "Return",
												"src": "4084:62:11"
											}
										]
									},
									"documentation": {
										"id": 1415,
										"nodeType": "StructuredDocumentation",
										"src": "3765:130:11",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 1440,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "3909:20:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1417,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3938:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1440,
												"src": "3930:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3930:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1419,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3959:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1440,
												"src": "3946:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1418,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3946:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3929:35:11"
									},
									"returnParameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1440,
												"src": "3983:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1421,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3983:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3982:14:11"
									},
									"scope": 1523,
									"src": "3900:253:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1479,
										"nodeType": "Block",
										"src": "4579:424:11",
										"statements": [
											{
												"condition": {
													"id": 1453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4593:8:11",
													"subExpression": {
														"id": 1452,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1445,
														"src": "4594:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1477,
													"nodeType": "Block",
													"src": "4653:344:11",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1468,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1459,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1447,
																			"src": "4841:10:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1460,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4852:6:11",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4841:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1461,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4862:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4841:22:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1467,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 1463,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1443,
																				"src": "4867:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1464,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4874:4:11",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "4867:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1465,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4879:6:11",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4867:18:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1466,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4889:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4867:23:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4841:49:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1474,
															"nodeType": "IfStatement",
															"src": "4837:119:11",
															"trueBody": {
																"id": 1473,
																"nodeType": "Block",
																"src": "4892:64:11",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1470,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1443,
																					"src": "4934:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1469,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1274,
																				"src": "4917:16:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 1471,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4917:24:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1472,
																		"nodeType": "RevertStatement",
																		"src": "4910:31:11"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1475,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1447,
																"src": "4976:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1451,
															"id": 1476,
															"nodeType": "Return",
															"src": "4969:17:11"
														}
													]
												},
												"id": 1478,
												"nodeType": "IfStatement",
												"src": "4589:408:11",
												"trueBody": {
													"id": 1458,
													"nodeType": "Block",
													"src": "4603:44:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1455,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1447,
																		"src": "4625:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1454,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1522,
																	"src": "4617:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1456,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4617:19:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1457,
															"nodeType": "ExpressionStatement",
															"src": "4617:19:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1441,
										"nodeType": "StructuredDocumentation",
										"src": "4159:257:11",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."
									},
									"id": 1480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4430:26:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4474:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1480,
												"src": "4466:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4466:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1445,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4495:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1480,
												"src": "4490:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1444,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4490:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1447,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4525:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1480,
												"src": "4512:23:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1446,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4512:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:85:11"
									},
									"returnParameters": {
										"id": 1451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1480,
												"src": "4565:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1449,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4565:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4564:14:11"
									},
									"scope": 1523,
									"src": "4421:582:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1501,
										"nodeType": "Block",
										"src": "5307:122:11",
										"statements": [
											{
												"condition": {
													"id": 1491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5321:8:11",
													"subExpression": {
														"id": 1490,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1483,
														"src": "5322:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1499,
													"nodeType": "Block",
													"src": "5381:42:11",
													"statements": [
														{
															"expression": {
																"id": 1497,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1485,
																"src": "5402:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1489,
															"id": 1498,
															"nodeType": "Return",
															"src": "5395:17:11"
														}
													]
												},
												"id": 1500,
												"nodeType": "IfStatement",
												"src": "5317:106:11",
												"trueBody": {
													"id": 1496,
													"nodeType": "Block",
													"src": "5331:44:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1493,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1485,
																		"src": "5353:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1492,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1522,
																	"src": "5345:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1494,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5345:19:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1495,
															"nodeType": "ExpressionStatement",
															"src": "5345:19:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1481,
										"nodeType": "StructuredDocumentation",
										"src": "5009:191:11",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."
									},
									"id": 1502,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5214:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1483,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5236:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1502,
												"src": "5231:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1482,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5231:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1485,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5258:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1502,
												"src": "5245:23:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1484,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5245:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5230:39:11"
									},
									"returnParameters": {
										"id": 1489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1488,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1502,
												"src": "5293:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1487,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5293:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5292:14:11"
									},
									"scope": 1523,
									"src": "5205:224:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1521,
										"nodeType": "Block",
										"src": "5598:432:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1508,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1505,
															"src": "5674:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1509,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5685:6:11",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5674:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1510,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5694:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5674:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1519,
													"nodeType": "Block",
													"src": "5973:51:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1514,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1545,
																		"src": "5994:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1545_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1516,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6001:10:11",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1536,
																	"src": "5994:17:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1517,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5994:19:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1518,
															"nodeType": "RevertStatement",
															"src": "5987:26:11"
														}
													]
												},
												"id": 1520,
												"nodeType": "IfStatement",
												"src": "5670:354:11",
												"trueBody": {
													"id": 1513,
													"nodeType": "Block",
													"src": "5697:270:11",
													"statements": [
														{
															"AST": {
																"nativeSrc": "5824:133:11",
																"nodeType": "YulBlock",
																"src": "5824:133:11",
																"statements": [
																	{
																		"nativeSrc": "5842:40:11",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5842:40:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "5871:10:11",
																					"nodeType": "YulIdentifier",
																					"src": "5871:10:11"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "5865:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "5865:5:11"
																			},
																			"nativeSrc": "5865:17:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5865:17:11"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "5846:15:11",
																				"nodeType": "YulTypedName",
																				"src": "5846:15:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5910:2:11",
																							"nodeType": "YulLiteral",
																							"src": "5910:2:11",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "5914:10:11",
																							"nodeType": "YulIdentifier",
																							"src": "5914:10:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5906:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "5906:3:11"
																					},
																					"nativeSrc": "5906:19:11",
																					"nodeType": "YulFunctionCall",
																					"src": "5906:19:11"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "5927:15:11",
																					"nodeType": "YulIdentifier",
																					"src": "5927:15:11"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5899:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "5899:6:11"
																			},
																			"nativeSrc": "5899:44:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5899:44:11"
																		},
																		"nativeSrc": "5899:44:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5899:44:11"
																	}
																]
															},
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 1505,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5871:10:11",
																	"valueSize": 1
																},
																{
																	"declaration": 1505,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5914:10:11",
																	"valueSize": 1
																}
															],
															"flags": [
																"memory-safe"
															],
															"id": 1512,
															"nodeType": "InlineAssembly",
															"src": "5799:158:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1503,
										"nodeType": "StructuredDocumentation",
										"src": "5435:103:11",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."
									},
									"id": 1522,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5552:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1505,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5573:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1522,
												"src": "5560:23:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1504,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5560:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5559:25:11"
									},
									"returnParameters": {
										"id": 1507,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5598:0:11"
									},
									"scope": 1523,
									"src": "5543:487:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1524,
							"src": "233:5799:11",
							"usedErrors": [
								1274
							],
							"usedEvents": []
						}
					],
					"src": "101:5932:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
					"exportedSymbols": {
						"Errors": [
							1545
						]
					},
					"id": 1546,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1525,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Errors",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1526,
								"nodeType": "StructuredDocumentation",
								"src": "126:284:12",
								"text": " @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 1545,
							"linearizedBaseContracts": [
								1545
							],
							"name": "Errors",
							"nameLocation": "419:6:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1527,
										"nodeType": "StructuredDocumentation",
										"src": "432:94:12",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cf479181",
									"id": 1533,
									"name": "InsufficientBalance",
									"nameLocation": "537:19:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1529,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "565:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "557:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1531,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "582:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "574:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:33:12"
									},
									"src": "531:59:12"
								},
								{
									"documentation": {
										"id": 1534,
										"nodeType": "StructuredDocumentation",
										"src": "596:89:12",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "d6bda275",
									"id": 1536,
									"name": "FailedCall",
									"nameLocation": "696:10:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1535,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:12"
									},
									"src": "690:19:12"
								},
								{
									"documentation": {
										"id": 1537,
										"nodeType": "StructuredDocumentation",
										"src": "715:46:12",
										"text": " @dev The deployment failed."
									},
									"errorSelector": "b06ebf3d",
									"id": 1539,
									"name": "FailedDeployment",
									"nameLocation": "772:16:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:12"
									},
									"src": "766:25:12"
								},
								{
									"documentation": {
										"id": 1540,
										"nodeType": "StructuredDocumentation",
										"src": "797:58:12",
										"text": " @dev A necessary precompile is missing."
									},
									"errorSelector": "42b01bce",
									"id": 1544,
									"name": "MissingPrecompile",
									"nameLocation": "866:17:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1542,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1544,
												"src": "884:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1541,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:9:12"
									},
									"src": "860:33:12"
								}
							],
							"scope": 1546,
							"src": "411:484:12",
							"usedErrors": [
								1533,
								1536,
								1539,
								1544
							],
							"usedEvents": []
						}
					],
					"src": "100:796:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							1669
						]
					},
					"id": 1670,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1547,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1548,
								"nodeType": "StructuredDocumentation",
								"src": "219:1187:13",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."
							},
							"fullyImplemented": true,
							"id": 1669,
							"linearizedBaseContracts": [
								1669
							],
							"name": "StorageSlot",
							"nameLocation": "1415:11:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 1551,
									"members": [
										{
											"constant": false,
											"id": 1550,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1470:5:13",
											"nodeType": "VariableDeclaration",
											"scope": 1551,
											"src": "1462:13:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1549,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1462:7:13",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1440:11:13",
									"nodeType": "StructDefinition",
									"scope": 1669,
									"src": "1433:49:13",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 1554,
									"members": [
										{
											"constant": false,
											"id": 1553,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1522:5:13",
											"nodeType": "VariableDeclaration",
											"scope": 1554,
											"src": "1517:10:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1552,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1517:4:13",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1495:11:13",
									"nodeType": "StructDefinition",
									"scope": 1669,
									"src": "1488:46:13",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 1557,
									"members": [
										{
											"constant": false,
											"id": 1556,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1577:5:13",
											"nodeType": "VariableDeclaration",
											"scope": 1557,
											"src": "1569:13:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1555,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1569:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1547:11:13",
									"nodeType": "StructDefinition",
									"scope": 1669,
									"src": "1540:49:13",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 1560,
									"members": [
										{
											"constant": false,
											"id": 1559,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1632:5:13",
											"nodeType": "VariableDeclaration",
											"scope": 1560,
											"src": "1624:13:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1558,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1624:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1602:11:13",
									"nodeType": "StructDefinition",
									"scope": 1669,
									"src": "1595:49:13",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Int256Slot",
									"id": 1563,
									"members": [
										{
											"constant": false,
											"id": 1562,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1685:5:13",
											"nodeType": "VariableDeclaration",
											"scope": 1563,
											"src": "1678:12:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											},
											"typeName": {
												"id": 1561,
												"name": "int256",
												"nodeType": "ElementaryTypeName",
												"src": "1678:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Int256Slot",
									"nameLocation": "1657:10:13",
									"nodeType": "StructDefinition",
									"scope": 1669,
									"src": "1650:47:13",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 1566,
									"members": [
										{
											"constant": false,
											"id": 1565,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1738:5:13",
											"nodeType": "VariableDeclaration",
											"scope": 1566,
											"src": "1731:12:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1564,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1731:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1710:10:13",
									"nodeType": "StructDefinition",
									"scope": 1669,
									"src": "1703:47:13",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 1569,
									"members": [
										{
											"constant": false,
											"id": 1568,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1789:5:13",
											"nodeType": "VariableDeclaration",
											"scope": 1569,
											"src": "1783:11:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1567,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1783:5:13",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1763:9:13",
									"nodeType": "StructDefinition",
									"scope": 1669,
									"src": "1756:45:13",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1579,
										"nodeType": "Block",
										"src": "1983:79:13",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2018:38:13",
													"nodeType": "YulBlock",
													"src": "2018:38:13",
													"statements": [
														{
															"nativeSrc": "2032:14:13",
															"nodeType": "YulAssignment",
															"src": "2032:14:13",
															"value": {
																"name": "slot",
																"nativeSrc": "2042:4:13",
																"nodeType": "YulIdentifier",
																"src": "2042:4:13"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2032:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2032:6:13"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1576,
														"isOffset": false,
														"isSlot": true,
														"src": "2032:6:13",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1572,
														"isOffset": false,
														"isSlot": false,
														"src": "2042:4:13",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1578,
												"nodeType": "InlineAssembly",
												"src": "1993:63:13"
											}
										]
									},
									"documentation": {
										"id": 1570,
										"nodeType": "StructuredDocumentation",
										"src": "1807:87:13",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 1580,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1908:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1572,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1931:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1580,
												"src": "1923:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1571,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1923:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1922:14:13"
									},
									"returnParameters": {
										"id": 1577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1576,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1980:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1580,
												"src": "1960:21:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1551_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1575,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1574,
														"name": "AddressSlot",
														"nameLocations": [
															"1960:11:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1551,
														"src": "1960:11:13"
													},
													"referencedDeclaration": 1551,
													"src": "1960:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1551_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1959:23:13"
									},
									"scope": 1669,
									"src": "1899:163:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1590,
										"nodeType": "Block",
										"src": "2243:79:13",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2278:38:13",
													"nodeType": "YulBlock",
													"src": "2278:38:13",
													"statements": [
														{
															"nativeSrc": "2292:14:13",
															"nodeType": "YulAssignment",
															"src": "2292:14:13",
															"value": {
																"name": "slot",
																"nativeSrc": "2302:4:13",
																"nodeType": "YulIdentifier",
																"src": "2302:4:13"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2292:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2292:6:13"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1587,
														"isOffset": false,
														"isSlot": true,
														"src": "2292:6:13",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1583,
														"isOffset": false,
														"isSlot": false,
														"src": "2302:4:13",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1589,
												"nodeType": "InlineAssembly",
												"src": "2253:63:13"
											}
										]
									},
									"documentation": {
										"id": 1581,
										"nodeType": "StructuredDocumentation",
										"src": "2068:86:13",
										"text": " @dev Returns a `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 1591,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "2168:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1583,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2191:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1591,
												"src": "2183:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1582,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2183:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:14:13"
									},
									"returnParameters": {
										"id": 1588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1587,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2240:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1591,
												"src": "2220:21:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$1554_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 1586,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1585,
														"name": "BooleanSlot",
														"nameLocations": [
															"2220:11:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1554,
														"src": "2220:11:13"
													},
													"referencedDeclaration": 1554,
													"src": "2220:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$1554_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2219:23:13"
									},
									"scope": 1669,
									"src": "2159:163:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1601,
										"nodeType": "Block",
										"src": "2503:79:13",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2538:38:13",
													"nodeType": "YulBlock",
													"src": "2538:38:13",
													"statements": [
														{
															"nativeSrc": "2552:14:13",
															"nodeType": "YulAssignment",
															"src": "2552:14:13",
															"value": {
																"name": "slot",
																"nativeSrc": "2562:4:13",
																"nodeType": "YulIdentifier",
																"src": "2562:4:13"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2552:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2552:6:13"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1598,
														"isOffset": false,
														"isSlot": true,
														"src": "2552:6:13",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1594,
														"isOffset": false,
														"isSlot": false,
														"src": "2562:4:13",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1600,
												"nodeType": "InlineAssembly",
												"src": "2513:63:13"
											}
										]
									},
									"documentation": {
										"id": 1592,
										"nodeType": "StructuredDocumentation",
										"src": "2328:86:13",
										"text": " @dev Returns a `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 1602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2428:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1594,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2451:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "2443:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1593,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2443:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2442:14:13"
									},
									"returnParameters": {
										"id": 1599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1598,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2500:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "2480:21:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1557_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1597,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1596,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2480:11:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1557,
														"src": "2480:11:13"
													},
													"referencedDeclaration": 1557,
													"src": "2480:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1557_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2479:23:13"
									},
									"scope": 1669,
									"src": "2419:163:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1612,
										"nodeType": "Block",
										"src": "2763:79:13",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2798:38:13",
													"nodeType": "YulBlock",
													"src": "2798:38:13",
													"statements": [
														{
															"nativeSrc": "2812:14:13",
															"nodeType": "YulAssignment",
															"src": "2812:14:13",
															"value": {
																"name": "slot",
																"nativeSrc": "2822:4:13",
																"nodeType": "YulIdentifier",
																"src": "2822:4:13"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2812:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2812:6:13"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1609,
														"isOffset": false,
														"isSlot": true,
														"src": "2812:6:13",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1605,
														"isOffset": false,
														"isSlot": false,
														"src": "2822:4:13",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1611,
												"nodeType": "InlineAssembly",
												"src": "2773:63:13"
											}
										]
									},
									"documentation": {
										"id": 1603,
										"nodeType": "StructuredDocumentation",
										"src": "2588:86:13",
										"text": " @dev Returns a `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 1613,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2688:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2711:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1613,
												"src": "2703:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1604,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2702:14:13"
									},
									"returnParameters": {
										"id": 1610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1609,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2760:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1613,
												"src": "2740:21:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1560_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1608,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1607,
														"name": "Uint256Slot",
														"nameLocations": [
															"2740:11:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1560,
														"src": "2740:11:13"
													},
													"referencedDeclaration": 1560,
													"src": "2740:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1560_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2739:23:13"
									},
									"scope": 1669,
									"src": "2679:163:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1623,
										"nodeType": "Block",
										"src": "3020:79:13",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3055:38:13",
													"nodeType": "YulBlock",
													"src": "3055:38:13",
													"statements": [
														{
															"nativeSrc": "3069:14:13",
															"nodeType": "YulAssignment",
															"src": "3069:14:13",
															"value": {
																"name": "slot",
																"nativeSrc": "3079:4:13",
																"nodeType": "YulIdentifier",
																"src": "3079:4:13"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3069:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3069:6:13"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1620,
														"isOffset": false,
														"isSlot": true,
														"src": "3069:6:13",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1616,
														"isOffset": false,
														"isSlot": false,
														"src": "3079:4:13",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1622,
												"nodeType": "InlineAssembly",
												"src": "3030:63:13"
											}
										]
									},
									"documentation": {
										"id": 1614,
										"nodeType": "StructuredDocumentation",
										"src": "2848:85:13",
										"text": " @dev Returns a `Int256Slot` with member `value` located at `slot`."
									},
									"id": 1624,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getInt256Slot",
									"nameLocation": "2947:13:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1616,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2969:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1624,
												"src": "2961:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1615,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2961:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2960:14:13"
									},
									"returnParameters": {
										"id": 1621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1620,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3017:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1624,
												"src": "2998:20:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Int256Slot_$1563_storage_ptr",
													"typeString": "struct StorageSlot.Int256Slot"
												},
												"typeName": {
													"id": 1619,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1618,
														"name": "Int256Slot",
														"nameLocations": [
															"2998:10:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1563,
														"src": "2998:10:13"
													},
													"referencedDeclaration": 1563,
													"src": "2998:10:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Int256Slot_$1563_storage_ptr",
														"typeString": "struct StorageSlot.Int256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2997:22:13"
									},
									"scope": 1669,
									"src": "2938:161:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1634,
										"nodeType": "Block",
										"src": "3277:79:13",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3312:38:13",
													"nodeType": "YulBlock",
													"src": "3312:38:13",
													"statements": [
														{
															"nativeSrc": "3326:14:13",
															"nodeType": "YulAssignment",
															"src": "3326:14:13",
															"value": {
																"name": "slot",
																"nativeSrc": "3336:4:13",
																"nodeType": "YulIdentifier",
																"src": "3336:4:13"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3326:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3326:6:13"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1631,
														"isOffset": false,
														"isSlot": true,
														"src": "3326:6:13",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1627,
														"isOffset": false,
														"isSlot": false,
														"src": "3336:4:13",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1633,
												"nodeType": "InlineAssembly",
												"src": "3287:63:13"
											}
										]
									},
									"documentation": {
										"id": 1625,
										"nodeType": "StructuredDocumentation",
										"src": "3105:85:13",
										"text": " @dev Returns a `StringSlot` with member `value` located at `slot`."
									},
									"id": 1635,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3204:13:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1627,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3226:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1635,
												"src": "3218:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1626,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3218:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3217:14:13"
									},
									"returnParameters": {
										"id": 1632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1631,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3274:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1635,
												"src": "3255:20:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1566_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1630,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1629,
														"name": "StringSlot",
														"nameLocations": [
															"3255:10:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1566,
														"src": "3255:10:13"
													},
													"referencedDeclaration": 1566,
													"src": "3255:10:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1566_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3254:22:13"
									},
									"scope": 1669,
									"src": "3195:161:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1645,
										"nodeType": "Block",
										"src": "3558:85:13",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3593:44:13",
													"nodeType": "YulBlock",
													"src": "3593:44:13",
													"statements": [
														{
															"nativeSrc": "3607:20:13",
															"nodeType": "YulAssignment",
															"src": "3607:20:13",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3617:10:13",
																"nodeType": "YulIdentifier",
																"src": "3617:10:13"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3607:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3607:6:13"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1642,
														"isOffset": false,
														"isSlot": true,
														"src": "3607:6:13",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1638,
														"isOffset": false,
														"isSlot": true,
														"src": "3617:10:13",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1644,
												"nodeType": "InlineAssembly",
												"src": "3568:69:13"
											}
										]
									},
									"documentation": {
										"id": 1636,
										"nodeType": "StructuredDocumentation",
										"src": "3362:101:13",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 1646,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3477:13:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1638,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3506:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "3491:20:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1637,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3491:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3490:22:13"
									},
									"returnParameters": {
										"id": 1643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1642,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3555:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "3536:20:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1566_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1641,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1640,
														"name": "StringSlot",
														"nameLocations": [
															"3536:10:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1566,
														"src": "3536:10:13"
													},
													"referencedDeclaration": 1566,
													"src": "3536:10:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1566_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3535:22:13"
									},
									"scope": 1669,
									"src": "3468:175:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1656,
										"nodeType": "Block",
										"src": "3818:79:13",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3853:38:13",
													"nodeType": "YulBlock",
													"src": "3853:38:13",
													"statements": [
														{
															"nativeSrc": "3867:14:13",
															"nodeType": "YulAssignment",
															"src": "3867:14:13",
															"value": {
																"name": "slot",
																"nativeSrc": "3877:4:13",
																"nodeType": "YulIdentifier",
																"src": "3877:4:13"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3867:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3867:6:13"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1653,
														"isOffset": false,
														"isSlot": true,
														"src": "3867:6:13",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1649,
														"isOffset": false,
														"isSlot": false,
														"src": "3877:4:13",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1655,
												"nodeType": "InlineAssembly",
												"src": "3828:63:13"
											}
										]
									},
									"documentation": {
										"id": 1647,
										"nodeType": "StructuredDocumentation",
										"src": "3649:84:13",
										"text": " @dev Returns a `BytesSlot` with member `value` located at `slot`."
									},
									"id": 1657,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3747:12:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1649,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3768:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1657,
												"src": "3760:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1648,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:14:13"
									},
									"returnParameters": {
										"id": 1654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1653,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3815:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1657,
												"src": "3797:19:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1569_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1652,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1651,
														"name": "BytesSlot",
														"nameLocations": [
															"3797:9:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1569,
														"src": "3797:9:13"
													},
													"referencedDeclaration": 1569,
													"src": "3797:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1569_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:21:13"
									},
									"scope": 1669,
									"src": "3738:159:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1667,
										"nodeType": "Block",
										"src": "4094:85:13",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4129:44:13",
													"nodeType": "YulBlock",
													"src": "4129:44:13",
													"statements": [
														{
															"nativeSrc": "4143:20:13",
															"nodeType": "YulAssignment",
															"src": "4143:20:13",
															"value": {
																"name": "store.slot",
																"nativeSrc": "4153:10:13",
																"nodeType": "YulIdentifier",
																"src": "4153:10:13"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "4143:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4143:6:13"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1664,
														"isOffset": false,
														"isSlot": true,
														"src": "4143:6:13",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1660,
														"isOffset": false,
														"isSlot": true,
														"src": "4153:10:13",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1666,
												"nodeType": "InlineAssembly",
												"src": "4104:69:13"
											}
										]
									},
									"documentation": {
										"id": 1658,
										"nodeType": "StructuredDocumentation",
										"src": "3903:99:13",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 1668,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "4016:12:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1660,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "4043:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1668,
												"src": "4029:19:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1659,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4029:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4028:21:13"
									},
									"returnParameters": {
										"id": 1665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1664,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4091:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1668,
												"src": "4073:19:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1569_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1663,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1662,
														"name": "BytesSlot",
														"nameLocations": [
															"4073:9:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1569,
														"src": "4073:9:13"
													},
													"referencedDeclaration": 1569,
													"src": "4073:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1569_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4072:21:13"
									},
									"scope": 1669,
									"src": "4007:172:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1670,
							"src": "1407:2774:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3989:13"
				},
				"id": 13
			},
			"ICO/IcoOptimized.sol": {
				"ast": {
					"absolutePath": "ICO/IcoOptimized.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							45
						],
						"ContextUpgradeable": [
							722
						],
						"ERC1967Utils": [
							1176
						],
						"ICO": [
							3093
						],
						"IERC1822Proxiable": [
							882
						],
						"IERC20": [
							1264
						],
						"Initializable": [
							494
						],
						"OwnableUpgradeable": [
							240
						],
						"ReentrancyGuardUpgradeable": [
							851
						],
						"UUPSUpgradeable": [
							676
						]
					},
					"id": 3094,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1671,
							"literals": [
								"solidity",
								"0.8",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:14"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1672,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3094,
							"sourceUnit": 1265,
							"src": "57:56:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 1673,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3094,
							"sourceUnit": 241,
							"src": "114:75:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"id": 1674,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3094,
							"sourceUnit": 677,
							"src": "190:77:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
							"file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
							"id": 1675,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3094,
							"sourceUnit": 46,
							"src": "268:76:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol",
							"id": 1676,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3094,
							"sourceUnit": 852,
							"src": "345:82:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1677,
										"name": "ReentrancyGuardUpgradeable",
										"nameLocations": [
											"445:26:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 851,
										"src": "445:26:14"
									},
									"id": 1678,
									"nodeType": "InheritanceSpecifier",
									"src": "445:26:14"
								},
								{
									"baseName": {
										"id": 1679,
										"name": "OwnableUpgradeable",
										"nameLocations": [
											"473:18:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 240,
										"src": "473:18:14"
									},
									"id": 1680,
									"nodeType": "InheritanceSpecifier",
									"src": "473:18:14"
								},
								{
									"baseName": {
										"id": 1681,
										"name": "UUPSUpgradeable",
										"nameLocations": [
											"493:15:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 676,
										"src": "493:15:14"
									},
									"id": 1682,
									"nodeType": "InheritanceSpecifier",
									"src": "493:15:14"
								}
							],
							"canonicalName": "ICO",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3093,
							"linearizedBaseContracts": [
								3093,
								676,
								882,
								240,
								722,
								851,
								494
							],
							"name": "ICO",
							"nameLocation": "438:3:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "99131e7e",
									"id": 1685,
									"mutability": "mutable",
									"name": "priceFeedBNB",
									"nameLocation": "573:12:14",
									"nodeType": "VariableDeclaration",
									"scope": 3093,
									"src": "544:41:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
										"typeString": "contract AggregatorV3Interface"
									},
									"typeName": {
										"id": 1684,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1683,
											"name": "AggregatorV3Interface",
											"nameLocations": [
												"544:21:14"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 45,
											"src": "544:21:14"
										},
										"referencedDeclaration": 45,
										"src": "544:21:14",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
											"typeString": "contract AggregatorV3Interface"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "62a469e9",
									"id": 1688,
									"mutability": "mutable",
									"name": "priceFeedUSDT",
									"nameLocation": "620:13:14",
									"nodeType": "VariableDeclaration",
									"scope": 3093,
									"src": "591:42:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
										"typeString": "contract AggregatorV3Interface"
									},
									"typeName": {
										"id": 1687,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1686,
											"name": "AggregatorV3Interface",
											"nameLocations": [
												"591:21:14"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 45,
											"src": "591:21:14"
										},
										"referencedDeclaration": 45,
										"src": "591:21:14",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
											"typeString": "contract AggregatorV3Interface"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d3d9d1e4",
									"id": 1691,
									"mutability": "mutable",
									"name": "priceFeedUSDC",
									"nameLocation": "668:13:14",
									"nodeType": "VariableDeclaration",
									"scope": 3093,
									"src": "639:42:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
										"typeString": "contract AggregatorV3Interface"
									},
									"typeName": {
										"id": 1690,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1689,
											"name": "AggregatorV3Interface",
											"nameLocations": [
												"639:21:14"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 45,
											"src": "639:21:14"
										},
										"referencedDeclaration": 45,
										"src": "639:21:14",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
											"typeString": "contract AggregatorV3Interface"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "ICO.Sale",
									"id": 1702,
									"members": [
										{
											"constant": false,
											"id": 1693,
											"mutability": "mutable",
											"name": "startTime",
											"nameLocation": "718:9:14",
											"nodeType": "VariableDeclaration",
											"scope": 1702,
											"src": "710:17:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1692,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "710:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1695,
											"mutability": "mutable",
											"name": "endTime",
											"nameLocation": "745:7:14",
											"nodeType": "VariableDeclaration",
											"scope": 1702,
											"src": "737:15:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1694,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "737:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1697,
											"mutability": "mutable",
											"name": "tokenPriceUSD",
											"nameLocation": "770:13:14",
											"nodeType": "VariableDeclaration",
											"scope": 1702,
											"src": "762:21:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1696,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "762:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1699,
											"mutability": "mutable",
											"name": "tokensSold",
											"nameLocation": "801:10:14",
											"nodeType": "VariableDeclaration",
											"scope": 1702,
											"src": "793:18:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1698,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "793:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1701,
											"mutability": "mutable",
											"name": "isFinalized",
											"nameLocation": "826:11:14",
											"nodeType": "VariableDeclaration",
											"scope": 1702,
											"src": "821:16:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1700,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "821:4:14",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Sale",
									"nameLocation": "695:4:14",
									"nodeType": "StructDefinition",
									"scope": 3093,
									"src": "688:156:14",
									"visibility": "public"
								},
								{
									"canonicalName": "ICO.PaymentMethod",
									"id": 1706,
									"members": [
										{
											"id": 1703,
											"name": "BNB",
											"nameLocation": "879:3:14",
											"nodeType": "EnumValue",
											"src": "879:3:14"
										},
										{
											"id": 1704,
											"name": "USDT",
											"nameLocation": "892:4:14",
											"nodeType": "EnumValue",
											"src": "892:4:14"
										},
										{
											"id": 1705,
											"name": "USDC",
											"nameLocation": "906:4:14",
											"nodeType": "EnumValue",
											"src": "906:4:14"
										}
									],
									"name": "PaymentMethod",
									"nameLocation": "855:13:14",
									"nodeType": "EnumDefinition",
									"src": "850:66:14"
								},
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 1709,
									"mutability": "mutable",
									"name": "token",
									"nameLocation": "959:5:14",
									"nodeType": "VariableDeclaration",
									"scope": 3093,
									"src": "945:19:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$1264",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1708,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1707,
											"name": "IERC20",
											"nameLocations": [
												"945:6:14"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1264,
											"src": "945:6:14"
										},
										"referencedDeclaration": 1264,
										"src": "945:6:14",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1264",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2151206e",
									"id": 1711,
									"mutability": "mutable",
									"name": "softCapInUSD",
									"nameLocation": "985:12:14",
									"nodeType": "VariableDeclaration",
									"scope": 3093,
									"src": "970:27:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1710,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "970:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c1560a14",
									"id": 1713,
									"mutability": "mutable",
									"name": "hardCapInUSD",
									"nameLocation": "1018:12:14",
									"nodeType": "VariableDeclaration",
									"scope": 3093,
									"src": "1003:27:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1712,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1003:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a1e89aec",
									"id": 1715,
									"mutability": "mutable",
									"name": "saleCount",
									"nameLocation": "1051:9:14",
									"nodeType": "VariableDeclaration",
									"scope": 3093,
									"src": "1036:24:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1714,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1036:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "721bc38b",
									"id": 1717,
									"mutability": "mutable",
									"name": "totalFundsRaisedUSD",
									"nameLocation": "1081:19:14",
									"nodeType": "VariableDeclaration",
									"scope": 3093,
									"src": "1066:34:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1716,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1066:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "63b20117",
									"id": 1719,
									"mutability": "mutable",
									"name": "totalTokensSold",
									"nameLocation": "1121:15:14",
									"nodeType": "VariableDeclaration",
									"scope": 3093,
									"src": "1106:30:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1718,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1106:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 1722,
									"mutability": "constant",
									"name": "PRECISION_10",
									"nameLocation": "1159:12:14",
									"nodeType": "VariableDeclaration",
									"scope": 3093,
									"src": "1142:36:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1720,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1142:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31653130",
										"id": 1721,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1174:4:14",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000000000_by_1",
											"typeString": "int_const 10000000000"
										},
										"value": "1e10"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1725,
									"mutability": "constant",
									"name": "PRECISION_18",
									"nameLocation": "1201:12:14",
									"nodeType": "VariableDeclaration",
									"scope": 3093,
									"src": "1184:36:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1723,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1184:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31653138",
										"id": 1724,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1216:4:14",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"value": "1e18"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "d1f3b23e",
									"id": 1727,
									"mutability": "mutable",
									"name": "isICOFinalized",
									"nameLocation": "1238:14:14",
									"nodeType": "VariableDeclaration",
									"scope": 3093,
									"src": "1226:26:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1726,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1226:4:14",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4dee1dc3",
									"id": 1729,
									"mutability": "mutable",
									"name": "isTokensAirdropped",
									"nameLocation": "1271:18:14",
									"nodeType": "VariableDeclaration",
									"scope": 3093,
									"src": "1259:30:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1728,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1259:4:14",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b9469e1a",
									"id": 1731,
									"mutability": "mutable",
									"name": "isFreezed",
									"nameLocation": "1307:9:14",
									"nodeType": "VariableDeclaration",
									"scope": 3093,
									"src": "1295:21:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1730,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1295:4:14",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3feb5f2b",
									"id": 1734,
									"mutability": "mutable",
									"name": "investors",
									"nameLocation": "1341:9:14",
									"nodeType": "VariableDeclaration",
									"scope": 3093,
									"src": "1324:26:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 1732,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1324:7:14",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 1733,
										"nodeType": "ArrayTypeName",
										"src": "1324:9:14",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2f48ab7d",
									"id": 1736,
									"mutability": "mutable",
									"name": "usdt",
									"nameLocation": "1371:4:14",
									"nodeType": "VariableDeclaration",
									"scope": 3093,
									"src": "1356:19:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1735,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1356:7:14",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3e413bee",
									"id": 1738,
									"mutability": "mutable",
									"name": "usdc",
									"nameLocation": "1396:4:14",
									"nodeType": "VariableDeclaration",
									"scope": 3093,
									"src": "1381:19:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1737,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1381:7:14",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b5f522f7",
									"id": 1743,
									"mutability": "mutable",
									"name": "sales",
									"nameLocation": "1455:5:14",
									"nodeType": "VariableDeclaration",
									"scope": 3093,
									"src": "1423:37:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Sale_$1702_storage_$",
										"typeString": "mapping(uint256 => struct ICO.Sale)"
									},
									"typeName": {
										"id": 1742,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1739,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1431:7:14",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1423:24:14",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Sale_$1702_storage_$",
											"typeString": "mapping(uint256 => struct ICO.Sale)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1741,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1740,
												"name": "Sale",
												"nameLocations": [
													"1442:4:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1702,
												"src": "1442:4:14"
											},
											"referencedDeclaration": 1702,
											"src": "1442:4:14",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Sale_$1702_storage_ptr",
												"typeString": "struct ICO.Sale"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c81ffdea",
									"id": 1747,
									"mutability": "mutable",
									"name": "contributionsInUSD",
									"nameLocation": "1501:18:14",
									"nodeType": "VariableDeclaration",
									"scope": 3093,
									"src": "1466:53:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1746,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1744,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1474:7:14",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1466:27:14",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1745,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1485:7:14",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e8e87389",
									"id": 1751,
									"mutability": "mutable",
									"name": "tokensBoughtByInvestor",
									"nameLocation": "1560:22:14",
									"nodeType": "VariableDeclaration",
									"scope": 3093,
									"src": "1525:57:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1750,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1748,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1533:7:14",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1525:27:14",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1749,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1544:7:14",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "df4e0593",
									"id": 1756,
									"mutability": "mutable",
									"name": "paymentMethodForInvestor",
									"nameLocation": "1629:24:14",
									"nodeType": "VariableDeclaration",
									"scope": 3093,
									"src": "1588:65:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_enum$_PaymentMethod_$1706_$",
										"typeString": "mapping(address => enum ICO.PaymentMethod)"
									},
									"typeName": {
										"id": 1755,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1752,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1596:7:14",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1588:33:14",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_enum$_PaymentMethod_$1706_$",
											"typeString": "mapping(address => enum ICO.PaymentMethod)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1754,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1753,
												"name": "PaymentMethod",
												"nameLocations": [
													"1607:13:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1706,
												"src": "1607:13:14"
											},
											"referencedDeclaration": 1706,
											"src": "1607:13:14",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_PaymentMethod_$1706",
												"typeString": "enum ICO.PaymentMethod"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "efdcdb45",
									"id": 1763,
									"mutability": "mutable",
									"name": "investorPayments",
									"nameLocation": "1719:16:14",
									"nodeType": "VariableDeclaration",
									"scope": 3093,
									"src": "1659:76:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_PaymentMethod_$1706_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(enum ICO.PaymentMethod => uint256))"
									},
									"typeName": {
										"id": 1762,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1757,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1667:7:14",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1659:53:14",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_PaymentMethod_$1706_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(enum ICO.PaymentMethod => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1761,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 1759,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1758,
													"name": "PaymentMethod",
													"nameLocations": [
														"1686:13:14"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1706,
													"src": "1686:13:14"
												},
												"referencedDeclaration": 1706,
												"src": "1686:13:14",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_PaymentMethod_$1706",
													"typeString": "enum ICO.PaymentMethod"
												}
											},
											"nodeType": "Mapping",
											"src": "1678:33:14",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_enum$_PaymentMethod_$1706_$_t_uint256_$",
												"typeString": "mapping(enum ICO.PaymentMethod => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1760,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1703:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "9c4b134da32aab35252391880a9f2a3c13a760d7817ae8823f2b301d3522045a",
									"id": 1767,
									"name": "ICOFinalized",
									"nameLocation": "1762:12:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1765,
												"indexed": true,
												"mutability": "mutable",
												"name": "totalTokensSold",
												"nameLocation": "1791:15:14",
												"nodeType": "VariableDeclaration",
												"scope": 1767,
												"src": "1775:31:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:33:14"
									},
									"src": "1756:52:14"
								},
								{
									"anonymous": false,
									"eventSelector": "7b1c1ad0f3e04c9ef02d69280925520638d1cf076c56c4aa5bb1d0d37a949a3d",
									"id": 1771,
									"name": "ImmediateFinalization",
									"nameLocation": "1819:21:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1769,
												"indexed": true,
												"mutability": "mutable",
												"name": "saleId",
												"nameLocation": "1857:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1771,
												"src": "1841:22:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1841:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1840:24:14"
									},
									"src": "1813:52:14"
								},
								{
									"anonymous": false,
									"eventSelector": "03829ab241648d7348f97e4f77d36451330f2276ea8eeb3428e462012f9699e7",
									"id": 1780,
									"name": "RefundInitiated",
									"nameLocation": "1876:15:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1773,
												"indexed": true,
												"mutability": "mutable",
												"name": "investor",
												"nameLocation": "1917:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "1901:24:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1772,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1901:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1775,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1943:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "1935:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1935:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1778,
												"indexed": false,
												"mutability": "mutable",
												"name": "paymentMethod",
												"nameLocation": "1973:13:14",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "1959:27:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_PaymentMethod_$1706",
													"typeString": "enum ICO.PaymentMethod"
												},
												"typeName": {
													"id": 1777,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1776,
														"name": "PaymentMethod",
														"nameLocations": [
															"1959:13:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1706,
														"src": "1959:13:14"
													},
													"referencedDeclaration": 1706,
													"src": "1959:13:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_PaymentMethod_$1706",
														"typeString": "enum ICO.PaymentMethod"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1891:101:14"
									},
									"src": "1870:123:14"
								},
								{
									"anonymous": false,
									"eventSelector": "9bdcd0cc5503fb9a8dd7311d9617e33108c4b7c8948cc544b16c1fd63c6f475b",
									"id": 1786,
									"name": "TokenAirdropped",
									"nameLocation": "2004:15:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1782,
												"indexed": true,
												"mutability": "mutable",
												"name": "investor",
												"nameLocation": "2036:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 1786,
												"src": "2020:24:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1781,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2020:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1784,
												"indexed": false,
												"mutability": "mutable",
												"name": "airdroppedAmount",
												"nameLocation": "2054:16:14",
												"nodeType": "VariableDeclaration",
												"scope": 1786,
												"src": "2046:24:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2046:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2019:52:14"
									},
									"src": "1998:74:14"
								},
								{
									"anonymous": false,
									"eventSelector": "dbcef474a632721725d49e3f35d9defe0257100b01d1e4b4b135b14d6fe296e8",
									"id": 1801,
									"name": "TokensPurchased",
									"nameLocation": "2083:15:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1788,
												"indexed": true,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "2124:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1801,
												"src": "2108:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1787,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1790,
												"indexed": true,
												"mutability": "mutable",
												"name": "saleId",
												"nameLocation": "2155:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1801,
												"src": "2139:22:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2139:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1792,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenPurchaseAmount",
												"nameLocation": "2179:19:14",
												"nodeType": "VariableDeclaration",
												"scope": 1801,
												"src": "2171:27:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2171:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1794,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenPriceUSD",
												"nameLocation": "2216:13:14",
												"nodeType": "VariableDeclaration",
												"scope": 1801,
												"src": "2208:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1793,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2208:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1796,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountPaid",
												"nameLocation": "2247:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 1801,
												"src": "2239:18:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2239:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1799,
												"indexed": false,
												"mutability": "mutable",
												"name": "paymentMethod",
												"nameLocation": "2281:13:14",
												"nodeType": "VariableDeclaration",
												"scope": 1801,
												"src": "2267:27:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_PaymentMethod_$1706",
													"typeString": "enum ICO.PaymentMethod"
												},
												"typeName": {
													"id": 1798,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1797,
														"name": "PaymentMethod",
														"nameLocations": [
															"2267:13:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1706,
														"src": "2267:13:14"
													},
													"referencedDeclaration": 1706,
													"src": "2267:13:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_PaymentMethod_$1706",
														"typeString": "enum ICO.PaymentMethod"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2098:202:14"
									},
									"src": "2077:224:14"
								},
								{
									"anonymous": false,
									"eventSelector": "63b43fa153147ade1de28ed76841cdbc34e510ed94dd1ff5a88e278b0b1ad9ba",
									"id": 1811,
									"name": "NewSaleCreated",
									"nameLocation": "2312:14:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1803,
												"indexed": true,
												"mutability": "mutable",
												"name": "saleId",
												"nameLocation": "2352:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1811,
												"src": "2336:22:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2336:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1805,
												"indexed": false,
												"mutability": "mutable",
												"name": "startTime",
												"nameLocation": "2376:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 1811,
												"src": "2368:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1804,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2368:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1807,
												"indexed": false,
												"mutability": "mutable",
												"name": "endTime",
												"nameLocation": "2403:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1811,
												"src": "2395:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1806,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1809,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenPriceUSD",
												"nameLocation": "2428:13:14",
												"nodeType": "VariableDeclaration",
												"scope": 1811,
												"src": "2420:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2420:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:121:14"
									},
									"src": "2306:142:14"
								},
								{
									"body": {
										"id": 1879,
										"nodeType": "Block",
										"src": "2725:504:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1834,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2750:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1835,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2754:6:14",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2750:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1833,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "2735:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2735:26:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1837,
												"nodeType": "ExpressionStatement",
												"src": "2735:26:14"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1838,
														"name": "__UUPSUpgradeable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 548,
														"src": "2771:22:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2771:24:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1840,
												"nodeType": "ExpressionStatement",
												"src": "2771:24:14"
											},
											{
												"expression": {
													"id": 1843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1841,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1709,
														"src": "2806:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1264",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1842,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1814,
														"src": "2814:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1264",
															"typeString": "contract IERC20"
														}
													},
													"src": "2806:14:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1264",
														"typeString": "contract IERC20"
													}
												},
												"id": 1844,
												"nodeType": "ExpressionStatement",
												"src": "2806:14:14"
											},
											{
												"expression": {
													"id": 1847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1845,
														"name": "softCapInUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1711,
														"src": "2830:12:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1846,
														"name": "_softCapInUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1820,
														"src": "2845:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2830:28:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1848,
												"nodeType": "ExpressionStatement",
												"src": "2830:28:14"
											},
											{
												"expression": {
													"id": 1851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1849,
														"name": "hardCapInUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1713,
														"src": "2868:12:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1850,
														"name": "_hardCapInUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1822,
														"src": "2883:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2868:28:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1852,
												"nodeType": "ExpressionStatement",
												"src": "2868:28:14"
											},
											{
												"expression": {
													"id": 1855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1853,
														"name": "usdt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1736,
														"src": "2906:4:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1854,
														"name": "_usdt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1816,
														"src": "2913:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2906:12:14",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1856,
												"nodeType": "ExpressionStatement",
												"src": "2906:12:14"
											},
											{
												"expression": {
													"id": 1859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1857,
														"name": "usdc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1738,
														"src": "2928:4:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1858,
														"name": "_usdc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1818,
														"src": "2935:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2928:12:14",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1860,
												"nodeType": "ExpressionStatement",
												"src": "2928:12:14"
											},
											{
												"expression": {
													"id": 1865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1861,
														"name": "priceFeedBNB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1685,
														"src": "2950:12:14",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1863,
																"name": "_priceFeedBNB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1824,
																"src": "2987:13:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1862,
															"name": "AggregatorV3Interface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "2965:21:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
																"typeString": "type(contract AggregatorV3Interface)"
															}
														},
														"id": 1864,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2965:36:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"src": "2950:51:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"id": 1866,
												"nodeType": "ExpressionStatement",
												"src": "2950:51:14"
											},
											{
												"expression": {
													"id": 1871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1867,
														"name": "priceFeedUSDT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1688,
														"src": "3011:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1869,
																"name": "_priceFeedUSDT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1826,
																"src": "3049:14:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1868,
															"name": "AggregatorV3Interface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "3027:21:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
																"typeString": "type(contract AggregatorV3Interface)"
															}
														},
														"id": 1870,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3027:37:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"src": "3011:53:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"id": 1872,
												"nodeType": "ExpressionStatement",
												"src": "3011:53:14"
											},
											{
												"expression": {
													"id": 1877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1873,
														"name": "priceFeedUSDC",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1691,
														"src": "3074:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1875,
																"name": "_priceFeedUSDC",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1828,
																"src": "3112:14:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1874,
															"name": "AggregatorV3Interface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "3090:21:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
																"typeString": "type(contract AggregatorV3Interface)"
															}
														},
														"id": 1876,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3090:37:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"src": "3074:53:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"id": 1878,
												"nodeType": "ExpressionStatement",
												"src": "3074:53:14"
											}
										]
									},
									"functionSelector": "fd663da2",
									"id": 1880,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1831,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1830,
												"name": "initializer",
												"nameLocations": [
													"2713:11:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 348,
												"src": "2713:11:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "2713:11:14"
										}
									],
									"name": "initialize",
									"nameLocation": "2463:10:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1814,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "2490:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "2483:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1264",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1813,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1812,
														"name": "IERC20",
														"nameLocations": [
															"2483:6:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1264,
														"src": "2483:6:14"
													},
													"referencedDeclaration": 1264,
													"src": "2483:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1264",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1816,
												"mutability": "mutable",
												"name": "_usdt",
												"nameLocation": "2514:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "2506:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2506:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1818,
												"mutability": "mutable",
												"name": "_usdc",
												"nameLocation": "2537:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "2529:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1817,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2529:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1820,
												"mutability": "mutable",
												"name": "_softCapInUSD",
												"nameLocation": "2560:13:14",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "2552:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1819,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2552:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1822,
												"mutability": "mutable",
												"name": "_hardCapInUSD",
												"nameLocation": "2591:13:14",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "2583:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1821,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2583:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1824,
												"mutability": "mutable",
												"name": "_priceFeedBNB",
												"nameLocation": "2622:13:14",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "2614:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1823,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2614:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1826,
												"mutability": "mutable",
												"name": "_priceFeedUSDT",
												"nameLocation": "2653:14:14",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "2645:22:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1825,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2645:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1828,
												"mutability": "mutable",
												"name": "_priceFeedUSDC",
												"nameLocation": "2685:14:14",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "2677:22:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1827,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2473:232:14"
									},
									"returnParameters": {
										"id": 1832,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2725:0:14"
									},
									"scope": 3093,
									"src": "2454:775:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1889,
										"nodeType": "Block",
										"src": "3262:77:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1884,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3280:15:14",
															"subExpression": {
																"id": 1883,
																"name": "isICOFinalized",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1727,
																"src": "3281:14:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "49434f20616c72656164792066696e616c697a6564",
															"id": 1885,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3297:23:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d894807d07a4878944df72000c35a26fc670b7c15dedc34156876b2464e1fd23",
																"typeString": "literal_string \"ICO already finalized\""
															},
															"value": "ICO already finalized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d894807d07a4878944df72000c35a26fc670b7c15dedc34156876b2464e1fd23",
																"typeString": "literal_string \"ICO already finalized\""
															}
														],
														"id": 1882,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3272:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3272:49:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1887,
												"nodeType": "ExpressionStatement",
												"src": "3272:49:14"
											},
											{
												"id": 1888,
												"nodeType": "PlaceholderStatement",
												"src": "3331:1:14"
											}
										]
									},
									"id": 1890,
									"name": "icoNotFinalized",
									"nameLocation": "3244:15:14",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1881,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3259:2:14"
									},
									"src": "3235:104:14",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1899,
										"nodeType": "Block",
										"src": "3364:58:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1894,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3382:10:14",
															"subExpression": {
																"id": 1893,
																"name": "isFreezed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1731,
																"src": "3383:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "667265657a6564",
															"id": 1895,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3394:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5e1a07520dc062ba4ff449fce67822fde8495347c7d50898a83b1dfb63596097",
																"typeString": "literal_string \"freezed\""
															},
															"value": "freezed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5e1a07520dc062ba4ff449fce67822fde8495347c7d50898a83b1dfb63596097",
																"typeString": "literal_string \"freezed\""
															}
														],
														"id": 1892,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3374:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3374:30:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1897,
												"nodeType": "ExpressionStatement",
												"src": "3374:30:14"
											},
											{
												"id": 1898,
												"nodeType": "PlaceholderStatement",
												"src": "3414:1:14"
											}
										]
									},
									"id": 1900,
									"name": "freezed",
									"nameLocation": "3354:7:14",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1891,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3361:2:14"
									},
									"src": "3345:77:14",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1915,
										"nodeType": "Block",
										"src": "3465:81:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1907,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3483:10:14",
															"subExpression": {
																"id": 1906,
																"name": "isFreezed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1731,
																"src": "3484:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c726561647920467265657a6564",
															"id": 1908,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3495:17:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_badbb5a205346d66e56ea98c8f2b97ccc2298baa0d8bcc43f8c5fabbf405c834",
																"typeString": "literal_string \"Already Freezed\""
															},
															"value": "Already Freezed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_badbb5a205346d66e56ea98c8f2b97ccc2298baa0d8bcc43f8c5fabbf405c834",
																"typeString": "literal_string \"Already Freezed\""
															}
														],
														"id": 1905,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3475:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3475:38:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1910,
												"nodeType": "ExpressionStatement",
												"src": "3475:38:14"
											},
											{
												"expression": {
													"id": 1913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1911,
														"name": "isFreezed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1731,
														"src": "3523:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1912,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3535:4:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3523:16:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1914,
												"nodeType": "ExpressionStatement",
												"src": "3523:16:14"
											}
										]
									},
									"functionSelector": "62a5af3b",
									"id": 1916,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1903,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1902,
												"name": "onlyOwner",
												"nameLocations": [
													"3455:9:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 135,
												"src": "3455:9:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "3455:9:14"
										}
									],
									"name": "freeze",
									"nameLocation": "3437:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1901,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3443:2:14"
									},
									"returnParameters": {
										"id": 1904,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3465:0:14"
									},
									"scope": 3093,
									"src": "3428:118:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1930,
										"nodeType": "Block",
										"src": "3591:83:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1922,
															"name": "isFreezed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1731,
															"src": "3609:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c726561647920556e467265657a6564",
															"id": 1923,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3620:19:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_37095db391cf553f65f0eddf201a3c7bc5118c1120fca6827815be26758eff4c",
																"typeString": "literal_string \"Already UnFreezed\""
															},
															"value": "Already UnFreezed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_37095db391cf553f65f0eddf201a3c7bc5118c1120fca6827815be26758eff4c",
																"typeString": "literal_string \"Already UnFreezed\""
															}
														],
														"id": 1921,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3601:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1924,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3601:39:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1925,
												"nodeType": "ExpressionStatement",
												"src": "3601:39:14"
											},
											{
												"expression": {
													"id": 1928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1926,
														"name": "isFreezed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1731,
														"src": "3650:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1927,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3662:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "3650:17:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1929,
												"nodeType": "ExpressionStatement",
												"src": "3650:17:14"
											}
										]
									},
									"functionSelector": "7cf12b90",
									"id": 1931,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1919,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1918,
												"name": "onlyOwner",
												"nameLocations": [
													"3581:9:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 135,
												"src": "3581:9:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "3581:9:14"
										}
									],
									"name": "unFreeze",
									"nameLocation": "3561:8:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1917,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3569:2:14"
									},
									"returnParameters": {
										"id": 1920,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3591:0:14"
									},
									"scope": 3093,
									"src": "3552:122:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1986,
										"nodeType": "Block",
										"src": "3789:537:14",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_PaymentMethod_$1706",
														"typeString": "enum ICO.PaymentMethod"
													},
													"id": 1942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1939,
														"name": "paymentMethod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1934,
														"src": "3803:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_PaymentMethod_$1706",
															"typeString": "enum ICO.PaymentMethod"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 1940,
															"name": "PaymentMethod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1706,
															"src": "3820:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_PaymentMethod_$1706_$",
																"typeString": "type(enum ICO.PaymentMethod)"
															}
														},
														"id": 1941,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3834:3:14",
														"memberName": "BNB",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1703,
														"src": "3820:17:14",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_PaymentMethod_$1706",
															"typeString": "enum ICO.PaymentMethod"
														}
													},
													"src": "3803:34:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_PaymentMethod_$1706",
															"typeString": "enum ICO.PaymentMethod"
														},
														"id": 1955,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1952,
															"name": "paymentMethod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1934,
															"src": "3955:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																"typeString": "enum ICO.PaymentMethod"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1953,
																"name": "PaymentMethod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1706,
																"src": "3972:13:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_PaymentMethod_$1706_$",
																	"typeString": "type(enum ICO.PaymentMethod)"
																}
															},
															"id": 1954,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "3986:4:14",
															"memberName": "USDT",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1704,
															"src": "3972:18:14",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																"typeString": "enum ICO.PaymentMethod"
															}
														},
														"src": "3955:35:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																"typeString": "enum ICO.PaymentMethod"
															},
															"id": 1968,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1965,
																"name": "paymentMethod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1934,
																"src": "4109:13:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																	"typeString": "enum ICO.PaymentMethod"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1966,
																	"name": "PaymentMethod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1706,
																	"src": "4126:13:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_PaymentMethod_$1706_$",
																		"typeString": "type(enum ICO.PaymentMethod)"
																	}
																},
																"id": 1967,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4140:4:14",
																"memberName": "USDC",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1705,
																"src": "4126:18:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																	"typeString": "enum ICO.PaymentMethod"
																}
															},
															"src": "4109:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 1982,
															"nodeType": "Block",
															"src": "4259:61:14",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "556e737570706f72746564207061796d656e74206d6574686f64",
																				"id": 1979,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4280:28:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_20a9374871eda95a21489d37b12097781d38e0ea68a5e5d037a1b2c3ea6a8c04",
																					"typeString": "literal_string \"Unsupported payment method\""
																				},
																				"value": "Unsupported payment method"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_20a9374871eda95a21489d37b12097781d38e0ea68a5e5d037a1b2c3ea6a8c04",
																					"typeString": "literal_string \"Unsupported payment method\""
																				}
																			],
																			"id": 1978,
																			"name": "revert",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				4294967277,
																				4294967277
																			],
																			"referencedDeclaration": 4294967277,
																			"src": "4273:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																				"typeString": "function (string memory) pure"
																			}
																		},
																		"id": 1980,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4273:36:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1981,
																	"nodeType": "ExpressionStatement",
																	"src": "4273:36:14"
																}
															]
														},
														"id": 1983,
														"nodeType": "IfStatement",
														"src": "4105:215:14",
														"trueBody": {
															"id": 1977,
															"nodeType": "Block",
															"src": "4146:107:14",
															"statements": [
																{
																	"assignments": [
																		null,
																		1970,
																		null,
																		null,
																		null
																	],
																	"declarations": [
																		null,
																		{
																			"constant": false,
																			"id": 1970,
																			"mutability": "mutable",
																			"name": "price",
																			"nameLocation": "4170:5:14",
																			"nodeType": "VariableDeclaration",
																			"scope": 1977,
																			"src": "4163:12:14",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"typeName": {
																				"id": 1969,
																				"name": "int256",
																				"nodeType": "ElementaryTypeName",
																				"src": "4163:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"visibility": "internal"
																		},
																		null,
																		null,
																		null
																	],
																	"id": 1974,
																	"initialValue": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 1971,
																				"name": "priceFeedUSDC",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1691,
																				"src": "4185:13:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																					"typeString": "contract AggregatorV3Interface"
																				}
																			},
																			"id": 1972,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4199:15:14",
																			"memberName": "latestRoundData",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 44,
																			"src": "4185:29:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
																				"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
																			}
																		},
																		"id": 1973,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4185:31:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
																			"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "4160:56:14"
																},
																{
																	"expression": {
																		"id": 1975,
																		"name": "price",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1970,
																		"src": "4237:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"functionReturnParameters": 1938,
																	"id": 1976,
																	"nodeType": "Return",
																	"src": "4230:12:14"
																}
															]
														}
													},
													"id": 1984,
													"nodeType": "IfStatement",
													"src": "3951:369:14",
													"trueBody": {
														"id": 1964,
														"nodeType": "Block",
														"src": "3992:107:14",
														"statements": [
															{
																"assignments": [
																	null,
																	1957,
																	null,
																	null,
																	null
																],
																"declarations": [
																	null,
																	{
																		"constant": false,
																		"id": 1957,
																		"mutability": "mutable",
																		"name": "price",
																		"nameLocation": "4016:5:14",
																		"nodeType": "VariableDeclaration",
																		"scope": 1964,
																		"src": "4009:12:14",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"typeName": {
																			"id": 1956,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "4009:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"visibility": "internal"
																	},
																	null,
																	null,
																	null
																],
																"id": 1961,
																"initialValue": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 1958,
																			"name": "priceFeedUSDT",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1688,
																			"src": "4031:13:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																				"typeString": "contract AggregatorV3Interface"
																			}
																		},
																		"id": 1959,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4045:15:14",
																		"memberName": "latestRoundData",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 44,
																		"src": "4031:29:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
																			"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
																		}
																	},
																	"id": 1960,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4031:31:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
																		"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "4006:56:14"
															},
															{
																"expression": {
																	"id": 1962,
																	"name": "price",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1957,
																	"src": "4083:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"functionReturnParameters": 1938,
																"id": 1963,
																"nodeType": "Return",
																"src": "4076:12:14"
															}
														]
													}
												},
												"id": 1985,
												"nodeType": "IfStatement",
												"src": "3799:521:14",
												"trueBody": {
													"id": 1951,
													"nodeType": "Block",
													"src": "3839:106:14",
													"statements": [
														{
															"assignments": [
																null,
																1944,
																null,
																null,
																null
															],
															"declarations": [
																null,
																{
																	"constant": false,
																	"id": 1944,
																	"mutability": "mutable",
																	"name": "price",
																	"nameLocation": "3863:5:14",
																	"nodeType": "VariableDeclaration",
																	"scope": 1951,
																	"src": "3856:12:14",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"typeName": {
																		"id": 1943,
																		"name": "int256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3856:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"visibility": "internal"
																},
																null,
																null,
																null
															],
															"id": 1948,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1945,
																		"name": "priceFeedBNB",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1685,
																		"src": "3878:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																			"typeString": "contract AggregatorV3Interface"
																		}
																	},
																	"id": 1946,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3891:15:14",
																	"memberName": "latestRoundData",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 44,
																	"src": "3878:28:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
																		"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
																	}
																},
																"id": 1947,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3878:30:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
																	"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3853:55:14"
														},
														{
															"expression": {
																"id": 1949,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1944,
																"src": "3929:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"functionReturnParameters": 1938,
															"id": 1950,
															"nodeType": "Return",
															"src": "3922:12:14"
														}
													]
												}
											}
										]
									},
									"functionSelector": "115afc3a",
									"id": 1987,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getPriceFeed",
									"nameLocation": "3689:13:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1934,
												"mutability": "mutable",
												"name": "paymentMethod",
												"nameLocation": "3717:13:14",
												"nodeType": "VariableDeclaration",
												"scope": 1987,
												"src": "3703:27:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_PaymentMethod_$1706",
													"typeString": "enum ICO.PaymentMethod"
												},
												"typeName": {
													"id": 1933,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1932,
														"name": "PaymentMethod",
														"nameLocations": [
															"3703:13:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1706,
														"src": "3703:13:14"
													},
													"referencedDeclaration": 1706,
													"src": "3703:13:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_PaymentMethod_$1706",
														"typeString": "enum ICO.PaymentMethod"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3702:29:14"
									},
									"returnParameters": {
										"id": 1938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1937,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1987,
												"src": "3777:6:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1936,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3777:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3776:8:14"
									},
									"scope": 3093,
									"src": "3680:646:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2048,
										"nodeType": "Block",
										"src": "4876:708:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2006,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2003,
																"name": "_startTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1989,
																"src": "4907:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"expression": {
																	"id": 2004,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "4920:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2005,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4926:9:14",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "4920:15:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4907:28:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53746172742074696d65206d7573742062652067726561746572207468616e2063757272656e742074696d65",
															"id": 2007,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4949:46:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a1853a89cde833d839c669d1204571d26b8c616e74d14665150a1c9f7535c8f5",
																"typeString": "literal_string \"Start time must be greater than current time\""
															},
															"value": "Start time must be greater than current time"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a1853a89cde833d839c669d1204571d26b8c616e74d14665150a1c9f7535c8f5",
																"typeString": "literal_string \"Start time must be greater than current time\""
															}
														],
														"id": 2002,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4886:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4886:119:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2009,
												"nodeType": "ExpressionStatement",
												"src": "4886:119:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2013,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2011,
																"name": "_endTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1991,
																"src": "5036:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2012,
																"name": "_startTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1989,
																"src": "5047:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5036:21:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "456e642074696d65206d7573742062652067726561746572207468616e2073746172742074696d65",
															"id": 2014,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5071:42:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ed7f84a1977812752f8d634cbdcf2a56f893383408b8dd546c270e5d913f5d28",
																"typeString": "literal_string \"End time must be greater than start time\""
															},
															"value": "End time must be greater than start time"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ed7f84a1977812752f8d634cbdcf2a56f893383408b8dd546c270e5d913f5d28",
																"typeString": "literal_string \"End time must be greater than start time\""
															}
														],
														"id": 2010,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5015:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5015:108:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2016,
												"nodeType": "ExpressionStatement",
												"src": "5015:108:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2022,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2018,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "5154:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2019,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5160:9:14",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "5154:15:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2020,
																	"name": "getLatestSaleEndTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3025,
																	"src": "5172:20:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 2021,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5172:22:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5154:40:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e65772073616c65206d75737420737461727420616674657220746865206c6173742073616c6520656e6473",
															"id": 2023,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5208:46:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_825884e5cff514634aaaba9e58516f6d797b9a08503c5bf1af68f19c16208f73",
																"typeString": "literal_string \"New sale must start after the last sale ends\""
															},
															"value": "New sale must start after the last sale ends"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_825884e5cff514634aaaba9e58516f6d797b9a08503c5bf1af68f19c16208f73",
																"typeString": "literal_string \"New sale must start after the last sale ends\""
															}
														],
														"id": 2017,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5133:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5133:131:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2025,
												"nodeType": "ExpressionStatement",
												"src": "5133:131:14"
											},
											{
												"expression": {
													"id": 2027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "5275:11:14",
													"subExpression": {
														"id": 2026,
														"name": "saleCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1715,
														"src": "5275:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2028,
												"nodeType": "ExpressionStatement",
												"src": "5275:11:14"
											},
											{
												"expression": {
													"id": 2039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2029,
															"name": "sales",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1743,
															"src": "5296:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Sale_$1702_storage_$",
																"typeString": "mapping(uint256 => struct ICO.Sale storage ref)"
															}
														},
														"id": 2031,
														"indexExpression": {
															"id": 2030,
															"name": "saleCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1715,
															"src": "5302:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5296:16:14",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Sale_$1702_storage",
															"typeString": "struct ICO.Sale storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2033,
																"name": "_startTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1989,
																"src": "5345:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2034,
																"name": "_endTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1991,
																"src": "5378:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2035,
																"name": "_tokenPriceUSD",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1993,
																"src": "5415:14:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "30",
																"id": 2036,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5455:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "66616c7365",
																"id": 2037,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5483:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 2032,
															"name": "Sale",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1702,
															"src": "5315:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Sale_$1702_storage_ptr_$",
																"typeString": "type(struct ICO.Sale storage pointer)"
															}
														},
														"id": 2038,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"5334:9:14",
															"5369:7:14",
															"5400:13:14",
															"5443:10:14",
															"5470:11:14"
														],
														"names": [
															"startTime",
															"endTime",
															"tokenPriceUSD",
															"tokensSold",
															"isFinalized"
														],
														"nodeType": "FunctionCall",
														"src": "5315:184:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Sale_$1702_memory_ptr",
															"typeString": "struct ICO.Sale memory"
														}
													},
													"src": "5296:203:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Sale_$1702_storage",
														"typeString": "struct ICO.Sale storage ref"
													}
												},
												"id": 2040,
												"nodeType": "ExpressionStatement",
												"src": "5296:203:14"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2042,
															"name": "saleCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1715,
															"src": "5529:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2043,
															"name": "_startTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1989,
															"src": "5540:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2044,
															"name": "_endTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1991,
															"src": "5552:8:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2045,
															"name": "_tokenPriceUSD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1993,
															"src": "5562:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2041,
														"name": "NewSaleCreated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1811,
														"src": "5514:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256,uint256)"
														}
													},
													"id": 2046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5514:63:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2047,
												"nodeType": "EmitStatement",
												"src": "5509:68:14"
											}
										]
									},
									"functionSelector": "6c1909ed",
									"id": 2049,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1996,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1995,
												"name": "onlyOwner",
												"nameLocations": [
													"4842:9:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 135,
												"src": "4842:9:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "4842:9:14"
										},
										{
											"id": 1998,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1997,
												"name": "icoNotFinalized",
												"nameLocations": [
													"4852:15:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1890,
												"src": "4852:15:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "4852:15:14"
										},
										{
											"id": 2000,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1999,
												"name": "freezed",
												"nameLocations": [
													"4868:7:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1900,
												"src": "4868:7:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "4868:7:14"
										}
									],
									"name": "createSale",
									"nameLocation": "4730:10:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1989,
												"mutability": "mutable",
												"name": "_startTime",
												"nameLocation": "4758:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 2049,
												"src": "4750:18:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1988,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4750:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1991,
												"mutability": "mutable",
												"name": "_endTime",
												"nameLocation": "4786:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2049,
												"src": "4778:16:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1990,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4778:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1993,
												"mutability": "mutable",
												"name": "_tokenPriceUSD",
												"nameLocation": "4812:14:14",
												"nodeType": "VariableDeclaration",
												"scope": 2049,
												"src": "4804:22:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1992,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4804:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4740:92:14"
									},
									"returnParameters": {
										"id": 2001,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4876:0:14"
									},
									"scope": 3093,
									"src": "4721:863:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2179,
										"nodeType": "Block",
										"src": "5724:1151:14",
										"statements": [
											{
												"assignments": [
													2060
												],
												"declarations": [
													{
														"constant": false,
														"id": 2060,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "5741:5:14",
														"nodeType": "VariableDeclaration",
														"scope": 2179,
														"src": "5734:12:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2059,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "5734:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2069,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2062,
																"name": "paymentMethod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2052,
																"src": "5763:13:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																	"typeString": "enum ICO.PaymentMethod"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																	"typeString": "enum ICO.PaymentMethod"
																}
															],
															"id": 2061,
															"name": "_getPriceFeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1987,
															"src": "5749:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_enum$_PaymentMethod_$1706_$returns$_t_int256_$",
																"typeString": "function (enum ICO.PaymentMethod) view returns (int256)"
															}
														},
														"id": 2063,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5749:28:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"arguments": [
															{
																"id": 2066,
																"name": "PRECISION_10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1722,
																"src": "5787:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2065,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5780:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															},
															"typeName": {
																"id": 2064,
																"name": "int256",
																"nodeType": "ElementaryTypeName",
																"src": "5780:6:14",
																"typeDescriptions": {}
															}
														},
														"id": 2067,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5780:20:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "5749:51:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5734:66:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 2073,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2071,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2060,
																"src": "5818:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2072,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5826:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5818:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642070726963652066656564",
															"id": 2074,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5829:20:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dbf071520f0a95e05bb16da9ebcd49bf0ac91e963647b14497245101e3db79a3",
																"typeString": "literal_string \"Invalid price feed\""
															},
															"value": "Invalid price feed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dbf071520f0a95e05bb16da9ebcd49bf0ac91e963647b14497245101e3db79a3",
																"typeString": "literal_string \"Invalid price feed\""
															}
														],
														"id": 2070,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5810:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5810:40:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2076,
												"nodeType": "ExpressionStatement",
												"src": "5810:40:14"
											},
											{
												"assignments": [
													2078
												],
												"declarations": [
													{
														"constant": false,
														"id": 2078,
														"mutability": "mutable",
														"name": "currentSaleId",
														"nameLocation": "5869:13:14",
														"nodeType": "VariableDeclaration",
														"scope": 2179,
														"src": "5861:21:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2077,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5861:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2081,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2079,
														"name": "getCurrentSaleId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3014,
														"src": "5885:16:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 2080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5885:18:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5861:42:14"
											},
											{
												"assignments": [
													2084
												],
												"declarations": [
													{
														"constant": false,
														"id": 2084,
														"mutability": "mutable",
														"name": "sale",
														"nameLocation": "5926:4:14",
														"nodeType": "VariableDeclaration",
														"scope": 2179,
														"src": "5913:17:14",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Sale_$1702_storage_ptr",
															"typeString": "struct ICO.Sale"
														},
														"typeName": {
															"id": 2083,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2082,
																"name": "Sale",
																"nameLocations": [
																	"5913:4:14"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1702,
																"src": "5913:4:14"
															},
															"referencedDeclaration": 1702,
															"src": "5913:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Sale_$1702_storage_ptr",
																"typeString": "struct ICO.Sale"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2088,
												"initialValue": {
													"baseExpression": {
														"id": 2085,
														"name": "sales",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1743,
														"src": "5933:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Sale_$1702_storage_$",
															"typeString": "mapping(uint256 => struct ICO.Sale storage ref)"
														}
													},
													"id": 2087,
													"indexExpression": {
														"id": 2086,
														"name": "currentSaleId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2078,
														"src": "5939:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5933:20:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Sale_$1702_storage",
														"typeString": "struct ICO.Sale storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5913:40:14"
											},
											{
												"assignments": [
													2090
												],
												"declarations": [
													{
														"constant": false,
														"id": 2090,
														"mutability": "mutable",
														"name": "tokenPriceInUSD",
														"nameLocation": "5972:15:14",
														"nodeType": "VariableDeclaration",
														"scope": 2179,
														"src": "5964:23:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2089,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5964:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2093,
												"initialValue": {
													"expression": {
														"id": 2091,
														"name": "sale",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2084,
														"src": "5990:4:14",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Sale_$1702_storage_ptr",
															"typeString": "struct ICO.Sale storage pointer"
														}
													},
													"id": 2092,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5995:13:14",
													"memberName": "tokenPriceUSD",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1697,
													"src": "5990:18:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5964:44:14"
											},
											{
												"assignments": [
													2095
												],
												"declarations": [
													{
														"constant": false,
														"id": 2095,
														"mutability": "mutable",
														"name": "paymentAmountInUSD",
														"nameLocation": "6059:18:14",
														"nodeType": "VariableDeclaration",
														"scope": 2179,
														"src": "6051:26:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2094,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6051:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2096,
												"nodeType": "VariableDeclarationStatement",
												"src": "6051:26:14"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_PaymentMethod_$1706",
														"typeString": "enum ICO.PaymentMethod"
													},
													"id": 2100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2097,
														"name": "paymentMethod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2052,
														"src": "6092:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_PaymentMethod_$1706",
															"typeString": "enum ICO.PaymentMethod"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 2098,
															"name": "PaymentMethod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1706,
															"src": "6109:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_PaymentMethod_$1706_$",
																"typeString": "type(enum ICO.PaymentMethod)"
															}
														},
														"id": 2099,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6123:3:14",
														"memberName": "BNB",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1703,
														"src": "6109:17:14",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_PaymentMethod_$1706",
															"typeString": "enum ICO.PaymentMethod"
														}
													},
													"src": "6092:34:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 2125,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																"typeString": "enum ICO.PaymentMethod"
															},
															"id": 2120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2117,
																"name": "paymentMethod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2052,
																"src": "6285:13:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																	"typeString": "enum ICO.PaymentMethod"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 2118,
																	"name": "PaymentMethod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1706,
																	"src": "6302:13:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_PaymentMethod_$1706_$",
																		"typeString": "type(enum ICO.PaymentMethod)"
																	}
																},
																"id": 2119,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "6316:4:14",
																"memberName": "USDC",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1705,
																"src": "6302:18:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																	"typeString": "enum ICO.PaymentMethod"
																}
															},
															"src": "6285:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																"typeString": "enum ICO.PaymentMethod"
															},
															"id": 2124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2121,
																"name": "paymentMethod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2052,
																"src": "6336:13:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																	"typeString": "enum ICO.PaymentMethod"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 2122,
																	"name": "PaymentMethod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1706,
																	"src": "6353:13:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_PaymentMethod_$1706_$",
																		"typeString": "type(enum ICO.PaymentMethod)"
																	}
																},
																"id": 2123,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "6367:4:14",
																"memberName": "USDT",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1704,
																"src": "6353:18:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																	"typeString": "enum ICO.PaymentMethod"
																}
															},
															"src": "6336:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "6285:86:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 2162,
														"nodeType": "Block",
														"src": "6673:61:14",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"hexValue": "556e737570706f72746564207061796d656e74206d6574686f64",
																			"id": 2159,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6694:28:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_20a9374871eda95a21489d37b12097781d38e0ea68a5e5d037a1b2c3ea6a8c04",
																				"typeString": "literal_string \"Unsupported payment method\""
																			},
																			"value": "Unsupported payment method"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_20a9374871eda95a21489d37b12097781d38e0ea68a5e5d037a1b2c3ea6a8c04",
																				"typeString": "literal_string \"Unsupported payment method\""
																			}
																		],
																		"id": 2158,
																		"name": "revert",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967277,
																			4294967277
																		],
																		"referencedDeclaration": 4294967277,
																		"src": "6687:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (string memory) pure"
																		}
																	},
																	"id": 2160,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6687:36:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 2161,
																"nodeType": "ExpressionStatement",
																"src": "6687:36:14"
															}
														]
													},
													"id": 2163,
													"nodeType": "IfStatement",
													"src": "6268:466:14",
													"trueBody": {
														"id": 2157,
														"nodeType": "Block",
														"src": "6382:285:14",
														"statements": [
															{
																"assignments": [
																	2127
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 2127,
																		"mutability": "mutable",
																		"name": "stablecoinDecimals",
																		"nameLocation": "6404:18:14",
																		"nodeType": "VariableDeclaration",
																		"scope": 2157,
																		"src": "6396:26:14",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 2126,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "6396:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 2129,
																"initialValue": {
																	"hexValue": "36",
																	"id": 2128,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6425:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_6_by_1",
																		"typeString": "int_const 6"
																	},
																	"value": "6"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "6396:30:14"
															},
															{
																"assignments": [
																	2131
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 2131,
																		"mutability": "mutable",
																		"name": "normalizedAmount",
																		"nameLocation": "6448:16:14",
																		"nodeType": "VariableDeclaration",
																		"scope": 2157,
																		"src": "6440:24:14",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 2130,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "6440:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 2141,
																"initialValue": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2140,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2132,
																		"name": "paymentAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2054,
																		"src": "6467:13:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2138,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "3130",
																					"id": 2133,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "6500:2:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10_by_1",
																						"typeString": "int_const 10"
																					},
																					"value": "10"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "**",
																				"rightExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 2136,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "3138",
																								"id": 2134,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "6505:2:14",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_18_by_1",
																									"typeString": "int_const 18"
																								},
																								"value": "18"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "-",
																							"rightExpression": {
																								"id": 2135,
																								"name": "stablecoinDecimals",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2127,
																								"src": "6510:18:14",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "6505:23:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 2137,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "6504:25:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "6500:29:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2139,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "6499:31:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6467:63:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "6440:90:14"
															},
															{
																"expression": {
																	"id": 2155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 2142,
																		"name": "paymentAmountInUSD",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2095,
																		"src": "6544:18:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2148,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"arguments": [
																							{
																								"id": 2145,
																								"name": "price",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2060,
																								"src": "6590:5:14",
																								"typeDescriptions": {
																									"typeIdentifier": "t_int256",
																									"typeString": "int256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_int256",
																									"typeString": "int256"
																								}
																							],
																							"id": 2144,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "6582:7:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 2143,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "6582:7:14",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 2146,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "6582:14:14",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2147,
																						"name": "normalizedAmount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2131,
																						"src": "6599:16:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "6582:33:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 2149,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "6581:35:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 2152,
																					"name": "PRECISION_18",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1725,
																					"src": "6643:12:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2151,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6635:7:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 2150,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "6635:7:14",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2153,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6635:21:14",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6581:75:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6544:112:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2156,
																"nodeType": "ExpressionStatement",
																"src": "6544:112:14"
															}
														]
													}
												},
												"id": 2164,
												"nodeType": "IfStatement",
												"src": "6088:646:14",
												"trueBody": {
													"id": 2116,
													"nodeType": "Block",
													"src": "6128:134:14",
													"statements": [
														{
															"expression": {
																"id": 2114,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2101,
																	"name": "paymentAmountInUSD",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2095,
																	"src": "6142:18:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2113,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2107,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"arguments": [
																						{
																							"id": 2104,
																							"name": "price",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2060,
																							"src": "6188:5:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_int256",
																								"typeString": "int256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_int256",
																								"typeString": "int256"
																							}
																						],
																						"id": 2103,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "6180:7:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						},
																						"typeName": {
																							"id": 2102,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "6180:7:14",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2105,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6180:14:14",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 2106,
																					"name": "paymentAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2054,
																					"src": "6197:13:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "6180:30:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2108,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "6179:32:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 2111,
																				"name": "PRECISION_18",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1725,
																				"src": "6238:12:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 2110,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6230:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 2109,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "6230:7:14",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2112,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6230:21:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6179:72:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6142:109:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2115,
															"nodeType": "ExpressionStatement",
															"src": "6142:109:14"
														}
													]
												}
											},
											{
												"assignments": [
													2166
												],
												"declarations": [
													{
														"constant": false,
														"id": 2166,
														"mutability": "mutable",
														"name": "tokenAmount",
														"nameLocation": "6752:11:14",
														"nodeType": "VariableDeclaration",
														"scope": 2179,
														"src": "6744:19:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2165,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6744:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2176,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2172,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2167,
																	"name": "paymentAmountInUSD",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2095,
																	"src": "6767:18:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 2170,
																			"name": "PRECISION_18",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1725,
																			"src": "6796:12:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2169,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6788:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2168,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "6788:7:14",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6788:21:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6767:42:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2173,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6766:44:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 2174,
														"name": "tokenPriceInUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2090,
														"src": "6825:15:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6766:74:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6744:96:14"
											},
											{
												"expression": {
													"id": 2177,
													"name": "tokenAmount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2166,
													"src": "6857:11:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2058,
												"id": 2178,
												"nodeType": "Return",
												"src": "6850:18:14"
											}
										]
									},
									"functionSelector": "05834e67",
									"id": 2180,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateTokenAmount",
									"nameLocation": "5599:20:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2052,
												"mutability": "mutable",
												"name": "paymentMethod",
												"nameLocation": "5643:13:14",
												"nodeType": "VariableDeclaration",
												"scope": 2180,
												"src": "5629:27:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_PaymentMethod_$1706",
													"typeString": "enum ICO.PaymentMethod"
												},
												"typeName": {
													"id": 2051,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2050,
														"name": "PaymentMethod",
														"nameLocations": [
															"5629:13:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1706,
														"src": "5629:13:14"
													},
													"referencedDeclaration": 1706,
													"src": "5629:13:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_PaymentMethod_$1706",
														"typeString": "enum ICO.PaymentMethod"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2054,
												"mutability": "mutable",
												"name": "paymentAmount",
												"nameLocation": "5674:13:14",
												"nodeType": "VariableDeclaration",
												"scope": 2180,
												"src": "5666:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5666:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5619:74:14"
									},
									"returnParameters": {
										"id": 2058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2057,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2180,
												"src": "5715:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2056,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5714:9:14"
									},
									"scope": 3093,
									"src": "5590:1285:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2302,
										"nodeType": "Block",
										"src": "7015:1138:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2191,
																"name": "tokenAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2185,
																"src": "7033:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2192,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7047:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7033:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e20616d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 2194,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7050:40:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1a4430203dcf8abbbd3446dbfc36d404c15a36b152eee41d8f82843f3bcf306f",
																"typeString": "literal_string \"Token amount must be greater than zero\""
															},
															"value": "Token amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1a4430203dcf8abbbd3446dbfc36d404c15a36b152eee41d8f82843f3bcf306f",
																"typeString": "literal_string \"Token amount must be greater than zero\""
															}
														],
														"id": 2190,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7025:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7025:66:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2196,
												"nodeType": "ExpressionStatement",
												"src": "7025:66:14"
											},
											{
												"assignments": [
													2198
												],
												"declarations": [
													{
														"constant": false,
														"id": 2198,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "7109:5:14",
														"nodeType": "VariableDeclaration",
														"scope": 2302,
														"src": "7102:12:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2197,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "7102:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2207,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2200,
																"name": "paymentMethod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2183,
																"src": "7131:13:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																	"typeString": "enum ICO.PaymentMethod"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																	"typeString": "enum ICO.PaymentMethod"
																}
															],
															"id": 2199,
															"name": "_getPriceFeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1987,
															"src": "7117:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_enum$_PaymentMethod_$1706_$returns$_t_int256_$",
																"typeString": "function (enum ICO.PaymentMethod) view returns (int256)"
															}
														},
														"id": 2201,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7117:28:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"arguments": [
															{
																"id": 2204,
																"name": "PRECISION_10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1722,
																"src": "7155:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2203,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7148:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															},
															"typeName": {
																"id": 2202,
																"name": "int256",
																"nodeType": "ElementaryTypeName",
																"src": "7148:6:14",
																"typeDescriptions": {}
															}
														},
														"id": 2205,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7148:20:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "7117:51:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7102:66:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 2211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2209,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2198,
																"src": "7214:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2210,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7222:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7214:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642070726963652066656564",
															"id": 2212,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7225:20:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dbf071520f0a95e05bb16da9ebcd49bf0ac91e963647b14497245101e3db79a3",
																"typeString": "literal_string \"Invalid price feed\""
															},
															"value": "Invalid price feed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dbf071520f0a95e05bb16da9ebcd49bf0ac91e963647b14497245101e3db79a3",
																"typeString": "literal_string \"Invalid price feed\""
															}
														],
														"id": 2208,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7206:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7206:40:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2214,
												"nodeType": "ExpressionStatement",
												"src": "7206:40:14"
											},
											{
												"assignments": [
													2216
												],
												"declarations": [
													{
														"constant": false,
														"id": 2216,
														"mutability": "mutable",
														"name": "currentSaleId",
														"nameLocation": "7265:13:14",
														"nodeType": "VariableDeclaration",
														"scope": 2302,
														"src": "7257:21:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2215,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7257:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2219,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2217,
														"name": "getCurrentSaleId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3014,
														"src": "7281:16:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 2218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7281:18:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7257:42:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2221,
																"name": "currentSaleId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2216,
																"src": "7317:13:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 2222,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7334:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7317:18:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f206163746976652073616c65",
															"id": 2224,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7337:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_96b145fdc05e3ce6aa7fad5e89550d457f70c47d1f8d674ad654a917590143f7",
																"typeString": "literal_string \"No active sale\""
															},
															"value": "No active sale"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_96b145fdc05e3ce6aa7fad5e89550d457f70c47d1f8d674ad654a917590143f7",
																"typeString": "literal_string \"No active sale\""
															}
														],
														"id": 2220,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7309:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7309:45:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2226,
												"nodeType": "ExpressionStatement",
												"src": "7309:45:14"
											},
											{
												"assignments": [
													2229
												],
												"declarations": [
													{
														"constant": false,
														"id": 2229,
														"mutability": "mutable",
														"name": "sale",
														"nameLocation": "7450:4:14",
														"nodeType": "VariableDeclaration",
														"scope": 2302,
														"src": "7437:17:14",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Sale_$1702_storage_ptr",
															"typeString": "struct ICO.Sale"
														},
														"typeName": {
															"id": 2228,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2227,
																"name": "Sale",
																"nameLocations": [
																	"7437:4:14"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1702,
																"src": "7437:4:14"
															},
															"referencedDeclaration": 1702,
															"src": "7437:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Sale_$1702_storage_ptr",
																"typeString": "struct ICO.Sale"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2233,
												"initialValue": {
													"baseExpression": {
														"id": 2230,
														"name": "sales",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1743,
														"src": "7457:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Sale_$1702_storage_$",
															"typeString": "mapping(uint256 => struct ICO.Sale storage ref)"
														}
													},
													"id": 2232,
													"indexExpression": {
														"id": 2231,
														"name": "currentSaleId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2216,
														"src": "7463:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7457:20:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Sale_$1702_storage",
														"typeString": "struct ICO.Sale storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7437:40:14"
											},
											{
												"assignments": [
													2235
												],
												"declarations": [
													{
														"constant": false,
														"id": 2235,
														"mutability": "mutable",
														"name": "tokenPriceInUSD",
														"nameLocation": "7495:15:14",
														"nodeType": "VariableDeclaration",
														"scope": 2302,
														"src": "7487:23:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2234,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7487:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2238,
												"initialValue": {
													"expression": {
														"id": 2236,
														"name": "sale",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2229,
														"src": "7513:4:14",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Sale_$1702_storage_ptr",
															"typeString": "struct ICO.Sale storage pointer"
														}
													},
													"id": 2237,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7518:13:14",
													"memberName": "tokenPriceUSD",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1697,
													"src": "7513:18:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7487:44:14"
											},
											{
												"assignments": [
													2240
												],
												"declarations": [
													{
														"constant": false,
														"id": 2240,
														"mutability": "mutable",
														"name": "totalPaymentInUSD",
														"nameLocation": "7590:17:14",
														"nodeType": "VariableDeclaration",
														"scope": 2302,
														"src": "7582:25:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2239,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7582:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2247,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2243,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2241,
																	"name": "tokenAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2185,
																	"src": "7611:11:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2242,
																	"name": "tokenPriceInUSD",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2235,
																	"src": "7625:15:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7611:29:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2244,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7610:31:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 2245,
														"name": "PRECISION_18",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1725,
														"src": "7656:12:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7610:58:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7582:86:14"
											},
											{
												"assignments": [
													2249
												],
												"declarations": [
													{
														"constant": false,
														"id": 2249,
														"mutability": "mutable",
														"name": "paymentAmount",
														"nameLocation": "7687:13:14",
														"nodeType": "VariableDeclaration",
														"scope": 2302,
														"src": "7679:21:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2248,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7679:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2250,
												"nodeType": "VariableDeclarationStatement",
												"src": "7679:21:14"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_PaymentMethod_$1706",
														"typeString": "enum ICO.PaymentMethod"
													},
													"id": 2254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2251,
														"name": "paymentMethod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2183,
														"src": "7714:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_PaymentMethod_$1706",
															"typeString": "enum ICO.PaymentMethod"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 2252,
															"name": "PaymentMethod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1706,
															"src": "7731:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_PaymentMethod_$1706_$",
																"typeString": "type(enum ICO.PaymentMethod)"
															}
														},
														"id": 2253,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7745:3:14",
														"memberName": "BNB",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1703,
														"src": "7731:17:14",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_PaymentMethod_$1706",
															"typeString": "enum ICO.PaymentMethod"
														}
													},
													"src": "7714:34:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 2276,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																"typeString": "enum ICO.PaymentMethod"
															},
															"id": 2271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2268,
																"name": "paymentMethod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2183,
																"src": "7865:13:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																	"typeString": "enum ICO.PaymentMethod"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 2269,
																	"name": "PaymentMethod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1706,
																	"src": "7882:13:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_PaymentMethod_$1706_$",
																		"typeString": "type(enum ICO.PaymentMethod)"
																	}
																},
																"id": 2270,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "7896:4:14",
																"memberName": "USDT",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1704,
																"src": "7882:18:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																	"typeString": "enum ICO.PaymentMethod"
																}
															},
															"src": "7865:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																"typeString": "enum ICO.PaymentMethod"
															},
															"id": 2275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2272,
																"name": "paymentMethod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2183,
																"src": "7916:13:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																	"typeString": "enum ICO.PaymentMethod"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 2273,
																	"name": "PaymentMethod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1706,
																	"src": "7933:13:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_PaymentMethod_$1706_$",
																		"typeString": "type(enum ICO.PaymentMethod)"
																	}
																},
																"id": 2274,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "7947:4:14",
																"memberName": "USDC",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1705,
																"src": "7933:18:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																	"typeString": "enum ICO.PaymentMethod"
																}
															},
															"src": "7916:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "7865:86:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 2297,
														"nodeType": "Block",
														"src": "8055:61:14",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"hexValue": "556e737570706f72746564207061796d656e74206d6574686f64",
																			"id": 2294,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8076:28:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_20a9374871eda95a21489d37b12097781d38e0ea68a5e5d037a1b2c3ea6a8c04",
																				"typeString": "literal_string \"Unsupported payment method\""
																			},
																			"value": "Unsupported payment method"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_20a9374871eda95a21489d37b12097781d38e0ea68a5e5d037a1b2c3ea6a8c04",
																				"typeString": "literal_string \"Unsupported payment method\""
																			}
																		],
																		"id": 2293,
																		"name": "revert",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967277,
																			4294967277
																		],
																		"referencedDeclaration": 4294967277,
																		"src": "8069:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (string memory) pure"
																		}
																	},
																	"id": 2295,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8069:36:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 2296,
																"nodeType": "ExpressionStatement",
																"src": "8069:36:14"
															}
														]
													},
													"id": 2298,
													"nodeType": "IfStatement",
													"src": "7848:268:14",
													"trueBody": {
														"id": 2292,
														"nodeType": "Block",
														"src": "7962:87:14",
														"statements": [
															{
																"expression": {
																	"id": 2290,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 2277,
																		"name": "paymentAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2249,
																		"src": "7976:13:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2289,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2283,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2278,
																						"name": "totalPaymentInUSD",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2240,
																						"src": "7993:17:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_rational_1000000_by_1",
																									"typeString": "int_const 1000000"
																								},
																								"id": 2281,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"leftExpression": {
																									"hexValue": "3130",
																									"id": 2279,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "8014:2:14",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "**",
																								"rightExpression": {
																									"hexValue": "36",
																									"id": 2280,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "8018:1:14",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_6_by_1",
																										"typeString": "int_const 6"
																									},
																									"value": "6"
																								},
																								"src": "8014:5:14",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1000000_by_1",
																									"typeString": "int_const 1000000"
																								}
																							}
																						],
																						"id": 2282,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "8013:7:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1000000_by_1",
																							"typeString": "int_const 1000000"
																						}
																					},
																					"src": "7993:27:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 2284,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "7992:29:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 2287,
																					"name": "price",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2198,
																					"src": "8032:5:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				],
																				"id": 2286,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8024:7:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 2285,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "8024:7:14",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2288,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8024:14:14",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7992:46:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7976:62:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2291,
																"nodeType": "ExpressionStatement",
																"src": "7976:62:14"
															}
														]
													}
												},
												"id": 2299,
												"nodeType": "IfStatement",
												"src": "7710:406:14",
												"trueBody": {
													"id": 2267,
													"nodeType": "Block",
													"src": "7750:92:14",
													"statements": [
														{
															"expression": {
																"id": 2265,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2255,
																	"name": "paymentAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2249,
																	"src": "7764:13:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2264,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2258,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2256,
																					"name": "totalPaymentInUSD",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2240,
																					"src": "7781:17:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 2257,
																					"name": "PRECISION_18",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1725,
																					"src": "7801:12:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7781:32:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2259,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "7780:34:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 2262,
																				"name": "price",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2198,
																				"src": "7825:5:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			],
																			"id": 2261,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7817:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 2260,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "7817:7:14",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2263,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7817:14:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7780:51:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7764:67:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2266,
															"nodeType": "ExpressionStatement",
															"src": "7764:67:14"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2300,
													"name": "paymentAmount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2249,
													"src": "8133:13:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2189,
												"id": 2301,
												"nodeType": "Return",
												"src": "8126:20:14"
											}
										]
									},
									"functionSelector": "117d260f",
									"id": 2303,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculatePaymentAmount",
									"nameLocation": "6890:22:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2183,
												"mutability": "mutable",
												"name": "paymentMethod",
												"nameLocation": "6936:13:14",
												"nodeType": "VariableDeclaration",
												"scope": 2303,
												"src": "6922:27:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_PaymentMethod_$1706",
													"typeString": "enum ICO.PaymentMethod"
												},
												"typeName": {
													"id": 2182,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2181,
														"name": "PaymentMethod",
														"nameLocations": [
															"6922:13:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1706,
														"src": "6922:13:14"
													},
													"referencedDeclaration": 1706,
													"src": "6922:13:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_PaymentMethod_$1706",
														"typeString": "enum ICO.PaymentMethod"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2185,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "6967:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 2303,
												"src": "6959:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6959:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6912:72:14"
									},
									"returnParameters": {
										"id": 2189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2188,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2303,
												"src": "7006:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7006:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7005:9:14"
									},
									"scope": 3093,
									"src": "6881:1272:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2535,
										"nodeType": "Block",
										"src": "8307:2429:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2316,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "8325:3:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2317,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8329:6:14",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "8325:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2318,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 151,
																	"src": "8339:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 2319,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8339:7:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8325:21:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e65722063616e6e6f742062757920746f6b656e73",
															"id": 2321,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8348:25:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6074d909f1c7eb2393bdf1029d0b7e2b2329445b551a02e61050a4a408023785",
																"typeString": "literal_string \"Owner cannot buy tokens\""
															},
															"value": "Owner cannot buy tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6074d909f1c7eb2393bdf1029d0b7e2b2329445b551a02e61050a4a408023785",
																"typeString": "literal_string \"Owner cannot buy tokens\""
															}
														],
														"id": 2315,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8317:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8317:57:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2323,
												"nodeType": "ExpressionStatement",
												"src": "8317:57:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2325,
																"name": "saleCount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1715,
																"src": "8392:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 2326,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8405:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8392:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f2073616c65",
															"id": 2328,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8408:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_745b7c27209a9df0afa3e1a0af6f3a48dc087e43ee7b30261a0fc4b9578e75a7",
																"typeString": "literal_string \"No sale\""
															},
															"value": "No sale"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_745b7c27209a9df0afa3e1a0af6f3a48dc087e43ee7b30261a0fc4b9578e75a7",
																"typeString": "literal_string \"No sale\""
															}
														],
														"id": 2324,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8384:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8384:34:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2330,
												"nodeType": "ExpressionStatement",
												"src": "8384:34:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "8436:29:14",
															"subExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 2332,
																		"name": "sales",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1743,
																		"src": "8437:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Sale_$1702_storage_$",
																			"typeString": "mapping(uint256 => struct ICO.Sale storage ref)"
																		}
																	},
																	"id": 2334,
																	"indexExpression": {
																		"id": 2333,
																		"name": "saleCount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1715,
																		"src": "8443:9:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8437:16:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Sale_$1702_storage",
																		"typeString": "struct ICO.Sale storage ref"
																	}
																},
																"id": 2335,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8454:11:14",
																"memberName": "isFinalized",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1701,
																"src": "8437:28:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616c6520616c72656164792066696e616c697a6564",
															"id": 2337,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8467:24:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c62da71e519c5f2bf89b59327b7f977696c4a0042adb3aafb9f068ba780f8ac7",
																"typeString": "literal_string \"Sale already finalized\""
															},
															"value": "Sale already finalized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c62da71e519c5f2bf89b59327b7f977696c4a0042adb3aafb9f068ba780f8ac7",
																"typeString": "literal_string \"Sale already finalized\""
															}
														],
														"id": 2331,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8428:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8428:64:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2339,
												"nodeType": "ExpressionStatement",
												"src": "8428:64:14"
											},
											{
												"assignments": [
													2341
												],
												"declarations": [
													{
														"constant": false,
														"id": 2341,
														"mutability": "mutable",
														"name": "tokenAmount",
														"nameLocation": "8510:11:14",
														"nodeType": "VariableDeclaration",
														"scope": 2535,
														"src": "8502:19:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2340,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8502:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2342,
												"nodeType": "VariableDeclarationStatement",
												"src": "8502:19:14"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_PaymentMethod_$1706",
														"typeString": "enum ICO.PaymentMethod"
													},
													"id": 2346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2343,
														"name": "paymentMethod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2306,
														"src": "8535:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_PaymentMethod_$1706",
															"typeString": "enum ICO.PaymentMethod"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 2344,
															"name": "PaymentMethod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1706,
															"src": "8552:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_PaymentMethod_$1706_$",
																"typeString": "type(enum ICO.PaymentMethod)"
															}
														},
														"id": 2345,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8566:3:14",
														"memberName": "BNB",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1703,
														"src": "8552:17:14",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_PaymentMethod_$1706",
															"typeString": "enum ICO.PaymentMethod"
														}
													},
													"src": "8535:34:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 2382,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																"typeString": "enum ICO.PaymentMethod"
															},
															"id": 2377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2374,
																"name": "paymentMethod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2306,
																"src": "8865:13:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																	"typeString": "enum ICO.PaymentMethod"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 2375,
																	"name": "PaymentMethod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1706,
																	"src": "8882:13:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_PaymentMethod_$1706_$",
																		"typeString": "type(enum ICO.PaymentMethod)"
																	}
																},
																"id": 2376,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "8896:4:14",
																"memberName": "USDT",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1704,
																"src": "8882:18:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																	"typeString": "enum ICO.PaymentMethod"
																}
															},
															"src": "8865:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																"typeString": "enum ICO.PaymentMethod"
															},
															"id": 2381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2378,
																"name": "paymentMethod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2306,
																"src": "8916:13:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																	"typeString": "enum ICO.PaymentMethod"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 2379,
																	"name": "PaymentMethod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1706,
																	"src": "8933:13:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_PaymentMethod_$1706_$",
																		"typeString": "type(enum ICO.PaymentMethod)"
																	}
																},
																"id": 2380,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "8947:4:14",
																"memberName": "USDC",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1705,
																"src": "8933:18:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																	"typeString": "enum ICO.PaymentMethod"
																}
															},
															"src": "8916:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "8865:86:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 2440,
														"nodeType": "Block",
														"src": "9682:61:14",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"hexValue": "556e737570706f72746564207061796d656e74206d6574686f64",
																			"id": 2437,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9703:28:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_20a9374871eda95a21489d37b12097781d38e0ea68a5e5d037a1b2c3ea6a8c04",
																				"typeString": "literal_string \"Unsupported payment method\""
																			},
																			"value": "Unsupported payment method"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_20a9374871eda95a21489d37b12097781d38e0ea68a5e5d037a1b2c3ea6a8c04",
																				"typeString": "literal_string \"Unsupported payment method\""
																			}
																		],
																		"id": 2436,
																		"name": "revert",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967277,
																			4294967277
																		],
																		"referencedDeclaration": 4294967277,
																		"src": "9696:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (string memory) pure"
																		}
																	},
																	"id": 2438,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9696:36:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 2439,
																"nodeType": "ExpressionStatement",
																"src": "9696:36:14"
															}
														]
													},
													"id": 2441,
													"nodeType": "IfStatement",
													"src": "8848:895:14",
													"trueBody": {
														"id": 2435,
														"nodeType": "Block",
														"src": "8962:714:14",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2386,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2384,
																				"name": "paymentAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2308,
																				"src": "9026:13:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 2385,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9042:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "9026:17:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		{
																			"hexValue": "456e74657220612076616c696420737461626c65636f696e20616d6f756e74",
																			"id": 2387,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9045:33:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_f6ac058ffe09b3bbdfae8372cf9a39f7a49f0de9dc3487048e08f88e8c7cd81d",
																				"typeString": "literal_string \"Enter a valid stablecoin amount\""
																			},
																			"value": "Enter a valid stablecoin amount"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			{
																				"typeIdentifier": "t_stringliteral_f6ac058ffe09b3bbdfae8372cf9a39f7a49f0de9dc3487048e08f88e8c7cd81d",
																				"typeString": "literal_string \"Enter a valid stablecoin amount\""
																			}
																		],
																		"id": 2383,
																		"name": "require",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967278,
																			4294967278,
																			4294967278
																		],
																		"referencedDeclaration": 4294967278,
																		"src": "9018:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (bool,string memory) pure"
																		}
																	},
																	"id": 2388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9018:61:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 2389,
																"nodeType": "ExpressionStatement",
																"src": "9018:61:14"
															},
															{
																"assignments": [
																	2392
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 2392,
																		"mutability": "mutable",
																		"name": "stablecoin",
																		"nameLocation": "9100:10:14",
																		"nodeType": "VariableDeclaration",
																		"scope": 2435,
																		"src": "9093:17:14",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1264",
																			"typeString": "contract IERC20"
																		},
																		"typeName": {
																			"id": 2391,
																			"nodeType": "UserDefinedTypeName",
																			"pathNode": {
																				"id": 2390,
																				"name": "IERC20",
																				"nameLocations": [
																					"9093:6:14"
																				],
																				"nodeType": "IdentifierPath",
																				"referencedDeclaration": 1264,
																				"src": "9093:6:14"
																			},
																			"referencedDeclaration": 1264,
																			"src": "9093:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1264",
																				"typeString": "contract IERC20"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 2404,
																"initialValue": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																			"typeString": "enum ICO.PaymentMethod"
																		},
																		"id": 2396,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2393,
																			"name": "paymentMethod",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2306,
																			"src": "9113:13:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																				"typeString": "enum ICO.PaymentMethod"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"expression": {
																				"id": 2394,
																				"name": "PaymentMethod",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1706,
																				"src": "9130:13:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_enum$_PaymentMethod_$1706_$",
																					"typeString": "type(enum ICO.PaymentMethod)"
																				}
																			},
																			"id": 2395,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "9144:4:14",
																			"memberName": "USDT",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1704,
																			"src": "9130:18:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																				"typeString": "enum ICO.PaymentMethod"
																			}
																		},
																		"src": "9113:35:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"arguments": [
																			{
																				"id": 2401,
																				"name": "usdc",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1738,
																				"src": "9205:4:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2400,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1264,
																			"src": "9198:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$1264_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 2402,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9198:12:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1264",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 2403,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "9113:97:14",
																	"trueExpression": {
																		"arguments": [
																			{
																				"id": 2398,
																				"name": "usdt",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1736,
																				"src": "9174:4:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2397,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1264,
																			"src": "9167:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$1264_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 2399,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9167:12:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1264",
																			"typeString": "contract IERC20"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1264",
																		"typeString": "contract IERC20"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "9093:117:14"
															},
															{
																"expression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 2408,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "9294:3:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 2409,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "9298:6:14",
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "9294:10:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"arguments": [
																						{
																							"id": 2412,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "9334:4:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_ICO_$3093",
																								"typeString": "contract ICO"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_ICO_$3093",
																								"typeString": "contract ICO"
																							}
																						],
																						"id": 2411,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "9326:7:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 2410,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "9326:7:14",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2413,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "9326:13:14",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2414,
																					"name": "paymentAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2308,
																					"src": "9361:13:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2406,
																					"name": "stablecoin",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2392,
																					"src": "9249:10:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$1264",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 2407,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "9260:12:14",
																				"memberName": "transferFrom",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1263,
																				"src": "9249:23:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,address,uint256) external returns (bool)"
																				}
																			},
																			"id": 2415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9249:143:14",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		{
																			"hexValue": "537461626c65636f696e207472616e73666572206661696c6564",
																			"id": 2416,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9410:28:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_c84bd9c4652ced38c134ab47300145495de9d5aff68e1b658cc1dca99fef7eb7",
																				"typeString": "literal_string \"Stablecoin transfer failed\""
																			},
																			"value": "Stablecoin transfer failed"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			{
																				"typeIdentifier": "t_stringliteral_c84bd9c4652ced38c134ab47300145495de9d5aff68e1b658cc1dca99fef7eb7",
																				"typeString": "literal_string \"Stablecoin transfer failed\""
																			}
																		],
																		"id": 2405,
																		"name": "require",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967278,
																			4294967278,
																			4294967278
																		],
																		"referencedDeclaration": 4294967278,
																		"src": "9224:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (bool,string memory) pure"
																		}
																	},
																	"id": 2417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9224:228:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 2418,
																"nodeType": "ExpressionStatement",
																"src": "9224:228:14"
															},
															{
																"expression": {
																	"id": 2424,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 2419,
																		"name": "tokenAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2341,
																		"src": "9527:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"id": 2421,
																				"name": "paymentMethod",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2306,
																				"src": "9562:13:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																					"typeString": "enum ICO.PaymentMethod"
																				}
																			},
																			{
																				"id": 2422,
																				"name": "paymentAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2308,
																				"src": "9577:13:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																					"typeString": "enum ICO.PaymentMethod"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 2420,
																			"name": "calculateTokenAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2180,
																			"src": "9541:20:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_enum$_PaymentMethod_$1706_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (enum ICO.PaymentMethod,uint256) view returns (uint256)"
																			}
																		},
																		"id": 2423,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9541:50:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9527:64:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2425,
																"nodeType": "ExpressionStatement",
																"src": "9527:64:14"
															},
															{
																"expression": {
																	"id": 2433,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"baseExpression": {
																			"baseExpression": {
																				"id": 2426,
																				"name": "investorPayments",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1763,
																				"src": "9605:16:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_PaymentMethod_$1706_$_t_uint256_$_$",
																					"typeString": "mapping(address => mapping(enum ICO.PaymentMethod => uint256))"
																				}
																			},
																			"id": 2430,
																			"indexExpression": {
																				"expression": {
																					"id": 2427,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "9622:3:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 2428,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "9626:6:14",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "9622:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "9605:28:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_enum$_PaymentMethod_$1706_$_t_uint256_$",
																				"typeString": "mapping(enum ICO.PaymentMethod => uint256)"
																			}
																		},
																		"id": 2431,
																		"indexExpression": {
																			"id": 2429,
																			"name": "paymentMethod",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2306,
																			"src": "9634:13:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																				"typeString": "enum ICO.PaymentMethod"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"nodeType": "IndexAccess",
																		"src": "9605:43:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "+=",
																	"rightHandSide": {
																		"id": 2432,
																		"name": "paymentAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2308,
																		"src": "9652:13:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9605:60:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2434,
																"nodeType": "ExpressionStatement",
																"src": "9605:60:14"
															}
														]
													}
												},
												"id": 2442,
												"nodeType": "IfStatement",
												"src": "8531:1212:14",
												"trueBody": {
													"id": 2373,
													"nodeType": "Block",
													"src": "8571:271:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2351,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 2348,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "8646:3:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 2349,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "8650:5:14",
																			"memberName": "value",
																			"nodeType": "MemberAccess",
																			"src": "8646:9:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2350,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8658:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "8646:13:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "53656e6420612076616c696420424e4220616d6f756e74",
																		"id": 2352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8661:25:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c4187a1289740d8ffce3bb99c104d1df31ca9848a3a5aafe5f4d5ecd5e91ee9b",
																			"typeString": "literal_string \"Send a valid BNB amount\""
																		},
																		"value": "Send a valid BNB amount"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_c4187a1289740d8ffce3bb99c104d1df31ca9848a3a5aafe5f4d5ecd5e91ee9b",
																			"typeString": "literal_string \"Send a valid BNB amount\""
																		}
																	],
																	"id": 2347,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "8638:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2353,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8638:49:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2354,
															"nodeType": "ExpressionStatement",
															"src": "8638:49:14"
														},
														{
															"expression": {
																"id": 2361,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2355,
																	"name": "tokenAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2341,
																	"src": "8701:11:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 2357,
																			"name": "paymentMethod",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2306,
																			"src": "8736:13:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																				"typeString": "enum ICO.PaymentMethod"
																			}
																		},
																		{
																			"expression": {
																				"id": 2358,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "8751:3:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 2359,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "8755:5:14",
																			"memberName": "value",
																			"nodeType": "MemberAccess",
																			"src": "8751:9:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																				"typeString": "enum ICO.PaymentMethod"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2356,
																		"name": "calculateTokenAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2180,
																		"src": "8715:20:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_enum$_PaymentMethod_$1706_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (enum ICO.PaymentMethod,uint256) view returns (uint256)"
																		}
																	},
																	"id": 2360,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8715:46:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8701:60:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2362,
															"nodeType": "ExpressionStatement",
															"src": "8701:60:14"
														},
														{
															"expression": {
																"id": 2371,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 2363,
																			"name": "investorPayments",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1763,
																			"src": "8775:16:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_PaymentMethod_$1706_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(enum ICO.PaymentMethod => uint256))"
																			}
																		},
																		"id": 2367,
																		"indexExpression": {
																			"expression": {
																				"id": 2364,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "8792:3:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 2365,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "8796:6:14",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "8792:10:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8775:28:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_enum$_PaymentMethod_$1706_$_t_uint256_$",
																			"typeString": "mapping(enum ICO.PaymentMethod => uint256)"
																		}
																	},
																	"id": 2368,
																	"indexExpression": {
																		"id": 2366,
																		"name": "paymentMethod",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2306,
																		"src": "8804:13:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																			"typeString": "enum ICO.PaymentMethod"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8775:43:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"expression": {
																		"id": 2369,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "8822:3:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2370,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8826:5:14",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "8822:9:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8775:56:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2372,
															"nodeType": "ExpressionStatement",
															"src": "8775:56:14"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2446,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2444,
																"name": "tokenAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2341,
																"src": "9760:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2445,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9774:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9760:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420746f6b656e20616d6f756e74",
															"id": 2447,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9777:22:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51e395ccdea9060dec5fa8fca2f2563cffa61f9f6f61f3f9c9b3895fa879ed58",
																"typeString": "literal_string \"Invalid token amount\""
															},
															"value": "Invalid token amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51e395ccdea9060dec5fa8fca2f2563cffa61f9f6f61f3f9c9b3895fa879ed58",
																"typeString": "literal_string \"Invalid token amount\""
															}
														],
														"id": 2443,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9752:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9752:48:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2449,
												"nodeType": "ExpressionStatement",
												"src": "9752:48:14"
											},
											{
												"assignments": [
													2451
												],
												"declarations": [
													{
														"constant": false,
														"id": 2451,
														"mutability": "mutable",
														"name": "totalCostInUSD",
														"nameLocation": "9878:14:14",
														"nodeType": "VariableDeclaration",
														"scope": 2535,
														"src": "9870:22:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2450,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9870:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2461,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2457,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2452,
																	"name": "tokenAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2341,
																	"src": "9896:11:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 2453,
																			"name": "sales",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1743,
																			"src": "9922:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Sale_$1702_storage_$",
																				"typeString": "mapping(uint256 => struct ICO.Sale storage ref)"
																			}
																		},
																		"id": 2455,
																		"indexExpression": {
																			"id": 2454,
																			"name": "saleCount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1715,
																			"src": "9928:9:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9922:16:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Sale_$1702_storage",
																			"typeString": "struct ICO.Sale storage ref"
																		}
																	},
																	"id": 2456,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9939:13:14",
																	"memberName": "tokenPriceUSD",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1697,
																	"src": "9922:30:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9896:56:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2458,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9895:58:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 2459,
														"name": "PRECISION_18",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1725,
														"src": "9956:12:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9895:73:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9870:98:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2467,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2465,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2463,
																	"name": "totalFundsRaisedUSD",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1717,
																	"src": "9999:19:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 2464,
																	"name": "totalCostInUSD",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2451,
																	"src": "10021:14:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9999:36:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2466,
																"name": "hardCapInUSD",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1713,
																"src": "10039:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9999:52:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "48617264206361702072656163686564",
															"id": 2468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10065:18:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c07dacc766697a4a5558e08455451d0672777bb5104aed3615bc1964c00cc795",
																"typeString": "literal_string \"Hard cap reached\""
															},
															"value": "Hard cap reached"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c07dacc766697a4a5558e08455451d0672777bb5104aed3615bc1964c00cc795",
																"typeString": "literal_string \"Hard cap reached\""
															}
														],
														"id": 2462,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9978:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9978:115:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2470,
												"nodeType": "ExpressionStatement",
												"src": "9978:115:14"
											},
											{
												"expression": {
													"id": 2476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2471,
															"name": "contributionsInUSD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1747,
															"src": "10104:18:14",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2474,
														"indexExpression": {
															"expression": {
																"id": 2472,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10123:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10127:6:14",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10123:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10104:30:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2475,
														"name": "totalCostInUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2451,
														"src": "10138:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10104:48:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2477,
												"nodeType": "ExpressionStatement",
												"src": "10104:48:14"
											},
											{
												"expression": {
													"id": 2480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2478,
														"name": "totalFundsRaisedUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1717,
														"src": "10162:19:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2479,
														"name": "totalCostInUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2451,
														"src": "10185:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10162:37:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2481,
												"nodeType": "ExpressionStatement",
												"src": "10162:37:14"
											},
											{
												"expression": {
													"id": 2487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 2482,
																"name": "sales",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1743,
																"src": "10209:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Sale_$1702_storage_$",
																	"typeString": "mapping(uint256 => struct ICO.Sale storage ref)"
																}
															},
															"id": 2484,
															"indexExpression": {
																"id": 2483,
																"name": "saleCount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1715,
																"src": "10215:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10209:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Sale_$1702_storage",
																"typeString": "struct ICO.Sale storage ref"
															}
														},
														"id": 2485,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "10226:10:14",
														"memberName": "tokensSold",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1699,
														"src": "10209:27:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2486,
														"name": "tokenAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2341,
														"src": "10240:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10209:42:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2488,
												"nodeType": "ExpressionStatement",
												"src": "10209:42:14"
											},
											{
												"expression": {
													"id": 2491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2489,
														"name": "totalTokensSold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1719,
														"src": "10261:15:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2490,
														"name": "tokenAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2341,
														"src": "10280:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10261:30:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2492,
												"nodeType": "ExpressionStatement",
												"src": "10261:30:14"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 2493,
															"name": "tokensBoughtByInvestor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1751,
															"src": "10306:22:14",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2496,
														"indexExpression": {
															"expression": {
																"id": 2494,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10329:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2495,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10333:6:14",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10329:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "10306:34:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2497,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10344:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10306:39:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2507,
												"nodeType": "IfStatement",
												"src": "10302:96:14",
												"trueBody": {
													"id": 2506,
													"nodeType": "Block",
													"src": "10347:51:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2502,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "10376:3:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2503,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10380:6:14",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "10376:10:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 2499,
																		"name": "investors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1734,
																		"src": "10361:9:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 2501,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10371:4:14",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "10361:14:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
																		"typeString": "function (address[] storage pointer,address)"
																	}
																},
																"id": 2504,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10361:26:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2505,
															"nodeType": "ExpressionStatement",
															"src": "10361:26:14"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2508,
															"name": "tokensBoughtByInvestor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1751,
															"src": "10407:22:14",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2511,
														"indexExpression": {
															"expression": {
																"id": 2509,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10430:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10434:6:14",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10430:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10407:34:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2512,
														"name": "tokenAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2341,
														"src": "10445:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10407:49:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2514,
												"nodeType": "ExpressionStatement",
												"src": "10407:49:14"
											},
											{
												"expression": {
													"id": 2520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2515,
															"name": "paymentMethodForInvestor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1756,
															"src": "10466:24:14",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_enum$_PaymentMethod_$1706_$",
																"typeString": "mapping(address => enum ICO.PaymentMethod)"
															}
														},
														"id": 2518,
														"indexExpression": {
															"expression": {
																"id": 2516,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10491:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10495:6:14",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10491:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10466:36:14",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_PaymentMethod_$1706",
															"typeString": "enum ICO.PaymentMethod"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2519,
														"name": "paymentMethod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2306,
														"src": "10505:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_PaymentMethod_$1706",
															"typeString": "enum ICO.PaymentMethod"
														}
													},
													"src": "10466:52:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_PaymentMethod_$1706",
														"typeString": "enum ICO.PaymentMethod"
													}
												},
												"id": 2521,
												"nodeType": "ExpressionStatement",
												"src": "10466:52:14"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2523,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10563:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2524,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10567:6:14",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10563:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2525,
															"name": "saleCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1715,
															"src": "10587:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2526,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2341,
															"src": "10610:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 2527,
																	"name": "sales",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1743,
																	"src": "10635:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Sale_$1702_storage_$",
																		"typeString": "mapping(uint256 => struct ICO.Sale storage ref)"
																	}
																},
																"id": 2529,
																"indexExpression": {
																	"id": 2528,
																	"name": "saleCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1715,
																	"src": "10641:9:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10635:16:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Sale_$1702_storage",
																	"typeString": "struct ICO.Sale storage ref"
																}
															},
															"id": 2530,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10652:13:14",
															"memberName": "tokenPriceUSD",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1697,
															"src": "10635:30:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2531,
															"name": "paymentAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2308,
															"src": "10679:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2532,
															"name": "paymentMethod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2306,
															"src": "10706:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																"typeString": "enum ICO.PaymentMethod"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																"typeString": "enum ICO.PaymentMethod"
															}
														],
														"id": 2522,
														"name": "TokensPurchased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1801,
														"src": "10534:15:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_enum$_PaymentMethod_$1706_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256,uint256,enum ICO.PaymentMethod)"
														}
													},
													"id": 2533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10534:195:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2534,
												"nodeType": "EmitStatement",
												"src": "10529:200:14"
											}
										]
									},
									"functionSelector": "940c333e",
									"id": 2536,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2311,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2310,
												"name": "icoNotFinalized",
												"nameLocations": [
													"8271:15:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1890,
												"src": "8271:15:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "8271:15:14"
										},
										{
											"id": 2313,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2312,
												"name": "freezed",
												"nameLocations": [
													"8295:7:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1900,
												"src": "8295:7:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "8295:7:14"
										}
									],
									"name": "buyTokens",
									"nameLocation": "8168:9:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2306,
												"mutability": "mutable",
												"name": "paymentMethod",
												"nameLocation": "8192:13:14",
												"nodeType": "VariableDeclaration",
												"scope": 2536,
												"src": "8178:27:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_PaymentMethod_$1706",
													"typeString": "enum ICO.PaymentMethod"
												},
												"typeName": {
													"id": 2305,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2304,
														"name": "PaymentMethod",
														"nameLocations": [
															"8178:13:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1706,
														"src": "8178:13:14"
													},
													"referencedDeclaration": 1706,
													"src": "8178:13:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_PaymentMethod_$1706",
														"typeString": "enum ICO.PaymentMethod"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2308,
												"mutability": "mutable",
												"name": "paymentAmount",
												"nameLocation": "8215:13:14",
												"nodeType": "VariableDeclaration",
												"scope": 2536,
												"src": "8207:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8207:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8177:52:14"
									},
									"returnParameters": {
										"id": 2314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8307:0:14"
									},
									"scope": 3093,
									"src": "8159:2577:14",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2570,
										"nodeType": "Block",
										"src": "10863:326:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2548,
																"name": "totalFundsRaisedUSD",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1717,
																"src": "10894:19:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2549,
																"name": "softCapInUSD",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1711,
																"src": "10917:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10894:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f742066696e616c697a653a20536f667420636170206e6f742072656163686564206f722073616c65206973206f6e676f696e67",
															"id": 2551,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10943:58:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a7a44f673ae2e9df66fb923331ae1450d004d9638562a05cc232389560dd7c4d",
																"typeString": "literal_string \"Cannot finalize: Soft cap not reached or sale is ongoing\""
															},
															"value": "Cannot finalize: Soft cap not reached or sale is ongoing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a7a44f673ae2e9df66fb923331ae1450d004d9638562a05cc232389560dd7c4d",
																"typeString": "literal_string \"Cannot finalize: Soft cap not reached or sale is ongoing\""
															}
														],
														"id": 2547,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10873:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10873:138:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2553,
												"nodeType": "ExpressionStatement",
												"src": "10873:138:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2555,
															"name": "isTokensAirdropped",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1729,
															"src": "11029:18:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41697264726f70206e6f7420636f6d706c65746564",
															"id": 2556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11049:23:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_aff7558382c088943ad2bf11af33e010b3e0eab9fe7e943d464ecefccf0c4c65",
																"typeString": "literal_string \"Airdrop not completed\""
															},
															"value": "Airdrop not completed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_aff7558382c088943ad2bf11af33e010b3e0eab9fe7e943d464ecefccf0c4c65",
																"typeString": "literal_string \"Airdrop not completed\""
															}
														],
														"id": 2554,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11021:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11021:52:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2558,
												"nodeType": "ExpressionStatement",
												"src": "11021:52:14"
											},
											{
												"expression": {
													"id": 2561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2559,
														"name": "isICOFinalized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1727,
														"src": "11084:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2560,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11101:4:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "11084:21:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2562,
												"nodeType": "ExpressionStatement",
												"src": "11084:21:14"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2563,
														"name": "_transferFundsToOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2664,
														"src": "11115:21:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11115:23:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2565,
												"nodeType": "ExpressionStatement",
												"src": "11115:23:14"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2567,
															"name": "totalTokensSold",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1719,
															"src": "11166:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2566,
														"name": "ICOFinalized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1767,
														"src": "11153:12:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11153:29:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2569,
												"nodeType": "EmitStatement",
												"src": "11148:34:14"
											}
										]
									},
									"functionSelector": "23cc75a8",
									"id": 2571,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2539,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2538,
												"name": "nonReentrant",
												"nameLocations": [
													"10788:12:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 791,
												"src": "10788:12:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "10788:12:14"
										},
										{
											"id": 2541,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2540,
												"name": "onlyOwner",
												"nameLocations": [
													"10809:9:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 135,
												"src": "10809:9:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "10809:9:14"
										},
										{
											"id": 2543,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2542,
												"name": "icoNotFinalized",
												"nameLocations": [
													"10827:15:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1890,
												"src": "10827:15:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "10827:15:14"
										},
										{
											"id": 2545,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2544,
												"name": "freezed",
												"nameLocations": [
													"10851:7:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1900,
												"src": "10851:7:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "10851:7:14"
										}
									],
									"name": "finalizeICO",
									"nameLocation": "10751:11:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2537,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10762:2:14"
									},
									"returnParameters": {
										"id": 2546,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10863:0:14"
									},
									"scope": 3093,
									"src": "10742:447:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2663,
										"nodeType": "Block",
										"src": "11236:776:14",
										"statements": [
											{
												"assignments": [
													2575
												],
												"declarations": [
													{
														"constant": false,
														"id": 2575,
														"mutability": "mutable",
														"name": "nativeBalance",
														"nameLocation": "11254:13:14",
														"nodeType": "VariableDeclaration",
														"scope": 2663,
														"src": "11246:21:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2574,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11246:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2581,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 2578,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "11278:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ICO_$3093",
																	"typeString": "contract ICO"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_ICO_$3093",
																	"typeString": "contract ICO"
																}
															],
															"id": 2577,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11270:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2576,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11270:7:14",
																"typeDescriptions": {}
															}
														},
														"id": 2579,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11270:13:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "11284:7:14",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "11270:21:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11246:45:14"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2582,
														"name": "nativeBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2575,
														"src": "11305:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2583,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11321:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "11305:17:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2604,
												"nodeType": "IfStatement",
												"src": "11301:163:14",
												"trueBody": {
													"id": 2603,
													"nodeType": "Block",
													"src": "11324:140:14",
													"statements": [
														{
															"assignments": [
																2586,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2586,
																	"mutability": "mutable",
																	"name": "success",
																	"nameLocation": "11344:7:14",
																	"nodeType": "VariableDeclaration",
																	"scope": 2603,
																	"src": "11339:12:14",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 2585,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "11339:4:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																null
															],
															"id": 2597,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "",
																		"id": 2595,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11401:2:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																				"typeString": "literal_string \"\""
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 2589,
																						"name": "owner",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 151,
																						"src": "11365:5:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																							"typeString": "function () view returns (address)"
																						}
																					},
																					"id": 2590,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "11365:7:14",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2588,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "11357:8:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_payable_$",
																					"typeString": "type(address payable)"
																				},
																				"typeName": {
																					"id": 2587,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "11357:8:14",
																					"stateMutability": "payable",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2591,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11357:16:14",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"id": 2592,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "11374:4:14",
																		"memberName": "call",
																		"nodeType": "MemberAccess",
																		"src": "11357:21:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																		}
																	},
																	"id": 2594,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"names": [
																		"value"
																	],
																	"nodeType": "FunctionCallOptions",
																	"options": [
																		{
																			"id": 2593,
																			"name": "nativeBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2575,
																			"src": "11386:13:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"src": "11357:43:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 2596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11357:47:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "11338:66:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2599,
																		"name": "success",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2586,
																		"src": "11426:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5472616e73666572206661696c6564",
																		"id": 2600,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11435:17:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																			"typeString": "literal_string \"Transfer failed\""
																		},
																		"value": "Transfer failed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																			"typeString": "literal_string \"Transfer failed\""
																		}
																	],
																	"id": 2598,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11418:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2601,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11418:35:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2602,
															"nodeType": "ExpressionStatement",
															"src": "11418:35:14"
														}
													]
												}
											},
											{
												"assignments": [
													2606
												],
												"declarations": [
													{
														"constant": false,
														"id": 2606,
														"mutability": "mutable",
														"name": "usdtBalance",
														"nameLocation": "11531:11:14",
														"nodeType": "VariableDeclaration",
														"scope": 2663,
														"src": "11523:19:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2605,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11523:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2616,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2613,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "11576:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ICO_$3093",
																		"typeString": "contract ICO"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ICO_$3093",
																		"typeString": "contract ICO"
																	}
																],
																"id": 2612,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11568:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2611,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11568:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 2614,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11568:13:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2608,
																	"name": "usdt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1736,
																	"src": "11552:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2607,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1264,
																"src": "11545:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1264_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 2609,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11545:12:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1264",
																"typeString": "contract IERC20"
															}
														},
														"id": 2610,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11558:9:14",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1221,
														"src": "11545:22:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 2615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11545:37:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11523:59:14"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2617,
														"name": "usdtBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2606,
														"src": "11596:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11610:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "11596:15:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2633,
												"nodeType": "IfStatement",
												"src": "11592:168:14",
												"trueBody": {
													"id": 2632,
													"nodeType": "Block",
													"src": "11613:147:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 2625,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 151,
																					"src": "11674:5:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																						"typeString": "function () view returns (address)"
																					}
																				},
																				"id": 2626,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "11674:7:14",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 2627,
																				"name": "usdtBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2606,
																				"src": "11683:11:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 2622,
																						"name": "usdt",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1736,
																						"src": "11659:4:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 2621,
																					"name": "IERC20",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1264,
																					"src": "11652:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IERC20_$1264_$",
																						"typeString": "type(contract IERC20)"
																					}
																				},
																				"id": 2623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "11652:12:14",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$1264",
																					"typeString": "contract IERC20"
																				}
																			},
																			"id": 2624,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "11665:8:14",
																			"memberName": "transfer",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1231,
																			"src": "11652:21:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																				"typeString": "function (address,uint256) external returns (bool)"
																			}
																		},
																		"id": 2628,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11652:43:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "55534454207472616e73666572206661696c6564",
																		"id": 2629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11713:22:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4",
																			"typeString": "literal_string \"USDT transfer failed\""
																		},
																		"value": "USDT transfer failed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4",
																			"typeString": "literal_string \"USDT transfer failed\""
																		}
																	],
																	"id": 2620,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11627:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2630,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11627:122:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2631,
															"nodeType": "ExpressionStatement",
															"src": "11627:122:14"
														}
													]
												}
											},
											{
												"assignments": [
													2635
												],
												"declarations": [
													{
														"constant": false,
														"id": 2635,
														"mutability": "mutable",
														"name": "usdcBalance",
														"nameLocation": "11777:11:14",
														"nodeType": "VariableDeclaration",
														"scope": 2663,
														"src": "11769:19:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2634,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11769:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2645,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2642,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "11822:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ICO_$3093",
																		"typeString": "contract ICO"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ICO_$3093",
																		"typeString": "contract ICO"
																	}
																],
																"id": 2641,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11814:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2640,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11814:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 2643,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11814:13:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2637,
																	"name": "usdc",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1738,
																	"src": "11798:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2636,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1264,
																"src": "11791:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1264_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 2638,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11791:12:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1264",
																"typeString": "contract IERC20"
															}
														},
														"id": 2639,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11804:9:14",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1221,
														"src": "11791:22:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 2644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11791:37:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11769:59:14"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2646,
														"name": "usdcBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2635,
														"src": "11842:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2647,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11856:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "11842:15:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2662,
												"nodeType": "IfStatement",
												"src": "11838:168:14",
												"trueBody": {
													"id": 2661,
													"nodeType": "Block",
													"src": "11859:147:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 2654,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 151,
																					"src": "11920:5:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																						"typeString": "function () view returns (address)"
																					}
																				},
																				"id": 2655,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "11920:7:14",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 2656,
																				"name": "usdcBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2635,
																				"src": "11929:11:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 2651,
																						"name": "usdc",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1738,
																						"src": "11905:4:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 2650,
																					"name": "IERC20",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1264,
																					"src": "11898:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IERC20_$1264_$",
																						"typeString": "type(contract IERC20)"
																					}
																				},
																				"id": 2652,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "11898:12:14",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$1264",
																					"typeString": "contract IERC20"
																				}
																			},
																			"id": 2653,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "11911:8:14",
																			"memberName": "transfer",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1231,
																			"src": "11898:21:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																				"typeString": "function (address,uint256) external returns (bool)"
																			}
																		},
																		"id": 2657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11898:43:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "55534443207472616e73666572206661696c6564",
																		"id": 2658,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11959:22:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_032fb3428477d66798bdf7801f58a252d723dc1362b9dfac5726f85f81cca815",
																			"typeString": "literal_string \"USDC transfer failed\""
																		},
																		"value": "USDC transfer failed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_032fb3428477d66798bdf7801f58a252d723dc1362b9dfac5726f85f81cca815",
																			"typeString": "literal_string \"USDC transfer failed\""
																		}
																	],
																	"id": 2649,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11873:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2659,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11873:122:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2660,
															"nodeType": "ExpressionStatement",
															"src": "11873:122:14"
														}
													]
												}
											}
										]
									},
									"id": 2664,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferFundsToOwner",
									"nameLocation": "11204:21:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2572,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11225:2:14"
									},
									"returnParameters": {
										"id": 2573,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11236:0:14"
									},
									"scope": 3093,
									"src": "11195:817:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2797,
										"nodeType": "Block",
										"src": "12143:1452:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2677,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "12161:19:14",
															"subExpression": {
																"id": 2676,
																"name": "isTokensAirdropped",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1729,
																"src": "12162:18:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41697264726f7020616c726561647920636f6d706c65746564",
															"id": 2678,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12182:27:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_35194372afc15163c58aa5af5530ba0e7f2576a9d985e6f8d166066860d6966a",
																"typeString": "literal_string \"Airdrop already completed\""
															},
															"value": "Airdrop already completed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_35194372afc15163c58aa5af5530ba0e7f2576a9d985e6f8d166066860d6966a",
																"typeString": "literal_string \"Airdrop already completed\""
															}
														],
														"id": 2675,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12153:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12153:57:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2680,
												"nodeType": "ExpressionStatement",
												"src": "12153:57:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2688,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2684,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "12257:3:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2685,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "12261:6:14",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "12257:10:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 2682,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1709,
																		"src": "12241:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1264",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 2683,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12247:9:14",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1221,
																	"src": "12241:15:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 2686,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12241:27:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2687,
																"name": "totalTokensSold",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1719,
																"src": "12272:15:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12241:46:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742046756e6473",
															"id": 2689,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12301:20:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092",
																"typeString": "literal_string \"Insufficient Funds\""
															},
															"value": "Insufficient Funds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092",
																"typeString": "literal_string \"Insufficient Funds\""
															}
														],
														"id": 2681,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12220:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12220:111:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2691,
												"nodeType": "ExpressionStatement",
												"src": "12220:111:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2697,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2693,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "12349:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2694,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12355:9:14",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "12349:15:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2695,
																	"name": "getLatestSaleEndTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3025,
																	"src": "12367:20:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 2696,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12367:22:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12349:40:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616c65206f6e676f696e67",
															"id": 2698,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12391:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_52e3d128a4ea4439173e3f4b78f0e12548c2c4449a80c4b2fbefb1fd3e6a7665",
																"typeString": "literal_string \"Sale ongoing\""
															},
															"value": "Sale ongoing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_52e3d128a4ea4439173e3f4b78f0e12548c2c4449a80c4b2fbefb1fd3e6a7665",
																"typeString": "literal_string \"Sale ongoing\""
															}
														],
														"id": 2692,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12341:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12341:65:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2700,
												"nodeType": "ExpressionStatement",
												"src": "12341:65:14"
											},
											{
												"assignments": [
													2702
												],
												"declarations": [
													{
														"constant": false,
														"id": 2702,
														"mutability": "mutable",
														"name": "investorLength",
														"nameLocation": "12425:14:14",
														"nodeType": "VariableDeclaration",
														"scope": 2797,
														"src": "12417:22:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2701,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12417:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2705,
												"initialValue": {
													"expression": {
														"id": 2703,
														"name": "investors",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1734,
														"src": "12442:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 2704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "12452:6:14",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "12442:16:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12417:41:14"
											},
											{
												"assignments": [
													2707
												],
												"declarations": [
													{
														"constant": false,
														"id": 2707,
														"mutability": "mutable",
														"name": "investorsIterated",
														"nameLocation": "12476:17:14",
														"nodeType": "VariableDeclaration",
														"scope": 2797,
														"src": "12468:25:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2706,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12468:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2708,
												"nodeType": "VariableDeclarationStatement",
												"src": "12468:25:14"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2709,
														"name": "investorLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2702,
														"src": "12508:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "3130",
														"id": 2710,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12525:2:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "12508:19:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2723,
													"nodeType": "Block",
													"src": "12599:46:14",
													"statements": [
														{
															"expression": {
																"id": 2721,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2719,
																	"name": "investorsIterated",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2707,
																	"src": "12613:17:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 2720,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12633:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "12613:21:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2722,
															"nodeType": "ExpressionStatement",
															"src": "12613:21:14"
														}
													]
												},
												"id": 2724,
												"nodeType": "IfStatement",
												"src": "12504:141:14",
												"trueBody": {
													"id": 2718,
													"nodeType": "Block",
													"src": "12529:64:14",
													"statements": [
														{
															"expression": {
																"id": 2716,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2712,
																	"name": "investorsIterated",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2707,
																	"src": "12543:17:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2715,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2713,
																		"name": "investorLength",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2702,
																		"src": "12563:14:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "3131",
																		"id": 2714,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12580:2:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_11_by_1",
																			"typeString": "int_const 11"
																		},
																		"value": "11"
																	},
																	"src": "12563:19:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12543:39:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2717,
															"nodeType": "ExpressionStatement",
															"src": "12543:39:14"
														}
													]
												}
											},
											{
												"body": {
													"id": 2785,
													"nodeType": "Block",
													"src": "12720:783:14",
													"statements": [
														{
															"assignments": [
																2738
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2738,
																	"mutability": "mutable",
																	"name": "investor",
																	"nameLocation": "12742:8:14",
																	"nodeType": "VariableDeclaration",
																	"scope": 2785,
																	"src": "12734:16:14",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 2737,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12734:7:14",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2742,
															"initialValue": {
																"baseExpression": {
																	"id": 2739,
																	"name": "investors",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1734,
																	"src": "12753:9:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 2741,
																"indexExpression": {
																	"id": 2740,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2726,
																	"src": "12763:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12753:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12734:31:14"
														},
														{
															"assignments": [
																2744
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2744,
																	"mutability": "mutable",
																	"name": "tokensBought",
																	"nameLocation": "12787:12:14",
																	"nodeType": "VariableDeclaration",
																	"scope": 2785,
																	"src": "12779:20:14",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2743,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12779:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2748,
															"initialValue": {
																"baseExpression": {
																	"id": 2745,
																	"name": "tokensBoughtByInvestor",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1751,
																	"src": "12802:22:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2747,
																"indexExpression": {
																	"id": 2746,
																	"name": "investor",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2738,
																	"src": "12825:8:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12802:32:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12779:55:14"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2751,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2749,
																	"name": "tokensBought",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2744,
																	"src": "12961:12:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2750,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12976:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "12961:16:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2778,
															"nodeType": "IfStatement",
															"src": "12957:473:14",
															"trueBody": {
																"id": 2777,
																"nodeType": "Block",
																"src": "12979:451:14",
																"statements": [
																	{
																		"assignments": [
																			2753
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 2753,
																				"mutability": "mutable",
																				"name": "success",
																				"nameLocation": "13074:7:14",
																				"nodeType": "VariableDeclaration",
																				"scope": 2777,
																				"src": "13069:12:14",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"typeName": {
																					"id": 2752,
																					"name": "bool",
																					"nodeType": "ElementaryTypeName",
																					"src": "13069:4:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 2761,
																		"initialValue": {
																			"arguments": [
																				{
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 2756,
																						"name": "owner",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 151,
																						"src": "13124:5:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																							"typeString": "function () view returns (address)"
																						}
																					},
																					"id": 2757,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "13124:7:14",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2758,
																					"name": "investor",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2738,
																					"src": "13153:8:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2759,
																					"name": "tokensBought",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2744,
																					"src": "13183:12:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2754,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1709,
																					"src": "13084:5:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$1264",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 2755,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "13090:12:14",
																				"memberName": "transferFrom",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1263,
																				"src": "13084:18:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,address,uint256) external returns (bool)"
																				}
																			},
																			"id": 2760,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13084:129:14",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "13069:144:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2763,
																					"name": "success",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2753,
																					"src": "13239:7:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "546f6b656e207472616e73666572206661696c6564",
																					"id": 2764,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "13248:23:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																						"typeString": "literal_string \"Token transfer failed\""
																					},
																					"value": "Token transfer failed"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																						"typeString": "literal_string \"Token transfer failed\""
																					}
																				],
																				"id": 2762,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "13231:7:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 2765,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13231:41:14",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2766,
																		"nodeType": "ExpressionStatement",
																		"src": "13231:41:14"
																	},
																	{
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 2767,
																					"name": "investors",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1734,
																					"src": "13290:9:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 2769,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "13300:3:14",
																				"memberName": "pop",
																				"nodeType": "MemberAccess",
																				"src": "13290:13:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
																					"typeString": "function (address[] storage pointer)"
																				}
																			},
																			"id": 2770,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13290:15:14",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2771,
																		"nodeType": "ExpressionStatement",
																		"src": "13290:15:14"
																	},
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 2773,
																					"name": "investor",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2738,
																					"src": "13392:8:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2774,
																					"name": "tokensBought",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2744,
																					"src": "13402:12:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2772,
																				"name": "TokenAirdropped",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1786,
																				"src": "13376:15:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256)"
																				}
																			},
																			"id": 2775,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13376:39:14",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2776,
																		"nodeType": "EmitStatement",
																		"src": "13371:44:14"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2781,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2779,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2726,
																	"src": "13447:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2780,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13452:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "13447:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2784,
															"nodeType": "IfStatement",
															"src": "13443:50:14",
															"trueBody": {
																"id": 2783,
																"nodeType": "Block",
																"src": "13455:38:14",
																"statements": [
																	{
																		"id": 2782,
																		"nodeType": "Break",
																		"src": "13473:5:14"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2731,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2726,
														"src": "12691:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 2732,
														"name": "investorsIterated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2707,
														"src": "12696:17:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12691:22:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2786,
												"initializationExpression": {
													"assignments": [
														2726
													],
													"declarations": [
														{
															"constant": false,
															"id": 2726,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "12667:1:14",
															"nodeType": "VariableDeclaration",
															"scope": 2786,
															"src": "12659:9:14",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2725,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12659:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2730,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2729,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2727,
															"name": "investorLength",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2702,
															"src": "12671:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"hexValue": "31",
															"id": 2728,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12688:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "12671:18:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "12659:30:14"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 2735,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": false,
														"src": "12715:3:14",
														"subExpression": {
															"id": 2734,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2726,
															"src": "12715:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2736,
													"nodeType": "ExpressionStatement",
													"src": "12715:3:14"
												},
												"nodeType": "ForStatement",
												"src": "12654:849:14"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2787,
															"name": "investors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1734,
															"src": "13516:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 2788,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13526:6:14",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "13516:16:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2789,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13536:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13516:21:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2796,
												"nodeType": "IfStatement",
												"src": "13512:77:14",
												"trueBody": {
													"id": 2795,
													"nodeType": "Block",
													"src": "13539:50:14",
													"statements": [
														{
															"expression": {
																"id": 2793,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2791,
																	"name": "isTokensAirdropped",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1729,
																	"src": "13553:18:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 2792,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13574:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "13553:25:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2794,
															"nodeType": "ExpressionStatement",
															"src": "13553:25:14"
														}
													]
												}
											}
										]
									},
									"functionSelector": "91152c5c",
									"id": 2798,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2667,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2666,
												"name": "nonReentrant",
												"nameLocations": [
													"12068:12:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 791,
												"src": "12068:12:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "12068:12:14"
										},
										{
											"id": 2669,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2668,
												"name": "onlyOwner",
												"nameLocations": [
													"12089:9:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 135,
												"src": "12089:9:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "12089:9:14"
										},
										{
											"id": 2671,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2670,
												"name": "icoNotFinalized",
												"nameLocations": [
													"12107:15:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1890,
												"src": "12107:15:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "12107:15:14"
										},
										{
											"id": 2673,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2672,
												"name": "freezed",
												"nameLocations": [
													"12131:7:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1900,
												"src": "12131:7:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "12131:7:14"
										}
									],
									"name": "airdropTokens",
									"nameLocation": "12027:13:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2665,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12040:2:14"
									},
									"returnParameters": {
										"id": 2674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12143:0:14"
									},
									"scope": 3093,
									"src": "12018:1577:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2997,
										"nodeType": "Block",
										"src": "13675:2189:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2812,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2808,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "13693:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2809,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "13699:9:14",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "13693:15:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2810,
																	"name": "getLatestSaleEndTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3025,
																	"src": "13711:20:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 2811,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13711:22:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13693:40:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616c65206f6e676f696e67",
															"id": 2813,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13735:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_52e3d128a4ea4439173e3f4b78f0e12548c2c4449a80c4b2fbefb1fd3e6a7665",
																"typeString": "literal_string \"Sale ongoing\""
															},
															"value": "Sale ongoing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_52e3d128a4ea4439173e3f4b78f0e12548c2c4449a80c4b2fbefb1fd3e6a7665",
																"typeString": "literal_string \"Sale ongoing\""
															}
														],
														"id": 2807,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13685:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13685:65:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2815,
												"nodeType": "ExpressionStatement",
												"src": "13685:65:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2819,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2817,
																"name": "totalFundsRaisedUSD",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1717,
																"src": "13768:19:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2818,
																"name": "softCapInUSD",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1711,
																"src": "13790:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13768:34:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536f6674206361702072656163686564",
															"id": 2820,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13804:18:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7c68e13a7a3bf736cdb65f14ebef38f840872b490e156aead879b05f23b99d80",
																"typeString": "literal_string \"Soft cap reached\""
															},
															"value": "Soft cap reached"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7c68e13a7a3bf736cdb65f14ebef38f840872b490e156aead879b05f23b99d80",
																"typeString": "literal_string \"Soft cap reached\""
															}
														],
														"id": 2816,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13760:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13760:63:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2822,
												"nodeType": "ExpressionStatement",
												"src": "13760:63:14"
											},
											{
												"assignments": [
													2824
												],
												"declarations": [
													{
														"constant": false,
														"id": 2824,
														"mutability": "mutable",
														"name": "investorLength",
														"nameLocation": "13842:14:14",
														"nodeType": "VariableDeclaration",
														"scope": 2997,
														"src": "13834:22:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2823,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13834:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2827,
												"initialValue": {
													"expression": {
														"id": 2825,
														"name": "investors",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1734,
														"src": "13859:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 2826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "13869:6:14",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "13859:16:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13834:41:14"
											},
											{
												"assignments": [
													2829
												],
												"declarations": [
													{
														"constant": false,
														"id": 2829,
														"mutability": "mutable",
														"name": "investorsIterated",
														"nameLocation": "13893:17:14",
														"nodeType": "VariableDeclaration",
														"scope": 2997,
														"src": "13885:25:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2828,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13885:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2830,
												"nodeType": "VariableDeclarationStatement",
												"src": "13885:25:14"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2831,
														"name": "investorLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2824,
														"src": "13925:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "3130",
														"id": 2832,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13942:2:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "13925:19:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2845,
													"nodeType": "Block",
													"src": "14016:46:14",
													"statements": [
														{
															"expression": {
																"id": 2843,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2841,
																	"name": "investorsIterated",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2829,
																	"src": "14030:17:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 2842,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14050:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "14030:21:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2844,
															"nodeType": "ExpressionStatement",
															"src": "14030:21:14"
														}
													]
												},
												"id": 2846,
												"nodeType": "IfStatement",
												"src": "13921:141:14",
												"trueBody": {
													"id": 2840,
													"nodeType": "Block",
													"src": "13946:64:14",
													"statements": [
														{
															"expression": {
																"id": 2838,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2834,
																	"name": "investorsIterated",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2829,
																	"src": "13960:17:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2835,
																		"name": "investorLength",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2824,
																		"src": "13980:14:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "3131",
																		"id": 2836,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13997:2:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_11_by_1",
																			"typeString": "int_const 11"
																		},
																		"value": "11"
																	},
																	"src": "13980:19:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13960:39:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2839,
															"nodeType": "ExpressionStatement",
															"src": "13960:39:14"
														}
													]
												}
											},
											{
												"body": {
													"id": 2985,
													"nodeType": "Block",
													"src": "14192:1584:14",
													"statements": [
														{
															"assignments": [
																2860
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2860,
																	"mutability": "mutable",
																	"name": "investor",
																	"nameLocation": "14214:8:14",
																	"nodeType": "VariableDeclaration",
																	"scope": 2985,
																	"src": "14206:16:14",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 2859,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14206:7:14",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2864,
															"initialValue": {
																"baseExpression": {
																	"id": 2861,
																	"name": "investors",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1734,
																	"src": "14225:9:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 2863,
																"indexExpression": {
																	"id": 2862,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2848,
																	"src": "14235:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "14225:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14206:31:14"
														},
														{
															"body": {
																"id": 2972,
																"nodeType": "Block",
																"src": "14342:1324:14",
																"statements": [
																	{
																		"assignments": [
																			2877
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 2877,
																				"mutability": "mutable",
																				"name": "paymentMethod",
																				"nameLocation": "14374:13:14",
																				"nodeType": "VariableDeclaration",
																				"scope": 2972,
																				"src": "14360:27:14",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																					"typeString": "enum ICO.PaymentMethod"
																				},
																				"typeName": {
																					"id": 2876,
																					"nodeType": "UserDefinedTypeName",
																					"pathNode": {
																						"id": 2875,
																						"name": "PaymentMethod",
																						"nameLocations": [
																							"14360:13:14"
																						],
																						"nodeType": "IdentifierPath",
																						"referencedDeclaration": 1706,
																						"src": "14360:13:14"
																					},
																					"referencedDeclaration": 1706,
																					"src": "14360:13:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																						"typeString": "enum ICO.PaymentMethod"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 2881,
																		"initialValue": {
																			"arguments": [
																				{
																					"id": 2879,
																					"name": "j",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2866,
																					"src": "14404:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				],
																				"id": 2878,
																				"name": "PaymentMethod",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1706,
																				"src": "14390:13:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_enum$_PaymentMethod_$1706_$",
																					"typeString": "type(enum ICO.PaymentMethod)"
																				}
																			},
																			"id": 2880,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14390:16:14",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																				"typeString": "enum ICO.PaymentMethod"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "14360:46:14"
																	},
																	{
																		"assignments": [
																			2883
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 2883,
																				"mutability": "mutable",
																				"name": "amount",
																				"nameLocation": "14432:6:14",
																				"nodeType": "VariableDeclaration",
																				"scope": 2972,
																				"src": "14424:14:14",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 2882,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "14424:7:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 2889,
																		"initialValue": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 2884,
																					"name": "investorPayments",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1763,
																					"src": "14441:16:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_PaymentMethod_$1706_$_t_uint256_$_$",
																						"typeString": "mapping(address => mapping(enum ICO.PaymentMethod => uint256))"
																					}
																				},
																				"id": 2886,
																				"indexExpression": {
																					"id": 2885,
																					"name": "investor",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2860,
																					"src": "14458:8:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "14441:26:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_enum$_PaymentMethod_$1706_$_t_uint256_$",
																					"typeString": "mapping(enum ICO.PaymentMethod => uint256)"
																				}
																			},
																			"id": 2888,
																			"indexExpression": {
																				"id": 2887,
																				"name": "paymentMethod",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2877,
																				"src": "14468:13:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																					"typeString": "enum ICO.PaymentMethod"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "14441:41:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "14424:58:14"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2892,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2890,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2883,
																				"src": "14505:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 2891,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "14514:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "14505:10:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 2971,
																		"nodeType": "IfStatement",
																		"src": "14501:1134:14",
																		"trueBody": {
																			"id": 2970,
																			"nodeType": "Block",
																			"src": "14517:1118:14",
																			"statements": [
																				{
																					"expression": {
																						"id": 2899,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"baseExpression": {
																								"baseExpression": {
																									"id": 2893,
																									"name": "investorPayments",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1763,
																									"src": "14539:16:14",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_PaymentMethod_$1706_$_t_uint256_$_$",
																										"typeString": "mapping(address => mapping(enum ICO.PaymentMethod => uint256))"
																									}
																								},
																								"id": 2896,
																								"indexExpression": {
																									"id": 2894,
																									"name": "investor",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2860,
																									"src": "14556:8:14",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "14539:26:14",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_enum$_PaymentMethod_$1706_$_t_uint256_$",
																									"typeString": "mapping(enum ICO.PaymentMethod => uint256)"
																								}
																							},
																							"id": 2897,
																							"indexExpression": {
																								"id": 2895,
																								"name": "paymentMethod",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2877,
																								"src": "14566:13:14",
																								"typeDescriptions": {
																									"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																									"typeString": "enum ICO.PaymentMethod"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"nodeType": "IndexAccess",
																							"src": "14539:41:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"hexValue": "30",
																							"id": 2898,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "14583:1:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "14539:45:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2900,
																					"nodeType": "ExpressionStatement",
																					"src": "14539:45:14"
																				},
																				{
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																							"typeString": "enum ICO.PaymentMethod"
																						},
																						"id": 2904,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 2901,
																							"name": "paymentMethod",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2877,
																							"src": "14610:13:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																								"typeString": "enum ICO.PaymentMethod"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"expression": {
																								"id": 2902,
																								"name": "PaymentMethod",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1706,
																								"src": "14627:13:14",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_enum$_PaymentMethod_$1706_$",
																									"typeString": "type(enum ICO.PaymentMethod)"
																								}
																							},
																							"id": 2903,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "14641:3:14",
																							"memberName": "BNB",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1703,
																							"src": "14627:17:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																								"typeString": "enum ICO.PaymentMethod"
																							}
																						},
																						"src": "14610:34:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"falseBody": {
																						"condition": {
																							"commonType": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							},
																							"id": 2931,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"commonType": {
																									"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																									"typeString": "enum ICO.PaymentMethod"
																								},
																								"id": 2926,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2923,
																									"name": "paymentMethod",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2877,
																									"src": "14901:13:14",
																									"typeDescriptions": {
																										"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																										"typeString": "enum ICO.PaymentMethod"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "==",
																								"rightExpression": {
																									"expression": {
																										"id": 2924,
																										"name": "PaymentMethod",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1706,
																										"src": "14918:13:14",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_enum$_PaymentMethod_$1706_$",
																											"typeString": "type(enum ICO.PaymentMethod)"
																										}
																									},
																									"id": 2925,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"memberLocation": "14932:4:14",
																									"memberName": "USDT",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 1704,
																									"src": "14918:18:14",
																									"typeDescriptions": {
																										"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																										"typeString": "enum ICO.PaymentMethod"
																									}
																								},
																								"src": "14901:35:14",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "||",
																							"rightExpression": {
																								"commonType": {
																									"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																									"typeString": "enum ICO.PaymentMethod"
																								},
																								"id": 2930,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2927,
																									"name": "paymentMethod",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2877,
																									"src": "14964:13:14",
																									"typeDescriptions": {
																										"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																										"typeString": "enum ICO.PaymentMethod"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "==",
																								"rightExpression": {
																									"expression": {
																										"id": 2928,
																										"name": "PaymentMethod",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1706,
																										"src": "14981:13:14",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_enum$_PaymentMethod_$1706_$",
																											"typeString": "type(enum ICO.PaymentMethod)"
																										}
																									},
																									"id": 2929,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"memberLocation": "14995:4:14",
																									"memberName": "USDC",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 1705,
																									"src": "14981:18:14",
																									"typeDescriptions": {
																										"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																										"typeString": "enum ICO.PaymentMethod"
																									}
																								},
																								"src": "14964:35:14",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								}
																							},
																							"src": "14901:98:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						"falseBody": {
																							"id": 2961,
																							"nodeType": "Block",
																							"src": "15425:96:14",
																							"statements": [
																								{
																									"expression": {
																										"arguments": [
																											{
																												"hexValue": "556e737570706f72746564207061796d656e74206d6574686f6420666f7220726566756e64",
																												"id": 2958,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"kind": "string",
																												"lValueRequested": false,
																												"nodeType": "Literal",
																												"src": "15458:39:14",
																												"typeDescriptions": {
																													"typeIdentifier": "t_stringliteral_e1a05a85d6c11679f33a730fbeebefa1f4b9de0998aad7aecca4e9ec70fa59da",
																													"typeString": "literal_string \"Unsupported payment method for refund\""
																												},
																												"value": "Unsupported payment method for refund"
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_stringliteral_e1a05a85d6c11679f33a730fbeebefa1f4b9de0998aad7aecca4e9ec70fa59da",
																													"typeString": "literal_string \"Unsupported payment method for refund\""
																												}
																											],
																											"id": 2957,
																											"name": "revert",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [
																												4294967277,
																												4294967277
																											],
																											"referencedDeclaration": 4294967277,
																											"src": "15451:6:14",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																												"typeString": "function (string memory) pure"
																											}
																										},
																										"id": 2959,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "functionCall",
																										"lValueRequested": false,
																										"nameLocations": [],
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "15451:47:14",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_tuple$__$",
																											"typeString": "tuple()"
																										}
																									},
																									"id": 2960,
																									"nodeType": "ExpressionStatement",
																									"src": "15451:47:14"
																								}
																							]
																						},
																						"id": 2962,
																						"nodeType": "IfStatement",
																						"src": "14872:649:14",
																						"trueBody": {
																							"id": 2956,
																							"nodeType": "Block",
																							"src": "15022:397:14",
																							"statements": [
																								{
																									"assignments": [
																										2934
																									],
																									"declarations": [
																										{
																											"constant": false,
																											"id": 2934,
																											"mutability": "mutable",
																											"name": "stablecoin",
																											"nameLocation": "15055:10:14",
																											"nodeType": "VariableDeclaration",
																											"scope": 2956,
																											"src": "15048:17:14",
																											"stateVariable": false,
																											"storageLocation": "default",
																											"typeDescriptions": {
																												"typeIdentifier": "t_contract$_IERC20_$1264",
																												"typeString": "contract IERC20"
																											},
																											"typeName": {
																												"id": 2933,
																												"nodeType": "UserDefinedTypeName",
																												"pathNode": {
																													"id": 2932,
																													"name": "IERC20",
																													"nameLocations": [
																														"15048:6:14"
																													],
																													"nodeType": "IdentifierPath",
																													"referencedDeclaration": 1264,
																													"src": "15048:6:14"
																												},
																												"referencedDeclaration": 1264,
																												"src": "15048:6:14",
																												"typeDescriptions": {
																													"typeIdentifier": "t_contract$_IERC20_$1264",
																													"typeString": "contract IERC20"
																												}
																											},
																											"visibility": "internal"
																										}
																									],
																									"id": 2946,
																									"initialValue": {
																										"condition": {
																											"commonType": {
																												"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																												"typeString": "enum ICO.PaymentMethod"
																											},
																											"id": 2938,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"leftExpression": {
																												"id": 2935,
																												"name": "paymentMethod",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 2877,
																												"src": "15068:13:14",
																												"typeDescriptions": {
																													"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																													"typeString": "enum ICO.PaymentMethod"
																												}
																											},
																											"nodeType": "BinaryOperation",
																											"operator": "==",
																											"rightExpression": {
																												"expression": {
																													"id": 2936,
																													"name": "PaymentMethod",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1706,
																													"src": "15085:13:14",
																													"typeDescriptions": {
																														"typeIdentifier": "t_type$_t_enum$_PaymentMethod_$1706_$",
																														"typeString": "type(enum ICO.PaymentMethod)"
																													}
																												},
																												"id": 2937,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"lValueRequested": false,
																												"memberLocation": "15099:4:14",
																												"memberName": "USDT",
																												"nodeType": "MemberAccess",
																												"referencedDeclaration": 1704,
																												"src": "15085:18:14",
																												"typeDescriptions": {
																													"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																													"typeString": "enum ICO.PaymentMethod"
																												}
																											},
																											"src": "15068:35:14",
																											"typeDescriptions": {
																												"typeIdentifier": "t_bool",
																												"typeString": "bool"
																											}
																										},
																										"falseExpression": {
																											"arguments": [
																												{
																													"id": 2943,
																													"name": "usdc",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1738,
																													"src": "15184:4:14",
																													"typeDescriptions": {
																														"typeIdentifier": "t_address",
																														"typeString": "address"
																													}
																												}
																											],
																											"expression": {
																												"argumentTypes": [
																													{
																														"typeIdentifier": "t_address",
																														"typeString": "address"
																													}
																												],
																												"id": 2942,
																												"name": "IERC20",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1264,
																												"src": "15177:6:14",
																												"typeDescriptions": {
																													"typeIdentifier": "t_type$_t_contract$_IERC20_$1264_$",
																													"typeString": "type(contract IERC20)"
																												}
																											},
																											"id": 2944,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"kind": "typeConversion",
																											"lValueRequested": false,
																											"nameLocations": [],
																											"names": [],
																											"nodeType": "FunctionCall",
																											"src": "15177:12:14",
																											"tryCall": false,
																											"typeDescriptions": {
																												"typeIdentifier": "t_contract$_IERC20_$1264",
																												"typeString": "contract IERC20"
																											}
																										},
																										"id": 2945,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "Conditional",
																										"src": "15068:121:14",
																										"trueExpression": {
																											"arguments": [
																												{
																													"id": 2940,
																													"name": "usdt",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1736,
																													"src": "15141:4:14",
																													"typeDescriptions": {
																														"typeIdentifier": "t_address",
																														"typeString": "address"
																													}
																												}
																											],
																											"expression": {
																												"argumentTypes": [
																													{
																														"typeIdentifier": "t_address",
																														"typeString": "address"
																													}
																												],
																												"id": 2939,
																												"name": "IERC20",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1264,
																												"src": "15134:6:14",
																												"typeDescriptions": {
																													"typeIdentifier": "t_type$_t_contract$_IERC20_$1264_$",
																													"typeString": "type(contract IERC20)"
																												}
																											},
																											"id": 2941,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"kind": "typeConversion",
																											"lValueRequested": false,
																											"nameLocations": [],
																											"names": [],
																											"nodeType": "FunctionCall",
																											"src": "15134:12:14",
																											"tryCall": false,
																											"typeDescriptions": {
																												"typeIdentifier": "t_contract$_IERC20_$1264",
																												"typeString": "contract IERC20"
																											}
																										},
																										"typeDescriptions": {
																											"typeIdentifier": "t_contract$_IERC20_$1264",
																											"typeString": "contract IERC20"
																										}
																									},
																									"nodeType": "VariableDeclarationStatement",
																									"src": "15048:141:14"
																								},
																								{
																									"expression": {
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"id": 2950,
																														"name": "investor",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 2860,
																														"src": "15272:8:14",
																														"typeDescriptions": {
																															"typeIdentifier": "t_address",
																															"typeString": "address"
																														}
																													},
																													{
																														"id": 2951,
																														"name": "amount",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 2883,
																														"src": "15282:6:14",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													}
																												],
																												"expression": {
																													"argumentTypes": [
																														{
																															"typeIdentifier": "t_address",
																															"typeString": "address"
																														},
																														{
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													],
																													"expression": {
																														"id": 2948,
																														"name": "stablecoin",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 2934,
																														"src": "15252:10:14",
																														"typeDescriptions": {
																															"typeIdentifier": "t_contract$_IERC20_$1264",
																															"typeString": "contract IERC20"
																														}
																													},
																													"id": 2949,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": false,
																													"lValueRequested": false,
																													"memberLocation": "15263:8:14",
																													"memberName": "transfer",
																													"nodeType": "MemberAccess",
																													"referencedDeclaration": 1231,
																													"src": "15252:19:14",
																													"typeDescriptions": {
																														"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																														"typeString": "function (address,uint256) external returns (bool)"
																													}
																												},
																												"id": 2952,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"kind": "functionCall",
																												"lValueRequested": false,
																												"nameLocations": [],
																												"names": [],
																												"nodeType": "FunctionCall",
																												"src": "15252:37:14",
																												"tryCall": false,
																												"typeDescriptions": {
																													"typeIdentifier": "t_bool",
																													"typeString": "bool"
																												}
																											},
																											{
																												"hexValue": "537461626c65636f696e20726566756e64206661696c6564",
																												"id": 2953,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"kind": "string",
																												"lValueRequested": false,
																												"nodeType": "Literal",
																												"src": "15319:26:14",
																												"typeDescriptions": {
																													"typeIdentifier": "t_stringliteral_4c76e179fd3981278de294ff97a7ccb030d7577d0e7f55ac3f87e02e3abaa726",
																													"typeString": "literal_string \"Stablecoin refund failed\""
																												},
																												"value": "Stablecoin refund failed"
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_bool",
																													"typeString": "bool"
																												},
																												{
																													"typeIdentifier": "t_stringliteral_4c76e179fd3981278de294ff97a7ccb030d7577d0e7f55ac3f87e02e3abaa726",
																													"typeString": "literal_string \"Stablecoin refund failed\""
																												}
																											],
																											"id": 2947,
																											"name": "require",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [
																												4294967278,
																												4294967278,
																												4294967278
																											],
																											"referencedDeclaration": 4294967278,
																											"src": "15215:7:14",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																												"typeString": "function (bool,string memory) pure"
																											}
																										},
																										"id": 2954,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "functionCall",
																										"lValueRequested": false,
																										"nameLocations": [],
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "15215:156:14",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_tuple$__$",
																											"typeString": "tuple()"
																										}
																									},
																									"id": 2955,
																									"nodeType": "ExpressionStatement",
																									"src": "15215:156:14"
																								}
																							]
																						}
																					},
																					"id": 2963,
																					"nodeType": "IfStatement",
																					"src": "14606:915:14",
																					"trueBody": {
																						"id": 2922,
																						"nodeType": "Block",
																						"src": "14646:220:14",
																						"statements": [
																							{
																								"assignments": [
																									2906,
																									null
																								],
																								"declarations": [
																									{
																										"constant": false,
																										"id": 2906,
																										"mutability": "mutable",
																										"name": "sent",
																										"nameLocation": "14678:4:14",
																										"nodeType": "VariableDeclaration",
																										"scope": 2922,
																										"src": "14673:9:14",
																										"stateVariable": false,
																										"storageLocation": "default",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bool",
																											"typeString": "bool"
																										},
																										"typeName": {
																											"id": 2905,
																											"name": "bool",
																											"nodeType": "ElementaryTypeName",
																											"src": "14673:4:14",
																											"typeDescriptions": {
																												"typeIdentifier": "t_bool",
																												"typeString": "bool"
																											}
																										},
																										"visibility": "internal"
																									},
																									null
																								],
																								"id": 2916,
																								"initialValue": {
																									"arguments": [
																										{
																											"hexValue": "",
																											"id": 2914,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "string",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "14755:2:14",
																											"typeDescriptions": {
																												"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																												"typeString": "literal_string \"\""
																											},
																											"value": ""
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																												"typeString": "literal_string \"\""
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																													"typeString": "literal_string \"\""
																												}
																											],
																											"expression": {
																												"arguments": [
																													{
																														"id": 2909,
																														"name": "investor",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 2860,
																														"src": "14696:8:14",
																														"typeDescriptions": {
																															"typeIdentifier": "t_address",
																															"typeString": "address"
																														}
																													}
																												],
																												"expression": {
																													"argumentTypes": [
																														{
																															"typeIdentifier": "t_address",
																															"typeString": "address"
																														}
																													],
																													"id": 2908,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": true,
																													"lValueRequested": false,
																													"nodeType": "ElementaryTypeNameExpression",
																													"src": "14688:8:14",
																													"typeDescriptions": {
																														"typeIdentifier": "t_type$_t_address_payable_$",
																														"typeString": "type(address payable)"
																													},
																													"typeName": {
																														"id": 2907,
																														"name": "address",
																														"nodeType": "ElementaryTypeName",
																														"src": "14688:8:14",
																														"stateMutability": "payable",
																														"typeDescriptions": {}
																													}
																												},
																												"id": 2910,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"kind": "typeConversion",
																												"lValueRequested": false,
																												"nameLocations": [],
																												"names": [],
																												"nodeType": "FunctionCall",
																												"src": "14688:17:14",
																												"tryCall": false,
																												"typeDescriptions": {
																													"typeIdentifier": "t_address_payable",
																													"typeString": "address payable"
																												}
																											},
																											"id": 2911,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberLocation": "14706:4:14",
																											"memberName": "call",
																											"nodeType": "MemberAccess",
																											"src": "14688:22:14",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																												"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																											}
																										},
																										"id": 2913,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"names": [
																											"value"
																										],
																										"nodeType": "FunctionCallOptions",
																										"options": [
																											{
																												"id": 2912,
																												"name": "amount",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 2883,
																												"src": "14718:6:14",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											}
																										],
																										"src": "14688:37:14",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																											"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																										}
																									},
																									"id": 2915,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"nameLocations": [],
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "14688:95:14",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																										"typeString": "tuple(bool,bytes memory)"
																									}
																								},
																								"nodeType": "VariableDeclarationStatement",
																								"src": "14672:111:14"
																							},
																							{
																								"expression": {
																									"arguments": [
																										{
																											"id": 2918,
																											"name": "sent",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 2906,
																											"src": "14817:4:14",
																											"typeDescriptions": {
																												"typeIdentifier": "t_bool",
																												"typeString": "bool"
																											}
																										},
																										{
																											"hexValue": "424e4220726566756e64206661696c6564",
																											"id": 2919,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "string",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "14823:19:14",
																											"typeDescriptions": {
																												"typeIdentifier": "t_stringliteral_9061bb5d1762fde4c9d1190b8ce0bd989de0debb196be3c053155f36b52a6ce0",
																												"typeString": "literal_string \"BNB refund failed\""
																											},
																											"value": "BNB refund failed"
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_bool",
																												"typeString": "bool"
																											},
																											{
																												"typeIdentifier": "t_stringliteral_9061bb5d1762fde4c9d1190b8ce0bd989de0debb196be3c053155f36b52a6ce0",
																												"typeString": "literal_string \"BNB refund failed\""
																											}
																										],
																										"id": 2917,
																										"name": "require",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [
																											4294967278,
																											4294967278,
																											4294967278
																										],
																										"referencedDeclaration": 4294967278,
																										"src": "14809:7:14",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																											"typeString": "function (bool,string memory) pure"
																										}
																									},
																									"id": 2920,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"nameLocations": [],
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "14809:34:14",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_tuple$__$",
																										"typeString": "tuple()"
																									}
																								},
																								"id": 2921,
																								"nodeType": "ExpressionStatement",
																								"src": "14809:34:14"
																							}
																						]
																					}
																				},
																				{
																					"eventCall": {
																						"arguments": [
																							{
																								"id": 2965,
																								"name": "investor",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2860,
																								"src": "15584:8:14",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 2966,
																								"name": "amount",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2883,
																								"src": "15594:6:14",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 2967,
																								"name": "paymentMethod",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2877,
																								"src": "15602:13:14",
																								"typeDescriptions": {
																									"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																									"typeString": "enum ICO.PaymentMethod"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																									"typeString": "enum ICO.PaymentMethod"
																								}
																							],
																							"id": 2964,
																							"name": "RefundInitiated",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1780,
																							"src": "15568:15:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_enum$_PaymentMethod_$1706_$returns$__$",
																								"typeString": "function (address,uint256,enum ICO.PaymentMethod)"
																							}
																						},
																						"id": 2968,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "15568:48:14",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 2969,
																					"nodeType": "EmitStatement",
																					"src": "15563:53:14"
																				}
																			]
																		}
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 2871,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2869,
																	"name": "j",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2866,
																	"src": "14330:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "33",
																	"id": 2870,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14334:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																"src": "14330:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2973,
															"initializationExpression": {
																"assignments": [
																	2866
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 2866,
																		"mutability": "mutable",
																		"name": "j",
																		"nameLocation": "14323:1:14",
																		"nodeType": "VariableDeclaration",
																		"scope": 2973,
																		"src": "14317:7:14",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		"typeName": {
																			"id": 2865,
																			"name": "uint8",
																			"nodeType": "ElementaryTypeName",
																			"src": "14317:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 2868,
																"initialValue": {
																	"hexValue": "30",
																	"id": 2867,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14327:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "14317:11:14"
															},
															"isSimpleCounterLoop": true,
															"loopExpression": {
																"expression": {
																	"id": 2873,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "14337:3:14",
																	"subExpression": {
																		"id": 2872,
																		"name": "j",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2866,
																		"src": "14337:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"id": 2874,
																"nodeType": "ExpressionStatement",
																"src": "14337:3:14"
															},
															"nodeType": "ForStatement",
															"src": "14312:1354:14"
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 2974,
																		"name": "investors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1734,
																		"src": "15679:9:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 2976,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "15689:3:14",
																	"memberName": "pop",
																	"nodeType": "MemberAccess",
																	"src": "15679:13:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
																		"typeString": "function (address[] storage pointer)"
																	}
																},
																"id": 2977,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15679:15:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2978,
															"nodeType": "ExpressionStatement",
															"src": "15679:15:14"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2981,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2979,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2848,
																	"src": "15712:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2980,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15717:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "15712:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2984,
															"nodeType": "IfStatement",
															"src": "15708:58:14",
															"trueBody": {
																"id": 2983,
																"nodeType": "Block",
																"src": "15720:46:14",
																"statements": [
																	{
																		"id": 2982,
																		"nodeType": "Break",
																		"src": "15742:5:14"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2853,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2848,
														"src": "14163:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 2854,
														"name": "investorsIterated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2829,
														"src": "14168:17:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14163:22:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2986,
												"initializationExpression": {
													"assignments": [
														2848
													],
													"declarations": [
														{
															"constant": false,
															"id": 2848,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "14139:1:14",
															"nodeType": "VariableDeclaration",
															"scope": 2986,
															"src": "14131:9:14",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2847,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "14131:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2852,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2851,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2849,
															"name": "investorLength",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2824,
															"src": "14143:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"hexValue": "31",
															"id": 2850,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14160:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "14143:18:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "14131:30:14"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 2857,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": false,
														"src": "14187:3:14",
														"subExpression": {
															"id": 2856,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2848,
															"src": "14187:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2858,
													"nodeType": "ExpressionStatement",
													"src": "14187:3:14"
												},
												"nodeType": "ForStatement",
												"src": "14126:1650:14"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2987,
															"name": "investors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1734,
															"src": "15789:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 2988,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15799:6:14",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "15789:16:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2989,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15809:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "15789:21:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2996,
												"nodeType": "IfStatement",
												"src": "15785:73:14",
												"trueBody": {
													"id": 2995,
													"nodeType": "Block",
													"src": "15812:46:14",
													"statements": [
														{
															"expression": {
																"id": 2993,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2991,
																	"name": "isICOFinalized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1727,
																	"src": "15826:14:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 2992,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15843:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "15826:21:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2994,
															"nodeType": "ExpressionStatement",
															"src": "15826:21:14"
														}
													]
												}
											}
										]
									},
									"functionSelector": "7fb12001",
									"id": 2998,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2801,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2800,
												"name": "nonReentrant",
												"nameLocations": [
													"13636:12:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 791,
												"src": "13636:12:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "13636:12:14"
										},
										{
											"id": 2803,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2802,
												"name": "onlyOwner",
												"nameLocations": [
													"13649:9:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 135,
												"src": "13649:9:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "13649:9:14"
										},
										{
											"id": 2805,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2804,
												"name": "icoNotFinalized",
												"nameLocations": [
													"13659:15:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1890,
												"src": "13659:15:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "13659:15:14"
										}
									],
									"name": "initiateRefund",
									"nameLocation": "13610:14:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2799,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13624:2:14"
									},
									"returnParameters": {
										"id": 2806,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13675:0:14"
									},
									"scope": 3093,
									"src": "13601:2263:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3005,
										"nodeType": "Block",
										"src": "15897:59:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "44697265637420424e42207472616e7366657273206e6f7420616c6c6f776564",
															"id": 3002,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15914:34:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_17550aa7e27a420bf678ad118b2de30f8f99747e4dbc150a39e97cdeb8fb8119",
																"typeString": "literal_string \"Direct BNB transfers not allowed\""
															},
															"value": "Direct BNB transfers not allowed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_17550aa7e27a420bf678ad118b2de30f8f99747e4dbc150a39e97cdeb8fb8119",
																"typeString": "literal_string \"Direct BNB transfers not allowed\""
															}
														],
														"id": 3001,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "15907:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory) pure"
														}
													},
													"id": 3003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15907:42:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3004,
												"nodeType": "ExpressionStatement",
												"src": "15907:42:14"
											}
										]
									},
									"id": 3006,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2999,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15877:2:14"
									},
									"returnParameters": {
										"id": 3000,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15897:0:14"
									},
									"scope": 3093,
									"src": "15870:86:14",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3013,
										"nodeType": "Block",
										"src": "16020:33:14",
										"statements": [
											{
												"expression": {
													"id": 3011,
													"name": "saleCount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1715,
													"src": "16037:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3010,
												"id": 3012,
												"nodeType": "Return",
												"src": "16030:16:14"
											}
										]
									},
									"functionSelector": "212ea247",
									"id": 3014,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentSaleId",
									"nameLocation": "15971:16:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3007,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15987:2:14"
									},
									"returnParameters": {
										"id": 3010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3009,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3014,
												"src": "16011:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3008,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16011:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16010:9:14"
									},
									"scope": 3093,
									"src": "15962:91:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3024,
										"nodeType": "Block",
										"src": "16123:48:14",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 3019,
															"name": "sales",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1743,
															"src": "16140:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Sale_$1702_storage_$",
																"typeString": "mapping(uint256 => struct ICO.Sale storage ref)"
															}
														},
														"id": 3021,
														"indexExpression": {
															"id": 3020,
															"name": "saleCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1715,
															"src": "16146:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "16140:16:14",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Sale_$1702_storage",
															"typeString": "struct ICO.Sale storage ref"
														}
													},
													"id": 3022,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "16157:7:14",
													"memberName": "endTime",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1695,
													"src": "16140:24:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3018,
												"id": 3023,
												"nodeType": "Return",
												"src": "16133:31:14"
											}
										]
									},
									"id": 3025,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLatestSaleEndTime",
									"nameLocation": "16068:20:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3015,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16088:2:14"
									},
									"returnParameters": {
										"id": 3018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3017,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3025,
												"src": "16114:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3016,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16114:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16113:9:14"
									},
									"scope": 3093,
									"src": "16059:112:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3047,
										"nodeType": "Block",
										"src": "16302:99:14",
										"statements": [
											{
												"assignments": [
													3036
												],
												"declarations": [
													{
														"constant": false,
														"id": 3036,
														"mutability": "mutable",
														"name": "sale",
														"nameLocation": "16324:4:14",
														"nodeType": "VariableDeclaration",
														"scope": 3047,
														"src": "16312:16:14",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Sale_$1702_memory_ptr",
															"typeString": "struct ICO.Sale"
														},
														"typeName": {
															"id": 3035,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3034,
																"name": "Sale",
																"nameLocations": [
																	"16312:4:14"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1702,
																"src": "16312:4:14"
															},
															"referencedDeclaration": 1702,
															"src": "16312:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Sale_$1702_storage_ptr",
																"typeString": "struct ICO.Sale"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3040,
												"initialValue": {
													"baseExpression": {
														"id": 3037,
														"name": "sales",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1743,
														"src": "16331:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Sale_$1702_storage_$",
															"typeString": "mapping(uint256 => struct ICO.Sale storage ref)"
														}
													},
													"id": 3039,
													"indexExpression": {
														"id": 3038,
														"name": "saleCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1715,
														"src": "16337:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "16331:16:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Sale_$1702_storage",
														"typeString": "struct ICO.Sale storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16312:35:14"
											},
											{
												"expression": {
													"components": [
														{
															"expression": {
																"id": 3041,
																"name": "sale",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3036,
																"src": "16365:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Sale_$1702_memory_ptr",
																	"typeString": "struct ICO.Sale memory"
																}
															},
															"id": 3042,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "16370:9:14",
															"memberName": "startTime",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1693,
															"src": "16365:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 3043,
																"name": "sale",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3036,
																"src": "16381:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Sale_$1702_memory_ptr",
																	"typeString": "struct ICO.Sale memory"
																}
															},
															"id": 3044,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "16386:7:14",
															"memberName": "endTime",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1695,
															"src": "16381:12:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 3045,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "16364:30:14",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 3033,
												"id": 3046,
												"nodeType": "Return",
												"src": "16357:37:14"
											}
										]
									},
									"functionSelector": "c211e1f9",
									"id": 3048,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSaleStartEndTime",
									"nameLocation": "16186:19:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3027,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3048,
												"src": "16206:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3026,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16206:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16205:9:14"
									},
									"returnParameters": {
										"id": 3033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3030,
												"mutability": "mutable",
												"name": "_startTime",
												"nameLocation": "16268:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 3048,
												"src": "16260:18:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3029,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16260:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3032,
												"mutability": "mutable",
												"name": "_endTime",
												"nameLocation": "16288:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 3048,
												"src": "16280:16:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3031,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16280:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16259:38:14"
									},
									"scope": 3093,
									"src": "16177:224:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3058,
										"nodeType": "Block",
										"src": "16463:61:14",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3055,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3053,
																"name": "totalFundsRaisedUSD",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1717,
																"src": "16481:19:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 3054,
																"name": "softCapInUSD",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1711,
																"src": "16504:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16481:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 3056,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "16480:37:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3052,
												"id": 3057,
												"nodeType": "Return",
												"src": "16473:44:14"
											}
										]
									},
									"functionSelector": "06e4d36f",
									"id": 3059,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSoftCapReached",
									"nameLocation": "16416:17:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3049,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16433:2:14"
									},
									"returnParameters": {
										"id": 3052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3051,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3059,
												"src": "16457:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3050,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16457:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16456:6:14"
									},
									"scope": 3093,
									"src": "16407:117:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3069,
										"nodeType": "Block",
										"src": "16586:61:14",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3066,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3064,
																"name": "totalFundsRaisedUSD",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1717,
																"src": "16604:19:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 3065,
																"name": "hardCapInUSD",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1713,
																"src": "16627:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16604:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 3067,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "16603:37:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3063,
												"id": 3068,
												"nodeType": "Return",
												"src": "16596:44:14"
											}
										]
									},
									"functionSelector": "91d8730a",
									"id": 3070,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getHardCapReached",
									"nameLocation": "16539:17:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3060,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16556:2:14"
									},
									"returnParameters": {
										"id": 3063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3062,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3070,
												"src": "16580:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3061,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16580:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16579:6:14"
									},
									"scope": 3093,
									"src": "16530:117:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3082,
										"nodeType": "Block",
										"src": "16725:79:14",
										"statements": [
											{
												"expression": {
													"id": 3078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3075,
														"name": "investorCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3073,
														"src": "16735:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 3076,
															"name": "investors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1734,
															"src": "16751:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 3077,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "16761:6:14",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "16751:16:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16735:32:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3079,
												"nodeType": "ExpressionStatement",
												"src": "16735:32:14"
											},
											{
												"expression": {
													"id": 3080,
													"name": "investorCount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3073,
													"src": "16784:13:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3074,
												"id": 3081,
												"nodeType": "Return",
												"src": "16777:20:14"
											}
										]
									},
									"functionSelector": "960524e3",
									"id": 3083,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getInvestorCount",
									"nameLocation": "16662:16:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3071,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16678:2:14"
									},
									"returnParameters": {
										"id": 3074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3073,
												"mutability": "mutable",
												"name": "investorCount",
												"nameLocation": "16710:13:14",
												"nodeType": "VariableDeclaration",
												"scope": 3083,
												"src": "16702:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16702:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16701:23:14"
									},
									"scope": 3093,
									"src": "16653:151:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										630
									],
									"body": {
										"id": 3091,
										"nodeType": "Block",
										"src": "16892:2:14",
										"statements": []
									},
									"id": 3092,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3089,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3088,
												"name": "onlyOwner",
												"nameLocations": [
													"16882:9:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 135,
												"src": "16882:9:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "16882:9:14"
										}
									],
									"name": "_authorizeUpgrade",
									"nameLocation": "16819:17:14",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3087,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "16873:8:14"
									},
									"parameters": {
										"id": 3086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3085,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "16845:17:14",
												"nodeType": "VariableDeclaration",
												"scope": 3092,
												"src": "16837:25:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16837:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16836:27:14"
									},
									"returnParameters": {
										"id": 3090,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16892:0:14"
									},
									"scope": 3093,
									"src": "16810:84:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3094,
							"src": "429:16467:14",
							"usedErrors": [
								76,
								81,
								257,
								260,
								521,
								526,
								753,
								902,
								915,
								1274,
								1536
							],
							"usedEvents": [
								87,
								265,
								859,
								1767,
								1771,
								1780,
								1786,
								1801,
								1811
							]
						}
					],
					"src": "32:16865:14"
				},
				"id": 14
			}
		}
	}
}