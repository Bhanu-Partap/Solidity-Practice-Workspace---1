{
	"id": "ed1f7226f833df55be312df317c6ef5f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"ICO/ICOProxy.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.28;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\nimport \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\";\n\ncontract ICO is ReentrancyGuardUpgradeable ,OwnableUpgradeable, UUPSUpgradeable {\n    // Chainlink Price Feeds\n    AggregatorV3Interface private priceFeedBNB;\n    AggregatorV3Interface private priceFeedUSDT;\n    AggregatorV3Interface private priceFeedUSDC;\n\n    struct Sale {\n        uint256 startTime;\n        uint256 endTime;\n        uint256 tokenPriceUSD;\n        uint256 tokensSold;\n        bool isFinalized;\n    }\n\n    enum PaymentMethod {\n        BNB,\n        USDT,\n        USDC\n    }\n\n    // State variables\n    IERC20 public token;\n    uint256 public softCapInUSD;\n    uint256 public hardCapInUSD;\n    uint256 public saleCount;\n    uint256 public totalFundsRaisedUSD;\n    uint256 public totalTokensSold;\n    uint256 constant PRECISION_10 = 1e10;\n    uint256 constant PRECISION_18 = 1e18;\n    bool public isICOFinalized ;\n    bool public isTokensAirdropped;\n    bool public isFreezed ;\n\n    address[] public investors;\n    address public usdt;\n    address public usdc;\n\n    // Mappings\n    mapping(uint256 => Sale) public sales;\n    mapping(address => uint256) public contributionsInUSD;\n    mapping(address => uint256) public tokensBoughtByInvestor;\n    mapping(address => PaymentMethod) private paymentMethodForInvestor;\n    mapping(address => mapping(PaymentMethod => uint256))private investorPayments;\n\n    // Events\n    event ICOFinalized(uint256 indexed totalTokensSold);\n    event ImmediateFinalization(uint256 indexed saleId);\n    event RefundInitiated(\n        address indexed investor,\n        uint256 amount,\n        PaymentMethod paymentMethod\n    );\n    event TokenAirdropped(address indexed investor, uint256 airdroppedAmount);\n    event TokensPurchased(\n        address indexed buyer,\n        uint256 indexed saleId,\n        uint256 tokenPurchaseAmount,\n        uint256 tokenPriceUSD,\n        uint256 amountPaid,\n        PaymentMethod paymentMethod\n    );\n    event NewSaleCreated(\n        uint256 indexed saleId,\n        uint256 startTime,\n        uint256 endTime,\n        uint256 tokenPriceUSD\n    );\n\n    function initialize(\n        IERC20 _token,\n        address _usdt,\n        address _usdc,\n        uint256 _softCapInUSD,\n        uint256 _hardCapInUSD,\n        address _priceFeedBNB,\n        address _priceFeedUSDT,\n        address _priceFeedUSDC\n    ) public initializer {\n        __Ownable_init(msg.sender);\n        __UUPSUpgradeable_init(); \n        token = _token;\n        softCapInUSD = _softCapInUSD;\n        hardCapInUSD = _hardCapInUSD;\n        usdt = _usdt;\n        usdc = _usdc;\n        priceFeedBNB = AggregatorV3Interface(_priceFeedBNB);\n        priceFeedUSDT = AggregatorV3Interface(_priceFeedUSDT);\n        priceFeedUSDC = AggregatorV3Interface(_priceFeedUSDC);\n    }\n\n    modifier icoNotFinalized() {\n        require(!isICOFinalized, \"ICO already finalized\");\n        _;\n    }\n\n    modifier freezed() {\n        require(!isFreezed, \"freezed\");\n        _;\n    }\n\n    function freeze() external onlyOwner freezed {\n        // require(!isFreezed ,\"Already Freezed\");\n        isFreezed = true;\n    }\n\n    function unFreeze() external onlyOwner {\n        require(isFreezed ,\"Already UnFreezed\");\n        isFreezed = false;\n    }\n\n    function _getPriceFeed(PaymentMethod paymentMethod)\n        public\n        view\n        returns (int256)\n    {\n        if (paymentMethod == PaymentMethod.BNB) {\n            (, int256 price, , , ) = priceFeedBNB.latestRoundData();\n            return price;\n        } else if (paymentMethod == PaymentMethod.USDT) {\n            (, int256 price, , , ) = priceFeedUSDT.latestRoundData();\n            return price;\n        } else if (paymentMethod == PaymentMethod.USDC) {\n            (, int256 price, , , ) = priceFeedUSDC.latestRoundData();\n            return price;\n        } else {\n            revert(\"Unsupported payment method\");\n        }\n    }\n\n    function precision_mul_10(uint val) public pure returns(uint){\n        return  val * 1e10;\n    }\n\n    function precision_mul_18(uint val) public pure returns(uint){\n        return  val * 1e18;\n    }\n    function precision_div_10(uint val) public pure returns(uint){\n        return  val / 1e10;\n    }\n    function precision_div_18(uint val) public pure returns(uint){\n        return  val / 1e18;\n    }\n\n    function createSale(\n        uint256 _startTime,\n        uint256 _endTime,\n        uint256 _tokenPriceUSD\n    ) external nonReentrant onlyOwner icoNotFinalized freezed {\n        require(\n           _startTime > block.timestamp && _endTime > _startTime && block.timestamp > getLatestSaleEndTime(),\n            \"Invalid start time range\"\n        );\n        saleCount = saleCount +1;\n        Sale storage sale = sales[saleCount];\n            sale.startTime = _startTime;\n            sale.endTime = _endTime;\n            sale.tokenPriceUSD = _tokenPriceUSD;\n            sale.tokensSold = 0;\n            sale.isFinalized = false;\n        emit NewSaleCreated(saleCount, _startTime, _endTime, _tokenPriceUSD);\n    }\n\n    function calculateTokenAmount(\n        PaymentMethod paymentMethod,\n        uint256 paymentAmount\n    ) public view returns (uint256) {\n        uint256 price = precision_mul_10(uint(_getPriceFeed(paymentMethod))) ;\n        require(price != 0, \"Invalid price feed\");\n        uint256 currentSaleId = getCurrentSaleId();\n        Sale storage sale = sales[currentSaleId];\n\n        uint256 tokenPriceInUSD = sale.tokenPriceUSD; // Token price in (18 decimals)\n\n        uint256 paymentAmountInUSD;\n\n        if (paymentMethod == PaymentMethod.BNB) {\n            paymentAmountInUSD =\n                precision_div_18(uint256(price) * paymentAmount);\n        } else if (\n            paymentMethod == PaymentMethod.USDC ||\n            paymentMethod == PaymentMethod.USDT\n        ) {\n            uint256 stablecoinDecimals = 6;\n            uint256 normalizedAmount = paymentAmount *\n                (10**(18 - stablecoinDecimals));\n            paymentAmountInUSD =\n                precision_div_18(uint256(price) * normalizedAmount);\n        } else {\n            revert(\"Unsupported payment method\");\n        }\n\n        uint256 tokenAmount = precision_mul_18(paymentAmountInUSD) /\n            tokenPriceInUSD;\n        return tokenAmount;\n    }\n\n    function calculatePaymentAmount(\n        PaymentMethod paymentMethod,\n        uint256 tokenAmount\n    ) external view returns (uint256) {\n        require(tokenAmount != 0, \"Amount must be positive\");\n\n        uint256 price = precision_mul_10(uint(_getPriceFeed(paymentMethod))); \n        require(price != 0, \"Invalid price feed\");\n\n        uint256 currentSaleId = getCurrentSaleId();\n        require(currentSaleId != 0, \"No active sale\");\n        Sale storage sale = sales[currentSaleId];\n        uint256 tokenPriceInUSD = sale.tokenPriceUSD; \n        uint256 totalPaymentInUSD = precision_div_18(tokenAmount * tokenPriceInUSD);\n\n        uint256 paymentAmount;\n        if (paymentMethod == PaymentMethod.BNB) {\n            paymentAmount = precision_mul_18(totalPaymentInUSD) / uint256(price);\n        } else if (\n            paymentMethod == PaymentMethod.USDT ||\n            paymentMethod == PaymentMethod.USDC\n        ) {\n            paymentAmount = (totalPaymentInUSD * (10**6)) / uint256(price);\n        } else {\n            revert(\"Unsupported payment method\");\n        }\n\n        return paymentAmount;\n    }\n\n    function buyTokens(PaymentMethod paymentMethod, uint256 paymentAmount)\n        external\n        payable\n        \n        nonReentrant\n        icoNotFinalized\n        freezed\n    {\n        require(msg.sender != owner(), \"Owner cannot buy tokens\");\n        require(saleCount != 0, \"No sale\");\n        require(!sales[saleCount].isFinalized, \"Sale already finalized\");\n        uint256 tokenAmount;\n        if (paymentMethod == PaymentMethod.BNB) {\n            require(msg.value != 0, \"Send a valid BNB amount\");\n            tokenAmount = calculateTokenAmount(paymentMethod, msg.value);\n            investorPayments[msg.sender][paymentMethod] += msg.value;\n        } else if (\n            paymentMethod == PaymentMethod.USDT ||\n            paymentMethod == PaymentMethod.USDC\n        ) {\n            require(paymentAmount != 0, \"Enter valid amount\");\n            IERC20 stablecoin = paymentMethod == PaymentMethod.USDT\n                ? IERC20(usdt)\n                : IERC20(usdc);\n            require(\n                stablecoin.transferFrom(\n                    msg.sender,\n                    address(this),\n                    paymentAmount\n                ),\n                \"Stablecoin transfer failed\"\n            );\n            tokenAmount = calculateTokenAmount(paymentMethod, paymentAmount);\n            investorPayments[msg.sender][paymentMethod] += paymentAmount;\n        }\n         \n        require(tokenAmount != 0, \"Invalid token amount\");\n        uint256 totalCostInUSD = (tokenAmount *\n            sales[saleCount].tokenPriceUSD) / PRECISION_18;\n        require(\n            totalFundsRaisedUSD + totalCostInUSD <= hardCapInUSD,\n            \"Hard cap reached\"\n        );\n        contributionsInUSD[msg.sender] =contributionsInUSD[msg.sender]+ totalCostInUSD;\n        totalFundsRaisedUSD = totalFundsRaisedUSD+ totalCostInUSD;\n        sales[saleCount].tokensSold += tokenAmount;\n        totalTokensSold = totalTokensSold+ tokenAmount;\n\n        if (tokensBoughtByInvestor[msg.sender] == 0) {\n            investors.push(msg.sender);\n        }\n        tokensBoughtByInvestor[msg.sender] =tokensBoughtByInvestor[msg.sender]+ tokenAmount;\n        paymentMethodForInvestor[msg.sender] = paymentMethod;\n\n        emit TokensPurchased(\n            msg.sender,\n            saleCount,\n            tokenAmount,\n            sales[saleCount].tokenPriceUSD,\n            paymentAmount,\n            paymentMethod\n        );\n    }\n\n    function finalizeICO()\n        public\n        nonReentrant\n        onlyOwner\n        icoNotFinalized\n        freezed\n    {\n        require(\n            totalFundsRaisedUSD >= softCapInUSD,\n            \"Soft Cap NOt Reached\"\n        );\n        require(isTokensAirdropped, \"Airdrop not completed\");\n\n        isICOFinalized = true;\n        _transferFundsToOwner();\n        emit ICOFinalized(totalTokensSold);\n    }\n\n    function _transferFundsToOwner() private{\n        address self = address(this);\n        uint256 nativeBalance = self.balance;\n        if (nativeBalance != 0) {\n            (bool success, ) = payable(owner()).call{value: nativeBalance}(\"\");\n            require(success, \"Transfer failed\");\n        }\n        uint256 usdtBalance = IERC20(usdt).balanceOf(self);\n        if (usdtBalance != 0) {\n            require(\n                IERC20(usdt).transfer(owner(), usdtBalance),\n                \"USDT transfer failed\"\n            );\n        }\n        uint256 usdcBalance = IERC20(usdc).balanceOf(self);\n        if (usdcBalance != 0) {\n            require(\n                IERC20(usdc).transfer(owner(), usdcBalance),\n                \"USDC transfer failed\"\n            );\n        }\n    }\n\n    function airdropTokens()\n        external\n        nonReentrant\n        onlyOwner\n        icoNotFinalized\n        freezed\n    {\n        require(!isTokensAirdropped, \"Airdrop already completed\");\n        require(\n            token.balanceOf(msg.sender) >= totalTokensSold,\n            \"Insufficient Funds\"\n        );\n        require(block.timestamp > getLatestSaleEndTime(), \"Sale ongoing\");\n\n        uint256 investorLength = investors.length;\n        uint256 investorsIterated;\n\n        if (investorLength > 10) {\n            investorsIterated = investorLength - 11;\n        } else {\n            investorsIterated = 0;\n        }\n        for (uint256 i = investorLength - 1; i >= investorsIterated; i--) {\n            address investor = investors[i];\n            uint256 tokensBought = tokensBoughtByInvestor[investor];\n\n            if (tokensBought > 0) {\n                require(token.transferFrom(\n                    owner(),\n                    investor,\n                    tokensBought\n                ), \"Token transfer failed\");\n                investors.pop();\n                emit TokenAirdropped(investor, tokensBought);\n            }\n            if (i == 0) {\n                break;\n            }\n        }\n        if (investors.length == 0) {\n            isTokensAirdropped = true;\n        }\n    }\n\n    function initiateRefund() external nonReentrant onlyOwner icoNotFinalized {\n        require(block.timestamp > getLatestSaleEndTime(), \"Sale ongoing\");\n        require(totalFundsRaisedUSD < softCapInUSD, \"Soft cap reached\");\n\n        uint256 investorLength = investors.length;\n        uint256 investorsIterated;\n\n        if (investorLength > 10) {\n            investorsIterated = investorLength - 11;\n        } else {\n            investorsIterated = 0;\n        }\n\n        for (uint256 i = investorLength - 1; i >= investorsIterated; i--) {\n            address investor = investors[i];\n            for (uint8 j = 0; j < 3; j++) {\n                PaymentMethod paymentMethod = PaymentMethod(j);\n                uint256 amount = investorPayments[investor][paymentMethod];\n\n                if (amount > 0) {\n                    investorPayments[investor][paymentMethod] = 0;\n                    if (paymentMethod == PaymentMethod.BNB) {\n                        (bool sent, ) = payable(investor).call{value: amount}(\n                            \"\"\n                        );\n                        require(sent, \"BNB refund failed\");\n                    } else if (\n                        paymentMethod == PaymentMethod.USDT ||\n                        paymentMethod == PaymentMethod.USDC\n                    ) {\n                        IERC20 stablecoin = paymentMethod == PaymentMethod.USDT\n                            ? IERC20(usdt)\n                            : IERC20(usdc);\n                        require(\n                            stablecoin.transfer(investor, amount),\n                            \"Stablecoin refund failed\"\n                        );\n                        \n                    }\n                    \n                    emit RefundInitiated(investor, amount, paymentMethod);\n                }\n                \n            }\n            investors.pop();\n            if (i == 0) {\n                    break;\n                }\n        }\n        if (investors.length == 0) {\n            isICOFinalized = true;\n        }\n    }\n\n    receive() external payable {\n        revert(\"Direct BNB transfers not allowed\");\n    }\n\n    function getCurrentSaleId() public view returns (uint256) {\n        return saleCount;\n    }\n\n    function getLatestSaleEndTime() internal view returns (uint256) {\n        return sales[saleCount].endTime;\n    }\n\n    function getSaleStartEndTime(uint256)\n        public\n        view\n        returns (uint256 _startTime, uint256 _endTime)\n    {\n        Sale memory sale = sales[saleCount];\n        return (sale.startTime, sale.endTime);\n    }\n\n    function getSoftCapReached() public view returns (bool) {\n        return (totalFundsRaisedUSD >= softCapInUSD);\n    }\n\n    function getHardCapReached() public view returns (bool) {\n        return (totalFundsRaisedUSD == hardCapInUSD);\n    }\n\n    function getInvestorCount() public view returns (uint256 investorCount) {\n        investorCount = investors.length;\n        return investorCount;\n    }\n    function _authorizeUpgrade(address newImplementation) internal override onlyOwner {}\n}"
			},
			"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuardUpgradeable is Initializable {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.ReentrancyGuard\n    struct ReentrancyGuardStorage {\n        uint256 _status;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ReentrancyGuard\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ReentrancyGuardStorageLocation = 0x9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00;\n\n    function _getReentrancyGuardStorage() private pure returns (ReentrancyGuardStorage storage $) {\n        assembly {\n            $.slot := ReentrancyGuardStorageLocation\n        }\n    }\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    function __ReentrancyGuard_init() internal onlyInitializing {\n        __ReentrancyGuard_init_unchained();\n    }\n\n    function __ReentrancyGuard_init_unchained() internal onlyInitializing {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        $._status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if ($._status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        $._status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        $._status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        return $._status == ENTERED;\n    }\n}\n"
			},
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  function getRoundData(\n    uint80 _roundId\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n\n  function latestRoundData()\n    external\n    view\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1822Proxiable} from \"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\";\nimport {ERC1967Utils} from \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable __self = address(this);\n\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev The call is from an unauthorized context.\n     */\n    error UUPSUnauthorizedCallContext();\n\n    /**\n     * @dev The storage `slot` is unsupported as a UUID.\n     */\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        _checkProxy();\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        _checkNotDelegated();\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data);\n    }\n\n    /**\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\n     * context is not of a proxy with an ERC-1967 compliant implementation pointing to self.\n     * See {_onlyProxy}.\n     */\n    function _checkProxy() internal view virtual {\n        if (\n            address(this) == __self || // Must be called through delegatecall\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\n        ) {\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Reverts if the execution is performed via delegatecall.\n     * See {notDelegated}.\n     */\n    function _checkNotDelegated() internal view virtual {\n        if (address(this) != __self) {\n            // Must not be called through delegatecall\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n     *\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n     * is expected to be the implementation slot in ERC-1967.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\n                revert UUPSUnsupportedProxiableUUID(slot);\n            }\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\n        } catch {\n            // The implementation is not UUPS\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.21;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {IERC1967} from \"../../interfaces/IERC1967.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This library provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\n */\nlibrary ERC1967Utils {\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit IERC1967.Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit IERC1967.AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the ERC-1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit IERC1967.BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert Errors.FailedCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC1967.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n */\ninterface IERC1967 {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "london"
		}
	},
	"output": {
		"contracts": {
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"AggregatorV3Interface": {
					"abi": [
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "description",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint80",
									"name": "_roundId",
									"type": "uint80"
								}
							],
							"name": "getRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decimals()": "313ce567",
							"description()": "7284e416",
							"getRoundData(uint80)": "9a6fc8f5",
							"latestRoundData()": "feaf968c",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"UUPSUpgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"stateVariables": {
							"UPGRADE_INTERFACE_VERSION": {
								"details": "The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade."
							},
							"__self": {
								"custom:oz-upgrades-unsafe-allow": "state-variable-immutable"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"proxiableUUID()": "52d1902d",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xf72d3b11f41fccbbdcacd121f994daab8267ccfceb1fb4f247e4ba274c169d27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e46ee40ddc9e2009176ce5d76aa2c046fd68f2ed52d02d77db191365b7c5b2e\",\"dweb:/ipfs/QmZnxgPmCCHosdvbh4J65uTaFYeGtZGzQ1sXRdeh1y68Zr\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x911c3346ee26afe188f3b9dc267ef62a7ccf940aba1afa963e3922f0ca3d8a06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04539f4419e44a831807d7203375d2bc6a733da256efd02e51290f5d5015218c\",\"dweb:/ipfs/QmPZ97gsAAgaMRPiE2WJfkzRsudQnW5tPAvMgGj1jcTJtR\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol": {
				"ReentrancyGuardUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":\"ReentrancyGuardUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x361126a17677994081cd9cb69c3f50cffff6e920d25cb7e428acdb1ae41d1866\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19ae787a7dd001269cd60a394b1a5261b78925a0fc3a6f927beb2986a9aa56cf\",\"dweb:/ipfs/QmYLfXiuKmcRgTDBEDXMMjXU8t6JxsspUmjxYzqWS55oEv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"IERC1967": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":\"IERC1967\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"IERC1822Proxiable": {
					"abi": [
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.",
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"proxiableUUID()": "52d1902d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ERC1967Utils": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidAdmin",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidBeacon",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "This library provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.",
						"errors": {
							"ERC1967InvalidAdmin(address)": [
								{
									"details": "The `admin` of the proxy is invalid."
								}
							],
							"ERC1967InvalidBeacon(address)": [
								{
									"details": "The `beacon` of the proxy is invalid."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"ADMIN_SLOT": {
								"details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
							},
							"BEACON_SLOT": {
								"details": "The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
							},
							"IMPLEMENTATION_SLOT": {
								"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":496:6237  library ERC1967Utils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":496:6237  library ERC1967Utils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122068ab0346626f7d65f839226e491fb4dce6dad136cace4eb11f0a6355d746b47964736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122068ab0346626f7d65f839226e491fb4dce6dad136cace4eb11f0a6355d746b47964736f6c634300081c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0xAB0346626F7D65F839 0x22 PUSH15 0x491FB4DCE6DAD136CACE4EB11F0A63 SSTORE 0xD7 CHAINID 0xB4 PUSH26 0x64736F6C634300081C0033000000000000000000000000000000 ",
							"sourceMap": "496:5741:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;496:5741:8;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122068ab0346626f7d65f839226e491fb4dce6dad136cace4eb11f0a6355d746b47964736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0xAB0346626F7D65F839 0x22 PUSH15 0x491FB4DCE6DAD136CACE4EB11F0A63 SSTORE 0xD7 CHAINID 0xB4 PUSH26 0x64736F6C634300081C0033000000000000000000000000000000 ",
							"sourceMap": "496:5741:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_checkNonPayable()": "infinite",
								"_setAdmin(address)": "infinite",
								"_setBeacon(address)": "infinite",
								"_setImplementation(address)": "infinite",
								"changeAdmin(address)": "infinite",
								"getAdmin()": "infinite",
								"getBeacon()": "infinite",
								"getImplementation()": "infinite",
								"upgradeBeaconToAndCall(address,bytes memory)": "infinite",
								"upgradeToAndCall(address,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122068ab0346626f7d65f839226e491fb4dce6dad136cace4eb11f0a6355d746b47964736f6c634300081c0033",
									".code": [
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"ICO/ICOProxy.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x911c3346ee26afe188f3b9dc267ef62a7ccf940aba1afa963e3922f0ca3d8a06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04539f4419e44a831807d7203375d2bc6a733da256efd02e51290f5d5015218c\",\"dweb:/ipfs/QmPZ97gsAAgaMRPiE2WJfkzRsudQnW5tPAvMgGj1jcTJtR\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"IBeacon": {
					"abi": [
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is the interface that {BeaconProxy} expects of its beacon.",
						"kind": "dev",
						"methods": {
							"implementation()": {
								"details": "Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"implementation()": "5c60da1b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":233:6032  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":233:6032  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122079f0b72fefd1a92dcb6420660b58aa83506b4cc9dc38c155072f2824d7eff92b64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122079f0b72fefd1a92dcb6420660b58aa83506b4cc9dc38c155072f2824d7eff92b64736f6c634300081c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0xF0B72FEFD1A92DCB6420660B58AA83506B4CC9DC38C155072F28 0x24 0xD7 0xEF 0xF9 0x2B PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "233:5799:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;233:5799:11;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122079f0b72fefd1a92dcb6420660b58aa83506b4cc9dc38c155072f2824d7eff92b64736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0xF0B72FEFD1A92DCB6420660B58AA83506B4CC9DC38C155072F28 0x24 0xD7 0xEF 0xF9 0x2B PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "233:5799:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122079f0b72fefd1a92dcb6420660b58aa83506b4cc9dc38c155072f2824d7eff92b64736f6c634300081c0033",
									".code": [
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"ICO/ICOProxy.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "MissingPrecompile",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._",
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"MissingPrecompile(address)": [
								{
									"details": "A necessary precompile is missing."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d3fb1c1defbf507bb20693a773f0799dac6fc93e8eecf60fae1e4099ce85112464736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d3fb1c1defbf507bb20693a773f0799dac6fc93e8eecf60fae1e4099ce85112464736f6c634300081c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 0xFB SHR SAR 0xEF 0xBF POP PUSH28 0xB20693A773F0799DAC6FC93E8EECF60FAE1E4099CE85112464736F6C PUSH4 0x4300081C STOP CALLER ",
							"sourceMap": "411:484:12:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;411:484:12;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d3fb1c1defbf507bb20693a773f0799dac6fc93e8eecf60fae1e4099ce85112464736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 0xFB SHR SAR 0xEF 0xBF POP PUSH28 0xB20693A773F0799DAC6FC93E8EECF60FAE1E4099CE85112464736F6C PUSH4 0x4300081C STOP CALLER ",
							"sourceMap": "411:484:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 411,
									"end": 895,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 411,
									"end": 895,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 411,
									"end": 895,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 411,
									"end": 895,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d3fb1c1defbf507bb20693a773f0799dac6fc93e8eecf60fae1e4099ce85112464736f6c634300081c0033",
									".code": [
										{
											"begin": 411,
											"end": 895,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 411,
											"end": 895,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 411,
											"end": 895,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 411,
											"end": 895,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"ICO/ICOProxy.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1407:4181  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1407:4181  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122016ebf3af5a4cc5b47dbfadc67abc3be5493f3f8f5156edd9e1e57b29c1cfa03d64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122016ebf3af5a4cc5b47dbfadc67abc3be5493f3f8f5156edd9e1e57b29c1cfa03d64736f6c634300081c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND 0xEB RETURN 0xAF GAS 0x4C 0xC5 0xB4 PUSH30 0xBFADC67ABC3BE5493F3F8F5156EDD9E1E57B29C1CFA03D64736F6C634300 ADDMOD SHR STOP CALLER ",
							"sourceMap": "1407:2774:13:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1407:2774:13;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122016ebf3af5a4cc5b47dbfadc67abc3be5493f3f8f5156edd9e1e57b29c1cfa03d64736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND 0xEB RETURN 0xAF GAS 0x4C 0xC5 0xB4 PUSH30 0xBFADC67ABC3BE5493F3F8F5156EDD9E1E57B29C1CFA03D64736F6C634300 ADDMOD SHR STOP CALLER ",
							"sourceMap": "1407:2774:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getInt256Slot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122016ebf3af5a4cc5b47dbfadc67abc3be5493f3f8f5156edd9e1e57b29c1cfa03d64736f6c634300081c0033",
									".code": [
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"ICO/ICOProxy.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ICO/ICOProxy.sol": {
				"ICO": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "totalTokensSold",
									"type": "uint256"
								}
							],
							"name": "ICOFinalized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "saleId",
									"type": "uint256"
								}
							],
							"name": "ImmediateFinalization",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "saleId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "startTime",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "endTime",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenPriceUSD",
									"type": "uint256"
								}
							],
							"name": "NewSaleCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "investor",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "enum ICO.PaymentMethod",
									"name": "paymentMethod",
									"type": "uint8"
								}
							],
							"name": "RefundInitiated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "investor",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "airdroppedAmount",
									"type": "uint256"
								}
							],
							"name": "TokenAirdropped",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "saleId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenPurchaseAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenPriceUSD",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountPaid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "enum ICO.PaymentMethod",
									"name": "paymentMethod",
									"type": "uint8"
								}
							],
							"name": "TokensPurchased",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "enum ICO.PaymentMethod",
									"name": "paymentMethod",
									"type": "uint8"
								}
							],
							"name": "_getPriceFeed",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "airdropTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "enum ICO.PaymentMethod",
									"name": "paymentMethod",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "paymentAmount",
									"type": "uint256"
								}
							],
							"name": "buyTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "enum ICO.PaymentMethod",
									"name": "paymentMethod",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								}
							],
							"name": "calculatePaymentAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "enum ICO.PaymentMethod",
									"name": "paymentMethod",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "paymentAmount",
									"type": "uint256"
								}
							],
							"name": "calculateTokenAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "contributionsInUSD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_startTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_endTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_tokenPriceUSD",
									"type": "uint256"
								}
							],
							"name": "createSale",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "finalizeICO",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "freeze",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurrentSaleId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getHardCapReached",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getInvestorCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "investorCount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "getSaleStartEndTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_startTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_endTime",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getSoftCapReached",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "hardCapInUSD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_usdt",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_usdc",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_softCapInUSD",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_hardCapInUSD",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_priceFeedBNB",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_priceFeedUSDT",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_priceFeedUSDC",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initiateRefund",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "investors",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isFreezed",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isICOFinalized",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isTokensAirdropped",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "val",
									"type": "uint256"
								}
							],
							"name": "precision_div_10",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "val",
									"type": "uint256"
								}
							],
							"name": "precision_div_18",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "val",
									"type": "uint256"
								}
							],
							"name": "precision_mul_10",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "val",
									"type": "uint256"
								}
							],
							"name": "precision_mul_18",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "saleCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "sales",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "startTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "endTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenPriceUSD",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokensSold",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isFinalized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "softCapInUSD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "tokensBoughtByInvestor",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalFundsRaisedUSD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalTokensSold",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unFreeze",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "usdc",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "usdt",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"proxiableUUID()": {
								"details": "Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ICO/ICOProxy.sol\":429:15754  contract ICO is ReentrancyGuardUpgradeable ,OwnableUpgradeable, UUPSUpgradeable {... */\n  mstore(0x40, 0xa0)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1171:1175  this */\n  address\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1128:1176  address private immutable __self = address(this) */\n  0x80\n  mstore\n    /* \"ICO/ICOProxy.sol\":429:15754  contract ICO is ReentrancyGuardUpgradeable ,OwnableUpgradeable, UUPSUpgradeable {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xca4b0db001bf2677ca5ac885bd7766c7c4b4b5d0170066d4830e0728bf019f64\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"ICO/ICOProxy.sol\":429:15754  contract ICO is ReentrancyGuardUpgradeable ,OwnableUpgradeable, UUPSUpgradeable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7fb12001\n      gt\n      tag_44\n      jumpi\n      dup1\n      0xb3fdafb9\n      gt\n      tag_45\n      jumpi\n      dup1\n      0xc81ffdea\n      gt\n      tag_46\n      jumpi\n      dup1\n      0xc81ffdea\n      eq\n      tag_38\n      jumpi\n      dup1\n      0xd1f3b23e\n      eq\n      tag_39\n      jumpi\n      dup1\n      0xe8e87389\n      eq\n      tag_40\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_41\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_42\n      jumpi\n      dup1\n      0xfd663da2\n      eq\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      dup1\n      0xb3fdafb9\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xb5f522f7\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xb9469e1a\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xc1560a14\n      eq\n      tag_36\n      jumpi\n      dup1\n      0xc211e1f9\n      eq\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      dup1\n      0x960524e3\n      gt\n      tag_47\n      jumpi\n      dup1\n      0x960524e3\n      eq\n      tag_28\n      jumpi\n      dup1\n      0x9fa8adb8\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xa1c4b5a2\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xa1e89aec\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xad3cb1cc\n      eq\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      dup1\n      0x7fb12001\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x91152c5c\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x91d8730a\n      eq\n      tag_26\n      jumpi\n      dup1\n      0x940c333e\n      eq\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      dup1\n      0x3feb5f2b\n      gt\n      tag_48\n      jumpi\n      dup1\n      0x63b20117\n      gt\n      tag_49\n      jumpi\n      dup1\n      0x63b20117\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x6c1909ed\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x721bc38b\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x7cf12b90\n      eq\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      dup1\n      0x3feb5f2b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x4dee1dc3\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x4f1ef286\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x52d1902d\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x62a5af3b\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      dup1\n      0x2151206e\n      gt\n      tag_50\n      jumpi\n      dup1\n      0x2151206e\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x23cc75a8\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x2593198d\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x2f48ab7d\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x3e413bee\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      dup1\n      0x05834e67\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06e4d36f\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x115afc3a\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x117d260f\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x212ea247\n      eq\n      tag_7\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"ICO/ICOProxy.sol\":14766:14808  revert(\"Direct BNB transfers not allowed\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":216:218   */\n      0x20\n        /* \"ICO/ICOProxy.sol\":14766:14808  revert(\"Direct BNB transfers not allowed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":198:219   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":235:253   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":228:258   */\n      mstore\n        /* \"#utility.yul\":294:328   */\n      0x44697265637420424e42207472616e7366657273206e6f7420616c6c6f776564\n        /* \"#utility.yul\":274:292   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":267:329   */\n      mstore\n        /* \"#utility.yul\":346:364   */\n      0x64\n      add\n        /* \"ICO/ICOProxy.sol\":14766:14808  revert(\"Direct BNB transfers not allowed\") */\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ICO/ICOProxy.sol\":429:15754  contract ICO is ReentrancyGuardUpgradeable ,OwnableUpgradeable, UUPSUpgradeable {... */\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ICO/ICOProxy.sol\":5373:6605  function calculateTokenAmount(... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      pop\n      tag_56\n      tag_57\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_57:\n      tag_59\n      jump\t// in\n    tag_56:\n      mload(0x40)\n        /* \"#utility.yul\":1014:1039   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1002:1004   */\n      0x20\n        /* \"#utility.yul\":987:1005   */\n      add\n        /* \"ICO/ICOProxy.sol\":5373:6605  function calculateTokenAmount(... */\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ICO/ICOProxy.sol\":15266:15383  function getSoftCapReached() public view returns (bool) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      pop\n        /* \"ICO/ICOProxy.sol\":15363:15375  softCapInUSD */\n      sload(0x04)\n        /* \"ICO/ICOProxy.sol\":15340:15359  totalFundsRaisedUSD */\n      sload(0x07)\n        /* \"ICO/ICOProxy.sol\":15340:15375  totalFundsRaisedUSD >= softCapInUSD */\n      lt\n      iszero\n        /* \"ICO/ICOProxy.sol\":15266:15383  function getSoftCapReached() public view returns (bool) {... */\n    tag_63:\n      mload(0x40)\n        /* \"#utility.yul\":1215:1229   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1208:1230   */\n      iszero\n        /* \"#utility.yul\":1190:1231   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1178:1180   */\n      0x20\n        /* \"#utility.yul\":1163:1181   */\n      add\n        /* \"ICO/ICOProxy.sol\":15266:15383  function getSoftCapReached() public view returns (bool) {... */\n      tag_60\n        /* \"#utility.yul\":1050:1237   */\n      jump\n        /* \"ICO/ICOProxy.sol\":3601:4247  function _getPriceFeed(PaymentMethod paymentMethod)... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      pop\n      tag_56\n      tag_69\n      calldatasize\n      0x04\n      tag_70\n      jump\t// in\n    tag_69:\n      tag_71\n      jump\t// in\n        /* \"ICO/ICOProxy.sol\":6611:7724  function calculatePaymentAmount(... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      pop\n      tag_56\n      tag_76\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n        /* \"ICO/ICOProxy.sol\":14821:14912  function getCurrentSaleId() public view returns (uint256) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_79\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_79:\n      pop\n        /* \"ICO/ICOProxy.sol\":14896:14905  saleCount */\n      sload(0x06)\n        /* \"ICO/ICOProxy.sol\":14821:14912  function getCurrentSaleId() public view returns (uint256) {... */\n      jump(tag_56)\n        /* \"ICO/ICOProxy.sol\":973:1000  uint256 public softCapInUSD */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      pop\n      tag_56\n      sload(0x04)\n      dup2\n      jump\n        /* \"ICO/ICOProxy.sol\":10159:10570  function finalizeICO()... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_87\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_87:\n      pop\n      tag_88\n      tag_89\n      jump\t// in\n    tag_88:\n      stop\n        /* \"ICO/ICOProxy.sol\":4355:4451  function precision_mul_18(uint val) public pure returns(uint){... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      pop\n      tag_56\n      tag_92\n      calldatasize\n      0x04\n      tag_93\n      jump\t// in\n    tag_92:\n      tag_94\n      jump\t// in\n        /* \"ICO/ICOProxy.sol\":1359:1378  address public usdt */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_96\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_96:\n      pop\n      sload(0x0b)\n      tag_97\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_97:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2037:2069   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2019:2070   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2007:2009   */\n      0x20\n        /* \"#utility.yul\":1992:2010   */\n      add\n        /* \"ICO/ICOProxy.sol\":1359:1378  address public usdt */\n      tag_60\n        /* \"#utility.yul\":1873:2076   */\n      jump\n        /* \"ICO/ICOProxy.sol\":1384:1403  address public usdc */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_101\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_101:\n      pop\n      sload(0x0c)\n      tag_97\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"ICO/ICOProxy.sol\":1327:1353  address[] public investors */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_105\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_105:\n      pop\n      tag_97\n      tag_107\n      calldatasize\n      0x04\n      tag_93\n      jump\t// in\n    tag_107:\n      tag_108\n      jump\t// in\n        /* \"ICO/ICOProxy.sol\":1262:1292  bool public isTokensAirdropped */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_110\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_110:\n      pop\n      sload(0x09)\n      tag_63\n      swap1\n      0x0100\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4161:4375  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_15:\n      tag_88\n      tag_115\n      calldatasize\n      0x04\n      tag_116\n      jump\t// in\n    tag_115:\n      tag_117\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3708:3842  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_118\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_118:\n      pop\n      tag_56\n      tag_120\n      jump\t// in\n        /* \"ICO/ICOProxy.sol\":3338:3467  function freeze() external onlyOwner freezed {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_123\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_123:\n      pop\n      tag_88\n      tag_125\n      jump\t// in\n        /* \"ICO/ICOProxy.sol\":1109:1139  uint256 public totalTokensSold */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_126\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_126:\n      pop\n      tag_56\n      sload(0x08)\n      dup2\n      jump\n        /* \"ICO/ICOProxy.sol\":4659:5367  function createSale(... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_130\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_130:\n      pop\n      tag_88\n      tag_132\n      calldatasize\n      0x04\n      tag_133\n      jump\t// in\n    tag_132:\n      tag_134\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_135\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_135:\n      pop\n      tag_88\n      tag_137\n      jump\t// in\n        /* \"ICO/ICOProxy.sol\":1069:1103  uint256 public totalFundsRaisedUSD */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_138\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_138:\n      pop\n      tag_56\n      sload(0x07)\n      dup2\n      jump\n        /* \"ICO/ICOProxy.sol\":3473:3595  function unFreeze() external onlyOwner {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_142\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_142:\n      pop\n      tag_88\n      tag_144\n      jump\t// in\n        /* \"ICO/ICOProxy.sol\":12677:14723  function initiateRefund() external nonReentrant onlyOwner icoNotFinalized {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_145\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_145:\n      pop\n      tag_88\n      tag_147\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_148\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_148:\n      pop\n      tag_97\n      tag_150\n      jump\t// in\n        /* \"ICO/ICOProxy.sol\":11362:12671  function airdropTokens()... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_152\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_152:\n      pop\n      tag_88\n      tag_154\n      jump\t// in\n        /* \"ICO/ICOProxy.sol\":15389:15506  function getHardCapReached() public view returns (bool) {... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_155\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_155:\n      pop\n        /* \"ICO/ICOProxy.sol\":15486:15498  hardCapInUSD */\n      sload(0x05)\n        /* \"ICO/ICOProxy.sol\":15463:15482  totalFundsRaisedUSD */\n      sload(0x07)\n        /* \"ICO/ICOProxy.sol\":15463:15498  totalFundsRaisedUSD == hardCapInUSD */\n      eq\n        /* \"ICO/ICOProxy.sol\":15389:15506  function getHardCapReached() public view returns (bool) {... */\n      jump(tag_63)\n        /* \"ICO/ICOProxy.sol\":7730:10153  function buyTokens(PaymentMethod paymentMethod, uint256 paymentAmount)... */\n    tag_27:\n      tag_88\n      tag_160\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_160:\n      tag_161\n      jump\t// in\n        /* \"ICO/ICOProxy.sol\":15512:15663  function getInvestorCount() public view returns (uint256 investorCount) {... */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_162\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_162:\n      pop\n        /* \"ICO/ICOProxy.sol\":15610:15619  investors */\n      0x0a\n        /* \"ICO/ICOProxy.sol\":15610:15626  investors.length */\n      sload\n        /* \"ICO/ICOProxy.sol\":15512:15663  function getInvestorCount() public view returns (uint256 investorCount) {... */\n      jump(tag_56)\n        /* \"ICO/ICOProxy.sol\":4557:4653  function precision_div_18(uint val) public pure returns(uint){... */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_166\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_166:\n      pop\n      tag_56\n      tag_168\n      calldatasize\n      0x04\n      tag_93\n      jump\t// in\n    tag_168:\n      tag_169\n      jump\t// in\n        /* \"ICO/ICOProxy.sol\":4253:4349  function precision_mul_10(uint val) public pure returns(uint){... */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_171\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_171:\n      pop\n      tag_56\n      tag_173\n      calldatasize\n      0x04\n      tag_93\n      jump\t// in\n    tag_173:\n      tag_174\n      jump\t// in\n        /* \"ICO/ICOProxy.sol\":1039:1063  uint256 public saleCount */\n    tag_31:\n      callvalue\n      dup1\n      iszero\n      tag_176\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_176:\n      pop\n      tag_56\n      sload(0x06)\n      dup2\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1819:1877  string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\" */\n    tag_32:\n      callvalue\n      dup1\n      iszero\n      tag_180\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_180:\n      pop\n      tag_181\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xdc, 0x0352e302e3)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\n    tag_181:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n        /* \"ICO/ICOProxy.sol\":4456:4552  function precision_div_10(uint val) public pure returns(uint){... */\n    tag_33:\n      callvalue\n      dup1\n      iszero\n      tag_185\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_185:\n      pop\n      tag_56\n      tag_187\n      calldatasize\n      0x04\n      tag_93\n      jump\t// in\n    tag_187:\n      tag_188\n      jump\t// in\n        /* \"ICO/ICOProxy.sol\":1426:1463  mapping(uint256 => Sale) public sales */\n    tag_34:\n      callvalue\n      dup1\n      iszero\n      tag_190\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_190:\n      pop\n      tag_191\n      tag_192\n      calldatasize\n      0x04\n      tag_93\n      jump\t// in\n    tag_192:\n      mstore(0x20, 0x0d)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      dup4\n      add\n      sload\n      0x03\n      dup5\n      add\n      sload\n      0x04\n      swap1\n      swap5\n      add\n      sload\n      swap3\n      swap4\n      swap2\n      swap3\n      swap1\n      swap2\n      swap1\n      0xff\n      and\n      dup6\n      jump\n    tag_191:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":4995:5020   */\n      swap6\n      dup7\n      mstore\n        /* \"#utility.yul\":5051:5053   */\n      0x20\n        /* \"#utility.yul\":5036:5054   */\n      dup7\n      add\n        /* \"#utility.yul\":5029:5063   */\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"#utility.yul\":5079:5097   */\n      swap3\n      dup5\n      add\n        /* \"#utility.yul\":5072:5106   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":5137:5139   */\n      0x60\n        /* \"#utility.yul\":5122:5140   */\n      dup4\n      add\n        /* \"#utility.yul\":5115:5149   */\n      mstore\n        /* \"#utility.yul\":5193:5207   */\n      iszero\n        /* \"#utility.yul\":5186:5208   */\n      iszero\n        /* \"#utility.yul\":5180:5183   */\n      0x80\n        /* \"#utility.yul\":5165:5184   */\n      dup3\n      add\n        /* \"#utility.yul\":5158:5209   */\n      mstore\n        /* \"#utility.yul\":4982:4985   */\n      0xa0\n        /* \"#utility.yul\":4967:4986   */\n      add\n        /* \"ICO/ICOProxy.sol\":1426:1463  mapping(uint256 => Sale) public sales */\n      tag_60\n        /* \"#utility.yul\":4742:5215   */\n      jump\n        /* \"ICO/ICOProxy.sol\":1298:1319  bool public isFreezed */\n    tag_35:\n      callvalue\n      dup1\n      iszero\n      tag_196\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_196:\n      pop\n      sload(0x09)\n      tag_63\n      swap1\n      0x010000\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\n        /* \"ICO/ICOProxy.sol\":1006:1033  uint256 public hardCapInUSD */\n    tag_36:\n      callvalue\n      dup1\n      iszero\n      tag_200\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_200:\n      pop\n      tag_56\n      sload(0x05)\n      dup2\n      jump\n        /* \"ICO/ICOProxy.sol\":15036:15260  function getSaleStartEndTime(uint256)... */\n    tag_37:\n      callvalue\n      dup1\n      iszero\n      tag_204\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_204:\n      pop\n      tag_205\n      tag_206\n      calldatasize\n      0x04\n      tag_93\n      jump\t// in\n    tag_206:\n      pop\n        /* \"ICO/ICOProxy.sol\":15196:15205  saleCount */\n      sload(0x06)\n        /* \"ICO/ICOProxy.sol\":15119:15137  uint256 _startTime */\n      0x00\n        /* \"ICO/ICOProxy.sol\":15190:15206  sales[saleCount] */\n      swap1\n      dup2\n      mstore\n        /* \"ICO/ICOProxy.sol\":15190:15195  sales */\n      0x0d\n        /* \"ICO/ICOProxy.sol\":15190:15206  sales[saleCount] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"ICO/ICOProxy.sol\":15171:15206  Sale memory sale = sales[saleCount] */\n      dup3\n      mload\n      0xa0\n      dup2\n      add\n      dup5\n      mstore\n      dup2\n      sload\n      dup1\n      dup3\n      mstore\n      0x01\n      dup4\n      add\n      sload\n      swap4\n      dup3\n      add\n      dup5\n      swap1\n      mstore\n      0x02\n      dup4\n      add\n      sload\n      swap5\n      dup3\n      add\n      swap5\n      swap1\n      swap5\n      mstore\n      0x03\n      dup3\n      add\n      sload\n      0x60\n      dup3\n      add\n      mstore\n      0x04\n      swap1\n      swap2\n      add\n      sload\n      0xff\n      and\n      iszero\n      iszero\n      0x80\n      swap1\n      swap2\n      add\n      mstore\n      swap1\n      swap2\n        /* \"ICO/ICOProxy.sol\":15036:15260  function getSaleStartEndTime(uint256)... */\n      jump\n    tag_205:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":5394:5419   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":5450:5452   */\n      0x20\n        /* \"#utility.yul\":5435:5453   */\n      dup4\n      add\n        /* \"#utility.yul\":5428:5462   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":5367:5385   */\n      add\n        /* \"ICO/ICOProxy.sol\":15036:15260  function getSaleStartEndTime(uint256)... */\n      tag_60\n        /* \"#utility.yul\":5220:5468   */\n      jump\n        /* \"ICO/ICOProxy.sol\":1469:1522  mapping(address => uint256) public contributionsInUSD */\n    tag_38:\n      callvalue\n      dup1\n      iszero\n      tag_210\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_210:\n      pop\n      tag_56\n      tag_212\n      calldatasize\n      0x04\n      tag_213\n      jump\t// in\n    tag_212:\n      mstore(0x20, 0x0e)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"ICO/ICOProxy.sol\":1229:1255  bool public isICOFinalized */\n    tag_39:\n      callvalue\n      dup1\n      iszero\n      tag_216\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_216:\n      pop\n      sload(0x09)\n      tag_63\n      swap1\n      0xff\n      and\n      dup2\n      jump\n        /* \"ICO/ICOProxy.sol\":1528:1585  mapping(address => uint256) public tokensBoughtByInvestor */\n    tag_40:\n      callvalue\n      dup1\n      iszero\n      tag_220\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_220:\n      pop\n      tag_56\n      tag_222\n      calldatasize\n      0x04\n      tag_213\n      jump\t// in\n    tag_222:\n      mstore(0x20, 0x0f)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_41:\n      callvalue\n      dup1\n      iszero\n      tag_225\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_225:\n      pop\n      tag_88\n      tag_227\n      calldatasize\n      0x04\n      tag_213\n      jump\t// in\n    tag_227:\n      tag_228\n      jump\t// in\n        /* \"ICO/ICOProxy.sol\":948:967  IERC20 public token */\n    tag_42:\n      callvalue\n      dup1\n      iszero\n      tag_229\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_229:\n      pop\n      sload(0x03)\n      tag_97\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"ICO/ICOProxy.sol\":2459:3139  function initialize(... */\n    tag_43:\n      callvalue\n      dup1\n      iszero\n      tag_234\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_234:\n      pop\n      tag_88\n      tag_236\n      calldatasize\n      0x04\n      tag_237\n      jump\t// in\n    tag_236:\n      tag_238\n      jump\t// in\n        /* \"ICO/ICOProxy.sol\":5373:6605  function calculateTokenAmount(... */\n    tag_59:\n        /* \"ICO/ICOProxy.sol\":5498:5505  uint256 */\n      0x00\n        /* \"ICO/ICOProxy.sol\":5517:5530  uint256 price */\n      dup1\n        /* \"ICO/ICOProxy.sol\":5533:5585  precision_mul_10(uint(_getPriceFeed(paymentMethod))) */\n      tag_240\n        /* \"ICO/ICOProxy.sol\":5555:5583  _getPriceFeed(paymentMethod) */\n      tag_173\n        /* \"ICO/ICOProxy.sol\":5569:5582  paymentMethod */\n      dup6\n        /* \"ICO/ICOProxy.sol\":5555:5568  _getPriceFeed */\n      tag_71\n        /* \"ICO/ICOProxy.sol\":5555:5583  _getPriceFeed(paymentMethod) */\n      jump\t// in\n        /* \"ICO/ICOProxy.sol\":5533:5585  precision_mul_10(uint(_getPriceFeed(paymentMethod))) */\n    tag_240:\n        /* \"ICO/ICOProxy.sol\":5517:5585  uint256 price = precision_mul_10(uint(_getPriceFeed(paymentMethod))) */\n      swap1\n      pop\n        /* \"ICO/ICOProxy.sol\":5604:5609  price */\n      dup1\n        /* \"ICO/ICOProxy.sol\":5613:5614  0 */\n      0x00\n        /* \"ICO/ICOProxy.sol\":5604:5614  price != 0 */\n      sub\n        /* \"ICO/ICOProxy.sol\":5596:5637  require(price != 0, \"Invalid price feed\") */\n      tag_242\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7367:7369   */\n      0x20\n        /* \"ICO/ICOProxy.sol\":5596:5637  require(price != 0, \"Invalid price feed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7349:7370   */\n      mstore\n        /* \"#utility.yul\":7406:7408   */\n      0x12\n        /* \"#utility.yul\":7386:7404   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7379:7409   */\n      mstore\n      shl(0x72, 0x125b9d985b1a59081c1c9a58d94819995959)\n        /* \"#utility.yul\":7425:7443   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7418:7466   */\n      mstore\n        /* \"#utility.yul\":7483:7501   */\n      0x64\n      add\n        /* \"ICO/ICOProxy.sol\":5596:5637  require(price != 0, \"Invalid price feed\") */\n      tag_53\n        /* \"#utility.yul\":7165:7507   */\n      jump\n        /* \"ICO/ICOProxy.sol\":5596:5637  require(price != 0, \"Invalid price feed\") */\n    tag_242:\n        /* \"ICO/ICOProxy.sol\":5647:5668  uint256 currentSaleId */\n      0x00\n        /* \"ICO/ICOProxy.sol\":5671:5689  getCurrentSaleId() */\n      tag_245\n        /* \"ICO/ICOProxy.sol\":14896:14905  saleCount */\n      sload(0x06)\n      swap1\n        /* \"ICO/ICOProxy.sol\":14821:14912  function getCurrentSaleId() public view returns (uint256) {... */\n      jump\n        /* \"ICO/ICOProxy.sol\":5671:5689  getCurrentSaleId() */\n    tag_245:\n        /* \"ICO/ICOProxy.sol\":5699:5716  Sale storage sale */\n      0x00\n        /* \"ICO/ICOProxy.sol\":5719:5739  sales[currentSaleId] */\n      dup2\n      dup2\n      mstore\n        /* \"ICO/ICOProxy.sol\":5719:5724  sales */\n      0x0d\n        /* \"ICO/ICOProxy.sol\":5719:5739  sales[currentSaleId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"ICO/ICOProxy.sol\":5776:5794  sale.tokenPriceUSD */\n      0x02\n      dup2\n      add\n      sload\n        /* \"ICO/ICOProxy.sol\":5647:5689  uint256 currentSaleId = getCurrentSaleId() */\n      swap3\n      swap4\n      pop\n        /* \"ICO/ICOProxy.sol\":5719:5739  sales[currentSaleId] */\n      swap2\n        /* \"ICO/ICOProxy.sol\":5776:5794  sale.tokenPriceUSD */\n      swap1\n        /* \"ICO/ICOProxy.sol\":5699:5716  Sale storage sale */\n      dup1\n        /* \"ICO/ICOProxy.sol\":5878:5891  paymentMethod */\n      dup9\n        /* \"ICO/ICOProxy.sol\":5878:5912  paymentMethod == PaymentMethod.BNB */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_250\n      jumpi\n      tag_250\n      tag_248\n      jump\t// in\n    tag_250:\n      sub\n        /* \"ICO/ICOProxy.sol\":5874:6472  if (paymentMethod == PaymentMethod.BNB) {... */\n      tag_251\n      jumpi\n        /* \"ICO/ICOProxy.sol\":5965:6013  precision_div_18(uint256(price) * paymentAmount) */\n      tag_252\n        /* \"ICO/ICOProxy.sol\":5982:6012  uint256(price) * paymentAmount */\n      tag_168\n        /* \"ICO/ICOProxy.sol\":5999:6012  paymentAmount */\n      dup9\n        /* \"ICO/ICOProxy.sol\":5990:5995  price */\n      dup8\n        /* \"ICO/ICOProxy.sol\":5982:6012  uint256(price) * paymentAmount */\n      tag_254\n      jump\t// in\n        /* \"ICO/ICOProxy.sol\":5965:6013  precision_div_18(uint256(price) * paymentAmount) */\n    tag_252:\n        /* \"ICO/ICOProxy.sol\":5928:6013  paymentAmountInUSD =... */\n      swap1\n      pop\n        /* \"ICO/ICOProxy.sol\":5874:6472  if (paymentMethod == PaymentMethod.BNB) {... */\n      jump(tag_273)\n    tag_251:\n        /* \"ICO/ICOProxy.sol\":6064:6082  PaymentMethod.USDC */\n      0x02\n        /* \"ICO/ICOProxy.sol\":6047:6060  paymentMethod */\n      dup9\n        /* \"ICO/ICOProxy.sol\":6047:6082  paymentMethod == PaymentMethod.USDC */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_259\n      jumpi\n      tag_259\n      tag_248\n      jump\t// in\n    tag_259:\n      eq\n        /* \"ICO/ICOProxy.sol\":6047:6133  paymentMethod == PaymentMethod.USDC ||... */\n      dup1\n      tag_260\n      jumpi\n      pop\n        /* \"ICO/ICOProxy.sol\":6115:6133  PaymentMethod.USDT */\n      0x01\n        /* \"ICO/ICOProxy.sol\":6098:6111  paymentMethod */\n      dup9\n        /* \"ICO/ICOProxy.sol\":6098:6133  paymentMethod == PaymentMethod.USDT */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_264\n      jumpi\n      tag_264\n      tag_248\n      jump\t// in\n    tag_264:\n      eq\n        /* \"ICO/ICOProxy.sol\":6047:6133  paymentMethod == PaymentMethod.USDC ||... */\n    tag_260:\n        /* \"ICO/ICOProxy.sol\":6030:6472  if (... */\n      iszero\n      tag_265\n      jumpi\n        /* \"ICO/ICOProxy.sol\":6187:6188  6 */\n      0x06\n        /* \"ICO/ICOProxy.sol\":6158:6184  uint256 stablecoinDecimals */\n      0x00\n        /* \"ICO/ICOProxy.sol\":6267:6290  18 - stablecoinDecimals */\n      tag_266\n        /* \"ICO/ICOProxy.sol\":6187:6188  6 */\n      dup3\n        /* \"ICO/ICOProxy.sol\":6267:6269  18 */\n      0x12\n        /* \"ICO/ICOProxy.sol\":6267:6290  18 - stablecoinDecimals */\n      tag_267\n      jump\t// in\n    tag_266:\n        /* \"ICO/ICOProxy.sol\":6262:6291  10**(18 - stablecoinDecimals) */\n      tag_268\n      swap1\n        /* \"ICO/ICOProxy.sol\":6262:6264  10 */\n      0x0a\n        /* \"ICO/ICOProxy.sol\":6262:6291  10**(18 - stablecoinDecimals) */\n      tag_269\n      jump\t// in\n    tag_268:\n        /* \"ICO/ICOProxy.sol\":6229:6292  paymentAmount *... */\n      tag_270\n      swap1\n        /* \"ICO/ICOProxy.sol\":6229:6242  paymentAmount */\n      dup11\n        /* \"ICO/ICOProxy.sol\":6229:6292  paymentAmount *... */\n      tag_254\n      jump\t// in\n    tag_270:\n        /* \"ICO/ICOProxy.sol\":6202:6292  uint256 normalizedAmount = paymentAmount *... */\n      swap1\n      pop\n        /* \"ICO/ICOProxy.sol\":6343:6394  precision_div_18(uint256(price) * normalizedAmount) */\n      tag_271\n        /* \"ICO/ICOProxy.sol\":6360:6393  uint256(price) * normalizedAmount */\n      tag_168\n        /* \"ICO/ICOProxy.sol\":6202:6292  uint256 normalizedAmount = paymentAmount *... */\n      dup3\n        /* \"ICO/ICOProxy.sol\":6368:6373  price */\n      dup10\n        /* \"ICO/ICOProxy.sol\":6360:6393  uint256(price) * normalizedAmount */\n      tag_254\n      jump\t// in\n        /* \"ICO/ICOProxy.sol\":6343:6394  precision_div_18(uint256(price) * normalizedAmount) */\n    tag_271:\n        /* \"ICO/ICOProxy.sol\":6306:6394  paymentAmountInUSD =... */\n      swap3\n      pop\n        /* \"ICO/ICOProxy.sol\":6144:6405  {... */\n      pop\n      pop\n        /* \"ICO/ICOProxy.sol\":6030:6472  if (... */\n      jump(tag_273)\n    tag_265:\n        /* \"ICO/ICOProxy.sol\":6425:6461  revert(\"Unsupported payment method\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9707:9709   */\n      0x20\n        /* \"ICO/ICOProxy.sol\":6425:6461  revert(\"Unsupported payment method\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9689:9710   */\n      mstore\n        /* \"#utility.yul\":9746:9748   */\n      0x1a\n        /* \"#utility.yul\":9726:9744   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9719:9749   */\n      mstore\n        /* \"#utility.yul\":9785:9813   */\n      0x556e737570706f72746564207061796d656e74206d6574686f64000000000000\n        /* \"#utility.yul\":9765:9783   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9758:9814   */\n      mstore\n        /* \"#utility.yul\":9831:9849   */\n      0x64\n      add\n        /* \"ICO/ICOProxy.sol\":6425:6461  revert(\"Unsupported payment method\") */\n      tag_53\n        /* \"#utility.yul\":9505:9855   */\n      jump\n        /* \"ICO/ICOProxy.sol\":6030:6472  if (... */\n    tag_273:\n        /* \"ICO/ICOProxy.sol\":6482:6501  uint256 tokenAmount */\n      0x00\n        /* \"ICO/ICOProxy.sol\":6555:6570  tokenPriceInUSD */\n      dup3\n        /* \"ICO/ICOProxy.sol\":6504:6540  precision_mul_18(paymentAmountInUSD) */\n      tag_276\n        /* \"ICO/ICOProxy.sol\":6521:6539  paymentAmountInUSD */\n      dup4\n        /* \"ICO/ICOProxy.sol\":6504:6520  precision_mul_18 */\n      tag_94\n        /* \"ICO/ICOProxy.sol\":6504:6540  precision_mul_18(paymentAmountInUSD) */\n      jump\t// in\n    tag_276:\n        /* \"ICO/ICOProxy.sol\":6504:6570  precision_mul_18(paymentAmountInUSD) /... */\n      tag_277\n      swap2\n      swap1\n      tag_278\n      jump\t// in\n    tag_277:\n        /* \"ICO/ICOProxy.sol\":6482:6570  uint256 tokenAmount = precision_mul_18(paymentAmountInUSD) /... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"ICO/ICOProxy.sol\":5373:6605  function calculateTokenAmount(... */\n    tag_239:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ICO/ICOProxy.sol\":3601:4247  function _getPriceFeed(PaymentMethod paymentMethod)... */\n    tag_71:\n        /* \"ICO/ICOProxy.sol\":3698:3704  int256 */\n      0x00\n      dup1\n        /* \"ICO/ICOProxy.sol\":3724:3737  paymentMethod */\n      dup3\n        /* \"ICO/ICOProxy.sol\":3724:3758  paymentMethod == PaymentMethod.BNB */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_284\n      jumpi\n      tag_284\n      tag_248\n      jump\t// in\n    tag_284:\n      sub\n        /* \"ICO/ICOProxy.sol\":3720:4241  if (paymentMethod == PaymentMethod.BNB) {... */\n      tag_285\n      jumpi\n        /* \"ICO/ICOProxy.sol\":3777:3789  int256 price */\n      0x00\n        /* \"ICO/ICOProxy.sol\":3799:3811  priceFeedBNB */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ICO/ICOProxy.sol\":3799:3827  priceFeedBNB.latestRoundData */\n      and\n      0xfeaf968c\n        /* \"ICO/ICOProxy.sol\":3799:3829  priceFeedBNB.latestRoundData() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xa0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_287\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_287:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_288\n      swap2\n      swap1\n      tag_289\n      jump\t// in\n    tag_288:\n      pop\n        /* \"ICO/ICOProxy.sol\":3774:3829  (, int256 price, , , ) = priceFeedBNB.latestRoundData() */\n      swap2\n      swap7\n        /* \"ICO/ICOProxy.sol\":3601:4247  function _getPriceFeed(PaymentMethod paymentMethod)... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ICO/ICOProxy.sol\":3720:4241  if (paymentMethod == PaymentMethod.BNB) {... */\n    tag_285:\n        /* \"ICO/ICOProxy.sol\":3893:3911  PaymentMethod.USDT */\n      0x01\n        /* \"ICO/ICOProxy.sol\":3876:3889  paymentMethod */\n      dup3\n        /* \"ICO/ICOProxy.sol\":3876:3911  paymentMethod == PaymentMethod.USDT */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_294\n      jumpi\n      tag_294\n      tag_248\n      jump\t// in\n    tag_294:\n      sub\n        /* \"ICO/ICOProxy.sol\":3872:4241  if (paymentMethod == PaymentMethod.USDT) {... */\n      tag_295\n      jumpi\n        /* \"ICO/ICOProxy.sol\":3952:3965  priceFeedUSDT */\n      sload(0x01)\n        /* \"ICO/ICOProxy.sol\":3952:3983  priceFeedUSDT.latestRoundData() */\n      0x40\n      dup1\n      mload\n      shl(0xe2, 0x3fabe5a3)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"ICO/ICOProxy.sol\":3930:3942  int256 price */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ICO/ICOProxy.sol\":3952:3965  priceFeedUSDT */\n      and\n      swap2\n        /* \"ICO/ICOProxy.sol\":3952:3981  priceFeedUSDT.latestRoundData */\n      0xfeaf968c\n      swap2\n        /* \"ICO/ICOProxy.sol\":3952:3983  priceFeedUSDT.latestRoundData() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n      0xa0\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"ICO/ICOProxy.sol\":3952:3965  priceFeedUSDT */\n      dup7\n        /* \"ICO/ICOProxy.sol\":3952:3983  priceFeedUSDT.latestRoundData() */\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_287\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n        /* \"ICO/ICOProxy.sol\":3872:4241  if (paymentMethod == PaymentMethod.USDT) {... */\n    tag_295:\n        /* \"ICO/ICOProxy.sol\":4047:4065  PaymentMethod.USDC */\n      0x02\n        /* \"ICO/ICOProxy.sol\":4030:4043  paymentMethod */\n      dup3\n        /* \"ICO/ICOProxy.sol\":4030:4065  paymentMethod == PaymentMethod.USDC */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_303\n      jumpi\n      tag_303\n      tag_248\n      jump\t// in\n    tag_303:\n      sub\n        /* \"ICO/ICOProxy.sol\":4026:4241  if (paymentMethod == PaymentMethod.USDC) {... */\n      tag_265\n      jumpi\n        /* \"ICO/ICOProxy.sol\":4106:4119  priceFeedUSDC */\n      sload(0x02)\n        /* \"ICO/ICOProxy.sol\":4106:4137  priceFeedUSDC.latestRoundData() */\n      0x40\n      dup1\n      mload\n      shl(0xe2, 0x3fabe5a3)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"ICO/ICOProxy.sol\":4084:4096  int256 price */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ICO/ICOProxy.sol\":4106:4119  priceFeedUSDC */\n      and\n      swap2\n        /* \"ICO/ICOProxy.sol\":4106:4135  priceFeedUSDC.latestRoundData */\n      0xfeaf968c\n      swap2\n        /* \"ICO/ICOProxy.sol\":4106:4137  priceFeedUSDC.latestRoundData() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n      0xa0\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"ICO/ICOProxy.sol\":4106:4119  priceFeedUSDC */\n      dup7\n        /* \"ICO/ICOProxy.sol\":4106:4137  priceFeedUSDC.latestRoundData() */\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_287\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n        /* \"ICO/ICOProxy.sol\":4026:4241  if (paymentMethod == PaymentMethod.USDC) {... */\n    tag_308:\n        /* \"ICO/ICOProxy.sol\":3601:4247  function _getPriceFeed(PaymentMethod paymentMethod)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ICO/ICOProxy.sol\":6611:7724  function calculatePaymentAmount(... */\n    tag_77:\n        /* \"ICO/ICOProxy.sol\":6738:6745  uint256 */\n      0x00\n        /* \"ICO/ICOProxy.sol\":6765:6776  tokenAmount */\n      dup2\n        /* \"ICO/ICOProxy.sol\":6780:6781  0 */\n      0x00\n        /* \"ICO/ICOProxy.sol\":6765:6781  tokenAmount != 0 */\n      sub\n        /* \"ICO/ICOProxy.sol\":6757:6809  require(tokenAmount != 0, \"Amount must be positive\") */\n      tag_311\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11044:11046   */\n      0x20\n        /* \"ICO/ICOProxy.sol\":6757:6809  require(tokenAmount != 0, \"Amount must be positive\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11026:11047   */\n      mstore\n        /* \"#utility.yul\":11083:11085   */\n      0x17\n        /* \"#utility.yul\":11063:11081   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11056:11086   */\n      mstore\n        /* \"#utility.yul\":11122:11147   */\n      0x416d6f756e74206d75737420626520706f736974697665000000000000000000\n        /* \"#utility.yul\":11102:11120   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11095:11148   */\n      mstore\n        /* \"#utility.yul\":11165:11183   */\n      0x64\n      add\n        /* \"ICO/ICOProxy.sol\":6757:6809  require(tokenAmount != 0, \"Amount must be positive\") */\n      tag_53\n        /* \"#utility.yul\":10842:11189   */\n      jump\n        /* \"ICO/ICOProxy.sol\":6757:6809  require(tokenAmount != 0, \"Amount must be positive\") */\n    tag_311:\n        /* \"ICO/ICOProxy.sol\":6820:6833  uint256 price */\n      0x00\n        /* \"ICO/ICOProxy.sol\":6836:6888  precision_mul_10(uint(_getPriceFeed(paymentMethod))) */\n      tag_314\n        /* \"ICO/ICOProxy.sol\":6858:6886  _getPriceFeed(paymentMethod) */\n      tag_173\n        /* \"ICO/ICOProxy.sol\":6872:6885  paymentMethod */\n      dup6\n        /* \"ICO/ICOProxy.sol\":6858:6871  _getPriceFeed */\n      tag_71\n        /* \"ICO/ICOProxy.sol\":6858:6886  _getPriceFeed(paymentMethod) */\n      jump\t// in\n        /* \"ICO/ICOProxy.sol\":6836:6888  precision_mul_10(uint(_getPriceFeed(paymentMethod))) */\n    tag_314:\n        /* \"ICO/ICOProxy.sol\":6820:6888  uint256 price = precision_mul_10(uint(_getPriceFeed(paymentMethod))) */\n      swap1\n      pop\n        /* \"ICO/ICOProxy.sol\":6907:6912  price */\n      dup1\n        /* \"ICO/ICOProxy.sol\":6916:6917  0 */\n      0x00\n        /* \"ICO/ICOProxy.sol\":6907:6917  price != 0 */\n      sub\n        /* \"ICO/ICOProxy.sol\":6899:6940  require(price != 0, \"Invalid price feed\") */\n      tag_316\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7367:7369   */\n      0x20\n        /* \"ICO/ICOProxy.sol\":6899:6940  require(price != 0, \"Invalid price feed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7349:7370   */\n      mstore\n        /* \"#utility.yul\":7406:7408   */\n      0x12\n        /* \"#utility.yul\":7386:7404   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7379:7409   */\n      mstore\n      shl(0x72, 0x125b9d985b1a59081c1c9a58d94819995959)\n        /* \"#utility.yul\":7425:7443   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7418:7466   */\n      mstore\n        /* \"#utility.yul\":7483:7501   */\n      0x64\n      add\n        /* \"ICO/ICOProxy.sol\":6899:6940  require(price != 0, \"Invalid price feed\") */\n      tag_53\n        /* \"#utility.yul\":7165:7507   */\n      jump\n        /* \"ICO/ICOProxy.sol\":6899:6940  require(price != 0, \"Invalid price feed\") */\n    tag_316:\n        /* \"ICO/ICOProxy.sol\":6951:6972  uint256 currentSaleId */\n      0x00\n        /* \"ICO/ICOProxy.sol\":6975:6993  getCurrentSaleId() */\n      tag_318\n        /* \"ICO/ICOProxy.sol\":14896:14905  saleCount */\n      sload(0x06)\n      swap1\n        /* \"ICO/ICOProxy.sol\":14821:14912  function getCurrentSaleId() public view returns (uint256) {... */\n      jump\n        /* \"ICO/ICOProxy.sol\":6975:6993  getCurrentSaleId() */\n    tag_318:\n        /* \"ICO/ICOProxy.sol\":6951:6993  uint256 currentSaleId = getCurrentSaleId() */\n      swap1\n      pop\n        /* \"ICO/ICOProxy.sol\":7011:7024  currentSaleId */\n      dup1\n        /* \"ICO/ICOProxy.sol\":7028:7029  0 */\n      0x00\n        /* \"ICO/ICOProxy.sol\":7011:7029  currentSaleId != 0 */\n      sub\n        /* \"ICO/ICOProxy.sol\":7003:7048  require(currentSaleId != 0, \"No active sale\") */\n      tag_319\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11396:11398   */\n      0x20\n        /* \"ICO/ICOProxy.sol\":7003:7048  require(currentSaleId != 0, \"No active sale\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11378:11399   */\n      mstore\n        /* \"#utility.yul\":11435:11437   */\n      0x0e\n        /* \"#utility.yul\":11415:11433   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11408:11438   */\n      mstore\n      shl(0x90, 0x4e6f206163746976652073616c65)\n        /* \"#utility.yul\":11454:11472   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11447:11491   */\n      mstore\n        /* \"#utility.yul\":11508:11526   */\n      0x64\n      add\n        /* \"ICO/ICOProxy.sol\":7003:7048  require(currentSaleId != 0, \"No active sale\") */\n      tag_53\n        /* \"#utility.yul\":11194:11532   */\n      jump\n        /* \"ICO/ICOProxy.sol\":7003:7048  require(currentSaleId != 0, \"No active sale\") */\n    tag_319:\n        /* \"ICO/ICOProxy.sol\":7058:7075  Sale storage sale */\n      0x00\n        /* \"ICO/ICOProxy.sol\":7078:7098  sales[currentSaleId] */\n      dup2\n      dup2\n      mstore\n        /* \"ICO/ICOProxy.sol\":7078:7083  sales */\n      0x0d\n        /* \"ICO/ICOProxy.sol\":7078:7098  sales[currentSaleId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"ICO/ICOProxy.sol\":7134:7152  sale.tokenPriceUSD */\n      0x02\n      dup2\n      add\n      sload\n        /* \"ICO/ICOProxy.sol\":7078:7098  sales[currentSaleId] */\n      swap1\n      swap2\n        /* \"ICO/ICOProxy.sol\":7191:7238  precision_div_18(tokenAmount * tokenPriceInUSD) */\n      tag_322\n        /* \"ICO/ICOProxy.sol\":7208:7237  tokenAmount * tokenPriceInUSD */\n      tag_168\n        /* \"ICO/ICOProxy.sol\":7134:7152  sale.tokenPriceUSD */\n      dup4\n        /* \"ICO/ICOProxy.sol\":7208:7219  tokenAmount */\n      dup10\n        /* \"ICO/ICOProxy.sol\":7208:7237  tokenAmount * tokenPriceInUSD */\n      tag_254\n      jump\t// in\n        /* \"ICO/ICOProxy.sol\":7191:7238  precision_div_18(tokenAmount * tokenPriceInUSD) */\n    tag_322:\n        /* \"ICO/ICOProxy.sol\":7163:7238  uint256 totalPaymentInUSD = precision_div_18(tokenAmount * tokenPriceInUSD) */\n      swap1\n      pop\n        /* \"ICO/ICOProxy.sol\":7249:7270  uint256 paymentAmount */\n      0x00\n      dup1\n        /* \"ICO/ICOProxy.sol\":7284:7297  paymentMethod */\n      dup10\n        /* \"ICO/ICOProxy.sol\":7284:7318  paymentMethod == PaymentMethod.BNB */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_327\n      jumpi\n      tag_327\n      tag_248\n      jump\t// in\n    tag_327:\n      sub\n        /* \"ICO/ICOProxy.sol\":7280:7687  if (paymentMethod == PaymentMethod.BNB) {... */\n      tag_328\n      jumpi\n        /* \"ICO/ICOProxy.sol\":7396:7401  price */\n      dup6\n        /* \"ICO/ICOProxy.sol\":7350:7385  precision_mul_18(totalPaymentInUSD) */\n      tag_329\n        /* \"ICO/ICOProxy.sol\":7367:7384  totalPaymentInUSD */\n      dup4\n        /* \"ICO/ICOProxy.sol\":7350:7366  precision_mul_18 */\n      tag_94\n        /* \"ICO/ICOProxy.sol\":7350:7385  precision_mul_18(totalPaymentInUSD) */\n      jump\t// in\n    tag_329:\n        /* \"ICO/ICOProxy.sol\":7350:7402  precision_mul_18(totalPaymentInUSD) / uint256(price) */\n      tag_330\n      swap2\n      swap1\n      tag_278\n      jump\t// in\n    tag_330:\n        /* \"ICO/ICOProxy.sol\":7334:7402  paymentAmount = precision_mul_18(totalPaymentInUSD) / uint256(price) */\n      swap1\n      pop\n        /* \"ICO/ICOProxy.sol\":7280:7687  if (paymentMethod == PaymentMethod.BNB) {... */\n      jump(tag_344)\n    tag_328:\n        /* \"ICO/ICOProxy.sol\":7453:7471  PaymentMethod.USDT */\n      0x01\n        /* \"ICO/ICOProxy.sol\":7436:7449  paymentMethod */\n      dup10\n        /* \"ICO/ICOProxy.sol\":7436:7471  paymentMethod == PaymentMethod.USDT */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_335\n      jumpi\n      tag_335\n      tag_248\n      jump\t// in\n    tag_335:\n      eq\n        /* \"ICO/ICOProxy.sol\":7436:7522  paymentMethod == PaymentMethod.USDT ||... */\n      dup1\n      tag_336\n      jumpi\n      pop\n        /* \"ICO/ICOProxy.sol\":7504:7522  PaymentMethod.USDC */\n      0x02\n        /* \"ICO/ICOProxy.sol\":7487:7500  paymentMethod */\n      dup10\n        /* \"ICO/ICOProxy.sol\":7487:7522  paymentMethod == PaymentMethod.USDC */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_340\n      jumpi\n      tag_340\n      tag_248\n      jump\t// in\n    tag_340:\n      eq\n        /* \"ICO/ICOProxy.sol\":7436:7522  paymentMethod == PaymentMethod.USDT ||... */\n    tag_336:\n        /* \"ICO/ICOProxy.sol\":7419:7687  if (... */\n      iszero\n      tag_265\n      jumpi\n        /* \"ICO/ICOProxy.sol\":7603:7608  price */\n      dup6\n        /* \"ICO/ICOProxy.sol\":7564:7591  totalPaymentInUSD * (10**6) */\n      tag_329\n        /* \"ICO/ICOProxy.sol\":7564:7581  totalPaymentInUSD */\n      dup4\n        /* \"ICO/ICOProxy.sol\":7585:7590  10**6 */\n      0x0f4240\n        /* \"ICO/ICOProxy.sol\":7564:7591  totalPaymentInUSD * (10**6) */\n      tag_254\n      jump\t// in\n        /* \"ICO/ICOProxy.sol\":7419:7687  if (... */\n    tag_344:\n        /* \"ICO/ICOProxy.sol\":7704:7717  paymentAmount */\n      swap9\n        /* \"ICO/ICOProxy.sol\":6611:7724  function calculatePaymentAmount(... */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ICO/ICOProxy.sol\":10159:10570  function finalizeICO()... */\n    tag_89:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3395:3416  _nonReentrantBefore() */\n      tag_348\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3395:3414  _nonReentrantBefore */\n      tag_349\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3395:3416  _nonReentrantBefore() */\n      jump\t// in\n    tag_348:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_351\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_352\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_351:\n        /* \"ICO/ICOProxy.sol\":3191:3205  isICOFinalized */\n      and(0xff, sload(0x09))\n        /* \"ICO/ICOProxy.sol\":3190:3205  !isICOFinalized */\n      iszero\n        /* \"ICO/ICOProxy.sol\":3182:3231  require(!isICOFinalized, \"ICO already finalized\") */\n      tag_354\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_53\n      swap1\n      tag_356\n      jump\t// in\n    tag_354:\n        /* \"ICO/ICOProxy.sol\":3293:3302  isFreezed */\n      sload(0x09)\n      0x010000\n      swap1\n      div\n      0xff\n      and\n        /* \"ICO/ICOProxy.sol\":3292:3302  !isFreezed */\n      iszero\n        /* \"ICO/ICOProxy.sol\":3284:3314  require(!isFreezed, \"freezed\") */\n      tag_358\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_53\n      swap1\n      tag_360\n      jump\t// in\n    tag_358:\n        /* \"ICO/ICOProxy.sol\":10334:10346  softCapInUSD */\n      sload(0x04)\n        /* \"ICO/ICOProxy.sol\":10311:10330  totalFundsRaisedUSD */\n      sload(0x07)\n        /* \"ICO/ICOProxy.sol\":10311:10346  totalFundsRaisedUSD >= softCapInUSD */\n      lt\n      iszero\n        /* \"ICO/ICOProxy.sol\":10290:10392  require(... */\n      tag_362\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12424:12426   */\n      0x20\n        /* \"ICO/ICOProxy.sol\":10290:10392  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12406:12427   */\n      mstore\n        /* \"#utility.yul\":12463:12465   */\n      0x14\n        /* \"#utility.yul\":12443:12461   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12436:12466   */\n      mstore\n      shl(0x62, 0x14dbd99d0810d85c081393dd0814995858da1959)\n        /* \"#utility.yul\":12482:12500   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12475:12525   */\n      mstore\n        /* \"#utility.yul\":12542:12560   */\n      0x64\n      add\n        /* \"ICO/ICOProxy.sol\":10290:10392  require(... */\n      tag_53\n        /* \"#utility.yul\":12222:12566   */\n      jump\n        /* \"ICO/ICOProxy.sol\":10290:10392  require(... */\n    tag_362:\n        /* \"ICO/ICOProxy.sol\":10410:10428  isTokensAirdropped */\n      sload(0x09)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"ICO/ICOProxy.sol\":10402:10454  require(isTokensAirdropped, \"Airdrop not completed\") */\n      tag_365\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12773:12775   */\n      0x20\n        /* \"ICO/ICOProxy.sol\":10402:10454  require(isTokensAirdropped, \"Airdrop not completed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12755:12776   */\n      mstore\n        /* \"#utility.yul\":12812:12814   */\n      0x15\n        /* \"#utility.yul\":12792:12810   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12785:12815   */\n      mstore\n      shl(0x5a, 0x105a5c991c9bdc081b9bdd0818dbdb5c1b195d1959)\n        /* \"#utility.yul\":12831:12849   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12824:12875   */\n      mstore\n        /* \"#utility.yul\":12892:12910   */\n      0x64\n      add\n        /* \"ICO/ICOProxy.sol\":10402:10454  require(isTokensAirdropped, \"Airdrop not completed\") */\n      tag_53\n        /* \"#utility.yul\":12571:12916   */\n      jump\n        /* \"ICO/ICOProxy.sol\":10402:10454  require(isTokensAirdropped, \"Airdrop not completed\") */\n    tag_365:\n        /* \"ICO/ICOProxy.sol\":10465:10479  isICOFinalized */\n      0x09\n        /* \"ICO/ICOProxy.sol\":10465:10486  isICOFinalized = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"ICO/ICOProxy.sol\":10482:10486  true */\n      0x01\n        /* \"ICO/ICOProxy.sol\":10465:10486  isICOFinalized = true */\n      or\n      swap1\n      sstore\n        /* \"ICO/ICOProxy.sol\":10496:10519  _transferFundsToOwner() */\n      tag_368\n        /* \"ICO/ICOProxy.sol\":10496:10517  _transferFundsToOwner */\n      tag_369\n        /* \"ICO/ICOProxy.sol\":10496:10519  _transferFundsToOwner() */\n      jump\t// in\n    tag_368:\n        /* \"ICO/ICOProxy.sol\":10547:10562  totalTokensSold */\n      sload(0x08)\n        /* \"ICO/ICOProxy.sol\":10534:10563  ICOFinalized(totalTokensSold) */\n      mload(0x40)\n      0x9c4b134da32aab35252391880a9f2a3c13a760d7817ae8823f2b301d3522045a\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3437:3457  _nonReentrantAfter() */\n      tag_370\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":1949:1950  1 */\n      0x01\n      0x00\n      dup1\n      mload\n      0x20\n      data_c8669cf8eaf883002b9f48e28846a8d408c9b58ea6613bace374265e43c9bc43\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":4113:4136  $._status = NOT_ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3860:4143  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3437:3457  _nonReentrantAfter() */\n    tag_370:\n        /* \"ICO/ICOProxy.sol\":10159:10570  function finalizeICO()... */\n      jump\t// out\n        /* \"ICO/ICOProxy.sol\":4355:4451  function precision_mul_18(uint val) public pure returns(uint){... */\n    tag_94:\n        /* \"ICO/ICOProxy.sol\":4411:4415  uint */\n      0x00\n        /* \"ICO/ICOProxy.sol\":4434:4444  val * 1e18 */\n      tag_239\n        /* \"ICO/ICOProxy.sol\":4434:4437  val */\n      dup3\n        /* \"ICO/ICOProxy.sol\":4440:4444  1e18 */\n      0x0de0b6b3a7640000\n        /* \"ICO/ICOProxy.sol\":4434:4444  val * 1e18 */\n      tag_254\n      jump\t// in\n        /* \"ICO/ICOProxy.sol\":1327:1353  address[] public investors */\n    tag_108:\n      0x0a\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_374\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_374:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4161:4375  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_117:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2655:2668  _checkProxy() */\n      tag_377\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2655:2666  _checkProxy */\n      tag_378\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2655:2668  _checkProxy() */\n      jump\t// in\n    tag_377:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4276:4312  _authorizeUpgrade(newImplementation) */\n      tag_380\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4294:4311  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4276:4293  _authorizeUpgrade */\n      tag_381\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4276:4312  _authorizeUpgrade(newImplementation) */\n      jump\t// in\n    tag_380:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4322:4368  _upgradeToAndCallUUPS(newImplementation, data) */\n      tag_382\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4344:4361  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4363:4367  data */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4322:4343  _upgradeToAndCallUUPS */\n      tag_383\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4322:4368  _upgradeToAndCallUUPS(newImplementation, data) */\n      jump\t// in\n    tag_382:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4161:4375  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3708:3842  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_120:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3777:3784  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2926:2946  _checkNotDelegated() */\n      tag_385\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2926:2944  _checkNotDelegated */\n      tag_386\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2926:2946  _checkNotDelegated() */\n      jump\t// in\n    tag_385:\n      pop\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3708:3842  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"ICO/ICOProxy.sol\":3338:3467  function freeze() external onlyOwner freezed {... */\n    tag_125:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_389\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_352\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_389:\n        /* \"ICO/ICOProxy.sol\":3293:3302  isFreezed */\n      sload(0x09)\n      0x010000\n      swap1\n      div\n      0xff\n      and\n        /* \"ICO/ICOProxy.sol\":3292:3302  !isFreezed */\n      iszero\n        /* \"ICO/ICOProxy.sol\":3284:3314  require(!isFreezed, \"freezed\") */\n      tag_391\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_53\n      swap1\n      tag_360\n      jump\t// in\n    tag_391:\n        /* \"ICO/ICOProxy.sol\":3444:3453  isFreezed */\n      0x09\n        /* \"ICO/ICOProxy.sol\":3444:3460  isFreezed = true */\n      dup1\n      sload\n      not(0xff0000)\n      and\n      0x010000\n      or\n      swap1\n      sstore\n        /* \"ICO/ICOProxy.sol\":3338:3467  function freeze() external onlyOwner freezed {... */\n      jump\t// out\n        /* \"ICO/ICOProxy.sol\":4659:5367  function createSale(... */\n    tag_134:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3395:3416  _nonReentrantBefore() */\n      tag_395\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3395:3414  _nonReentrantBefore */\n      tag_349\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3395:3416  _nonReentrantBefore() */\n      jump\t// in\n    tag_395:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_397\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_352\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_397:\n        /* \"ICO/ICOProxy.sol\":3191:3205  isICOFinalized */\n      and(0xff, sload(0x09))\n        /* \"ICO/ICOProxy.sol\":3190:3205  !isICOFinalized */\n      iszero\n        /* \"ICO/ICOProxy.sol\":3182:3231  require(!isICOFinalized, \"ICO already finalized\") */\n      tag_399\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_53\n      swap1\n      tag_356\n      jump\t// in\n    tag_399:\n        /* \"ICO/ICOProxy.sol\":3293:3302  isFreezed */\n      sload(0x09)\n      0x010000\n      swap1\n      div\n      0xff\n      and\n        /* \"ICO/ICOProxy.sol\":3292:3302  !isFreezed */\n      iszero\n        /* \"ICO/ICOProxy.sol\":3284:3314  require(!isFreezed, \"freezed\") */\n      tag_402\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_53\n      swap1\n      tag_360\n      jump\t// in\n    tag_402:\n        /* \"ICO/ICOProxy.sol\":4870:4885  block.timestamp */\n      timestamp\n        /* \"ICO/ICOProxy.sol\":4857:4867  _startTime */\n      dup4\n        /* \"ICO/ICOProxy.sol\":4857:4885  _startTime > block.timestamp */\n      gt\n        /* \"ICO/ICOProxy.sol\":4857:4910  _startTime > block.timestamp && _endTime > _startTime */\n      dup1\n      iszero\n      tag_405\n      jumpi\n      pop\n        /* \"ICO/ICOProxy.sol\":4900:4910  _startTime */\n      dup3\n        /* \"ICO/ICOProxy.sol\":4889:4897  _endTime */\n      dup3\n        /* \"ICO/ICOProxy.sol\":4889:4910  _endTime > _startTime */\n      gt\n        /* \"ICO/ICOProxy.sol\":4857:4910  _startTime > block.timestamp && _endTime > _startTime */\n    tag_405:\n        /* \"ICO/ICOProxy.sol\":4857:4954  _startTime > block.timestamp && _endTime > _startTime && block.timestamp > getLatestSaleEndTime() */\n      dup1\n      iszero\n      tag_406\n      jumpi\n      pop\n        /* \"ICO/ICOProxy.sol\":15005:15014  saleCount */\n      sload(0x06)\n        /* \"ICO/ICOProxy.sol\":14973:14980  uint256 */\n      0x00\n        /* \"ICO/ICOProxy.sol\":14999:15015  sales[saleCount] */\n      swap1\n      dup2\n      mstore\n        /* \"ICO/ICOProxy.sol\":14999:15004  sales */\n      0x0d\n        /* \"ICO/ICOProxy.sol\":14999:15015  sales[saleCount] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"ICO/ICOProxy.sol\":14999:15023  sales[saleCount].endTime */\n      0x01\n      add\n      sload\n        /* \"ICO/ICOProxy.sol\":4914:4929  block.timestamp */\n      timestamp\n        /* \"ICO/ICOProxy.sol\":4914:4954  block.timestamp > getLatestSaleEndTime() */\n      gt\n        /* \"ICO/ICOProxy.sol\":4857:4954  _startTime > block.timestamp && _endTime > _startTime && block.timestamp > getLatestSaleEndTime() */\n    tag_406:\n        /* \"ICO/ICOProxy.sol\":4837:5004  require(... */\n      tag_409\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13123:13125   */\n      0x20\n        /* \"ICO/ICOProxy.sol\":4837:5004  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13105:13126   */\n      mstore\n        /* \"#utility.yul\":13162:13164   */\n      0x18\n        /* \"#utility.yul\":13142:13160   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13135:13165   */\n      mstore\n        /* \"#utility.yul\":13201:13227   */\n      0x496e76616c69642073746172742074696d652072616e67650000000000000000\n        /* \"#utility.yul\":13181:13199   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13174:13228   */\n      mstore\n        /* \"#utility.yul\":13245:13263   */\n      0x64\n      add\n        /* \"ICO/ICOProxy.sol\":4837:5004  require(... */\n      tag_53\n        /* \"#utility.yul\":12921:13269   */\n      jump\n        /* \"ICO/ICOProxy.sol\":4837:5004  require(... */\n    tag_409:\n        /* \"ICO/ICOProxy.sol\":5026:5035  saleCount */\n      sload(0x06)\n        /* \"ICO/ICOProxy.sol\":5026:5038  saleCount +1 */\n      tag_412\n      swap1\n        /* \"ICO/ICOProxy.sol\":5037:5038  1 */\n      0x01\n        /* \"ICO/ICOProxy.sol\":5026:5038  saleCount +1 */\n      tag_413\n      jump\t// in\n    tag_412:\n        /* \"ICO/ICOProxy.sol\":5014:5023  saleCount */\n      0x06\n        /* \"ICO/ICOProxy.sol\":5014:5038  saleCount = saleCount +1 */\n      dup2\n      dup2\n      sstore\n        /* \"ICO/ICOProxy.sol\":5048:5065  Sale storage sale */\n      0x00\n        /* \"ICO/ICOProxy.sol\":5068:5084  sales[saleCount] */\n      swap2\n      dup3\n      mstore\n        /* \"ICO/ICOProxy.sol\":5068:5073  sales */\n      0x0d\n        /* \"ICO/ICOProxy.sol\":5068:5084  sales[saleCount] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"ICO/ICOProxy.sol\":5098:5125  sale.startTime = _startTime */\n      dup8\n      dup2\n      sstore\n        /* \"ICO/ICOProxy.sol\":5139:5151  sale.endTime */\n      0x01\n      dup2\n      add\n        /* \"ICO/ICOProxy.sol\":5139:5162  sale.endTime = _endTime */\n      dup8\n      swap1\n      sstore\n        /* \"ICO/ICOProxy.sol\":5176:5194  sale.tokenPriceUSD */\n      0x02\n      dup2\n      add\n        /* \"ICO/ICOProxy.sol\":5176:5211  sale.tokenPriceUSD = _tokenPriceUSD */\n      dup7\n      swap1\n      sstore\n        /* \"ICO/ICOProxy.sol\":5225:5240  sale.tokensSold */\n      0x03\n      dup2\n      add\n        /* \"ICO/ICOProxy.sol\":5225:5244  sale.tokensSold = 0 */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"ICO/ICOProxy.sol\":5258:5274  sale.isFinalized */\n      0x04\n      dup5\n      add\n        /* \"ICO/ICOProxy.sol\":5258:5282  sale.isFinalized = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"ICO/ICOProxy.sol\":5312:5321  saleCount */\n      swap2\n      sload\n        /* \"ICO/ICOProxy.sol\":5297:5360  NewSaleCreated(saleCount, _startTime, _endTime, _tokenPriceUSD) */\n      dup3\n      mload\n        /* \"#utility.yul\":13606:13631   */\n      dup8\n      dup2\n      mstore\n        /* \"#utility.yul\":13647:13665   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":13640:13674   */\n      dup7\n      swap1\n      mstore\n        /* \"#utility.yul\":13690:13708   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":13683:13717   */\n      dup5\n      swap1\n      mstore\n        /* \"ICO/ICOProxy.sol\":5297:5360  NewSaleCreated(saleCount, _startTime, _endTime, _tokenPriceUSD) */\n      0x63b43fa153147ade1de28ed76841cdbc34e510ed94dd1ff5a88e278b0b1ad9ba\n      swap1\n        /* \"#utility.yul\":13594:13596   */\n      0x60\n        /* \"#utility.yul\":13579:13597   */\n      add\n        /* \"ICO/ICOProxy.sol\":5297:5360  NewSaleCreated(saleCount, _startTime, _endTime, _tokenPriceUSD) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"ICO/ICOProxy.sol\":4827:5367  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3437:3457  _nonReentrantAfter() */\n      tag_416\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":1949:1950  1 */\n      0x01\n      0x00\n      dup1\n      mload\n      0x20\n      data_c8669cf8eaf883002b9f48e28846a8d408c9b58ea6613bace374265e43c9bc43\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":4113:4136  $._status = NOT_ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3860:4143  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3437:3457  _nonReentrantAfter() */\n    tag_416:\n        /* \"ICO/ICOProxy.sol\":4659:5367  function createSale(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_137:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_418\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_352\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_418:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      tag_370\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3246:3247  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3237  _transferOwnership */\n      tag_421\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      jump\t// in\n        /* \"ICO/ICOProxy.sol\":3473:3595  function unFreeze() external onlyOwner {... */\n    tag_144:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_423\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_352\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_423:\n        /* \"ICO/ICOProxy.sol\":3530:3539  isFreezed */\n      sload(0x09)\n      0x010000\n      swap1\n      div\n      0xff\n      and\n        /* \"ICO/ICOProxy.sol\":3522:3561  require(isFreezed ,\"Already UnFreezed\") */\n      tag_425\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13930:13932   */\n      0x20\n        /* \"ICO/ICOProxy.sol\":3522:3561  require(isFreezed ,\"Already UnFreezed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13912:13933   */\n      mstore\n        /* \"#utility.yul\":13969:13971   */\n      0x11\n        /* \"#utility.yul\":13949:13967   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13942:13972   */\n      mstore\n      shl(0x7a, 0x105b1c9958591e48155b919c99595e9959)\n        /* \"#utility.yul\":13988:14006   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13981:14028   */\n      mstore\n        /* \"#utility.yul\":14045:14063   */\n      0x64\n      add\n        /* \"ICO/ICOProxy.sol\":3522:3561  require(isFreezed ,\"Already UnFreezed\") */\n      tag_53\n        /* \"#utility.yul\":13728:14069   */\n      jump\n        /* \"ICO/ICOProxy.sol\":3522:3561  require(isFreezed ,\"Already UnFreezed\") */\n    tag_425:\n        /* \"ICO/ICOProxy.sol\":3571:3580  isFreezed */\n      0x09\n        /* \"ICO/ICOProxy.sol\":3571:3588  isFreezed = false */\n      dup1\n      sload\n      not(0xff0000)\n      and\n      swap1\n      sstore\n        /* \"ICO/ICOProxy.sol\":3473:3595  function unFreeze() external onlyOwner {... */\n      jump\t// out\n        /* \"ICO/ICOProxy.sol\":12677:14723  function initiateRefund() external nonReentrant onlyOwner icoNotFinalized {... */\n    tag_147:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3395:3416  _nonReentrantBefore() */\n      tag_429\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3395:3414  _nonReentrantBefore */\n      tag_349\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3395:3416  _nonReentrantBefore() */\n      jump\t// in\n    tag_429:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_431\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_352\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_431:\n        /* \"ICO/ICOProxy.sol\":3191:3205  isICOFinalized */\n      and(0xff, sload(0x09))\n        /* \"ICO/ICOProxy.sol\":3190:3205  !isICOFinalized */\n      iszero\n        /* \"ICO/ICOProxy.sol\":3182:3231  require(!isICOFinalized, \"ICO already finalized\") */\n      tag_433\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_53\n      swap1\n      tag_356\n      jump\t// in\n    tag_433:\n        /* \"ICO/ICOProxy.sol\":15005:15014  saleCount */\n      sload(0x06)\n        /* \"ICO/ICOProxy.sol\":14973:14980  uint256 */\n      0x00\n        /* \"ICO/ICOProxy.sol\":14999:15015  sales[saleCount] */\n      swap1\n      dup2\n      mstore\n        /* \"ICO/ICOProxy.sol\":14999:15004  sales */\n      0x0d\n        /* \"ICO/ICOProxy.sol\":14999:15015  sales[saleCount] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"ICO/ICOProxy.sol\":14999:15023  sales[saleCount].endTime */\n      0x01\n      add\n      sload\n        /* \"ICO/ICOProxy.sol\":12769:12784  block.timestamp */\n      timestamp\n        /* \"ICO/ICOProxy.sol\":12769:12809  block.timestamp > getLatestSaleEndTime() */\n      gt\n        /* \"ICO/ICOProxy.sol\":12761:12826  require(block.timestamp > getLatestSaleEndTime(), \"Sale ongoing\") */\n      tag_437\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14276:14278   */\n      0x20\n        /* \"ICO/ICOProxy.sol\":12761:12826  require(block.timestamp > getLatestSaleEndTime(), \"Sale ongoing\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14258:14279   */\n      mstore\n        /* \"#utility.yul\":14315:14317   */\n      0x0c\n        /* \"#utility.yul\":14295:14313   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14288:14318   */\n      mstore\n      shl(0xa0, 0x53616c65206f6e676f696e67)\n        /* \"#utility.yul\":14334:14352   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14327:14369   */\n      mstore\n        /* \"#utility.yul\":14386:14404   */\n      0x64\n      add\n        /* \"ICO/ICOProxy.sol\":12761:12826  require(block.timestamp > getLatestSaleEndTime(), \"Sale ongoing\") */\n      tag_53\n        /* \"#utility.yul\":14074:14410   */\n      jump\n        /* \"ICO/ICOProxy.sol\":12761:12826  require(block.timestamp > getLatestSaleEndTime(), \"Sale ongoing\") */\n    tag_437:\n        /* \"ICO/ICOProxy.sol\":12866:12878  softCapInUSD */\n      sload(0x04)\n        /* \"ICO/ICOProxy.sol\":12844:12863  totalFundsRaisedUSD */\n      sload(0x07)\n        /* \"ICO/ICOProxy.sol\":12844:12878  totalFundsRaisedUSD < softCapInUSD */\n      lt\n        /* \"ICO/ICOProxy.sol\":12836:12899  require(totalFundsRaisedUSD < softCapInUSD, \"Soft cap reached\") */\n      tag_440\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14617:14619   */\n      0x20\n        /* \"ICO/ICOProxy.sol\":12836:12899  require(totalFundsRaisedUSD < softCapInUSD, \"Soft cap reached\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14599:14620   */\n      mstore\n        /* \"#utility.yul\":14656:14658   */\n      0x10\n        /* \"#utility.yul\":14636:14654   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14629:14659   */\n      mstore\n      shl(0x82, 0x14dbd99d0818d85c081c995858da1959)\n        /* \"#utility.yul\":14675:14693   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14668:14714   */\n      mstore\n        /* \"#utility.yul\":14731:14749   */\n      0x64\n      add\n        /* \"ICO/ICOProxy.sol\":12836:12899  require(totalFundsRaisedUSD < softCapInUSD, \"Soft cap reached\") */\n      tag_53\n        /* \"#utility.yul\":14415:14755   */\n      jump\n        /* \"ICO/ICOProxy.sol\":12836:12899  require(totalFundsRaisedUSD < softCapInUSD, \"Soft cap reached\") */\n    tag_440:\n        /* \"ICO/ICOProxy.sol\":12935:12944  investors */\n      0x0a\n        /* \"ICO/ICOProxy.sol\":12935:12951  investors.length */\n      dup1\n      sload\n      swap1\n        /* \"ICO/ICOProxy.sol\":12910:12932  uint256 investorLength */\n      0x00\n      swap1\n        /* \"ICO/ICOProxy.sol\":13001:13020  investorLength > 10 */\n      dup3\n      gt\n        /* \"ICO/ICOProxy.sol\":12997:13138  if (investorLength > 10) {... */\n      iszero\n      tag_443\n      jumpi\n        /* \"ICO/ICOProxy.sol\":13056:13075  investorLength - 11 */\n      tag_444\n        /* \"ICO/ICOProxy.sol\":13073:13075  11 */\n      0x0b\n        /* \"ICO/ICOProxy.sol\":13056:13070  investorLength */\n      dup4\n        /* \"ICO/ICOProxy.sol\":13056:13075  investorLength - 11 */\n      tag_267\n      jump\t// in\n    tag_444:\n        /* \"ICO/ICOProxy.sol\":13036:13075  investorsIterated = investorLength - 11 */\n      swap1\n      pop\n        /* \"ICO/ICOProxy.sol\":12997:13138  if (investorLength > 10) {... */\n      jump(tag_445)\n    tag_443:\n      pop\n        /* \"ICO/ICOProxy.sol\":13126:13127  0 */\n      0x00\n        /* \"ICO/ICOProxy.sol\":12997:13138  if (investorLength > 10) {... */\n    tag_445:\n        /* \"ICO/ICOProxy.sol\":13153:13162  uint256 i */\n      0x00\n        /* \"ICO/ICOProxy.sol\":13165:13183  investorLength - 1 */\n      tag_449\n        /* \"ICO/ICOProxy.sol\":13182:13183  1 */\n      0x01\n        /* \"ICO/ICOProxy.sol\":13165:13179  investorLength */\n      dup5\n        /* \"ICO/ICOProxy.sol\":13165:13183  investorLength - 1 */\n      tag_267\n      jump\t// in\n    tag_449:\n        /* \"ICO/ICOProxy.sol\":13153:13183  uint256 i = investorLength - 1 */\n      swap1\n      pop\n        /* \"ICO/ICOProxy.sol\":13148:14635  for (uint256 i = investorLength - 1; i >= investorsIterated; i--) {... */\n    tag_446:\n        /* \"ICO/ICOProxy.sol\":13190:13207  investorsIterated */\n      dup2\n        /* \"ICO/ICOProxy.sol\":13185:13186  i */\n      dup2\n        /* \"ICO/ICOProxy.sol\":13185:13207  i >= investorsIterated */\n      lt\n        /* \"ICO/ICOProxy.sol\":13148:14635  for (uint256 i = investorLength - 1; i >= investorsIterated; i--) {... */\n      tag_447\n      jumpi\n        /* \"ICO/ICOProxy.sol\":13228:13244  address investor */\n      0x00\n        /* \"ICO/ICOProxy.sol\":13247:13256  investors */\n      0x0a\n        /* \"ICO/ICOProxy.sol\":13257:13258  i */\n      dup3\n        /* \"ICO/ICOProxy.sol\":13247:13259  investors[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_451\n      jumpi\n      tag_451\n      tag_452\n      jump\t// in\n    tag_451:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap2\n      pop\n        /* \"ICO/ICOProxy.sol\":13273:14525  for (uint8 j = 0; j < 3; j++) {... */\n    tag_454:\n        /* \"ICO/ICOProxy.sol\":13295:13296  3 */\n      0x03\n        /* \"ICO/ICOProxy.sol\":13291:13292  j */\n      dup2\n        /* \"ICO/ICOProxy.sol\":13291:13296  j < 3 */\n      0xff\n      and\n      lt\n        /* \"ICO/ICOProxy.sol\":13273:14525  for (uint8 j = 0; j < 3; j++) {... */\n      iszero\n      tag_455\n      jumpi\n        /* \"ICO/ICOProxy.sol\":13321:13348  PaymentMethod paymentMethod */\n      0x00\n        /* \"ICO/ICOProxy.sol\":13365:13366  j */\n      dup2\n        /* \"ICO/ICOProxy.sol\":13351:13367  PaymentMethod(j) */\n      0xff\n      and\n      0x02\n      dup2\n      gt\n      iszero\n      tag_458\n      jumpi\n      tag_458\n      tag_248\n      jump\t// in\n    tag_458:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ICO/ICOProxy.sol\":13402:13428  investorPayments[investor] */\n      dup5\n      and\n        /* \"ICO/ICOProxy.sol\":13385:13399  uint256 amount */\n      0x00\n        /* \"ICO/ICOProxy.sol\":13402:13428  investorPayments[investor] */\n      swap1\n      dup2\n      mstore\n        /* \"ICO/ICOProxy.sol\":13402:13418  investorPayments */\n      0x11\n        /* \"ICO/ICOProxy.sol\":13402:13428  investorPayments[investor] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"ICO/ICOProxy.sol\":13321:13367  PaymentMethod paymentMethod = PaymentMethod(j) */\n      swap2\n      swap3\n      pop\n        /* \"ICO/ICOProxy.sol\":13385:13399  uint256 amount */\n      swap1\n      dup2\n        /* \"ICO/ICOProxy.sol\":13321:13367  PaymentMethod paymentMethod = PaymentMethod(j) */\n      dup4\n        /* \"ICO/ICOProxy.sol\":13402:13443  investorPayments[investor][paymentMethod] */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_460\n      jumpi\n      tag_460\n      tag_248\n      jump\t// in\n    tag_460:\n      0x02\n      dup2\n      gt\n      iszero\n      tag_462\n      jumpi\n      tag_462\n      tag_248\n      jump\t// in\n    tag_462:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ICO/ICOProxy.sol\":13385:13443  uint256 amount = investorPayments[investor][paymentMethod] */\n      swap1\n      pop\n        /* \"ICO/ICOProxy.sol\":13475:13476  0 */\n      0x00\n        /* \"ICO/ICOProxy.sol\":13466:13472  amount */\n      dup2\n        /* \"ICO/ICOProxy.sol\":13466:13476  amount > 0 */\n      gt\n        /* \"ICO/ICOProxy.sol\":13462:14494  if (amount > 0) {... */\n      iszero\n      tag_463\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ICO/ICOProxy.sol\":13500:13526  investorPayments[investor] */\n      dup5\n      and\n        /* \"ICO/ICOProxy.sol\":13544:13545  0 */\n      0x00\n        /* \"ICO/ICOProxy.sol\":13500:13526  investorPayments[investor] */\n      swap1\n      dup2\n      mstore\n        /* \"ICO/ICOProxy.sol\":13500:13516  investorPayments */\n      0x11\n        /* \"ICO/ICOProxy.sol\":13500:13526  investorPayments[investor] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"ICO/ICOProxy.sol\":13544:13545  0 */\n      dup2\n        /* \"ICO/ICOProxy.sol\":13527:13540  paymentMethod */\n      dup5\n        /* \"ICO/ICOProxy.sol\":13500:13541  investorPayments[investor][paymentMethod] */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_465\n      jumpi\n      tag_465\n      tag_248\n      jump\t// in\n    tag_465:\n      0x02\n      dup2\n      gt\n      iszero\n      tag_467\n      jumpi\n      tag_467\n      tag_248\n      jump\t// in\n    tag_467:\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"ICO/ICOProxy.sol\":13500:13545  investorPayments[investor][paymentMethod] = 0 */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"ICO/ICOProxy.sol\":13571:13584  paymentMethod */\n      dup3\n        /* \"ICO/ICOProxy.sol\":13571:13605  paymentMethod == PaymentMethod.BNB */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_471\n      jumpi\n      tag_471\n      tag_248\n      jump\t// in\n    tag_471:\n      sub\n        /* \"ICO/ICOProxy.sol\":13567:14380  if (paymentMethod == PaymentMethod.BNB) {... */\n      tag_472\n      jumpi\n        /* \"ICO/ICOProxy.sol\":13634:13643  bool sent */\n      0x00\n        /* \"ICO/ICOProxy.sol\":13657:13665  investor */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ICO/ICOProxy.sol\":13649:13671  payable(investor).call */\n      and\n        /* \"ICO/ICOProxy.sol\":13679:13685  amount */\n      dup3\n        /* \"ICO/ICOProxy.sol\":13649:13744  payable(investor).call{value: amount}(... */\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_477\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_476)\n    tag_477:\n      0x60\n      swap2\n      pop\n    tag_476:\n      pop\n        /* \"ICO/ICOProxy.sol\":13633:13744  (bool sent, ) = payable(investor).call{value: amount}(... */\n      pop\n      swap1\n      pop\n        /* \"ICO/ICOProxy.sol\":13778:13782  sent */\n      dup1\n        /* \"ICO/ICOProxy.sol\":13770:13804  require(sent, \"BNB refund failed\") */\n      tag_478\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15304:15306   */\n      0x20\n        /* \"ICO/ICOProxy.sol\":13770:13804  require(sent, \"BNB refund failed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15286:15307   */\n      mstore\n        /* \"#utility.yul\":15343:15345   */\n      0x11\n        /* \"#utility.yul\":15323:15341   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15316:15346   */\n      mstore\n      shl(0x7a, 0x109390881c99599d5b990819985a5b1959)\n        /* \"#utility.yul\":15362:15380   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15355:15402   */\n      mstore\n        /* \"#utility.yul\":15419:15437   */\n      0x64\n      add\n        /* \"ICO/ICOProxy.sol\":13770:13804  require(sent, \"BNB refund failed\") */\n      tag_53\n        /* \"#utility.yul\":15102:15443   */\n      jump\n        /* \"ICO/ICOProxy.sol\":13770:13804  require(sent, \"BNB refund failed\") */\n    tag_478:\n        /* \"ICO/ICOProxy.sol\":13607:13827  {... */\n      pop\n        /* \"ICO/ICOProxy.sol\":13567:14380  if (paymentMethod == PaymentMethod.BNB) {... */\n      jump(tag_491)\n    tag_472:\n        /* \"ICO/ICOProxy.sol\":13879:13897  PaymentMethod.USDT */\n      0x01\n        /* \"ICO/ICOProxy.sol\":13862:13875  paymentMethod */\n      dup3\n        /* \"ICO/ICOProxy.sol\":13862:13897  paymentMethod == PaymentMethod.USDT */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_485\n      jumpi\n      tag_485\n      tag_248\n      jump\t// in\n    tag_485:\n      eq\n        /* \"ICO/ICOProxy.sol\":13862:13960  paymentMethod == PaymentMethod.USDT ||... */\n      dup1\n      tag_486\n      jumpi\n      pop\n        /* \"ICO/ICOProxy.sol\":13942:13960  PaymentMethod.USDC */\n      0x02\n        /* \"ICO/ICOProxy.sol\":13925:13938  paymentMethod */\n      dup3\n        /* \"ICO/ICOProxy.sol\":13925:13960  paymentMethod == PaymentMethod.USDC */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_490\n      jumpi\n      tag_490\n      tag_248\n      jump\t// in\n    tag_490:\n      eq\n        /* \"ICO/ICOProxy.sol\":13862:13960  paymentMethod == PaymentMethod.USDT ||... */\n    tag_486:\n        /* \"ICO/ICOProxy.sol\":13833:14380  if (... */\n      iszero\n      tag_491\n      jumpi\n        /* \"ICO/ICOProxy.sol\":14009:14026  IERC20 stablecoin */\n      0x00\n        /* \"ICO/ICOProxy.sol\":14046:14064  PaymentMethod.USDT */\n      0x01\n        /* \"ICO/ICOProxy.sol\":14029:14042  paymentMethod */\n      dup4\n        /* \"ICO/ICOProxy.sol\":14029:14064  paymentMethod == PaymentMethod.USDT */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_495\n      jumpi\n      tag_495\n      tag_248\n      jump\t// in\n    tag_495:\n      eq\n        /* \"ICO/ICOProxy.sol\":14029:14150  paymentMethod == PaymentMethod.USDT... */\n      tag_496\n      jumpi\n        /* \"ICO/ICOProxy.sol\":14145:14149  usdc */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0c))\n        /* \"ICO/ICOProxy.sol\":14029:14150  paymentMethod == PaymentMethod.USDT... */\n      jump(tag_497)\n    tag_496:\n        /* \"ICO/ICOProxy.sol\":14102:14106  usdt */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0b))\n        /* \"ICO/ICOProxy.sol\":14029:14150  paymentMethod == PaymentMethod.USDT... */\n    tag_497:\n        /* \"ICO/ICOProxy.sol\":14213:14250  stablecoin.transfer(investor, amount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":15640:15672   */\n      dup8\n      dup2\n      and\n        /* \"ICO/ICOProxy.sol\":14213:14250  stablecoin.transfer(investor, amount) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":15622:15673   */\n      mstore\n        /* \"#utility.yul\":15689:15707   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15682:15716   */\n      dup6\n      swap1\n      mstore\n        /* \"ICO/ICOProxy.sol\":14009:14150  IERC20 stablecoin = paymentMethod == PaymentMethod.USDT... */\n      swap2\n      swap3\n      pop\n        /* \"ICO/ICOProxy.sol\":14213:14232  stablecoin.transfer */\n      swap1\n      dup3\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":15595:15613   */\n      0x44\n      add\n        /* \"ICO/ICOProxy.sol\":14213:14250  stablecoin.transfer(investor, amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_501\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_501:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_502\n      swap2\n      swap1\n      tag_503\n      jump\t// in\n    tag_502:\n        /* \"ICO/ICOProxy.sol\":14176:14332  require(... */\n      tag_504\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":16211:16213   */\n      0x20\n        /* \"ICO/ICOProxy.sol\":14176:14332  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16193:16214   */\n      mstore\n        /* \"#utility.yul\":16250:16252   */\n      0x18\n        /* \"#utility.yul\":16230:16248   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":16223:16253   */\n      mstore\n        /* \"#utility.yul\":16289:16315   */\n      0x537461626c65636f696e20726566756e64206661696c65640000000000000000\n        /* \"#utility.yul\":16269:16287   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":16262:16316   */\n      mstore\n        /* \"#utility.yul\":16333:16351   */\n      0x64\n      add\n        /* \"ICO/ICOProxy.sol\":14176:14332  require(... */\n      tag_53\n        /* \"#utility.yul\":16009:16357   */\n      jump\n        /* \"ICO/ICOProxy.sol\":14176:14332  require(... */\n    tag_504:\n        /* \"ICO/ICOProxy.sol\":13983:14380  {... */\n      pop\n        /* \"ICO/ICOProxy.sol\":13833:14380  if (... */\n    tag_491:\n        /* \"ICO/ICOProxy.sol\":14443:14451  investor */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ICO/ICOProxy.sol\":14427:14475  RefundInitiated(investor, amount, paymentMethod) */\n      and\n      0x03829ab241648d7348f97e4f77d36451330f2276ea8eeb3428e462012f9699e7\n        /* \"ICO/ICOProxy.sol\":14453:14459  amount */\n      dup3\n        /* \"ICO/ICOProxy.sol\":14461:14474  paymentMethod */\n      dup5\n        /* \"ICO/ICOProxy.sol\":14427:14475  RefundInitiated(investor, amount, paymentMethod) */\n      mload(0x40)\n      tag_507\n      swap3\n      swap2\n      swap1\n      tag_508\n      jump\t// in\n    tag_507:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"ICO/ICOProxy.sol\":13462:14494  if (amount > 0) {... */\n    tag_463:\n      pop\n      pop\n        /* \"ICO/ICOProxy.sol\":13298:13301  j++ */\n      0x01\n      add\n        /* \"ICO/ICOProxy.sol\":13273:14525  for (uint8 j = 0; j < 3; j++) {... */\n      jump(tag_454)\n    tag_455:\n      pop\n        /* \"ICO/ICOProxy.sol\":14538:14547  investors */\n      0x0a\n        /* \"ICO/ICOProxy.sol\":14538:14553  investors.pop() */\n      dup1\n      sload\n      dup1\n      tag_510\n      jumpi\n      tag_510\n      tag_511\n      jump\t// in\n    tag_510:\n      0x00\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      keccak256\n      dup3\n      add\n      not(0x00)\n      swap1\n      dup2\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n      swap1\n      swap2\n      add\n      swap1\n      swap2\n      sstore\n        /* \"ICO/ICOProxy.sol\":14571:14577  i == 0 */\n      dup3\n      swap1\n      sub\n        /* \"ICO/ICOProxy.sol\":14567:14625  if (i == 0) {... */\n      tag_513\n      jumpi\n        /* \"ICO/ICOProxy.sol\":14601:14606  break */\n      pop\n      jump(tag_447)\n        /* \"ICO/ICOProxy.sol\":14567:14625  if (i == 0) {... */\n    tag_513:\n      pop\n        /* \"ICO/ICOProxy.sol\":13209:13212  i-- */\n      dup1\n      tag_514\n      dup2\n      tag_515\n      jump\t// in\n    tag_514:\n      swap2\n      pop\n      pop\n        /* \"ICO/ICOProxy.sol\":13148:14635  for (uint256 i = investorLength - 1; i >= investorsIterated; i--) {... */\n      jump(tag_446)\n    tag_447:\n      pop\n        /* \"ICO/ICOProxy.sol\":14648:14657  investors */\n      0x0a\n        /* \"ICO/ICOProxy.sol\":14648:14664  investors.length */\n      sload\n        /* \"ICO/ICOProxy.sol\":14668:14669  0 */\n      0x00\n        /* \"ICO/ICOProxy.sol\":14648:14669  investors.length == 0 */\n      sub\n        /* \"ICO/ICOProxy.sol\":14644:14717  if (investors.length == 0) {... */\n      tag_516\n      jumpi\n        /* \"ICO/ICOProxy.sol\":14685:14699  isICOFinalized */\n      0x09\n        /* \"ICO/ICOProxy.sol\":14685:14706  isICOFinalized = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"ICO/ICOProxy.sol\":14702:14706  true */\n      0x01\n        /* \"ICO/ICOProxy.sol\":14685:14706  isICOFinalized = true */\n      or\n      swap1\n      sstore\n        /* \"ICO/ICOProxy.sol\":14644:14717  if (investors.length == 0) {... */\n    tag_516:\n        /* \"ICO/ICOProxy.sol\":12751:14723  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3437:3457  _nonReentrantAfter() */\n      tag_370\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":1949:1950  1 */\n      0x01\n      0x00\n      dup1\n      mload\n      0x20\n      data_c8669cf8eaf883002b9f48e28846a8d408c9b58ea6613bace374265e43c9bc43\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":4113:4136  $._status = NOT_ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3860:4143  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_150:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2578  $._owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n      jump\t// out\n        /* \"ICO/ICOProxy.sol\":11362:12671  function airdropTokens()... */\n    tag_154:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3395:3416  _nonReentrantBefore() */\n      tag_522\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3395:3414  _nonReentrantBefore */\n      tag_349\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3395:3416  _nonReentrantBefore() */\n      jump\t// in\n    tag_522:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_524\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_352\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_524:\n        /* \"ICO/ICOProxy.sol\":3191:3205  isICOFinalized */\n      and(0xff, sload(0x09))\n        /* \"ICO/ICOProxy.sol\":3190:3205  !isICOFinalized */\n      iszero\n        /* \"ICO/ICOProxy.sol\":3182:3231  require(!isICOFinalized, \"ICO already finalized\") */\n      tag_526\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_53\n      swap1\n      tag_356\n      jump\t// in\n    tag_526:\n        /* \"ICO/ICOProxy.sol\":3293:3302  isFreezed */\n      sload(0x09)\n      0x010000\n      swap1\n      div\n      0xff\n      and\n        /* \"ICO/ICOProxy.sol\":3292:3302  !isFreezed */\n      iszero\n        /* \"ICO/ICOProxy.sol\":3284:3314  require(!isFreezed, \"freezed\") */\n      tag_529\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_53\n      swap1\n      tag_360\n      jump\t// in\n    tag_529:\n        /* \"ICO/ICOProxy.sol\":11506:11524  isTokensAirdropped */\n      sload(0x09)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"ICO/ICOProxy.sol\":11505:11524  !isTokensAirdropped */\n      iszero\n        /* \"ICO/ICOProxy.sol\":11497:11554  require(!isTokensAirdropped, \"Airdrop already completed\") */\n      tag_532\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":17375:17377   */\n      0x20\n        /* \"ICO/ICOProxy.sol\":11497:11554  require(!isTokensAirdropped, \"Airdrop already completed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":17357:17378   */\n      mstore\n        /* \"#utility.yul\":17414:17416   */\n      0x19\n        /* \"#utility.yul\":17394:17412   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":17387:17417   */\n      mstore\n        /* \"#utility.yul\":17453:17480   */\n      0x41697264726f7020616c726561647920636f6d706c6574656400000000000000\n        /* \"#utility.yul\":17433:17451   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":17426:17481   */\n      mstore\n        /* \"#utility.yul\":17498:17516   */\n      0x64\n      add\n        /* \"ICO/ICOProxy.sol\":11497:11554  require(!isTokensAirdropped, \"Airdrop already completed\") */\n      tag_53\n        /* \"#utility.yul\":17173:17522   */\n      jump\n        /* \"ICO/ICOProxy.sol\":11497:11554  require(!isTokensAirdropped, \"Airdrop already completed\") */\n    tag_532:\n        /* \"ICO/ICOProxy.sol\":11616:11631  totalTokensSold */\n      sload(0x08)\n        /* \"ICO/ICOProxy.sol\":11585:11590  token */\n      sload(0x03)\n        /* \"ICO/ICOProxy.sol\":11585:11612  token.balanceOf(msg.sender) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"ICO/ICOProxy.sol\":11601:11611  msg.sender */\n      caller\n        /* \"ICO/ICOProxy.sol\":11585:11612  token.balanceOf(msg.sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2019:2070   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ICO/ICOProxy.sol\":11585:11590  token */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"ICO/ICOProxy.sol\":11585:11600  token.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1992:2010   */\n      0x24\n      add\n        /* \"ICO/ICOProxy.sol\":11585:11612  token.balanceOf(msg.sender) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_537\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_537:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_538\n      swap2\n      swap1\n      tag_539\n      jump\t// in\n    tag_538:\n        /* \"ICO/ICOProxy.sol\":11585:11631  token.balanceOf(msg.sender) >= totalTokensSold */\n      lt\n      iszero\n        /* \"ICO/ICOProxy.sol\":11564:11675  require(... */\n      tag_540\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":17964:17966   */\n      0x20\n        /* \"ICO/ICOProxy.sol\":11564:11675  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":17946:17967   */\n      mstore\n        /* \"#utility.yul\":18003:18005   */\n      0x12\n        /* \"#utility.yul\":17983:18001   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":17976:18006   */\n      mstore\n      shl(0x70, 0x496e73756666696369656e742046756e6473)\n        /* \"#utility.yul\":18022:18040   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":18015:18063   */\n      mstore\n        /* \"#utility.yul\":18080:18098   */\n      0x64\n      add\n        /* \"ICO/ICOProxy.sol\":11564:11675  require(... */\n      tag_53\n        /* \"#utility.yul\":17762:18104   */\n      jump\n        /* \"ICO/ICOProxy.sol\":11564:11675  require(... */\n    tag_540:\n        /* \"ICO/ICOProxy.sol\":15005:15014  saleCount */\n      sload(0x06)\n        /* \"ICO/ICOProxy.sol\":14973:14980  uint256 */\n      0x00\n        /* \"ICO/ICOProxy.sol\":14999:15015  sales[saleCount] */\n      swap1\n      dup2\n      mstore\n        /* \"ICO/ICOProxy.sol\":14999:15004  sales */\n      0x0d\n        /* \"ICO/ICOProxy.sol\":14999:15015  sales[saleCount] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"ICO/ICOProxy.sol\":14999:15023  sales[saleCount].endTime */\n      0x01\n      add\n      sload\n        /* \"ICO/ICOProxy.sol\":11693:11708  block.timestamp */\n      timestamp\n        /* \"ICO/ICOProxy.sol\":11693:11733  block.timestamp > getLatestSaleEndTime() */\n      gt\n        /* \"ICO/ICOProxy.sol\":11685:11750  require(block.timestamp > getLatestSaleEndTime(), \"Sale ongoing\") */\n      tag_544\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14276:14278   */\n      0x20\n        /* \"ICO/ICOProxy.sol\":11685:11750  require(block.timestamp > getLatestSaleEndTime(), \"Sale ongoing\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14258:14279   */\n      mstore\n        /* \"#utility.yul\":14315:14317   */\n      0x0c\n        /* \"#utility.yul\":14295:14313   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14288:14318   */\n      mstore\n      shl(0xa0, 0x53616c65206f6e676f696e67)\n        /* \"#utility.yul\":14334:14352   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14327:14369   */\n      mstore\n        /* \"#utility.yul\":14386:14404   */\n      0x64\n      add\n        /* \"ICO/ICOProxy.sol\":11685:11750  require(block.timestamp > getLatestSaleEndTime(), \"Sale ongoing\") */\n      tag_53\n        /* \"#utility.yul\":14074:14410   */\n      jump\n        /* \"ICO/ICOProxy.sol\":11685:11750  require(block.timestamp > getLatestSaleEndTime(), \"Sale ongoing\") */\n    tag_544:\n        /* \"ICO/ICOProxy.sol\":11786:11795  investors */\n      0x0a\n        /* \"ICO/ICOProxy.sol\":11786:11802  investors.length */\n      dup1\n      sload\n      swap1\n        /* \"ICO/ICOProxy.sol\":11761:11783  uint256 investorLength */\n      0x00\n      swap1\n        /* \"ICO/ICOProxy.sol\":11852:11871  investorLength > 10 */\n      dup3\n      gt\n        /* \"ICO/ICOProxy.sol\":11848:11989  if (investorLength > 10) {... */\n      iszero\n      tag_546\n      jumpi\n        /* \"ICO/ICOProxy.sol\":11907:11926  investorLength - 11 */\n      tag_547\n        /* \"ICO/ICOProxy.sol\":11924:11926  11 */\n      0x0b\n        /* \"ICO/ICOProxy.sol\":11907:11921  investorLength */\n      dup4\n        /* \"ICO/ICOProxy.sol\":11907:11926  investorLength - 11 */\n      tag_267\n      jump\t// in\n    tag_547:\n        /* \"ICO/ICOProxy.sol\":11887:11926  investorsIterated = investorLength - 11 */\n      swap1\n      pop\n        /* \"ICO/ICOProxy.sol\":11848:11989  if (investorLength > 10) {... */\n      jump(tag_548)\n    tag_546:\n      pop\n        /* \"ICO/ICOProxy.sol\":11977:11978  0 */\n      0x00\n        /* \"ICO/ICOProxy.sol\":11848:11989  if (investorLength > 10) {... */\n    tag_548:\n        /* \"ICO/ICOProxy.sol\":12003:12012  uint256 i */\n      0x00\n        /* \"ICO/ICOProxy.sol\":12015:12033  investorLength - 1 */\n      tag_552\n        /* \"ICO/ICOProxy.sol\":12032:12033  1 */\n      0x01\n        /* \"ICO/ICOProxy.sol\":12015:12029  investorLength */\n      dup5\n        /* \"ICO/ICOProxy.sol\":12015:12033  investorLength - 1 */\n      tag_267\n      jump\t// in\n    tag_552:\n        /* \"ICO/ICOProxy.sol\":12003:12033  uint256 i = investorLength - 1 */\n      swap1\n      pop\n        /* \"ICO/ICOProxy.sol\":11998:12579  for (uint256 i = investorLength - 1; i >= investorsIterated; i--) {... */\n    tag_549:\n        /* \"ICO/ICOProxy.sol\":12040:12057  investorsIterated */\n      dup2\n        /* \"ICO/ICOProxy.sol\":12035:12036  i */\n      dup2\n        /* \"ICO/ICOProxy.sol\":12035:12057  i >= investorsIterated */\n      lt\n        /* \"ICO/ICOProxy.sol\":11998:12579  for (uint256 i = investorLength - 1; i >= investorsIterated; i--) {... */\n      tag_550\n      jumpi\n        /* \"ICO/ICOProxy.sol\":12078:12094  address investor */\n      0x00\n        /* \"ICO/ICOProxy.sol\":12097:12106  investors */\n      0x0a\n        /* \"ICO/ICOProxy.sol\":12107:12108  i */\n      dup3\n        /* \"ICO/ICOProxy.sol\":12097:12109  investors[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_554\n      jumpi\n      tag_554\n      tag_452\n      jump\t// in\n    tag_554:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"ICO/ICOProxy.sol\":12146:12178  tokensBoughtByInvestor[investor] */\n      dup1\n      dup4\n      mstore\n        /* \"ICO/ICOProxy.sol\":12146:12168  tokensBoughtByInvestor */\n      0x0f\n        /* \"ICO/ICOProxy.sol\":12146:12178  tokensBoughtByInvestor[investor] */\n      swap1\n      swap2\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"ICO/ICOProxy.sol\":12097:12109  investors[i] */\n      swap1\n      swap2\n      pop\n        /* \"ICO/ICOProxy.sol\":12197:12213  tokensBought > 0 */\n      dup1\n      iszero\n        /* \"ICO/ICOProxy.sol\":12193:12506  if (tokensBought > 0) {... */\n      tag_556\n      jumpi\n        /* \"ICO/ICOProxy.sol\":12241:12246  token */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x03))\n        /* \"ICO/ICOProxy.sol\":12241:12259  token.transferFrom */\n      0x23b872dd\n        /* \"ICO/ICOProxy.sol\":12281:12288  owner() */\n      tag_557\n        /* \"ICO/ICOProxy.sol\":12281:12286  owner */\n      tag_150\n        /* \"ICO/ICOProxy.sol\":12281:12288  owner() */\n      jump\t// in\n    tag_557:\n        /* \"ICO/ICOProxy.sol\":12241:12370  token.transferFrom(... */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup5\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":18329:18361   */\n      swap2\n      dup3\n      and\n        /* \"ICO/ICOProxy.sol\":12241:12370  token.transferFrom(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":18311:18362   */\n      mstore\n        /* \"#utility.yul\":18398:18430   */\n      swap1\n      dup6\n      and\n        /* \"#utility.yul\":18378:18396   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":18371:18431   */\n      mstore\n        /* \"#utility.yul\":18447:18465   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":18440:18474   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":18284:18302   */\n      0x64\n      add\n        /* \"ICO/ICOProxy.sol\":12241:12370  token.transferFrom(... */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_561\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_561:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_562\n      swap2\n      swap1\n      tag_503\n      jump\t// in\n    tag_562:\n        /* \"ICO/ICOProxy.sol\":12233:12396  require(token.transferFrom(... */\n      tag_563\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":18687:18689   */\n      0x20\n        /* \"ICO/ICOProxy.sol\":12233:12396  require(token.transferFrom(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":18669:18690   */\n      mstore\n        /* \"#utility.yul\":18726:18728   */\n      0x15\n        /* \"#utility.yul\":18706:18724   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":18699:18729   */\n      mstore\n      shl(0x5a, 0x151bdad95b881d1c985b9cd9995c8819985a5b1959)\n        /* \"#utility.yul\":18745:18763   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":18738:18789   */\n      mstore\n        /* \"#utility.yul\":18806:18824   */\n      0x64\n      add\n        /* \"ICO/ICOProxy.sol\":12233:12396  require(token.transferFrom(... */\n      tag_53\n        /* \"#utility.yul\":18485:18830   */\n      jump\n        /* \"ICO/ICOProxy.sol\":12233:12396  require(token.transferFrom(... */\n    tag_563:\n        /* \"ICO/ICOProxy.sol\":12414:12423  investors */\n      0x0a\n        /* \"ICO/ICOProxy.sol\":12414:12429  investors.pop() */\n      dup1\n      sload\n      dup1\n      tag_567\n      jumpi\n      tag_567\n      tag_511\n      jump\t// in\n    tag_567:\n      0x00\n      dup3\n      dup2\n      mstore\n      0x20\n      swap1\n      keccak256\n      dup2\n      add\n      not(0x00)\n      swap1\n      dup2\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n      add\n      swap1\n      sstore\n        /* \"ICO/ICOProxy.sol\":12452:12491  TokenAirdropped(investor, tokensBought) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      0x9bdcd0cc5503fb9a8dd7311d9617e33108c4b7c8948cc544b16c1fd63c6f475b\n      swap1\n      tag_569\n      swap1\n        /* \"ICO/ICOProxy.sol\":12478:12490  tokensBought */\n      dup5\n        /* \"#utility.yul\":1014:1039   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1002:1004   */\n      0x20\n        /* \"#utility.yul\":987:1005   */\n      add\n      swap1\n        /* \"#utility.yul\":868:1045   */\n      jump\n        /* \"ICO/ICOProxy.sol\":12452:12491  TokenAirdropped(investor, tokensBought) */\n    tag_569:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"ICO/ICOProxy.sol\":12193:12506  if (tokensBought > 0) {... */\n    tag_556:\n        /* \"ICO/ICOProxy.sol\":12523:12524  i */\n      dup3\n        /* \"ICO/ICOProxy.sol\":12528:12529  0 */\n      0x00\n        /* \"ICO/ICOProxy.sol\":12523:12529  i == 0 */\n      sub\n        /* \"ICO/ICOProxy.sol\":12519:12569  if (i == 0) {... */\n      tag_570\n      jumpi\n        /* \"ICO/ICOProxy.sol\":12549:12554  break */\n      pop\n      pop\n      jump(tag_550)\n        /* \"ICO/ICOProxy.sol\":12519:12569  if (i == 0) {... */\n    tag_570:\n        /* \"ICO/ICOProxy.sol\":12064:12579  {... */\n      pop\n      pop\n        /* \"ICO/ICOProxy.sol\":12059:12062  i-- */\n      dup1\n      dup1\n      tag_571\n      swap1\n      tag_515\n      jump\t// in\n    tag_571:\n      swap2\n      pop\n      pop\n        /* \"ICO/ICOProxy.sol\":11998:12579  for (uint256 i = investorLength - 1; i >= investorsIterated; i--) {... */\n      jump(tag_549)\n    tag_550:\n      pop\n        /* \"ICO/ICOProxy.sol\":12592:12601  investors */\n      0x0a\n        /* \"ICO/ICOProxy.sol\":12592:12608  investors.length */\n      sload\n        /* \"ICO/ICOProxy.sol\":12612:12613  0 */\n      0x00\n        /* \"ICO/ICOProxy.sol\":12592:12613  investors.length == 0 */\n      sub\n        /* \"ICO/ICOProxy.sol\":12588:12665  if (investors.length == 0) {... */\n      tag_516\n      jumpi\n        /* \"ICO/ICOProxy.sol\":12629:12647  isTokensAirdropped */\n      0x09\n        /* \"ICO/ICOProxy.sol\":12629:12654  isTokensAirdropped = true */\n      dup1\n      sload\n      not(0xff00)\n      and\n      0x0100\n      or\n      swap1\n      sstore\n        /* \"ICO/ICOProxy.sol\":11487:12671  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3437:3457  _nonReentrantAfter() */\n      tag_370\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":1949:1950  1 */\n      0x01\n      0x00\n      dup1\n      mload\n      0x20\n      data_c8669cf8eaf883002b9f48e28846a8d408c9b58ea6613bace374265e43c9bc43\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":4113:4136  $._status = NOT_ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3860:4143  function _nonReentrantAfter() private {... */\n      jump\n        /* \"ICO/ICOProxy.sol\":7730:10153  function buyTokens(PaymentMethod paymentMethod, uint256 paymentAmount)... */\n    tag_161:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3395:3416  _nonReentrantBefore() */\n      tag_576\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3395:3414  _nonReentrantBefore */\n      tag_349\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3395:3416  _nonReentrantBefore() */\n      jump\t// in\n    tag_576:\n        /* \"ICO/ICOProxy.sol\":3191:3205  isICOFinalized */\n      and(0xff, sload(0x09))\n        /* \"ICO/ICOProxy.sol\":3190:3205  !isICOFinalized */\n      iszero\n        /* \"ICO/ICOProxy.sol\":3182:3231  require(!isICOFinalized, \"ICO already finalized\") */\n      tag_578\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_53\n      swap1\n      tag_356\n      jump\t// in\n    tag_578:\n        /* \"ICO/ICOProxy.sol\":3293:3302  isFreezed */\n      sload(0x09)\n      0x010000\n      swap1\n      div\n      0xff\n      and\n        /* \"ICO/ICOProxy.sol\":3292:3302  !isFreezed */\n      iszero\n        /* \"ICO/ICOProxy.sol\":3284:3314  require(!isFreezed, \"freezed\") */\n      tag_581\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_53\n      swap1\n      tag_360\n      jump\t// in\n    tag_581:\n        /* \"ICO/ICOProxy.sol\":7940:7947  owner() */\n      tag_584\n        /* \"ICO/ICOProxy.sol\":7940:7945  owner */\n      tag_150\n        /* \"ICO/ICOProxy.sol\":7940:7947  owner() */\n      jump\t// in\n    tag_584:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ICO/ICOProxy.sol\":7926:7947  msg.sender != owner() */\n      and\n        /* \"ICO/ICOProxy.sol\":7926:7936  msg.sender */\n      caller\n        /* \"ICO/ICOProxy.sol\":7926:7947  msg.sender != owner() */\n      sub\n        /* \"ICO/ICOProxy.sol\":7918:7975  require(msg.sender != owner(), \"Owner cannot buy tokens\") */\n      tag_585\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":19037:19039   */\n      0x20\n        /* \"ICO/ICOProxy.sol\":7918:7975  require(msg.sender != owner(), \"Owner cannot buy tokens\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":19019:19040   */\n      mstore\n        /* \"#utility.yul\":19076:19078   */\n      0x17\n        /* \"#utility.yul\":19056:19074   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":19049:19079   */\n      mstore\n        /* \"#utility.yul\":19115:19140   */\n      0x4f776e65722063616e6e6f742062757920746f6b656e73000000000000000000\n        /* \"#utility.yul\":19095:19113   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":19088:19141   */\n      mstore\n        /* \"#utility.yul\":19158:19176   */\n      0x64\n      add\n        /* \"ICO/ICOProxy.sol\":7918:7975  require(msg.sender != owner(), \"Owner cannot buy tokens\") */\n      tag_53\n        /* \"#utility.yul\":18835:19182   */\n      jump\n        /* \"ICO/ICOProxy.sol\":7918:7975  require(msg.sender != owner(), \"Owner cannot buy tokens\") */\n    tag_585:\n        /* \"ICO/ICOProxy.sol\":7993:8002  saleCount */\n      sload(0x06)\n        /* \"ICO/ICOProxy.sol\":8006:8007  0 */\n      0x00\n        /* \"ICO/ICOProxy.sol\":7993:8007  saleCount != 0 */\n      sub\n        /* \"ICO/ICOProxy.sol\":7985:8019  require(saleCount != 0, \"No sale\") */\n      tag_588\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":19389:19391   */\n      0x20\n        /* \"ICO/ICOProxy.sol\":7985:8019  require(saleCount != 0, \"No sale\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":19371:19392   */\n      mstore\n        /* \"#utility.yul\":19428:19429   */\n      0x07\n        /* \"#utility.yul\":19408:19426   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":19401:19430   */\n      mstore\n      shl(0xc8, 0x4e6f2073616c65)\n        /* \"#utility.yul\":19446:19464   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":19439:19476   */\n      mstore\n        /* \"#utility.yul\":19493:19511   */\n      0x64\n      add\n        /* \"ICO/ICOProxy.sol\":7985:8019  require(saleCount != 0, \"No sale\") */\n      tag_53\n        /* \"#utility.yul\":19187:19517   */\n      jump\n        /* \"ICO/ICOProxy.sol\":7985:8019  require(saleCount != 0, \"No sale\") */\n    tag_588:\n        /* \"ICO/ICOProxy.sol\":8044:8053  saleCount */\n      sload(0x06)\n        /* \"ICO/ICOProxy.sol\":8038:8054  sales[saleCount] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ICO/ICOProxy.sol\":8038:8043  sales */\n      0x0d\n        /* \"ICO/ICOProxy.sol\":8038:8054  sales[saleCount] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"ICO/ICOProxy.sol\":8038:8066  sales[saleCount].isFinalized */\n      0x04\n      add\n      sload\n      0xff\n      and\n        /* \"ICO/ICOProxy.sol\":8037:8066  !sales[saleCount].isFinalized */\n      iszero\n        /* \"ICO/ICOProxy.sol\":8029:8093  require(!sales[saleCount].isFinalized, \"Sale already finalized\") */\n      tag_591\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":19724:19726   */\n      0x20\n        /* \"ICO/ICOProxy.sol\":8029:8093  require(!sales[saleCount].isFinalized, \"Sale already finalized\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":19706:19727   */\n      mstore\n        /* \"#utility.yul\":19763:19765   */\n      0x16\n        /* \"#utility.yul\":19743:19761   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":19736:19766   */\n      mstore\n      shl(0x52, 0x14d85b1948185b1c9958591e48199a5b985b1a5e9959)\n        /* \"#utility.yul\":19782:19800   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":19775:19827   */\n      mstore\n        /* \"#utility.yul\":19844:19862   */\n      0x64\n      add\n        /* \"ICO/ICOProxy.sol\":8029:8093  require(!sales[saleCount].isFinalized, \"Sale already finalized\") */\n      tag_53\n        /* \"#utility.yul\":19522:19868   */\n      jump\n        /* \"ICO/ICOProxy.sol\":8029:8093  require(!sales[saleCount].isFinalized, \"Sale already finalized\") */\n    tag_591:\n        /* \"ICO/ICOProxy.sol\":8103:8122  uint256 tokenAmount */\n      0x00\n      dup1\n        /* \"ICO/ICOProxy.sol\":8136:8149  paymentMethod */\n      dup4\n        /* \"ICO/ICOProxy.sol\":8136:8170  paymentMethod == PaymentMethod.BNB */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_597\n      jumpi\n      tag_597\n      tag_248\n      jump\t// in\n    tag_597:\n      sub\n        /* \"ICO/ICOProxy.sol\":8132:9110  if (paymentMethod == PaymentMethod.BNB) {... */\n      tag_598\n      jumpi\n        /* \"ICO/ICOProxy.sol\":8194:8203  msg.value */\n      callvalue\n        /* \"ICO/ICOProxy.sol\":8207:8208  0 */\n      0x00\n        /* \"ICO/ICOProxy.sol\":8194:8208  msg.value != 0 */\n      sub\n        /* \"ICO/ICOProxy.sol\":8186:8236  require(msg.value != 0, \"Send a valid BNB amount\") */\n      tag_599\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":20075:20077   */\n      0x20\n        /* \"ICO/ICOProxy.sol\":8186:8236  require(msg.value != 0, \"Send a valid BNB amount\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":20057:20078   */\n      mstore\n        /* \"#utility.yul\":20114:20116   */\n      0x17\n        /* \"#utility.yul\":20094:20112   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":20087:20117   */\n      mstore\n        /* \"#utility.yul\":20153:20178   */\n      0x53656e6420612076616c696420424e4220616d6f756e74000000000000000000\n        /* \"#utility.yul\":20133:20151   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":20126:20179   */\n      mstore\n        /* \"#utility.yul\":20196:20214   */\n      0x64\n      add\n        /* \"ICO/ICOProxy.sol\":8186:8236  require(msg.value != 0, \"Send a valid BNB amount\") */\n      tag_53\n        /* \"#utility.yul\":19873:20220   */\n      jump\n        /* \"ICO/ICOProxy.sol\":8186:8236  require(msg.value != 0, \"Send a valid BNB amount\") */\n    tag_599:\n        /* \"ICO/ICOProxy.sol\":8264:8310  calculateTokenAmount(paymentMethod, msg.value) */\n      tag_602\n        /* \"ICO/ICOProxy.sol\":8285:8298  paymentMethod */\n      dup4\n        /* \"ICO/ICOProxy.sol\":8300:8309  msg.value */\n      callvalue\n        /* \"ICO/ICOProxy.sol\":8264:8284  calculateTokenAmount */\n      tag_59\n        /* \"ICO/ICOProxy.sol\":8264:8310  calculateTokenAmount(paymentMethod, msg.value) */\n      jump\t// in\n    tag_602:\n        /* \"ICO/ICOProxy.sol\":8341:8351  msg.sender */\n      caller\n        /* \"ICO/ICOProxy.sol\":8324:8352  investorPayments[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ICO/ICOProxy.sol\":8324:8340  investorPayments */\n      0x11\n        /* \"ICO/ICOProxy.sol\":8324:8352  investorPayments[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"ICO/ICOProxy.sol\":8250:8310  tokenAmount = calculateTokenAmount(paymentMethod, msg.value) */\n      swap2\n      swap3\n      pop\n        /* \"ICO/ICOProxy.sol\":8371:8380  msg.value */\n      callvalue\n      swap2\n        /* \"ICO/ICOProxy.sol\":8324:8352  investorPayments[msg.sender] */\n      swap1\n        /* \"ICO/ICOProxy.sol\":8353:8366  paymentMethod */\n      dup6\n        /* \"ICO/ICOProxy.sol\":8324:8367  investorPayments[msg.sender][paymentMethod] */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_604\n      jumpi\n      tag_604\n      tag_248\n      jump\t// in\n    tag_604:\n      0x02\n      dup2\n      gt\n      iszero\n      tag_606\n      jumpi\n      tag_606\n      tag_248\n      jump\t// in\n    tag_606:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"ICO/ICOProxy.sol\":8324:8380  investorPayments[msg.sender][paymentMethod] += msg.value */\n      dup3\n      dup3\n      sload\n      tag_607\n      swap2\n      swap1\n      tag_413\n      jump\t// in\n    tag_607:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"ICO/ICOProxy.sol\":8132:9110  if (paymentMethod == PaymentMethod.BNB) {... */\n      tag_618\n      swap1\n      pop\n      jump\n    tag_598:\n        /* \"ICO/ICOProxy.sol\":8431:8449  PaymentMethod.USDT */\n      0x01\n        /* \"ICO/ICOProxy.sol\":8414:8427  paymentMethod */\n      dup4\n        /* \"ICO/ICOProxy.sol\":8414:8449  paymentMethod == PaymentMethod.USDT */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_612\n      jumpi\n      tag_612\n      tag_248\n      jump\t// in\n    tag_612:\n      eq\n        /* \"ICO/ICOProxy.sol\":8414:8500  paymentMethod == PaymentMethod.USDT ||... */\n      dup1\n      tag_613\n      jumpi\n      pop\n        /* \"ICO/ICOProxy.sol\":8482:8500  PaymentMethod.USDC */\n      0x02\n        /* \"ICO/ICOProxy.sol\":8465:8478  paymentMethod */\n      dup4\n        /* \"ICO/ICOProxy.sol\":8465:8500  paymentMethod == PaymentMethod.USDC */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_617\n      jumpi\n      tag_617\n      tag_248\n      jump\t// in\n    tag_617:\n      eq\n        /* \"ICO/ICOProxy.sol\":8414:8500  paymentMethod == PaymentMethod.USDT ||... */\n    tag_613:\n        /* \"ICO/ICOProxy.sol\":8397:9110  if (... */\n      iszero\n      tag_618\n      jumpi\n        /* \"ICO/ICOProxy.sol\":8533:8546  paymentAmount */\n      dup2\n        /* \"ICO/ICOProxy.sol\":8550:8551  0 */\n      0x00\n        /* \"ICO/ICOProxy.sol\":8533:8551  paymentAmount != 0 */\n      sub\n        /* \"ICO/ICOProxy.sol\":8525:8574  require(paymentAmount != 0, \"Enter valid amount\") */\n      tag_619\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":20427:20429   */\n      0x20\n        /* \"ICO/ICOProxy.sol\":8525:8574  require(paymentAmount != 0, \"Enter valid amount\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":20409:20430   */\n      mstore\n        /* \"#utility.yul\":20466:20468   */\n      0x12\n        /* \"#utility.yul\":20446:20464   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":20439:20469   */\n      mstore\n      shl(0x72, 0x115b9d195c881d985b1a5908185b5bdd5b9d)\n        /* \"#utility.yul\":20485:20503   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":20478:20526   */\n      mstore\n        /* \"#utility.yul\":20543:20561   */\n      0x64\n      add\n        /* \"ICO/ICOProxy.sol\":8525:8574  require(paymentAmount != 0, \"Enter valid amount\") */\n      tag_53\n        /* \"#utility.yul\":20225:20567   */\n      jump\n        /* \"ICO/ICOProxy.sol\":8525:8574  require(paymentAmount != 0, \"Enter valid amount\") */\n    tag_619:\n        /* \"ICO/ICOProxy.sol\":8588:8605  IERC20 stablecoin */\n      0x00\n        /* \"ICO/ICOProxy.sol\":8625:8643  PaymentMethod.USDT */\n      0x01\n        /* \"ICO/ICOProxy.sol\":8608:8621  paymentMethod */\n      dup5\n        /* \"ICO/ICOProxy.sol\":8608:8643  paymentMethod == PaymentMethod.USDT */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_625\n      jumpi\n      tag_625\n      tag_248\n      jump\t// in\n    tag_625:\n      eq\n        /* \"ICO/ICOProxy.sol\":8608:8705  paymentMethod == PaymentMethod.USDT... */\n      tag_626\n      jumpi\n        /* \"ICO/ICOProxy.sol\":8700:8704  usdc */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0c))\n        /* \"ICO/ICOProxy.sol\":8608:8705  paymentMethod == PaymentMethod.USDT... */\n      jump(tag_627)\n    tag_626:\n        /* \"ICO/ICOProxy.sol\":8669:8673  usdt */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0b))\n        /* \"ICO/ICOProxy.sol\":8608:8705  paymentMethod == PaymentMethod.USDT... */\n    tag_627:\n        /* \"ICO/ICOProxy.sol\":8744:8887  stablecoin.transferFrom(... */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"ICO/ICOProxy.sol\":8789:8799  msg.sender */\n      caller\n        /* \"ICO/ICOProxy.sol\":8744:8887  stablecoin.transferFrom(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":18311:18362   */\n      mstore\n        /* \"ICO/ICOProxy.sol\":8829:8833  this */\n      address\n        /* \"#utility.yul\":18378:18396   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":18371:18431   */\n      mstore\n        /* \"#utility.yul\":18447:18465   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":18440:18474   */\n      dup6\n      swap1\n      mstore\n        /* \"ICO/ICOProxy.sol\":8588:8705  IERC20 stablecoin = paymentMethod == PaymentMethod.USDT... */\n      swap1\n      swap2\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ICO/ICOProxy.sol\":8744:8767  stablecoin.transferFrom */\n      dup3\n      and\n      swap1\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":18284:18302   */\n      0x64\n      add\n        /* \"ICO/ICOProxy.sol\":8744:8887  stablecoin.transferFrom(... */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_630\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_630:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_631\n      swap2\n      swap1\n      tag_503\n      jump\t// in\n    tag_631:\n        /* \"ICO/ICOProxy.sol\":8719:8947  require(... */\n      tag_632\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":20774:20776   */\n      0x20\n        /* \"ICO/ICOProxy.sol\":8719:8947  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":20756:20777   */\n      mstore\n        /* \"#utility.yul\":20813:20815   */\n      0x1a\n        /* \"#utility.yul\":20793:20811   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":20786:20816   */\n      mstore\n        /* \"#utility.yul\":20852:20880   */\n      0x537461626c65636f696e207472616e73666572206661696c6564000000000000\n        /* \"#utility.yul\":20832:20850   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":20825:20881   */\n      mstore\n        /* \"#utility.yul\":20898:20916   */\n      0x64\n      add\n        /* \"ICO/ICOProxy.sol\":8719:8947  require(... */\n      tag_53\n        /* \"#utility.yul\":20572:20922   */\n      jump\n        /* \"ICO/ICOProxy.sol\":8719:8947  require(... */\n    tag_632:\n        /* \"ICO/ICOProxy.sol\":8975:9025  calculateTokenAmount(paymentMethod, paymentAmount) */\n      tag_635\n        /* \"ICO/ICOProxy.sol\":8996:9009  paymentMethod */\n      dup5\n        /* \"ICO/ICOProxy.sol\":9011:9024  paymentAmount */\n      dup5\n        /* \"ICO/ICOProxy.sol\":8975:8995  calculateTokenAmount */\n      tag_59\n        /* \"ICO/ICOProxy.sol\":8975:9025  calculateTokenAmount(paymentMethod, paymentAmount) */\n      jump\t// in\n    tag_635:\n        /* \"ICO/ICOProxy.sol\":9056:9066  msg.sender */\n      caller\n        /* \"ICO/ICOProxy.sol\":9039:9067  investorPayments[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ICO/ICOProxy.sol\":9039:9055  investorPayments */\n      0x11\n        /* \"ICO/ICOProxy.sol\":9039:9067  investorPayments[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"ICO/ICOProxy.sol\":8961:9025  tokenAmount = calculateTokenAmount(paymentMethod, paymentAmount) */\n      swap2\n      swap4\n      pop\n        /* \"ICO/ICOProxy.sol\":9086:9099  paymentAmount */\n      dup5\n      swap2\n        /* \"ICO/ICOProxy.sol\":9039:9067  investorPayments[msg.sender] */\n      swap1\n        /* \"ICO/ICOProxy.sol\":9068:9081  paymentMethod */\n      dup7\n        /* \"ICO/ICOProxy.sol\":9039:9082  investorPayments[msg.sender][paymentMethod] */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_637\n      jumpi\n      tag_637\n      tag_248\n      jump\t// in\n    tag_637:\n      0x02\n      dup2\n      gt\n      iszero\n      tag_639\n      jumpi\n      tag_639\n      tag_248\n      jump\t// in\n    tag_639:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"ICO/ICOProxy.sol\":9039:9099  investorPayments[msg.sender][paymentMethod] += paymentAmount */\n      dup3\n      dup3\n      sload\n      tag_640\n      swap2\n      swap1\n      tag_413\n      jump\t// in\n    tag_640:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      pop\n        /* \"ICO/ICOProxy.sol\":8397:9110  if (... */\n    tag_618:\n        /* \"ICO/ICOProxy.sol\":9137:9148  tokenAmount */\n      dup1\n        /* \"ICO/ICOProxy.sol\":9152:9153  0 */\n      0x00\n        /* \"ICO/ICOProxy.sol\":9137:9153  tokenAmount != 0 */\n      sub\n        /* \"ICO/ICOProxy.sol\":9129:9178  require(tokenAmount != 0, \"Invalid token amount\") */\n      tag_641\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":21129:21131   */\n      0x20\n        /* \"ICO/ICOProxy.sol\":9129:9178  require(tokenAmount != 0, \"Invalid token amount\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":21111:21132   */\n      mstore\n        /* \"#utility.yul\":21168:21170   */\n      0x14\n        /* \"#utility.yul\":21148:21166   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":21141:21171   */\n      mstore\n      shl(0x62, 0x125b9d985b1a59081d1bdad95b88185b5bdd5b9d)\n        /* \"#utility.yul\":21187:21205   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":21180:21230   */\n      mstore\n        /* \"#utility.yul\":21247:21265   */\n      0x64\n      add\n        /* \"ICO/ICOProxy.sol\":9129:9178  require(tokenAmount != 0, \"Invalid token amount\") */\n      tag_53\n        /* \"#utility.yul\":20927:21271   */\n      jump\n        /* \"ICO/ICOProxy.sol\":9129:9178  require(tokenAmount != 0, \"Invalid token amount\") */\n    tag_641:\n        /* \"ICO/ICOProxy.sol\":9246:9255  saleCount */\n      sload(0x06)\n        /* \"ICO/ICOProxy.sol\":9188:9210  uint256 totalCostInUSD */\n      0x00\n        /* \"ICO/ICOProxy.sol\":9240:9256  sales[saleCount] */\n      swap1\n      dup2\n      mstore\n        /* \"ICO/ICOProxy.sol\":9240:9245  sales */\n      0x0d\n        /* \"ICO/ICOProxy.sol\":9240:9256  sales[saleCount] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"ICO/ICOProxy.sol\":9240:9270  sales[saleCount].tokenPriceUSD */\n      0x02\n      add\n      sload\n        /* \"ICO/ICOProxy.sol\":1219:1223  1e18 */\n      0x0de0b6b3a7640000\n      swap1\n        /* \"ICO/ICOProxy.sol\":9214:9270  tokenAmount *... */\n      tag_644\n      swap1\n        /* \"ICO/ICOProxy.sol\":9214:9225  tokenAmount */\n      dup5\n        /* \"ICO/ICOProxy.sol\":9214:9270  tokenAmount *... */\n      tag_254\n      jump\t// in\n    tag_644:\n        /* \"ICO/ICOProxy.sol\":9213:9286  (tokenAmount *... */\n      tag_645\n      swap2\n      swap1\n      tag_278\n      jump\t// in\n    tag_645:\n        /* \"ICO/ICOProxy.sol\":9188:9286  uint256 totalCostInUSD = (tokenAmount *... */\n      swap1\n      pop\n        /* \"ICO/ICOProxy.sol\":9357:9369  hardCapInUSD */\n      sload(0x05)\n        /* \"ICO/ICOProxy.sol\":9339:9353  totalCostInUSD */\n      dup2\n        /* \"ICO/ICOProxy.sol\":9317:9336  totalFundsRaisedUSD */\n      sload(0x07)\n        /* \"ICO/ICOProxy.sol\":9317:9353  totalFundsRaisedUSD + totalCostInUSD */\n      tag_646\n      swap2\n      swap1\n      tag_413\n      jump\t// in\n    tag_646:\n        /* \"ICO/ICOProxy.sol\":9317:9369  totalFundsRaisedUSD + totalCostInUSD <= hardCapInUSD */\n      gt\n      iszero\n        /* \"ICO/ICOProxy.sol\":9296:9411  require(... */\n      tag_647\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":21478:21480   */\n      0x20\n        /* \"ICO/ICOProxy.sol\":9296:9411  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":21460:21481   */\n      mstore\n        /* \"#utility.yul\":21517:21519   */\n      0x10\n        /* \"#utility.yul\":21497:21515   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":21490:21520   */\n      mstore\n      shl(0x82, 0x12185c990818d85c081c995858da1959)\n        /* \"#utility.yul\":21536:21554   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":21529:21575   */\n      mstore\n        /* \"#utility.yul\":21592:21610   */\n      0x64\n      add\n        /* \"ICO/ICOProxy.sol\":9296:9411  require(... */\n      tag_53\n        /* \"#utility.yul\":21276:21616   */\n      jump\n        /* \"ICO/ICOProxy.sol\":9296:9411  require(... */\n    tag_647:\n        /* \"ICO/ICOProxy.sol\":9472:9482  msg.sender */\n      caller\n        /* \"ICO/ICOProxy.sol\":9453:9483  contributionsInUSD[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ICO/ICOProxy.sol\":9453:9471  contributionsInUSD */\n      0x0e\n        /* \"ICO/ICOProxy.sol\":9453:9483  contributionsInUSD[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"ICO/ICOProxy.sol\":9453:9499  contributionsInUSD[msg.sender]+ totalCostInUSD */\n      tag_650\n      swap1\n        /* \"ICO/ICOProxy.sol\":9485:9499  totalCostInUSD */\n      dup3\n      swap1\n        /* \"ICO/ICOProxy.sol\":9453:9499  contributionsInUSD[msg.sender]+ totalCostInUSD */\n      tag_413\n      jump\t// in\n    tag_650:\n        /* \"ICO/ICOProxy.sol\":9440:9450  msg.sender */\n      caller\n        /* \"ICO/ICOProxy.sol\":9421:9451  contributionsInUSD[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ICO/ICOProxy.sol\":9421:9439  contributionsInUSD */\n      0x0e\n        /* \"ICO/ICOProxy.sol\":9421:9451  contributionsInUSD[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"ICO/ICOProxy.sol\":9421:9499  contributionsInUSD[msg.sender] =contributionsInUSD[msg.sender]+ totalCostInUSD */\n      sstore\n        /* \"ICO/ICOProxy.sol\":9531:9550  totalFundsRaisedUSD */\n      sload(0x07)\n        /* \"ICO/ICOProxy.sol\":9531:9566  totalFundsRaisedUSD+ totalCostInUSD */\n      tag_651\n      swap1\n        /* \"ICO/ICOProxy.sol\":9552:9566  totalCostInUSD */\n      dup3\n      swap1\n        /* \"ICO/ICOProxy.sol\":9531:9566  totalFundsRaisedUSD+ totalCostInUSD */\n      tag_413\n      jump\t// in\n    tag_651:\n        /* \"ICO/ICOProxy.sol\":9509:9528  totalFundsRaisedUSD */\n      0x07\n        /* \"ICO/ICOProxy.sol\":9509:9566  totalFundsRaisedUSD = totalFundsRaisedUSD+ totalCostInUSD */\n      sstore\n        /* \"ICO/ICOProxy.sol\":9582:9591  saleCount */\n      sload(0x06)\n        /* \"ICO/ICOProxy.sol\":9576:9592  sales[saleCount] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ICO/ICOProxy.sol\":9576:9581  sales */\n      0x0d\n        /* \"ICO/ICOProxy.sol\":9576:9592  sales[saleCount] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"ICO/ICOProxy.sol\":9576:9603  sales[saleCount].tokensSold */\n      0x03\n      add\n        /* \"ICO/ICOProxy.sol\":9576:9618  sales[saleCount].tokensSold += tokenAmount */\n      dup1\n      sload\n        /* \"ICO/ICOProxy.sol\":9607:9618  tokenAmount */\n      dup5\n      swap3\n        /* \"ICO/ICOProxy.sol\":9576:9592  sales[saleCount] */\n      swap1\n        /* \"ICO/ICOProxy.sol\":9576:9618  sales[saleCount].tokensSold += tokenAmount */\n      tag_652\n      swap1\n        /* \"ICO/ICOProxy.sol\":9607:9618  tokenAmount */\n      dup5\n      swap1\n        /* \"ICO/ICOProxy.sol\":9576:9618  sales[saleCount].tokensSold += tokenAmount */\n      tag_413\n      jump\t// in\n    tag_652:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"ICO/ICOProxy.sol\":9646:9661  totalTokensSold */\n      sload(0x08)\n        /* \"ICO/ICOProxy.sol\":9646:9674  totalTokensSold+ tokenAmount */\n      tag_653\n      swap1\n        /* \"ICO/ICOProxy.sol\":9663:9674  tokenAmount */\n      dup4\n      swap1\n        /* \"ICO/ICOProxy.sol\":9646:9674  totalTokensSold+ tokenAmount */\n      tag_413\n      jump\t// in\n    tag_653:\n        /* \"ICO/ICOProxy.sol\":9628:9643  totalTokensSold */\n      0x08\n        /* \"ICO/ICOProxy.sol\":9628:9674  totalTokensSold = totalTokensSold+ tokenAmount */\n      sstore\n        /* \"ICO/ICOProxy.sol\":9712:9722  msg.sender */\n      caller\n        /* \"ICO/ICOProxy.sol\":9689:9723  tokensBoughtByInvestor[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ICO/ICOProxy.sol\":9689:9711  tokensBoughtByInvestor */\n      0x0f\n        /* \"ICO/ICOProxy.sol\":9689:9723  tokensBoughtByInvestor[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"ICO/ICOProxy.sol\":9689:9728  tokensBoughtByInvestor[msg.sender] == 0 */\n      swap1\n      sub\n        /* \"ICO/ICOProxy.sol\":9685:9781  if (tokensBoughtByInvestor[msg.sender] == 0) {... */\n      tag_654\n      jumpi\n        /* \"ICO/ICOProxy.sol\":9744:9753  investors */\n      0x0a\n        /* \"ICO/ICOProxy.sol\":9744:9770  investors.push(msg.sender) */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      dup3\n      sstore\n      0x00\n      swap2\n      swap1\n      swap2\n      mstore\n      0xc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a8\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n        /* \"ICO/ICOProxy.sol\":9759:9769  msg.sender */\n      caller\n        /* \"ICO/ICOProxy.sol\":9744:9770  investors.push(msg.sender) */\n      or\n      swap1\n      sstore\n        /* \"ICO/ICOProxy.sol\":9685:9781  if (tokensBoughtByInvestor[msg.sender] == 0) {... */\n    tag_654:\n        /* \"ICO/ICOProxy.sol\":9849:9859  msg.sender */\n      caller\n        /* \"ICO/ICOProxy.sol\":9826:9860  tokensBoughtByInvestor[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ICO/ICOProxy.sol\":9826:9848  tokensBoughtByInvestor */\n      0x0f\n        /* \"ICO/ICOProxy.sol\":9826:9860  tokensBoughtByInvestor[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"ICO/ICOProxy.sol\":9826:9873  tokensBoughtByInvestor[msg.sender]+ tokenAmount */\n      tag_656\n      swap1\n        /* \"ICO/ICOProxy.sol\":9862:9873  tokenAmount */\n      dup4\n      swap1\n        /* \"ICO/ICOProxy.sol\":9826:9873  tokensBoughtByInvestor[msg.sender]+ tokenAmount */\n      tag_413\n      jump\t// in\n    tag_656:\n        /* \"ICO/ICOProxy.sol\":9813:9823  msg.sender */\n      caller\n        /* \"ICO/ICOProxy.sol\":9790:9824  tokensBoughtByInvestor[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ICO/ICOProxy.sol\":9790:9812  tokensBoughtByInvestor */\n      0x0f\n        /* \"ICO/ICOProxy.sol\":9790:9824  tokensBoughtByInvestor[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ICO/ICOProxy.sol\":9790:9873  tokensBoughtByInvestor[msg.sender] =tokensBoughtByInvestor[msg.sender]+ tokenAmount */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"ICO/ICOProxy.sol\":9883:9907  paymentMethodForInvestor */\n      0x10\n        /* \"ICO/ICOProxy.sol\":9883:9919  paymentMethodForInvestor[msg.sender] */\n      swap1\n      mstore\n      keccak256\n        /* \"ICO/ICOProxy.sol\":9883:9935  paymentMethodForInvestor[msg.sender] = paymentMethod */\n      dup1\n      sload\n        /* \"ICO/ICOProxy.sol\":9922:9935  paymentMethod */\n      dup6\n      swap2\n        /* \"ICO/ICOProxy.sol\":9883:9919  paymentMethodForInvestor[msg.sender] */\n      swap1\n      not(0xff)\n        /* \"ICO/ICOProxy.sol\":9883:9935  paymentMethodForInvestor[msg.sender] = paymentMethod */\n      and\n      0x01\n        /* \"ICO/ICOProxy.sol\":9922:9935  paymentMethod */\n      dup4\n        /* \"ICO/ICOProxy.sol\":9883:9935  paymentMethodForInvestor[msg.sender] = paymentMethod */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_658\n      jumpi\n      tag_658\n      tag_248\n      jump\t// in\n    tag_658:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ICO/ICOProxy.sol\":10004:10013  saleCount */\n      sload(0x06)\n        /* \"ICO/ICOProxy.sol\":10052:10068  sales[saleCount] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"ICO/ICOProxy.sol\":10052:10057  sales */\n      0x0d\n        /* \"ICO/ICOProxy.sol\":10052:10068  sales[saleCount] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"ICO/ICOProxy.sol\":10052:10082  sales[saleCount].tokenPriceUSD */\n      0x02\n      add\n      sload\n        /* \"ICO/ICOProxy.sol\":9951:10146  TokensPurchased(... */\n      swap1\n      mload\n        /* \"ICO/ICOProxy.sol\":9980:9990  msg.sender */\n      caller\n      swap2\n        /* \"ICO/ICOProxy.sol\":9951:10146  TokensPurchased(... */\n      0xdbcef474a632721725d49e3f35d9defe0257100b01d1e4b4b135b14d6fe296e8\n      swap2\n      tag_659\n      swap2\n        /* \"ICO/ICOProxy.sol\":10027:10038  tokenAmount */\n      dup8\n      swap2\n        /* \"ICO/ICOProxy.sol\":10096:10109  paymentAmount */\n      dup10\n      swap1\n        /* \"ICO/ICOProxy.sol\":10123:10136  paymentMethod */\n      dup12\n      swap1\n        /* \"ICO/ICOProxy.sol\":9951:10146  TokensPurchased(... */\n      tag_660\n      jump\t// in\n    tag_659:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ICO/ICOProxy.sol\":7908:10153  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3437:3457  _nonReentrantAfter() */\n      tag_382\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":1949:1950  1 */\n      0x01\n      0x00\n      dup1\n      mload\n      0x20\n      data_c8669cf8eaf883002b9f48e28846a8d408c9b58ea6613bace374265e43c9bc43\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":4113:4136  $._status = NOT_ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3860:4143  function _nonReentrantAfter() private {... */\n      jump\n        /* \"ICO/ICOProxy.sol\":4557:4653  function precision_div_18(uint val) public pure returns(uint){... */\n    tag_169:\n        /* \"ICO/ICOProxy.sol\":4613:4617  uint */\n      0x00\n        /* \"ICO/ICOProxy.sol\":4636:4646  val / 1e18 */\n      tag_239\n        /* \"ICO/ICOProxy.sol\":4642:4646  1e18 */\n      0x0de0b6b3a7640000\n        /* \"ICO/ICOProxy.sol\":4636:4639  val */\n      dup4\n        /* \"ICO/ICOProxy.sol\":4636:4646  val / 1e18 */\n      tag_278\n      jump\t// in\n        /* \"ICO/ICOProxy.sol\":4253:4349  function precision_mul_10(uint val) public pure returns(uint){... */\n    tag_174:\n        /* \"ICO/ICOProxy.sol\":4309:4313  uint */\n      0x00\n        /* \"ICO/ICOProxy.sol\":4332:4342  val * 1e10 */\n      tag_239\n        /* \"ICO/ICOProxy.sol\":4332:4335  val */\n      dup3\n        /* \"ICO/ICOProxy.sol\":4338:4342  1e10 */\n      0x02540be400\n        /* \"ICO/ICOProxy.sol\":4332:4342  val * 1e10 */\n      tag_254\n      jump\t// in\n        /* \"ICO/ICOProxy.sol\":4456:4552  function precision_div_10(uint val) public pure returns(uint){... */\n    tag_188:\n        /* \"ICO/ICOProxy.sol\":4512:4516  uint */\n      0x00\n        /* \"ICO/ICOProxy.sol\":4535:4545  val / 1e10 */\n      tag_239\n        /* \"ICO/ICOProxy.sol\":4541:4545  1e10 */\n      0x02540be400\n        /* \"ICO/ICOProxy.sol\":4535:4538  val */\n      dup4\n        /* \"ICO/ICOProxy.sol\":4535:4545  val / 1e10 */\n      tag_278\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_228:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_671\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_352\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_671:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n      tag_673\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3562:3563  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2019:2070   */\n      mstore\n        /* \"#utility.yul\":1992:2010   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      tag_53\n        /* \"#utility.yul\":1873:2076   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n    tag_673:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      tag_675\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3604:3612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3603  _transferOwnership */\n      tag_421\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_675:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"ICO/ICOProxy.sol\":2459:3139  function initialize(... */\n    tag_238:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      dup1\n      sload\n      shl(0x40, 0x01)\n      dup2\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4742  initialized == 0 */\n      dup2\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_679\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4746:4760  isTopLevelCall */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n    tag_679:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4760  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4787  bool construction */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4801  initialized */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4805:4806  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_680\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4818:4822  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4835  address(this).code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4840  address(this).code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n    tag_680:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4840  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4856:4868  initialSetup */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4868  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_681\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4873:4885  construction */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4872:4885  !construction */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n    tag_681:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n      iszero\n      tag_682\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4908:4931  InvalidInitialization() */\n      mload(0x40)\n      shl(0xe0, 0xf92ee8a9)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n    tag_682:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      dup5\n      sload\n      not(0xffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4968:4969  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      or\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n      dup4\n      iszero\n      tag_683\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5035  $._initializing = true */\n      dup5\n      sload\n      not(shl(0x40, 0xff))\n      and\n      shl(0x40, 0x01)\n      or\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n    tag_683:\n        /* \"ICO/ICOProxy.sol\":2740:2766  __Ownable_init(msg.sender) */\n      tag_685\n        /* \"ICO/ICOProxy.sol\":2755:2765  msg.sender */\n      caller\n        /* \"ICO/ICOProxy.sol\":2740:2754  __Ownable_init */\n      tag_686\n        /* \"ICO/ICOProxy.sol\":2740:2766  __Ownable_init(msg.sender) */\n      jump\t// in\n    tag_685:\n        /* \"ICO/ICOProxy.sol\":2776:2800  __UUPSUpgradeable_init() */\n      tag_687\n        /* \"ICO/ICOProxy.sol\":2776:2798  __UUPSUpgradeable_init */\n      tag_688\n        /* \"ICO/ICOProxy.sol\":2776:2800  __UUPSUpgradeable_init() */\n      jump\t// in\n    tag_687:\n        /* \"ICO/ICOProxy.sol\":2819:2825  _token */\n      dup13\n        /* \"ICO/ICOProxy.sol\":2811:2816  token */\n      0x03\n      0x00\n        /* \"ICO/ICOProxy.sol\":2811:2825  token = _token */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      mul\n      not\n      and\n      swap1\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ICO/ICOProxy.sol\":2850:2863  _softCapInUSD */\n      dup10\n        /* \"ICO/ICOProxy.sol\":2835:2847  softCapInUSD */\n      0x04\n        /* \"ICO/ICOProxy.sol\":2835:2863  softCapInUSD = _softCapInUSD */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ICO/ICOProxy.sol\":2888:2901  _hardCapInUSD */\n      dup9\n        /* \"ICO/ICOProxy.sol\":2873:2885  hardCapInUSD */\n      0x05\n        /* \"ICO/ICOProxy.sol\":2873:2901  hardCapInUSD = _hardCapInUSD */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ICO/ICOProxy.sol\":2918:2923  _usdt */\n      dup12\n        /* \"ICO/ICOProxy.sol\":2911:2915  usdt */\n      0x0b\n      0x00\n        /* \"ICO/ICOProxy.sol\":2911:2923  usdt = _usdt */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      mul\n      not\n      and\n      swap1\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ICO/ICOProxy.sol\":2940:2945  _usdc */\n      dup11\n        /* \"ICO/ICOProxy.sol\":2933:2937  usdc */\n      0x0c\n      0x00\n        /* \"ICO/ICOProxy.sol\":2933:2945  usdc = _usdc */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      mul\n      not\n      and\n      swap1\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ICO/ICOProxy.sol\":2992:3005  _priceFeedBNB */\n      dup8\n        /* \"ICO/ICOProxy.sol\":2955:2967  priceFeedBNB */\n      0x00\n      dup1\n        /* \"ICO/ICOProxy.sol\":2955:3006  priceFeedBNB = AggregatorV3Interface(_priceFeedBNB) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      mul\n      not\n      and\n      swap1\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ICO/ICOProxy.sol\":3054:3068  _priceFeedUSDT */\n      dup7\n        /* \"ICO/ICOProxy.sol\":3016:3029  priceFeedUSDT */\n      0x01\n      0x00\n        /* \"ICO/ICOProxy.sol\":3016:3069  priceFeedUSDT = AggregatorV3Interface(_priceFeedUSDT) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      mul\n      not\n      and\n      swap1\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ICO/ICOProxy.sol\":3117:3131  _priceFeedUSDC */\n      dup6\n        /* \"ICO/ICOProxy.sol\":3079:3092  priceFeedUSDC */\n      0x02\n      0x00\n        /* \"ICO/ICOProxy.sol\":3079:3132  priceFeedUSDC = AggregatorV3Interface(_priceFeedUSDC) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      mul\n      not\n      and\n      swap1\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5070:5084  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n      iszero\n      tag_689\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5123  $._initializing = false */\n      dup5\n      sload\n      not(shl(0x40, 0xff))\n      and\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      0x01\n        /* \"#utility.yul\":22209:22259   */\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n      swap1\n        /* \"#utility.yul\":22197:22199   */\n      0x20\n        /* \"#utility.yul\":22182:22200   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n    tag_689:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4092:5173  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"ICO/ICOProxy.sol\":2459:3139  function initialize(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3470:3854  function _nonReentrantBefore() private {... */\n    tag_349:\n      0x00\n      dup1\n      mload\n      0x20\n      data_c8669cf8eaf883002b9f48e28846a8d408c9b58ea6613bace374265e43c9bc43\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3670:3679  $._status */\n      dup1\n      sload\n      not(0x01)\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3670:3690  $._status == ENTERED */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3666:3754  if ($._status == ENTERED) {... */\n      tag_695\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3713:3743  ReentrancyGuardReentrantCall() */\n      mload(0x40)\n      shl(0xe0, 0x3ee5aeb5)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3666:3754  if ($._status == ENTERED) {... */\n    tag_695:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":1991:1992  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3828:3847  $._status = ENTERED */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3470:3854  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n    tag_352:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      tag_699\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2722  owner */\n      tag_150\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      jump\t// in\n    tag_699:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n      tag_370\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2019:2070   */\n      mstore\n        /* \"#utility.yul\":1992:2010   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_53\n        /* \"#utility.yul\":1873:2076   */\n      jump\n        /* \"ICO/ICOProxy.sol\":10576:11356  function _transferFundsToOwner() private{... */\n    tag_369:\n        /* \"ICO/ICOProxy.sol\":10649:10653  this */\n      address\n        /* \"ICO/ICOProxy.sol\":10688:10700  self.balance */\n      dup1\n      balance\n        /* \"ICO/ICOProxy.sol\":10714:10732  nativeBalance != 0 */\n      dup1\n      iszero\n        /* \"ICO/ICOProxy.sol\":10710:10874  if (nativeBalance != 0) {... */\n      tag_704\n      jumpi\n        /* \"ICO/ICOProxy.sol\":10749:10761  bool success */\n      0x00\n        /* \"ICO/ICOProxy.sol\":10775:10782  owner() */\n      tag_705\n        /* \"ICO/ICOProxy.sol\":10775:10780  owner */\n      tag_150\n        /* \"ICO/ICOProxy.sol\":10775:10782  owner() */\n      jump\t// in\n    tag_705:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ICO/ICOProxy.sol\":10767:10788  payable(owner()).call */\n      and\n        /* \"ICO/ICOProxy.sol\":10796:10809  nativeBalance */\n      dup3\n        /* \"ICO/ICOProxy.sol\":10767:10814  payable(owner()).call{value: nativeBalance}(\"\") */\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_709\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_708)\n    tag_709:\n      0x60\n      swap2\n      pop\n    tag_708:\n      pop\n        /* \"ICO/ICOProxy.sol\":10748:10814  (bool success, ) = payable(owner()).call{value: nativeBalance}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"ICO/ICOProxy.sol\":10836:10843  success */\n      dup1\n        /* \"ICO/ICOProxy.sol\":10828:10863  require(success, \"Transfer failed\") */\n      tag_710\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":22472:22474   */\n      0x20\n        /* \"ICO/ICOProxy.sol\":10828:10863  require(success, \"Transfer failed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":22454:22475   */\n      mstore\n        /* \"#utility.yul\":22511:22513   */\n      0x0f\n        /* \"#utility.yul\":22491:22509   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":22484:22514   */\n      mstore\n      shl(0x8a, 0x151c985b9cd9995c8819985a5b1959)\n        /* \"#utility.yul\":22530:22548   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":22523:22568   */\n      mstore\n        /* \"#utility.yul\":22585:22603   */\n      0x64\n      add\n        /* \"ICO/ICOProxy.sol\":10828:10863  require(success, \"Transfer failed\") */\n      tag_53\n        /* \"#utility.yul\":22270:22609   */\n      jump\n        /* \"ICO/ICOProxy.sol\":10828:10863  require(success, \"Transfer failed\") */\n    tag_710:\n        /* \"ICO/ICOProxy.sol\":10734:10874  {... */\n      pop\n        /* \"ICO/ICOProxy.sol\":10710:10874  if (nativeBalance != 0) {... */\n    tag_704:\n        /* \"ICO/ICOProxy.sol\":10912:10916  usdt */\n      sload(0x0b)\n        /* \"ICO/ICOProxy.sol\":10905:10933  IERC20(usdt).balanceOf(self) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2037:2069   */\n      dup5\n      dup2\n      and\n        /* \"ICO/ICOProxy.sol\":10905:10933  IERC20(usdt).balanceOf(self) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":2019:2070   */\n      mstore\n        /* \"ICO/ICOProxy.sol\":10883:10902  uint256 usdtBalance */\n      0x00\n      swap3\n        /* \"ICO/ICOProxy.sol\":10912:10916  usdt */\n      and\n      swap1\n        /* \"ICO/ICOProxy.sol\":10905:10927  IERC20(usdt).balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1992:2010   */\n      0x24\n      add\n        /* \"ICO/ICOProxy.sol\":10905:10933  IERC20(usdt).balanceOf(self) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_715\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_715:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_716\n      swap2\n      swap1\n      tag_539\n      jump\t// in\n    tag_716:\n        /* \"ICO/ICOProxy.sol\":10883:10933  uint256 usdtBalance = IERC20(usdt).balanceOf(self) */\n      swap1\n      pop\n        /* \"ICO/ICOProxy.sol\":10947:10963  usdtBalance != 0 */\n      dup1\n      iszero\n        /* \"ICO/ICOProxy.sol\":10943:11112  if (usdtBalance != 0) {... */\n      tag_723\n      jumpi\n        /* \"ICO/ICOProxy.sol\":11011:11015  usdt */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0b))\n        /* \"ICO/ICOProxy.sol\":11004:11025  IERC20(usdt).transfer */\n      0xa9059cbb\n        /* \"ICO/ICOProxy.sol\":11026:11033  owner() */\n      tag_718\n        /* \"ICO/ICOProxy.sol\":11026:11031  owner */\n      tag_150\n        /* \"ICO/ICOProxy.sol\":11026:11033  owner() */\n      jump\t// in\n    tag_718:\n        /* \"ICO/ICOProxy.sol\":11004:11047  IERC20(usdt).transfer(owner(), usdtBalance) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup5\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":15640:15672   */\n      swap1\n      swap2\n      and\n        /* \"ICO/ICOProxy.sol\":11004:11047  IERC20(usdt).transfer(owner(), usdtBalance) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15622:15673   */\n      mstore\n        /* \"#utility.yul\":15689:15707   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":15682:15716   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":15595:15613   */\n      0x44\n      add\n        /* \"ICO/ICOProxy.sol\":11004:11047  IERC20(usdt).transfer(owner(), usdtBalance) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_721\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_721:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_722\n      swap2\n      swap1\n      tag_503\n      jump\t// in\n    tag_722:\n        /* \"ICO/ICOProxy.sol\":10979:11101  require(... */\n      tag_723\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":22816:22818   */\n      0x20\n        /* \"ICO/ICOProxy.sol\":10979:11101  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":22798:22819   */\n      mstore\n        /* \"#utility.yul\":22855:22857   */\n      0x14\n        /* \"#utility.yul\":22835:22853   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":22828:22858   */\n      mstore\n      shl(0x62, 0x1554d115081d1c985b9cd9995c8819985a5b1959)\n        /* \"#utility.yul\":22874:22892   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":22867:22917   */\n      mstore\n        /* \"#utility.yul\":22934:22952   */\n      0x64\n      add\n        /* \"ICO/ICOProxy.sol\":10979:11101  require(... */\n      tag_53\n        /* \"#utility.yul\":22614:22958   */\n      jump\n        /* \"ICO/ICOProxy.sol\":10979:11101  require(... */\n    tag_723:\n        /* \"ICO/ICOProxy.sol\":11150:11154  usdc */\n      sload(0x0c)\n        /* \"ICO/ICOProxy.sol\":11143:11171  IERC20(usdc).balanceOf(self) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2037:2069   */\n      dup6\n      dup2\n      and\n        /* \"ICO/ICOProxy.sol\":11143:11171  IERC20(usdc).balanceOf(self) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":2019:2070   */\n      mstore\n        /* \"ICO/ICOProxy.sol\":11121:11140  uint256 usdcBalance */\n      0x00\n      swap3\n        /* \"ICO/ICOProxy.sol\":11150:11154  usdc */\n      and\n      swap1\n        /* \"ICO/ICOProxy.sol\":11143:11165  IERC20(usdc).balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1992:2010   */\n      0x24\n      add\n        /* \"ICO/ICOProxy.sol\":11143:11171  IERC20(usdc).balanceOf(self) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_728\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_728:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_729\n      swap2\n      swap1\n      tag_539\n      jump\t// in\n    tag_729:\n        /* \"ICO/ICOProxy.sol\":11121:11171  uint256 usdcBalance = IERC20(usdc).balanceOf(self) */\n      swap1\n      pop\n        /* \"ICO/ICOProxy.sol\":11185:11201  usdcBalance != 0 */\n      dup1\n      iszero\n        /* \"ICO/ICOProxy.sol\":11181:11350  if (usdcBalance != 0) {... */\n      tag_736\n      jumpi\n        /* \"ICO/ICOProxy.sol\":11249:11253  usdc */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0c))\n        /* \"ICO/ICOProxy.sol\":11242:11263  IERC20(usdc).transfer */\n      0xa9059cbb\n        /* \"ICO/ICOProxy.sol\":11264:11271  owner() */\n      tag_731\n        /* \"ICO/ICOProxy.sol\":11264:11269  owner */\n      tag_150\n        /* \"ICO/ICOProxy.sol\":11264:11271  owner() */\n      jump\t// in\n    tag_731:\n        /* \"ICO/ICOProxy.sol\":11242:11285  IERC20(usdc).transfer(owner(), usdcBalance) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup5\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":15640:15672   */\n      swap1\n      swap2\n      and\n        /* \"ICO/ICOProxy.sol\":11242:11285  IERC20(usdc).transfer(owner(), usdcBalance) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15622:15673   */\n      mstore\n        /* \"#utility.yul\":15689:15707   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":15682:15716   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":15595:15613   */\n      0x44\n      add\n        /* \"ICO/ICOProxy.sol\":11242:11285  IERC20(usdc).transfer(owner(), usdcBalance) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_734\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_734:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_735\n      swap2\n      swap1\n      tag_503\n      jump\t// in\n    tag_735:\n        /* \"ICO/ICOProxy.sol\":11217:11339  require(... */\n      tag_736\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":23165:23167   */\n      0x20\n        /* \"ICO/ICOProxy.sol\":11217:11339  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":23147:23168   */\n      mstore\n        /* \"#utility.yul\":23204:23206   */\n      0x14\n        /* \"#utility.yul\":23184:23202   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":23177:23207   */\n      mstore\n      shl(0x62, 0x1554d110c81d1c985b9cd9995c8819985a5b1959)\n        /* \"#utility.yul\":23223:23241   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":23216:23266   */\n      mstore\n        /* \"#utility.yul\":23283:23301   */\n      0x64\n      add\n        /* \"ICO/ICOProxy.sol\":11217:11339  require(... */\n      tag_53\n        /* \"#utility.yul\":22963:23307   */\n      jump\n        /* \"ICO/ICOProxy.sol\":11217:11339  require(... */\n    tag_736:\n        /* \"ICO/ICOProxy.sol\":10616:11356  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"ICO/ICOProxy.sol\":10576:11356  function _transferFundsToOwner() private{... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4603:4915  function _checkProxy() internal view virtual {... */\n    tag_378:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4683:4687  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4692:4698  __self */\n      immutable(\"0xca4b0db001bf2677ca5ac885bd7766c7c4b4b5d0170066d4830e0728bf019f64\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4675:4698  address(this) == __self */\n      and\n      eq\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4675:4795  address(this) == __self || // Must be called through delegatecall... */\n      tag_742\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4789:4795  __self */\n      immutable(\"0xca4b0db001bf2677ca5ac885bd7766c7c4b4b5d0170066d4830e0728bf019f64\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4753:4795  ERC1967Utils.getImplementation() != __self */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4753:4785  ERC1967Utils.getImplementation() */\n      tag_743\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1519:1572  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1441:1579  function getImplementation() internal view returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4753:4785  ERC1967Utils.getImplementation() */\n    tag_743:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4753:4795  ERC1967Utils.getImplementation() != __self */\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4675:4795  address(this) == __self || // Must be called through delegatecall... */\n    tag_742:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4658:4909  if (... */\n      iszero\n      tag_370\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4869:4898  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      shl(0xe1, 0x703e46dd)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ICO/ICOProxy.sol\":15668:15752  function _authorizeUpgrade(address newImplementation) internal override onlyOwner {} */\n    tag_381:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_675\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_352\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6057:6595  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {... */\n    tag_383:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6174:6191  newImplementation */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6156:6206  IERC1822Proxiable(newImplementation).proxiableUUID */\n      and\n      0x52d1902d\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6156:6208  IERC1822Proxiable(newImplementation).proxiableUUID() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_750\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_751\n      swap2\n      dup2\n      add\n      swap1\n      tag_539\n      jump\t// in\n    tag_751:\n      0x01\n    tag_750:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6152:6589  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n      tag_753\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6518:6578  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      shl(0xe0, 0x4c9c8ce3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2037:2069   */\n      dup4\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6518:6578  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2019:2070   */\n      mstore\n        /* \"#utility.yul\":1992:2010   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6518:6578  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      tag_53\n        /* \"#utility.yul\":1873:2076   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6152:6589  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n    tag_753:\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6250:6290  slot != ERC1967Utils.IMPLEMENTATION_SLOT */\n      dup2\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6246:6366  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n      tag_759\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6317:6351  UUPSUnsupportedProxiableUUID(slot) */\n      mload(0x40)\n      shl(0xe2, 0x2a875269)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":1014:1039   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":987:1005   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6317:6351  UUPSUnsupportedProxiableUUID(slot) */\n      tag_53\n        /* \"#utility.yul\":868:1045   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6246:6366  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n    tag_759:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6379:6433  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      tag_416\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6409:6426  newImplementation */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6428:6432  data */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6379:6408  ERC1967Utils.upgradeToAndCall */\n      tag_762\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6379:6433  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5032:5245  function _checkNotDelegated() internal view virtual {... */\n    tag_386:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5106:5110  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5115:5121  __self */\n      immutable(\"0xca4b0db001bf2677ca5ac885bd7766c7c4b4b5d0170066d4830e0728bf019f64\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5098:5121  address(this) != __self */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5094:5239  if (address(this) != __self) {... */\n      tag_370\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5199:5228  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      shl(0xe1, 0x703e46dd)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_421:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3931  $._owner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3960  $._owner = newOwner */\n      dup2\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      dup2\n      and\n      swap2\n      dup3\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3931  $._owner */\n      swap3\n      and\n      swap2\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3871  OwnableStorage storage $ */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3837:4022  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n    tag_686:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_771\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_772\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_771:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      tag_675\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1954:1966  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1953  __Ownable_init_unchained */\n      tag_775\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2970:3037  function __UUPSUpgradeable_init() internal onlyInitializing {... */\n    tag_688:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_370\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_772\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2264:2608  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n    tag_762:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2392  _setImplementation(newImplementation) */\n      tag_785\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2374:2391  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2373  _setImplementation */\n      tag_786\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2392  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_785:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2407:2443  IERC1967.Upgraded(newImplementation) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2458:2469  data.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2458:2473  data.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2454:2602  if (data.length > 0) {... */\n      tag_787\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2542  Address.functionDelegateCall(newImplementation, data) */\n      tag_416\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2518:2535  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2537:2541  data */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2517  Address.functionDelegateCall */\n      tag_789\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2542  Address.functionDelegateCall(newImplementation, data) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2454:2602  if (data.length > 0) {... */\n    tag_787:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2591  _checkNonPayable() */\n      tag_382\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2589  _checkNonPayable */\n      tag_792\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2591  _checkNonPayable() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n    tag_772:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8600  _getInitializableStorage()._initializing */\n      sload\n      shl(0x40, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n      tag_370\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7191:7208  NotInitializing() */\n      mload(0x40)\n      shl(0xe3, 0x1afcd79f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n    tag_775:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_671\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_772\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1671:1952  function _setImplementation(address newImplementation) private {... */\n    tag_786:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1765  newImplementation */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1777  newImplementation.code.length */\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1781:1782  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1782  newImplementation.code.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1744:1863  if (newImplementation.code.length == 0) {... */\n      tag_805\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1805:1852  ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      shl(0xe0, 0x4c9c8ce3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2037:2069   */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1805:1852  ERC1967InvalidImplementation(newImplementation) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2019:2070   */\n      mstore\n        /* \"#utility.yul\":1992:2010   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1805:1852  ERC1967InvalidImplementation(newImplementation) */\n      tag_53\n        /* \"#utility.yul\":1873:2076   */\n      jump\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1744:1863  if (newImplementation.code.length == 0) {... */\n    tag_805:\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1872:1945  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1671:1952  function _setImplementation(address newImplementation) private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3900:4153  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_789:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3983:3995  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4008:4020  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4022:4045  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4049:4055  target */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4049:4068  target.delegatecall */\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4069:4073  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4049:4074  target.delegatecall(data) */\n      mload(0x40)\n      tag_809\n      swap2\n      swap1\n      tag_810\n      jump\t// in\n    tag_809:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_813\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_812)\n    tag_813:\n      0x60\n      swap2\n      pop\n    tag_812:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4007:4074  (bool success, bytes memory returndata) = target.delegatecall(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4091:4146  verifyCallResultFromTarget(target, success, returndata) */\n      tag_814\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4118:4124  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4126:4133  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4135:4145  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4091:4117  verifyCallResultFromTarget */\n      tag_815\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4091:4146  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_814:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4084:4146  return verifyCallResultFromTarget(target, success, returndata) */\n      swap6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3900:4153  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6113:6235  function _checkNonPayable() private {... */\n    tag_792:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6163:6172  msg.value */\n      callvalue\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6163:6176  msg.value > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6159:6229  if (msg.value > 0) {... */\n      tag_370\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6199:6218  ERC1967NonPayable() */\n      mload(0x40)\n      shl(0xe0, 0xb398979f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4421:5003  function verifyCallResultFromTarget(... */\n    tag_815:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4565:4577  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4594:4601  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4589:4997  if (!success) {... */\n      tag_821\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4617:4636  _revert(returndata) */\n      tag_822\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:4635  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4617:4624  _revert */\n      tag_823\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4617:4636  _revert(returndata) */\n      jump\t// in\n    tag_822:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4589:4997  if (!success) {... */\n      jump(tag_824)\n    tag_821:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4841:4858  returndata.length */\n      dup2\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4841:4863  returndata.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4841:4890  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_825\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4867:4885  target.code.length */\n      dup5\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4867:4890  target.code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4841:4890  returndata.length == 0 && target.code.length == 0 */\n    tag_825:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4837:4956  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_826\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4917:4941  AddressEmptyCode(target) */\n      mload(0x40)\n      shl(0xe0, 0x9996b315)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2037:2069   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4917:4941  AddressEmptyCode(target) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2019:2070   */\n      mstore\n        /* \"#utility.yul\":1992:2010   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4917:4941  AddressEmptyCode(target) */\n      tag_53\n        /* \"#utility.yul\":1873:2076   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4837:4956  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_826:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4976:4986  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4589:4997  if (!success) {... */\n    tag_824:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4421:5003  function verifyCallResultFromTarget(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5543:6030  function _revert(bytes memory returndata) private pure {... */\n    tag_823:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5674:5691  returndata.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5674:5695  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5670:6024  if (returndata.length > 0) {... */\n      tag_829\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5871:5881  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5865:5882  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5927:5942  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5914:5924  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5910:5912  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5906:5925  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5899:5943  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5670:6024  if (returndata.length > 0) {... */\n    tag_829:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5994:6013  Errors.FailedCall() */\n      mload(0x40)\n      shl(0xe0, 0xd6bda275)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":375:529   */\n    tag_831:\n        /* \"#utility.yul\":454:474   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":503:504   */\n      0x03\n        /* \"#utility.yul\":493:505   */\n      dup2\n      lt\n        /* \"#utility.yul\":483:523   */\n      tag_308\n      jumpi\n        /* \"#utility.yul\":519:520   */\n      0x00\n        /* \"#utility.yul\":516:517   */\n      dup1\n        /* \"#utility.yul\":509:521   */\n      revert\n        /* \"#utility.yul\":534:863   */\n    tag_58:\n        /* \"#utility.yul\":620:626   */\n      0x00\n        /* \"#utility.yul\":628:634   */\n      dup1\n        /* \"#utility.yul\":681:683   */\n      0x40\n        /* \"#utility.yul\":669:678   */\n      dup4\n        /* \"#utility.yul\":660:667   */\n      dup6\n        /* \"#utility.yul\":656:679   */\n      sub\n        /* \"#utility.yul\":652:684   */\n      slt\n        /* \"#utility.yul\":649:701   */\n      iszero\n      tag_845\n      jumpi\n        /* \"#utility.yul\":697:698   */\n      0x00\n        /* \"#utility.yul\":694:695   */\n      dup1\n        /* \"#utility.yul\":687:699   */\n      revert\n        /* \"#utility.yul\":649:701   */\n    tag_845:\n        /* \"#utility.yul\":720:760   */\n      tag_846\n        /* \"#utility.yul\":750:759   */\n      dup4\n        /* \"#utility.yul\":720:760   */\n      tag_831\n      jump\t// in\n    tag_846:\n        /* \"#utility.yul\":710:760   */\n      swap5\n        /* \"#utility.yul\":829:831   */\n      0x20\n        /* \"#utility.yul\":814:832   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":801:833   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":534:863   */\n      jump\t// out\n        /* \"#utility.yul\":1242:1457   */\n    tag_70:\n        /* \"#utility.yul\":1319:1325   */\n      0x00\n        /* \"#utility.yul\":1372:1374   */\n      0x20\n        /* \"#utility.yul\":1360:1369   */\n      dup3\n        /* \"#utility.yul\":1351:1358   */\n      dup5\n        /* \"#utility.yul\":1347:1370   */\n      sub\n        /* \"#utility.yul\":1343:1375   */\n      slt\n        /* \"#utility.yul\":1340:1392   */\n      iszero\n      tag_850\n      jumpi\n        /* \"#utility.yul\":1388:1389   */\n      0x00\n        /* \"#utility.yul\":1385:1386   */\n      dup1\n        /* \"#utility.yul\":1378:1390   */\n      revert\n        /* \"#utility.yul\":1340:1392   */\n    tag_850:\n        /* \"#utility.yul\":1411:1451   */\n      tag_824\n        /* \"#utility.yul\":1441:1450   */\n      dup3\n        /* \"#utility.yul\":1411:1451   */\n      tag_831\n      jump\t// in\n        /* \"#utility.yul\":1642:1868   */\n    tag_93:\n        /* \"#utility.yul\":1701:1707   */\n      0x00\n        /* \"#utility.yul\":1754:1756   */\n      0x20\n        /* \"#utility.yul\":1742:1751   */\n      dup3\n        /* \"#utility.yul\":1733:1740   */\n      dup5\n        /* \"#utility.yul\":1729:1752   */\n      sub\n        /* \"#utility.yul\":1725:1757   */\n      slt\n        /* \"#utility.yul\":1722:1774   */\n      iszero\n      tag_854\n      jumpi\n        /* \"#utility.yul\":1770:1771   */\n      0x00\n        /* \"#utility.yul\":1767:1768   */\n      dup1\n        /* \"#utility.yul\":1760:1772   */\n      revert\n        /* \"#utility.yul\":1722:1774   */\n    tag_854:\n      pop\n        /* \"#utility.yul\":1815:1838   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1642:1868   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2081:2212   */\n    tag_832:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2156:2187   */\n      dup2\n      and\n        /* \"#utility.yul\":2146:2188   */\n      dup2\n      eq\n        /* \"#utility.yul\":2136:2206   */\n      tag_675\n      jumpi\n        /* \"#utility.yul\":2202:2203   */\n      0x00\n        /* \"#utility.yul\":2199:2200   */\n      dup1\n        /* \"#utility.yul\":2192:2204   */\n      revert\n        /* \"#utility.yul\":2217:2344   */\n    tag_833:\n        /* \"#utility.yul\":2278:2288   */\n      0x4e487b71\n        /* \"#utility.yul\":2273:2276   */\n      0xe0\n        /* \"#utility.yul\":2269:2289   */\n      shl\n        /* \"#utility.yul\":2266:2267   */\n      0x00\n        /* \"#utility.yul\":2259:2290   */\n      mstore\n        /* \"#utility.yul\":2309:2313   */\n      0x41\n        /* \"#utility.yul\":2306:2307   */\n      0x04\n        /* \"#utility.yul\":2299:2314   */\n      mstore\n        /* \"#utility.yul\":2333:2337   */\n      0x24\n        /* \"#utility.yul\":2330:2331   */\n      0x00\n        /* \"#utility.yul\":2323:2338   */\n      revert\n        /* \"#utility.yul\":2349:3428   */\n    tag_116:\n        /* \"#utility.yul\":2426:2432   */\n      0x00\n        /* \"#utility.yul\":2434:2440   */\n      dup1\n        /* \"#utility.yul\":2487:2489   */\n      0x40\n        /* \"#utility.yul\":2475:2484   */\n      dup4\n        /* \"#utility.yul\":2466:2473   */\n      dup6\n        /* \"#utility.yul\":2462:2485   */\n      sub\n        /* \"#utility.yul\":2458:2490   */\n      slt\n        /* \"#utility.yul\":2455:2507   */\n      iszero\n      tag_860\n      jumpi\n        /* \"#utility.yul\":2503:2504   */\n      0x00\n        /* \"#utility.yul\":2500:2501   */\n      dup1\n        /* \"#utility.yul\":2493:2505   */\n      revert\n        /* \"#utility.yul\":2455:2507   */\n    tag_860:\n        /* \"#utility.yul\":2542:2551   */\n      dup3\n        /* \"#utility.yul\":2529:2552   */\n      calldataload\n        /* \"#utility.yul\":2561:2592   */\n      tag_861\n        /* \"#utility.yul\":2586:2591   */\n      dup2\n        /* \"#utility.yul\":2561:2592   */\n      tag_832\n      jump\t// in\n    tag_861:\n        /* \"#utility.yul\":2611:2616   */\n      swap2\n      pop\n        /* \"#utility.yul\":2667:2669   */\n      0x20\n        /* \"#utility.yul\":2652:2670   */\n      dup4\n      add\n        /* \"#utility.yul\":2639:2671   */\n      calldataload\n        /* \"#utility.yul\":2694:2712   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2683:2713   */\n      dup2\n      gt\n        /* \"#utility.yul\":2680:2730   */\n      iszero\n      tag_862\n      jumpi\n        /* \"#utility.yul\":2726:2727   */\n      0x00\n        /* \"#utility.yul\":2723:2724   */\n      dup1\n        /* \"#utility.yul\":2716:2728   */\n      revert\n        /* \"#utility.yul\":2680:2730   */\n    tag_862:\n        /* \"#utility.yul\":2749:2771   */\n      dup4\n      add\n        /* \"#utility.yul\":2802:2806   */\n      0x1f\n        /* \"#utility.yul\":2794:2807   */\n      dup2\n      add\n        /* \"#utility.yul\":2790:2817   */\n      dup6\n      sgt\n        /* \"#utility.yul\":2780:2835   */\n      tag_863\n      jumpi\n        /* \"#utility.yul\":2831:2832   */\n      0x00\n        /* \"#utility.yul\":2828:2829   */\n      dup1\n        /* \"#utility.yul\":2821:2833   */\n      revert\n        /* \"#utility.yul\":2780:2835   */\n    tag_863:\n        /* \"#utility.yul\":2871:2873   */\n      dup1\n        /* \"#utility.yul\":2858:2874   */\n      calldataload\n        /* \"#utility.yul\":2897:2915   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2889:2895   */\n      dup2\n        /* \"#utility.yul\":2886:2916   */\n      gt\n        /* \"#utility.yul\":2883:2939   */\n      iszero\n      tag_865\n      jumpi\n        /* \"#utility.yul\":2919:2937   */\n      tag_865\n      tag_833\n      jump\t// in\n    tag_865:\n        /* \"#utility.yul\":2968:2970   */\n      0x40\n        /* \"#utility.yul\":2962:2971   */\n      mload\n        /* \"#utility.yul\":3060:3062   */\n      0x1f\n        /* \"#utility.yul\":3022:3039   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3018:3049   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":3051:3053   */\n      0x3f\n        /* \"#utility.yul\":3014:3054   */\n      add\n        /* \"#utility.yul\":3010:3064   */\n      and\n        /* \"#utility.yul\":2998:3065   */\n      dup2\n      add\n        /* \"#utility.yul\":3095:3113   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3080:3114   */\n      dup2\n      gt\n        /* \"#utility.yul\":3116:3138   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":3077:3139   */\n      or\n        /* \"#utility.yul\":3074:3162   */\n      iszero\n      tag_867\n      jumpi\n        /* \"#utility.yul\":3142:3160   */\n      tag_867\n      tag_833\n      jump\t// in\n    tag_867:\n        /* \"#utility.yul\":3178:3180   */\n      0x40\n        /* \"#utility.yul\":3171:3193   */\n      mstore\n        /* \"#utility.yul\":3202:3224   */\n      dup2\n      dup2\n      mstore\n        /* \"#utility.yul\":3243:3258   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":3260:3262   */\n      0x20\n        /* \"#utility.yul\":3239:3263   */\n      add\n        /* \"#utility.yul\":3236:3273   */\n      dup8\n      lt\n        /* \"#utility.yul\":3233:3290   */\n      iszero\n      tag_868\n      jumpi\n        /* \"#utility.yul\":3286:3287   */\n      0x00\n        /* \"#utility.yul\":3283:3284   */\n      dup1\n        /* \"#utility.yul\":3276:3288   */\n      revert\n        /* \"#utility.yul\":3233:3290   */\n    tag_868:\n        /* \"#utility.yul\":3342:3348   */\n      dup2\n        /* \"#utility.yul\":3337:3339   */\n      0x20\n        /* \"#utility.yul\":3333:3335   */\n      dup5\n        /* \"#utility.yul\":3329:3340   */\n      add\n        /* \"#utility.yul\":3324:3326   */\n      0x20\n        /* \"#utility.yul\":3316:3322   */\n      dup4\n        /* \"#utility.yul\":3312:3327   */\n      add\n        /* \"#utility.yul\":3299:3349   */\n      calldatacopy\n        /* \"#utility.yul\":3395:3396   */\n      0x00\n        /* \"#utility.yul\":3390:3392   */\n      0x20\n        /* \"#utility.yul\":3381:3387   */\n      dup4\n        /* \"#utility.yul\":3373:3379   */\n      dup4\n        /* \"#utility.yul\":3369:3388   */\n      add\n        /* \"#utility.yul\":3365:3393   */\n      add\n        /* \"#utility.yul\":3358:3397   */\n      mstore\n        /* \"#utility.yul\":3416:3422   */\n      dup1\n        /* \"#utility.yul\":3406:3422   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2349:3428   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3615:4081   */\n    tag_133:\n        /* \"#utility.yul\":3692:3698   */\n      0x00\n        /* \"#utility.yul\":3700:3706   */\n      dup1\n        /* \"#utility.yul\":3708:3714   */\n      0x00\n        /* \"#utility.yul\":3761:3763   */\n      0x60\n        /* \"#utility.yul\":3749:3758   */\n      dup5\n        /* \"#utility.yul\":3740:3747   */\n      dup7\n        /* \"#utility.yul\":3736:3759   */\n      sub\n        /* \"#utility.yul\":3732:3764   */\n      slt\n        /* \"#utility.yul\":3729:3781   */\n      iszero\n      tag_871\n      jumpi\n        /* \"#utility.yul\":3777:3778   */\n      0x00\n        /* \"#utility.yul\":3774:3775   */\n      dup1\n        /* \"#utility.yul\":3767:3779   */\n      revert\n        /* \"#utility.yul\":3729:3781   */\n    tag_871:\n      pop\n      pop\n        /* \"#utility.yul\":3822:3845   */\n      dup2\n      calldataload\n      swap4\n        /* \"#utility.yul\":3942:3944   */\n      0x20\n        /* \"#utility.yul\":3927:3945   */\n      dup4\n      add\n        /* \"#utility.yul\":3914:3946   */\n      calldataload\n      swap4\n      pop\n        /* \"#utility.yul\":4045:4047   */\n      0x40\n        /* \"#utility.yul\":4030:4048   */\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":4017:4049   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":3615:4081   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4086:4336   */\n    tag_834:\n        /* \"#utility.yul\":4171:4172   */\n      0x00\n        /* \"#utility.yul\":4181:4294   */\n    tag_873:\n        /* \"#utility.yul\":4195:4201   */\n      dup4\n        /* \"#utility.yul\":4192:4193   */\n      dup2\n        /* \"#utility.yul\":4189:4202   */\n      lt\n        /* \"#utility.yul\":4181:4294   */\n      iszero\n      tag_875\n      jumpi\n        /* \"#utility.yul\":4271:4282   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":4265:4283   */\n      mload\n        /* \"#utility.yul\":4252:4263   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":4245:4284   */\n      mstore\n        /* \"#utility.yul\":4217:4219   */\n      0x20\n        /* \"#utility.yul\":4210:4220   */\n      add\n        /* \"#utility.yul\":4181:4294   */\n      jump(tag_873)\n    tag_875:\n      pop\n      pop\n        /* \"#utility.yul\":4328:4329   */\n      0x00\n        /* \"#utility.yul\":4310:4326   */\n      swap2\n      add\n        /* \"#utility.yul\":4303:4330   */\n      mstore\n        /* \"#utility.yul\":4086:4336   */\n      jump\t// out\n        /* \"#utility.yul\":4341:4737   */\n    tag_184:\n        /* \"#utility.yul\":4490:4492   */\n      0x20\n        /* \"#utility.yul\":4479:4488   */\n      dup2\n        /* \"#utility.yul\":4472:4493   */\n      mstore\n        /* \"#utility.yul\":4453:4457   */\n      0x00\n        /* \"#utility.yul\":4522:4528   */\n      dup3\n        /* \"#utility.yul\":4516:4529   */\n      mload\n        /* \"#utility.yul\":4565:4571   */\n      dup1\n        /* \"#utility.yul\":4560:4562   */\n      0x20\n        /* \"#utility.yul\":4549:4558   */\n      dup5\n        /* \"#utility.yul\":4545:4563   */\n      add\n        /* \"#utility.yul\":4538:4572   */\n      mstore\n        /* \"#utility.yul\":4581:4660   */\n      tag_877\n        /* \"#utility.yul\":4653:4659   */\n      dup2\n        /* \"#utility.yul\":4648:4650   */\n      0x40\n        /* \"#utility.yul\":4637:4646   */\n      dup6\n        /* \"#utility.yul\":4633:4651   */\n      add\n        /* \"#utility.yul\":4628:4630   */\n      0x20\n        /* \"#utility.yul\":4620:4626   */\n      dup8\n        /* \"#utility.yul\":4616:4631   */\n      add\n        /* \"#utility.yul\":4581:4660   */\n      tag_834\n      jump\t// in\n    tag_877:\n        /* \"#utility.yul\":4721:4723   */\n      0x1f\n        /* \"#utility.yul\":4700:4715   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":4696:4725   */\n      and\n        /* \"#utility.yul\":4681:4726   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":4728:4730   */\n      0x40\n        /* \"#utility.yul\":4677:4731   */\n      add\n      swap3\n        /* \"#utility.yul\":4341:4737   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5473:5720   */\n    tag_213:\n        /* \"#utility.yul\":5532:5538   */\n      0x00\n        /* \"#utility.yul\":5585:5587   */\n      0x20\n        /* \"#utility.yul\":5573:5582   */\n      dup3\n        /* \"#utility.yul\":5564:5571   */\n      dup5\n        /* \"#utility.yul\":5560:5583   */\n      sub\n        /* \"#utility.yul\":5556:5588   */\n      slt\n        /* \"#utility.yul\":5553:5605   */\n      iszero\n      tag_881\n      jumpi\n        /* \"#utility.yul\":5601:5602   */\n      0x00\n        /* \"#utility.yul\":5598:5599   */\n      dup1\n        /* \"#utility.yul\":5591:5603   */\n      revert\n        /* \"#utility.yul\":5553:5605   */\n    tag_881:\n        /* \"#utility.yul\":5640:5649   */\n      dup2\n        /* \"#utility.yul\":5627:5650   */\n      calldataload\n        /* \"#utility.yul\":5659:5690   */\n      tag_824\n        /* \"#utility.yul\":5684:5689   */\n      dup2\n        /* \"#utility.yul\":5659:5690   */\n      tag_832\n      jump\t// in\n        /* \"#utility.yul\":5948:7160   */\n    tag_237:\n        /* \"#utility.yul\":6085:6091   */\n      0x00\n        /* \"#utility.yul\":6093:6099   */\n      dup1\n        /* \"#utility.yul\":6101:6107   */\n      0x00\n        /* \"#utility.yul\":6109:6115   */\n      dup1\n        /* \"#utility.yul\":6117:6123   */\n      0x00\n        /* \"#utility.yul\":6125:6131   */\n      dup1\n        /* \"#utility.yul\":6133:6139   */\n      0x00\n        /* \"#utility.yul\":6141:6147   */\n      dup1\n        /* \"#utility.yul\":6194:6197   */\n      0x0100\n        /* \"#utility.yul\":6182:6191   */\n      dup10\n        /* \"#utility.yul\":6173:6180   */\n      dup12\n        /* \"#utility.yul\":6169:6192   */\n      sub\n        /* \"#utility.yul\":6165:6198   */\n      slt\n        /* \"#utility.yul\":6162:6215   */\n      iszero\n      tag_885\n      jumpi\n        /* \"#utility.yul\":6211:6212   */\n      0x00\n        /* \"#utility.yul\":6208:6209   */\n      dup1\n        /* \"#utility.yul\":6201:6213   */\n      revert\n        /* \"#utility.yul\":6162:6215   */\n    tag_885:\n        /* \"#utility.yul\":6250:6259   */\n      dup9\n        /* \"#utility.yul\":6237:6260   */\n      calldataload\n        /* \"#utility.yul\":6269:6300   */\n      tag_886\n        /* \"#utility.yul\":6294:6299   */\n      dup2\n        /* \"#utility.yul\":6269:6300   */\n      tag_832\n      jump\t// in\n    tag_886:\n        /* \"#utility.yul\":6319:6324   */\n      swap8\n      pop\n        /* \"#utility.yul\":6376:6378   */\n      0x20\n        /* \"#utility.yul\":6361:6379   */\n      dup10\n      add\n        /* \"#utility.yul\":6348:6380   */\n      calldataload\n        /* \"#utility.yul\":6389:6422   */\n      tag_887\n        /* \"#utility.yul\":6348:6380   */\n      dup2\n        /* \"#utility.yul\":6389:6422   */\n      tag_832\n      jump\t// in\n    tag_887:\n        /* \"#utility.yul\":6441:6448   */\n      swap7\n      pop\n        /* \"#utility.yul\":6500:6502   */\n      0x40\n        /* \"#utility.yul\":6485:6503   */\n      dup10\n      add\n        /* \"#utility.yul\":6472:6504   */\n      calldataload\n        /* \"#utility.yul\":6513:6546   */\n      tag_888\n        /* \"#utility.yul\":6472:6504   */\n      dup2\n        /* \"#utility.yul\":6513:6546   */\n      tag_832\n      jump\t// in\n    tag_888:\n        /* \"#utility.yul\":6565:6572   */\n      swap6\n      pop\n        /* \"#utility.yul\":6645:6647   */\n      0x60\n        /* \"#utility.yul\":6630:6648   */\n      dup10\n      add\n        /* \"#utility.yul\":6617:6649   */\n      calldataload\n      swap5\n      pop\n        /* \"#utility.yul\":6748:6751   */\n      0x80\n        /* \"#utility.yul\":6733:6752   */\n      dup10\n      add\n        /* \"#utility.yul\":6720:6753   */\n      calldataload\n      swap4\n      pop\n        /* \"#utility.yul\":6831:6834   */\n      0xa0\n        /* \"#utility.yul\":6816:6835   */\n      dup10\n      add\n        /* \"#utility.yul\":6803:6836   */\n      calldataload\n        /* \"#utility.yul\":6845:6878   */\n      tag_889\n        /* \"#utility.yul\":6803:6836   */\n      dup2\n        /* \"#utility.yul\":6845:6878   */\n      tag_832\n      jump\t// in\n    tag_889:\n        /* \"#utility.yul\":6897:6904   */\n      swap3\n      pop\n        /* \"#utility.yul\":6956:6959   */\n      0xc0\n        /* \"#utility.yul\":6941:6960   */\n      dup10\n      add\n        /* \"#utility.yul\":6928:6961   */\n      calldataload\n        /* \"#utility.yul\":6970:7003   */\n      tag_890\n        /* \"#utility.yul\":6928:6961   */\n      dup2\n        /* \"#utility.yul\":6970:7003   */\n      tag_832\n      jump\t// in\n    tag_890:\n        /* \"#utility.yul\":7022:7029   */\n      swap2\n      pop\n        /* \"#utility.yul\":7081:7084   */\n      0xe0\n        /* \"#utility.yul\":7066:7085   */\n      dup10\n      add\n        /* \"#utility.yul\":7053:7086   */\n      calldataload\n        /* \"#utility.yul\":7095:7128   */\n      tag_891\n        /* \"#utility.yul\":7053:7086   */\n      dup2\n        /* \"#utility.yul\":7095:7128   */\n      tag_832\n      jump\t// in\n    tag_891:\n        /* \"#utility.yul\":7147:7154   */\n      dup1\n        /* \"#utility.yul\":7137:7154   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":5948:7160   */\n      swap3\n      swap6\n      swap9\n      pop\n      swap3\n      swap6\n      swap9\n      swap1\n      swap4\n      swap7\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7512:7639   */\n    tag_248:\n        /* \"#utility.yul\":7573:7583   */\n      0x4e487b71\n        /* \"#utility.yul\":7568:7571   */\n      0xe0\n        /* \"#utility.yul\":7564:7584   */\n      shl\n        /* \"#utility.yul\":7561:7562   */\n      0x00\n        /* \"#utility.yul\":7554:7585   */\n      mstore\n        /* \"#utility.yul\":7604:7608   */\n      0x21\n        /* \"#utility.yul\":7601:7602   */\n      0x04\n        /* \"#utility.yul\":7594:7609   */\n      mstore\n        /* \"#utility.yul\":7628:7632   */\n      0x24\n        /* \"#utility.yul\":7625:7626   */\n      0x00\n        /* \"#utility.yul\":7618:7633   */\n      revert\n        /* \"#utility.yul\":7644:7771   */\n    tag_835:\n        /* \"#utility.yul\":7705:7715   */\n      0x4e487b71\n        /* \"#utility.yul\":7700:7703   */\n      0xe0\n        /* \"#utility.yul\":7696:7716   */\n      shl\n        /* \"#utility.yul\":7693:7694   */\n      0x00\n        /* \"#utility.yul\":7686:7717   */\n      mstore\n        /* \"#utility.yul\":7736:7740   */\n      0x11\n        /* \"#utility.yul\":7733:7734   */\n      0x04\n        /* \"#utility.yul\":7726:7741   */\n      mstore\n        /* \"#utility.yul\":7760:7764   */\n      0x24\n        /* \"#utility.yul\":7757:7758   */\n      0x00\n        /* \"#utility.yul\":7750:7765   */\n      revert\n        /* \"#utility.yul\":7776:7944   */\n    tag_254:\n        /* \"#utility.yul\":7849:7858   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":7880:7889   */\n      dup2\n      iszero\n        /* \"#utility.yul\":7897:7912   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":7891:7913   */\n      dup5\n      eq\n        /* \"#utility.yul\":7877:7914   */\n      or\n        /* \"#utility.yul\":7867:7938   */\n      tag_239\n      jumpi\n        /* \"#utility.yul\":7918:7936   */\n      tag_239\n      tag_835\n      jump\t// in\n        /* \"#utility.yul\":7949:8077   */\n    tag_267:\n        /* \"#utility.yul\":8016:8025   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":8037:8048   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":8034:8071   */\n      iszero\n      tag_239\n      jumpi\n        /* \"#utility.yul\":8051:8069   */\n      tag_239\n      tag_835\n      jump\t// in\n        /* \"#utility.yul\":8082:8457   */\n    tag_836:\n        /* \"#utility.yul\":8170:8171   */\n      0x01\n        /* \"#utility.yul\":8188:8193   */\n      dup2\n        /* \"#utility.yul\":8202:8451   */\n    tag_902:\n        /* \"#utility.yul\":8223:8224   */\n      0x01\n        /* \"#utility.yul\":8213:8221   */\n      dup5\n        /* \"#utility.yul\":8210:8225   */\n      gt\n        /* \"#utility.yul\":8202:8451   */\n      iszero\n      tag_904\n      jumpi\n        /* \"#utility.yul\":8273:8277   */\n      dup1\n        /* \"#utility.yul\":8268:8271   */\n      dup6\n        /* \"#utility.yul\":8264:8278   */\n      div\n        /* \"#utility.yul\":8258:8262   */\n      dup2\n        /* \"#utility.yul\":8255:8279   */\n      gt\n        /* \"#utility.yul\":8252:8302   */\n      iszero\n      tag_906\n      jumpi\n        /* \"#utility.yul\":8282:8300   */\n      tag_906\n      tag_835\n      jump\t// in\n    tag_906:\n        /* \"#utility.yul\":8332:8333   */\n      0x01\n        /* \"#utility.yul\":8322:8330   */\n      dup5\n        /* \"#utility.yul\":8318:8334   */\n      and\n        /* \"#utility.yul\":8315:8364   */\n      iszero\n      tag_907\n      jumpi\n        /* \"#utility.yul\":8346:8362   */\n      swap1\n      dup2\n      mul\n      swap1\n        /* \"#utility.yul\":8315:8364   */\n    tag_907:\n        /* \"#utility.yul\":8429:8430   */\n      0x01\n        /* \"#utility.yul\":8425:8441   */\n      swap4\n      swap1\n      swap4\n      shr\n      swap3\n        /* \"#utility.yul\":8385:8400   */\n      dup1\n      mul\n        /* \"#utility.yul\":8202:8451   */\n      jump(tag_902)\n    tag_904:\n        /* \"#utility.yul\":8082:8457   */\n      swap4\n      pop\n      swap4\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8462:9364   */\n    tag_837:\n        /* \"#utility.yul\":8511:8516   */\n      0x00\n        /* \"#utility.yul\":8541:8549   */\n      dup3\n        /* \"#utility.yul\":8531:8611   */\n      tag_909\n      jumpi\n      pop\n        /* \"#utility.yul\":8582:8583   */\n      0x01\n        /* \"#utility.yul\":8596:8601   */\n      jump(tag_239)\n        /* \"#utility.yul\":8531:8611   */\n    tag_909:\n        /* \"#utility.yul\":8630:8634   */\n      dup2\n        /* \"#utility.yul\":8620:8696   */\n      tag_910\n      jumpi\n      pop\n        /* \"#utility.yul\":8667:8668   */\n      0x00\n        /* \"#utility.yul\":8681:8686   */\n      jump(tag_239)\n        /* \"#utility.yul\":8620:8696   */\n    tag_910:\n        /* \"#utility.yul\":8712:8716   */\n      dup2\n        /* \"#utility.yul\":8730:8731   */\n      0x01\n        /* \"#utility.yul\":8725:8784   */\n      dup2\n      eq\n      tag_912\n      jumpi\n        /* \"#utility.yul\":8798:8799   */\n      0x02\n        /* \"#utility.yul\":8793:8967   */\n      dup2\n      eq\n      tag_913\n      jumpi\n        /* \"#utility.yul\":8705:8967   */\n      jump(tag_911)\n        /* \"#utility.yul\":8725:8784   */\n    tag_912:\n        /* \"#utility.yul\":8755:8756   */\n      0x01\n        /* \"#utility.yul\":8746:8756   */\n      swap2\n      pop\n        /* \"#utility.yul\":8769:8774   */\n      pop\n      jump(tag_239)\n        /* \"#utility.yul\":8793:8967   */\n    tag_913:\n        /* \"#utility.yul\":8830:8833   */\n      0xff\n        /* \"#utility.yul\":8820:8828   */\n      dup5\n        /* \"#utility.yul\":8817:8834   */\n      gt\n        /* \"#utility.yul\":8814:8857   */\n      iszero\n      tag_915\n      jumpi\n        /* \"#utility.yul\":8837:8855   */\n      tag_915\n      tag_835\n      jump\t// in\n    tag_915:\n      pop\n      pop\n        /* \"#utility.yul\":8893:8894   */\n      0x01\n        /* \"#utility.yul\":8879:8895   */\n      dup3\n      shl\n        /* \"#utility.yul\":8952:8957   */\n      jump(tag_239)\n        /* \"#utility.yul\":8705:8967   */\n    tag_911:\n      pop\n        /* \"#utility.yul\":9051:9053   */\n      0x20\n        /* \"#utility.yul\":9041:9049   */\n      dup4\n        /* \"#utility.yul\":9038:9054   */\n      lt\n        /* \"#utility.yul\":9032:9035   */\n      0x0133\n        /* \"#utility.yul\":9026:9030   */\n      dup4\n        /* \"#utility.yul\":9023:9036   */\n      lt\n        /* \"#utility.yul\":9019:9055   */\n      and\n        /* \"#utility.yul\":9013:9015   */\n      0x4e\n        /* \"#utility.yul\":9003:9011   */\n      dup5\n        /* \"#utility.yul\":9000:9016   */\n      lt\n        /* \"#utility.yul\":8995:8997   */\n      0x0b\n        /* \"#utility.yul\":8989:8993   */\n      dup5\n        /* \"#utility.yul\":8986:8998   */\n      lt\n        /* \"#utility.yul\":8982:9017   */\n      and\n        /* \"#utility.yul\":8979:9056   */\n      or\n        /* \"#utility.yul\":8976:9179   */\n      iszero\n      tag_916\n      jumpi\n      pop\n        /* \"#utility.yul\":9088:9107   */\n      dup2\n      dup2\n      exp\n        /* \"#utility.yul\":9164:9169   */\n      jump(tag_239)\n        /* \"#utility.yul\":8976:9179   */\n    tag_916:\n        /* \"#utility.yul\":9211:9253   */\n      tag_917\n      not(0x00)\n        /* \"#utility.yul\":9236:9244   */\n      dup5\n        /* \"#utility.yul\":9230:9234   */\n      dup5\n        /* \"#utility.yul\":9211:9253   */\n      tag_836\n      jump\t// in\n    tag_917:\n        /* \"#utility.yul\":9289:9295   */\n      dup1\n        /* \"#utility.yul\":9285:9286   */\n      0x00\n        /* \"#utility.yul\":9281:9287   */\n      not\n        /* \"#utility.yul\":9277:9296   */\n      div\n        /* \"#utility.yul\":9268:9275   */\n      dup3\n        /* \"#utility.yul\":9265:9297   */\n      gt\n        /* \"#utility.yul\":9262:9320   */\n      iszero\n      tag_919\n      jumpi\n        /* \"#utility.yul\":9300:9318   */\n      tag_919\n      tag_835\n      jump\t// in\n    tag_919:\n        /* \"#utility.yul\":9338:9358   */\n      mul\n      swap4\n        /* \"#utility.yul\":8462:9364   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9369:9500   */\n    tag_269:\n        /* \"#utility.yul\":9429:9434   */\n      0x00\n        /* \"#utility.yul\":9458:9494   */\n      tag_824\n        /* \"#utility.yul\":9485:9493   */\n      dup4\n        /* \"#utility.yul\":9479:9483   */\n      dup4\n        /* \"#utility.yul\":9458:9494   */\n      tag_837\n      jump\t// in\n        /* \"#utility.yul\":9860:10077   */\n    tag_278:\n        /* \"#utility.yul\":9900:9901   */\n      0x00\n        /* \"#utility.yul\":9926:9927   */\n      dup3\n        /* \"#utility.yul\":9916:10048   */\n      tag_924\n      jumpi\n        /* \"#utility.yul\":9970:9980   */\n      0x4e487b71\n        /* \"#utility.yul\":9965:9968   */\n      0xe0\n        /* \"#utility.yul\":9961:9981   */\n      shl\n        /* \"#utility.yul\":9958:9959   */\n      0x00\n        /* \"#utility.yul\":9951:9982   */\n      mstore\n        /* \"#utility.yul\":10005:10009   */\n      0x12\n        /* \"#utility.yul\":10002:10003   */\n      0x04\n        /* \"#utility.yul\":9995:10010   */\n      mstore\n        /* \"#utility.yul\":10033:10037   */\n      0x24\n        /* \"#utility.yul\":10030:10031   */\n      0x00\n        /* \"#utility.yul\":10023:10038   */\n      revert\n        /* \"#utility.yul\":9916:10048   */\n    tag_924:\n      pop\n        /* \"#utility.yul\":10062:10071   */\n      div\n      swap1\n        /* \"#utility.yul\":9860:10077   */\n      jump\t// out\n        /* \"#utility.yul\":10082:10261   */\n    tag_838:\n        /* \"#utility.yul\":10160:10173   */\n      dup1\n      mload\n        /* \"#utility.yul\":10213:10235   */\n      0xffffffffffffffffffff\n        /* \"#utility.yul\":10202:10236   */\n      dup2\n      and\n        /* \"#utility.yul\":10192:10237   */\n      dup2\n      eq\n        /* \"#utility.yul\":10182:10255   */\n      tag_308\n      jumpi\n        /* \"#utility.yul\":10251:10252   */\n      0x00\n        /* \"#utility.yul\":10248:10249   */\n      dup1\n        /* \"#utility.yul\":10241:10253   */\n      revert\n        /* \"#utility.yul\":10266:10837   */\n    tag_289:\n        /* \"#utility.yul\":10369:10375   */\n      0x00\n        /* \"#utility.yul\":10377:10383   */\n      dup1\n        /* \"#utility.yul\":10385:10391   */\n      0x00\n        /* \"#utility.yul\":10393:10399   */\n      dup1\n        /* \"#utility.yul\":10401:10407   */\n      0x00\n        /* \"#utility.yul\":10454:10457   */\n      0xa0\n        /* \"#utility.yul\":10442:10451   */\n      dup7\n        /* \"#utility.yul\":10433:10440   */\n      dup9\n        /* \"#utility.yul\":10429:10452   */\n      sub\n        /* \"#utility.yul\":10425:10458   */\n      slt\n        /* \"#utility.yul\":10422:10475   */\n      iszero\n      tag_928\n      jumpi\n        /* \"#utility.yul\":10471:10472   */\n      0x00\n        /* \"#utility.yul\":10468:10469   */\n      dup1\n        /* \"#utility.yul\":10461:10473   */\n      revert\n        /* \"#utility.yul\":10422:10475   */\n    tag_928:\n        /* \"#utility.yul\":10494:10533   */\n      tag_929\n        /* \"#utility.yul\":10523:10532   */\n      dup7\n        /* \"#utility.yul\":10494:10533   */\n      tag_838\n      jump\t// in\n    tag_929:\n        /* \"#utility.yul\":10573:10575   */\n      0x20\n        /* \"#utility.yul\":10558:10576   */\n      dup8\n      add\n        /* \"#utility.yul\":10552:10577   */\n      mload\n        /* \"#utility.yul\":10639:10641   */\n      0x40\n        /* \"#utility.yul\":10624:10642   */\n      dup9\n      add\n        /* \"#utility.yul\":10618:10643   */\n      mload\n        /* \"#utility.yul\":10733:10735   */\n      0x60\n        /* \"#utility.yul\":10718:10736   */\n      dup10\n      add\n        /* \"#utility.yul\":10712:10737   */\n      mload\n        /* \"#utility.yul\":10484:10533   */\n      swap3\n      swap8\n      pop\n        /* \"#utility.yul\":10552:10577   */\n      swap1\n      swap6\n      pop\n        /* \"#utility.yul\":10618:10643   */\n      swap4\n      pop\n        /* \"#utility.yul\":10712:10737   */\n      swap2\n      pop\n        /* \"#utility.yul\":10782:10831   */\n      tag_930\n        /* \"#utility.yul\":10826:10829   */\n      0x80\n        /* \"#utility.yul\":10811:10830   */\n      dup8\n      add\n        /* \"#utility.yul\":10782:10831   */\n      tag_838\n      jump\t// in\n    tag_930:\n        /* \"#utility.yul\":10772:10831   */\n      swap1\n      pop\n        /* \"#utility.yul\":10266:10837   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11537:11882   */\n    tag_356:\n        /* \"#utility.yul\":11739:11741   */\n      0x20\n        /* \"#utility.yul\":11721:11742   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11778:11780   */\n      0x15\n        /* \"#utility.yul\":11758:11776   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11751:11781   */\n      mstore\n      shl(0x5a, 0x1250d3c8185b1c9958591e48199a5b985b1a5e9959)\n        /* \"#utility.yul\":11812:11814   */\n      0x40\n        /* \"#utility.yul\":11797:11815   */\n      dup3\n      add\n        /* \"#utility.yul\":11790:11841   */\n      mstore\n        /* \"#utility.yul\":11873:11875   */\n      0x60\n        /* \"#utility.yul\":11858:11876   */\n      add\n      swap1\n        /* \"#utility.yul\":11537:11882   */\n      jump\t// out\n        /* \"#utility.yul\":11887:12217   */\n    tag_360:\n        /* \"#utility.yul\":12089:12091   */\n      0x20\n        /* \"#utility.yul\":12071:12092   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":12128:12129   */\n      0x07\n        /* \"#utility.yul\":12108:12126   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":12101:12130   */\n      mstore\n      shl(0xca, 0x199c99595e9959)\n        /* \"#utility.yul\":12161:12163   */\n      0x40\n        /* \"#utility.yul\":12146:12164   */\n      dup3\n      add\n        /* \"#utility.yul\":12139:12176   */\n      mstore\n        /* \"#utility.yul\":12208:12210   */\n      0x60\n        /* \"#utility.yul\":12193:12211   */\n      add\n      swap1\n        /* \"#utility.yul\":11887:12217   */\n      jump\t// out\n        /* \"#utility.yul\":13274:13399   */\n    tag_413:\n        /* \"#utility.yul\":13339:13348   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":13360:13370   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":13357:13393   */\n      iszero\n      tag_239\n      jumpi\n        /* \"#utility.yul\":13373:13391   */\n      tag_239\n      tag_835\n      jump\t// in\n        /* \"#utility.yul\":14760:14887   */\n    tag_452:\n        /* \"#utility.yul\":14821:14831   */\n      0x4e487b71\n        /* \"#utility.yul\":14816:14819   */\n      0xe0\n        /* \"#utility.yul\":14812:14832   */\n      shl\n        /* \"#utility.yul\":14809:14810   */\n      0x00\n        /* \"#utility.yul\":14802:14833   */\n      mstore\n        /* \"#utility.yul\":14852:14856   */\n      0x32\n        /* \"#utility.yul\":14849:14850   */\n      0x04\n        /* \"#utility.yul\":14842:14857   */\n      mstore\n        /* \"#utility.yul\":14876:14880   */\n      0x24\n        /* \"#utility.yul\":14873:14874   */\n      0x00\n        /* \"#utility.yul\":14866:14881   */\n      revert\n        /* \"#utility.yul\":15727:16004   */\n    tag_503:\n        /* \"#utility.yul\":15794:15800   */\n      0x00\n        /* \"#utility.yul\":15847:15849   */\n      0x20\n        /* \"#utility.yul\":15835:15844   */\n      dup3\n        /* \"#utility.yul\":15826:15833   */\n      dup5\n        /* \"#utility.yul\":15822:15845   */\n      sub\n        /* \"#utility.yul\":15818:15850   */\n      slt\n        /* \"#utility.yul\":15815:15867   */\n      iszero\n      tag_950\n      jumpi\n        /* \"#utility.yul\":15863:15864   */\n      0x00\n        /* \"#utility.yul\":15860:15861   */\n      dup1\n        /* \"#utility.yul\":15853:15865   */\n      revert\n        /* \"#utility.yul\":15815:15867   */\n    tag_950:\n        /* \"#utility.yul\":15895:15904   */\n      dup2\n        /* \"#utility.yul\":15889:15905   */\n      mload\n        /* \"#utility.yul\":15948:15953   */\n      dup1\n        /* \"#utility.yul\":15941:15954   */\n      iszero\n        /* \"#utility.yul\":15934:15955   */\n      iszero\n        /* \"#utility.yul\":15927:15932   */\n      dup2\n        /* \"#utility.yul\":15924:15956   */\n      eq\n        /* \"#utility.yul\":15914:15974   */\n      tag_824\n      jumpi\n        /* \"#utility.yul\":15970:15971   */\n      0x00\n        /* \"#utility.yul\":15967:15968   */\n      dup1\n        /* \"#utility.yul\":15960:15972   */\n      revert\n        /* \"#utility.yul\":16362:16603   */\n    tag_839:\n        /* \"#utility.yul\":16447:16448   */\n      0x03\n        /* \"#utility.yul\":16440:16445   */\n      dup2\n        /* \"#utility.yul\":16437:16449   */\n      lt\n        /* \"#utility.yul\":16427:16570   */\n      tag_954\n      jumpi\n        /* \"#utility.yul\":16492:16502   */\n      0x4e487b71\n        /* \"#utility.yul\":16487:16490   */\n      0xe0\n        /* \"#utility.yul\":16483:16503   */\n      shl\n        /* \"#utility.yul\":16480:16481   */\n      0x00\n        /* \"#utility.yul\":16473:16504   */\n      mstore\n        /* \"#utility.yul\":16527:16531   */\n      0x21\n        /* \"#utility.yul\":16524:16525   */\n      0x04\n        /* \"#utility.yul\":16517:16532   */\n      mstore\n        /* \"#utility.yul\":16555:16559   */\n      0x24\n        /* \"#utility.yul\":16552:16553   */\n      0x00\n        /* \"#utility.yul\":16545:16560   */\n      revert\n        /* \"#utility.yul\":16427:16570   */\n    tag_954:\n        /* \"#utility.yul\":16579:16597   */\n      swap1\n      mstore\n        /* \"#utility.yul\":16362:16603   */\n      jump\t// out\n        /* \"#utility.yul\":16608:16895   */\n    tag_508:\n        /* \"#utility.yul\":16798:16823   */\n      dup3\n      dup2\n      mstore\n        /* \"#utility.yul\":16786:16788   */\n      0x40\n        /* \"#utility.yul\":16771:16789   */\n      dup2\n      add\n        /* \"#utility.yul\":16832:16889   */\n      tag_824\n        /* \"#utility.yul\":16885:16887   */\n      0x20\n        /* \"#utility.yul\":16870:16888   */\n      dup4\n      add\n        /* \"#utility.yul\":16862:16868   */\n      dup5\n        /* \"#utility.yul\":16832:16889   */\n      tag_839\n      jump\t// in\n        /* \"#utility.yul\":16900:17027   */\n    tag_511:\n        /* \"#utility.yul\":16961:16971   */\n      0x4e487b71\n        /* \"#utility.yul\":16956:16959   */\n      0xe0\n        /* \"#utility.yul\":16952:16972   */\n      shl\n        /* \"#utility.yul\":16949:16950   */\n      0x00\n        /* \"#utility.yul\":16942:16973   */\n      mstore\n        /* \"#utility.yul\":16992:16996   */\n      0x31\n        /* \"#utility.yul\":16989:16990   */\n      0x04\n        /* \"#utility.yul\":16982:16997   */\n      mstore\n        /* \"#utility.yul\":17016:17020   */\n      0x24\n        /* \"#utility.yul\":17013:17014   */\n      0x00\n        /* \"#utility.yul\":17006:17021   */\n      revert\n        /* \"#utility.yul\":17032:17168   */\n    tag_515:\n        /* \"#utility.yul\":17071:17074   */\n      0x00\n        /* \"#utility.yul\":17099:17104   */\n      dup2\n        /* \"#utility.yul\":17089:17128   */\n      tag_960\n      jumpi\n        /* \"#utility.yul\":17108:17126   */\n      tag_960\n      tag_835\n      jump\t// in\n    tag_960:\n      pop\n      not(0x00)\n        /* \"#utility.yul\":17144:17162   */\n      add\n      swap1\n        /* \"#utility.yul\":17032:17168   */\n      jump\t// out\n        /* \"#utility.yul\":17527:17757   */\n    tag_539:\n        /* \"#utility.yul\":17597:17603   */\n      0x00\n        /* \"#utility.yul\":17650:17652   */\n      0x20\n        /* \"#utility.yul\":17638:17647   */\n      dup3\n        /* \"#utility.yul\":17629:17636   */\n      dup5\n        /* \"#utility.yul\":17625:17648   */\n      sub\n        /* \"#utility.yul\":17621:17653   */\n      slt\n        /* \"#utility.yul\":17618:17670   */\n      iszero\n      tag_963\n      jumpi\n        /* \"#utility.yul\":17666:17667   */\n      0x00\n        /* \"#utility.yul\":17663:17664   */\n      dup1\n        /* \"#utility.yul\":17656:17668   */\n      revert\n        /* \"#utility.yul\":17618:17670   */\n    tag_963:\n      pop\n        /* \"#utility.yul\":17711:17727   */\n      mload\n      swap2\n        /* \"#utility.yul\":17527:17757   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21621:22051   */\n    tag_660:\n        /* \"#utility.yul\":21868:21893   */\n      dup5\n      dup2\n      mstore\n        /* \"#utility.yul\":21924:21926   */\n      0x20\n        /* \"#utility.yul\":21909:21927   */\n      dup2\n      add\n        /* \"#utility.yul\":21902:21936   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":21967:21969   */\n      0x40\n        /* \"#utility.yul\":21952:21970   */\n      dup2\n      add\n        /* \"#utility.yul\":21945:21979   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":21855:21858   */\n      0x80\n        /* \"#utility.yul\":21840:21859   */\n      dup2\n      add\n        /* \"#utility.yul\":21988:22045   */\n      tag_814\n        /* \"#utility.yul\":22041:22043   */\n      0x60\n        /* \"#utility.yul\":22026:22044   */\n      dup4\n      add\n        /* \"#utility.yul\":22018:22024   */\n      dup5\n        /* \"#utility.yul\":21988:22045   */\n      tag_839\n      jump\t// in\n        /* \"#utility.yul\":23501:23788   */\n    tag_810:\n        /* \"#utility.yul\":23630:23633   */\n      0x00\n        /* \"#utility.yul\":23668:23674   */\n      dup3\n        /* \"#utility.yul\":23662:23675   */\n      mload\n        /* \"#utility.yul\":23684:23750   */\n      tag_984\n        /* \"#utility.yul\":23743:23749   */\n      dup2\n        /* \"#utility.yul\":23738:23741   */\n      dup5\n        /* \"#utility.yul\":23731:23735   */\n      0x20\n        /* \"#utility.yul\":23723:23729   */\n      dup8\n        /* \"#utility.yul\":23719:23736   */\n      add\n        /* \"#utility.yul\":23684:23750   */\n      tag_834\n      jump\t// in\n    tag_984:\n        /* \"#utility.yul\":23766:23782   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":23501:23788   */\n      swap2\n      pop\n      pop\n      jump\t// out\n    stop\n    data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d 360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n    data_c8669cf8eaf883002b9f48e28846a8d408c9b58ea6613bace374265e43c9bc43 9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00\n\n    auxdata: 0xa2646970667358221220f6169f3ea7a8afb825b42a594ae709b43270a6bb30bf1eba66c467a8093dc64964736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60a060405230608052348015601357600080fd5b506080516130a761003d6000396000818161260f01528181612638015261277901526130a76000f3fe60806040526004361061024a5760003560e01c80637fb1200111610139578063b3fdafb9116100b6578063c81ffdea1161007a578063c81ffdea14610750578063d1f3b23e1461077d578063e8e8738914610797578063f2fde38b146107c4578063fc0c546a146107e4578063fd663da21461080457600080fd5b8063b3fdafb9146105fa578063b5f522f71461061a578063b9469e1a14610691578063c1560a14146106b1578063c211e1f9146106c757600080fd5b8063960524e3116100fd578063960524e3146105515780639fa8adb814610566578063a1c4b5a214610586578063a1e89aec146105a6578063ad3cb1cc146105bc57600080fd5b80637fb12001146104e65780638da5cb5b146104fb57806391152c5c1461051057806391d8730a14610525578063940c333e1461053e57600080fd5b80633feb5f2b116101c757806363b201171161018b57806363b20117146104705780636c1909ed14610486578063715018a6146104a6578063721bc38b146104bb5780637cf12b90146104d157600080fd5b80633feb5f2b146103f45780634dee1dc3146104145780634f1ef2861461043357806352d1902d1461044657806362a5af3b1461045b57600080fd5b80632151206e1161020e5780632151206e1461034f57806323cc75a8146103655780632593198d1461037c5780632f48ab7d1461039c5780633e413bee146103d457600080fd5b806305834e67146102a157806306e4d36f146102d4578063115afc3a146102fa578063117d260f1461031a578063212ea2471461033a57600080fd5b3661029c5760405162461bcd60e51b815260206004820181905260248201527f44697265637420424e42207472616e7366657273206e6f7420616c6c6f77656460448201526064015b60405180910390fd5b600080fd5b3480156102ad57600080fd5b506102c16102bc366004612a79565b610824565b6040519081526020015b60405180910390f35b3480156102e057600080fd5b5060045460075410155b60405190151581526020016102cb565b34801561030657600080fd5b506102c1610315366004612aa3565b6109a8565b34801561032657600080fd5b506102c1610335366004612a79565b610b11565b34801561034657600080fd5b506006546102c1565b34801561035b57600080fd5b506102c160045481565b34801561037157600080fd5b5061037a610caf565b005b34801561038857600080fd5b506102c1610397366004612abe565b610dff565b3480156103a857600080fd5b50600b546103bc906001600160a01b031681565b6040516001600160a01b0390911681526020016102cb565b3480156103e057600080fd5b50600c546103bc906001600160a01b031681565b34801561040057600080fd5b506103bc61040f366004612abe565b610e13565b34801561042057600080fd5b506009546102ea90610100900460ff1681565b61037a610441366004612b02565b610e3d565b34801561045257600080fd5b506102c1610e5c565b34801561046757600080fd5b5061037a610e79565b34801561047c57600080fd5b506102c160085481565b34801561049257600080fd5b5061037a6104a1366004612bce565b610ebd565b3480156104b257600080fd5b5061037a611038565b3480156104c757600080fd5b506102c160075481565b3480156104dd57600080fd5b5061037a61104a565b3480156104f257600080fd5b5061037a6110ac565b34801561050757600080fd5b506103bc61156d565b34801561051c57600080fd5b5061037a61159b565b34801561053157600080fd5b50600554600754146102ea565b61037a61054c366004612a79565b611978565b34801561055d57600080fd5b50600a546102c1565b34801561057257600080fd5b506102c1610581366004612abe565b611fdb565b34801561059257600080fd5b506102c16105a1366004612abe565b611fef565b3480156105b257600080fd5b506102c160065481565b3480156105c857600080fd5b506105ed604051806040016040528060058152602001640352e302e360dc1b81525081565b6040516102cb9190612c1e565b34801561060657600080fd5b506102c1610615366004612abe565b612000565b34801561062657600080fd5b50610667610635366004612abe565b600d60205260009081526040902080546001820154600283015460038401546004909401549293919290919060ff1685565b6040805195865260208601949094529284019190915260608301521515608082015260a0016102cb565b34801561069d57600080fd5b506009546102ea9062010000900460ff1681565b3480156106bd57600080fd5b506102c160055481565b3480156106d357600080fd5b5061073b6106e2366004612abe565b506006546000908152600d6020908152604091829020825160a081018452815480825260018301549382018490526002830154948201949094526003820154606082015260049091015460ff1615156080909101529091565b604080519283526020830191909152016102cb565b34801561075c57600080fd5b506102c161076b366004612c51565b600e6020526000908152604090205481565b34801561078957600080fd5b506009546102ea9060ff1681565b3480156107a357600080fd5b506102c16107b2366004612c51565b600f6020526000908152604090205481565b3480156107d057600080fd5b5061037a6107df366004612c51565b612011565b3480156107f057600080fd5b506003546103bc906001600160a01b031681565b34801561081057600080fd5b5061037a61081f366004612c6e565b61204f565b6000806108336105a1856109a8565b90508060000361087a5760405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a59081c1c9a58d9481999595960721b6044820152606401610293565b600061088560065490565b6000818152600d6020526040812060028101549293509190808860028111156108b0576108b0612d05565b036108c9576108c26105818887612d31565b9050610983565b60028860028111156108dd576108dd612d05565b14806108fa575060018860028111156108f8576108f8612d05565b145b1561093b576006600061090e826012612d48565b61091990600a612e42565b610923908a612d31565b90506109326105818289612d31565b92505050610983565b60405162461bcd60e51b815260206004820152601a60248201527f556e737570706f72746564207061796d656e74206d6574686f640000000000006044820152606401610293565b60008261098f83610dff565b6109999190612e4e565b96505050505050505b92915050565b6000808260028111156109bd576109bd612d05565b03610a465760008060009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610a16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3a9190612e8a565b50919695505050505050565b6001826002811115610a5a57610a5a612d05565b03610aa95760015460408051633fabe5a360e21b815290516000926001600160a01b03169163feaf968c9160048083019260a09291908290030181865afa158015610a16573d6000803e3d6000fd5b6002826002811115610abd57610abd612d05565b0361093b5760025460408051633fabe5a360e21b815290516000926001600160a01b03169163feaf968c9160048083019260a09291908290030181865afa158015610a16573d6000803e3d6000fd5b919050565b600081600003610b635760405162461bcd60e51b815260206004820152601760248201527f416d6f756e74206d75737420626520706f7369746976650000000000000000006044820152606401610293565b6000610b716105a1856109a8565b905080600003610bb85760405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a59081c1c9a58d9481999595960721b6044820152606401610293565b6000610bc360065490565b905080600003610c065760405162461bcd60e51b815260206004820152600e60248201526d4e6f206163746976652073616c6560901b6044820152606401610293565b6000818152600d6020526040812060028101549091610c286105818389612d31565b9050600080896002811115610c3f57610c3f612d05565b03610c5f5785610c4e83610dff565b610c589190612e4e565b9050610ca3565b6001896002811115610c7357610c73612d05565b1480610c9057506002896002811115610c8e57610c8e612d05565b145b1561093b5785610c4e83620f4240612d31565b98975050505050505050565b610cb7612265565b610cbf61229d565b60095460ff1615610ce25760405162461bcd60e51b815260040161029390612edc565b60095462010000900460ff1615610d0b5760405162461bcd60e51b815260040161029390612f0b565b6004546007541015610d565760405162461bcd60e51b815260206004820152601460248201527314dbd99d0810d85c081393dd0814995858da195960621b6044820152606401610293565b600954610100900460ff16610da55760405162461bcd60e51b8152602060048201526015602482015274105a5c991c9bdc081b9bdd0818dbdb5c1b195d1959605a1b6044820152606401610293565b6009805460ff19166001179055610dba6122cf565b6008546040517f9c4b134da32aab35252391880a9f2a3c13a760d7817ae8823f2b301d3522045a90600090a2610dfd600160008051602061305283398151915255565b565b60006109a282670de0b6b3a7640000612d31565b600a8181548110610e2357600080fd5b6000918252602090912001546001600160a01b0316905081565b610e45612604565b610e4e826126a9565b610e5882826126b1565b5050565b6000610e6661276e565b5060008051602061303283398151915290565b610e8161229d565b60095462010000900460ff1615610eaa5760405162461bcd60e51b815260040161029390612f0b565b6009805462ff0000191662010000179055565b610ec5612265565b610ecd61229d565b60095460ff1615610ef05760405162461bcd60e51b815260040161029390612edc565b60095462010000900460ff1615610f195760405162461bcd60e51b815260040161029390612f0b565b4283118015610f2757508282115b8015610f4657506006546000908152600d602052604090206001015442115b610f925760405162461bcd60e51b815260206004820152601860248201527f496e76616c69642073746172742074696d652072616e676500000000000000006044820152606401610293565b600654610fa0906001612f2c565b60068181556000918252600d602090815260408084208781556001810187905560028101869055600381019490945560048401805460ff19169055915482518781529182018690529181018490527f63b43fa153147ade1de28ed76841cdbc34e510ed94dd1ff5a88e278b0b1ad9ba9060600160405180910390a250611033600160008051602061305283398151915255565b505050565b61104061229d565b610dfd60006127b7565b61105261229d565b60095462010000900460ff1661109e5760405162461bcd60e51b8152602060048201526011602482015270105b1c9958591e48155b919c99595e9959607a1b6044820152606401610293565b6009805462ff000019169055565b6110b4612265565b6110bc61229d565b60095460ff16156110df5760405162461bcd60e51b815260040161029390612edc565b6006546000908152600d602052604090206001015442116111315760405162461bcd60e51b815260206004820152600c60248201526b53616c65206f6e676f696e6760a01b6044820152606401610293565b600454600754106111775760405162461bcd60e51b815260206004820152601060248201526f14dbd99d0818d85c081c995858da195960821b6044820152606401610293565b600a80549060009082111561119857611191600b83612d48565b905061119c565b5060005b60006111a9600184612d48565b90505b81811061153b576000600a82815481106111c8576111c8612f3f565b60009182526020822001546001600160a01b031691505b60038160ff1610156114e45760008160ff16600281111561120257611202612d05565b6001600160a01b0384166000908152601160205260408120919250908183600281111561123157611231612d05565b600281111561124257611242612d05565b815260200190815260200160002054905060008111156114da576001600160a01b03841660009081526011602052604081208184600281111561128757611287612d05565b600281111561129857611298612d05565b815260208101919091526040016000908120919091558260028111156112c0576112c0612d05565b03611362576000846001600160a01b03168260405160006040518083038185875af1925050503d8060008114611312576040519150601f19603f3d011682016040523d82523d6000602084013e611317565b606091505b505090508061135c5760405162461bcd60e51b8152602060048201526011602482015270109390881c99599d5b990819985a5b1959607a1b6044820152606401610293565b50611496565b600182600281111561137657611376612d05565b14806113935750600282600281111561139157611391612d05565b145b1561149657600060018360028111156113ae576113ae612d05565b146113c457600c546001600160a01b03166113d1565b600b546001600160a01b03165b60405163a9059cbb60e01b81526001600160a01b038781166004830152602482018590529192509082169063a9059cbb906044016020604051808303816000875af1158015611424573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114489190612f55565b6114945760405162461bcd60e51b815260206004820152601860248201527f537461626c65636f696e20726566756e64206661696c656400000000000000006044820152606401610293565b505b836001600160a01b03167f03829ab241648d7348f97e4f77d36451330f2276ea8eeb3428e462012f9699e782846040516114d1929190612f99565b60405180910390a25b50506001016111df565b50600a8054806114f6576114f6612fad565b600082815260208120820160001990810180546001600160a01b0319169055909101909155829003611528575061153b565b508061153381612fc3565b9150506111ac565b50600a54600003611554576009805460ff191660011790555b5050610dfd600160008051602061305283398151915255565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6115a3612265565b6115ab61229d565b60095460ff16156115ce5760405162461bcd60e51b815260040161029390612edc565b60095462010000900460ff16156115f75760405162461bcd60e51b815260040161029390612f0b565b600954610100900460ff161561164f5760405162461bcd60e51b815260206004820152601960248201527f41697264726f7020616c726561647920636f6d706c65746564000000000000006044820152606401610293565b6008546003546040516370a0823160e01b81523360048201526001600160a01b03909116906370a0823190602401602060405180830381865afa15801561169a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116be9190612fda565b10156117015760405162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e742046756e647360701b6044820152606401610293565b6006546000908152600d602052604090206001015442116117535760405162461bcd60e51b815260206004820152600c60248201526b53616c65206f6e676f696e6760a01b6044820152606401610293565b600a8054906000908211156117745761176d600b83612d48565b9050611778565b5060005b6000611785600184612d48565b90505b818110611945576000600a82815481106117a4576117a4612f3f565b60009182526020808320909101546001600160a01b0316808352600f9091526040909120549091508015611921576003546001600160a01b03166323b872dd6117eb61156d565b6040516001600160e01b031960e084901b1681526001600160a01b0391821660048201529085166024820152604481018490526064016020604051808303816000875af1158015611840573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118649190612f55565b6118a85760405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b6044820152606401610293565b600a8054806118b9576118b9612fad565b600082815260209020810160001990810180546001600160a01b03191690550190556040516001600160a01b038316907f9bdcd0cc5503fb9a8dd7311d9617e33108c4b7c8948cc544b16c1fd63c6f475b906119189084815260200190565b60405180910390a25b82600003611930575050611945565b5050808061193d90612fc3565b915050611788565b50600a54600003611554576009805461ff0019166101001790555050610dfd600160008051602061305283398151915255565b611980612265565b60095460ff16156119a35760405162461bcd60e51b815260040161029390612edc565b60095462010000900460ff16156119cc5760405162461bcd60e51b815260040161029390612f0b565b6119d461156d565b6001600160a01b03163303611a2b5760405162461bcd60e51b815260206004820152601760248201527f4f776e65722063616e6e6f742062757920746f6b656e730000000000000000006044820152606401610293565b600654600003611a675760405162461bcd60e51b81526020600482015260076024820152664e6f2073616c6560c81b6044820152606401610293565b6006546000908152600d602052604090206004015460ff1615611ac55760405162461bcd60e51b815260206004820152601660248201527514d85b1948185b1c9958591e48199a5b985b1a5e995960521b6044820152606401610293565b600080836002811115611ada57611ada612d05565b03611b995734600003611b2f5760405162461bcd60e51b815260206004820152601760248201527f53656e6420612076616c696420424e4220616d6f756e740000000000000000006044820152606401610293565b611b398334610824565b336000908152601160205260408120919250349190856002811115611b6057611b60612d05565b6002811115611b7157611b71612d05565b81526020019081526020016000206000828254611b8e9190612f2c565b90915550611d799050565b6001836002811115611bad57611bad612d05565b1480611bca57506002836002811115611bc857611bc8612d05565b145b15611d795781600003611c145760405162461bcd60e51b8152602060048201526012602482015271115b9d195c881d985b1a5908185b5bdd5b9d60721b6044820152606401610293565b60006001846002811115611c2a57611c2a612d05565b14611c4057600c546001600160a01b0316611c4d565b600b546001600160a01b03165b6040516323b872dd60e01b8152336004820152306024820152604481018590529091506001600160a01b038216906323b872dd906064016020604051808303816000875af1158015611ca3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cc79190612f55565b611d135760405162461bcd60e51b815260206004820152601a60248201527f537461626c65636f696e207472616e73666572206661696c65640000000000006044820152606401610293565b611d1d8484610824565b336000908152601160205260408120919350849190866002811115611d4457611d44612d05565b6002811115611d5557611d55612d05565b81526020019081526020016000206000828254611d729190612f2c565b9091555050505b80600003611dc05760405162461bcd60e51b8152602060048201526014602482015273125b9d985b1a59081d1bdad95b88185b5bdd5b9d60621b6044820152606401610293565b6006546000908152600d6020526040812060020154670de0b6b3a764000090611de99084612d31565b611df39190612e4e565b905060055481600754611e069190612f2c565b1115611e475760405162461bcd60e51b815260206004820152601060248201526f12185c990818d85c081c995858da195960821b6044820152606401610293565b336000908152600e6020526040902054611e62908290612f2c565b336000908152600e6020526040902055600754611e80908290612f2c565b6007556006546000908152600d602052604081206003018054849290611ea7908490612f2c565b9091555050600854611eba908390612f2c565b600855336000908152600f60205260408120549003611f1657600a80546001810182556000919091527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80180546001600160a01b031916331790555b336000908152600f6020526040902054611f31908390612f2c565b336000908152600f60209081526040808320939093556010905220805485919060ff19166001836002811115611f6957611f69612d05565b02179055506006546000818152600d60205260409081902060020154905133917fdbcef474a632721725d49e3f35d9defe0257100b01d1e4b4b135b14d6fe296e891611fba91879189908b90612ff3565b60405180910390a35050610e58600160008051602061305283398151915255565b60006109a2670de0b6b3a764000083612e4e565b60006109a2826402540be400612d31565b60006109a26402540be40083612e4e565b61201961229d565b6001600160a01b03811661204357604051631e4fbdf760e01b815260006004820152602401610293565b61204c816127b7565b50565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff166000811580156120955750825b905060008267ffffffffffffffff1660011480156120b25750303b155b9050811580156120c0575080155b156120de5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561210857845460ff60401b1916600160401b1785555b61211133612828565b612119612839565b8c600360006101000a8154816001600160a01b0302191690836001600160a01b0316021790555089600481905550886005819055508b600b60006101000a8154816001600160a01b0302191690836001600160a01b031602179055508a600c60006101000a8154816001600160a01b0302191690836001600160a01b03160217905550876000806101000a8154816001600160a01b0302191690836001600160a01b0316021790555086600160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555085600260006101000a8154816001600160a01b0302191690836001600160a01b03160217905550831561225657845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050505050505050565b60008051602061305283398151915280546001190161229757604051633ee5aeb560e01b815260040160405180910390fd5b60029055565b336122a661156d565b6001600160a01b031614610dfd5760405163118cdaa760e01b8152336004820152602401610293565b30803180156123765760006122e261156d565b6001600160a01b03168260405160006040518083038185875af1925050503d806000811461232c576040519150601f19603f3d011682016040523d82523d6000602084013e612331565b606091505b50509050806123745760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606401610293565b505b600b546040516370a0823160e01b81526001600160a01b03848116600483015260009216906370a0823190602401602060405180830381865afa1580156123c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123e59190612fda565b905080156124ba57600b546001600160a01b031663a9059cbb61240661156d565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af1158015612453573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124779190612f55565b6124ba5760405162461bcd60e51b81526020600482015260146024820152731554d115081d1c985b9cd9995c8819985a5b195960621b6044820152606401610293565b600c546040516370a0823160e01b81526001600160a01b03858116600483015260009216906370a0823190602401602060405180830381865afa158015612505573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125299190612fda565b905080156125fe57600c546001600160a01b031663a9059cbb61254a61156d565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af1158015612597573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125bb9190612f55565b6125fe5760405162461bcd60e51b81526020600482015260146024820152731554d110c81d1c985b9cd9995c8819985a5b195960621b6044820152606401610293565b50505050565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148061268b57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661267f600080516020613032833981519152546001600160a01b031690565b6001600160a01b031614155b15610dfd5760405163703e46dd60e11b815260040160405180910390fd5b61204c61229d565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561270b575060408051601f3d908101601f1916820190925261270891810190612fda565b60015b61273357604051634c9c8ce360e01b81526001600160a01b0383166004820152602401610293565b600080516020613032833981519152811461276457604051632a87526960e21b815260048101829052602401610293565b6110338383612841565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610dfd5760405163703e46dd60e11b815260040160405180910390fd5b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b612830612897565b61204c816128e0565b610dfd612897565b61284a826128e8565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a280511561288f57611033828261294d565b610e586129c3565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff16610dfd57604051631afcd79f60e31b815260040160405180910390fd5b612019612897565b806001600160a01b03163b60000361291e57604051634c9c8ce360e01b81526001600160a01b0382166004820152602401610293565b60008051602061303283398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6060600080846001600160a01b03168460405161296a9190613015565b600060405180830381855af49150503d80600081146129a5576040519150601f19603f3d011682016040523d82523d6000602084013e6129aa565b606091505b50915091506129ba8583836129e2565b95945050505050565b3415610dfd5760405163b398979f60e01b815260040160405180910390fd5b6060826129f7576129f282612a41565b612a3a565b8151158015612a0e57506001600160a01b0384163b155b15612a3757604051639996b31560e01b81526001600160a01b0385166004820152602401610293565b50805b9392505050565b805115612a515780518082602001fd5b60405163d6bda27560e01b815260040160405180910390fd5b803560038110610b0c57600080fd5b60008060408385031215612a8c57600080fd5b612a9583612a6a565b946020939093013593505050565b600060208284031215612ab557600080fd5b612a3a82612a6a565b600060208284031215612ad057600080fd5b5035919050565b6001600160a01b038116811461204c57600080fd5b634e487b7160e01b600052604160045260246000fd5b60008060408385031215612b1557600080fd5b8235612b2081612ad7565b9150602083013567ffffffffffffffff811115612b3c57600080fd5b8301601f81018513612b4d57600080fd5b803567ffffffffffffffff811115612b6757612b67612aec565b604051601f8201601f19908116603f0116810167ffffffffffffffff81118282101715612b9657612b96612aec565b604052818152828201602001871015612bae57600080fd5b816020840160208301376000602083830101528093505050509250929050565b600080600060608486031215612be357600080fd5b505081359360208301359350604090920135919050565b60005b83811015612c15578181015183820152602001612bfd565b50506000910152565b6020815260008251806020840152612c3d816040850160208701612bfa565b601f01601f19169190910160400192915050565b600060208284031215612c6357600080fd5b8135612a3a81612ad7565b600080600080600080600080610100898b031215612c8b57600080fd5b8835612c9681612ad7565b97506020890135612ca681612ad7565b96506040890135612cb681612ad7565b9550606089013594506080890135935060a0890135612cd481612ad7565b925060c0890135612ce481612ad7565b915060e0890135612cf481612ad7565b809150509295985092959890939650565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176109a2576109a2612d1b565b818103818111156109a2576109a2612d1b565b6001815b6001841115612d9657808504811115612d7a57612d7a612d1b565b6001841615612d8857908102905b60019390931c928002612d5f565b935093915050565b600082612dad575060016109a2565b81612dba575060006109a2565b8160018114612dd05760028114612dda57612df6565b60019150506109a2565b60ff841115612deb57612deb612d1b565b50506001821b6109a2565b5060208310610133831016604e8410600b8410161715612e19575081810a6109a2565b612e266000198484612d5b565b8060001904821115612e3a57612e3a612d1b565b029392505050565b6000612a3a8383612d9e565b600082612e6b57634e487b7160e01b600052601260045260246000fd5b500490565b805169ffffffffffffffffffff81168114610b0c57600080fd5b600080600080600060a08688031215612ea257600080fd5b612eab86612e70565b60208701516040880151606089015192975090955093509150612ed060808701612e70565b90509295509295909350565b6020808252601590820152741250d3c8185b1c9958591e48199a5b985b1a5e9959605a1b604082015260600190565b602080825260079082015266199c99595e995960ca1b604082015260600190565b808201808211156109a2576109a2612d1b565b634e487b7160e01b600052603260045260246000fd5b600060208284031215612f6757600080fd5b81518015158114612a3a57600080fd5b60038110612f9557634e487b7160e01b600052602160045260246000fd5b9052565b82815260408101612a3a6020830184612f77565b634e487b7160e01b600052603160045260246000fd5b600081612fd257612fd2612d1b565b506000190190565b600060208284031215612fec57600080fd5b5051919050565b8481526020810184905260408101839052608081016129ba6060830184612f77565b60008251613027818460208701612bfa565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00a2646970667358221220f6169f3ea7a8afb825b42a594ae709b43270a6bb30bf1eba66c467a8093dc64964736f6c634300081c0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH1 0x80 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x80 MLOAD PUSH2 0x30A7 PUSH2 0x3D PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x260F ADD MSTORE DUP2 DUP2 PUSH2 0x2638 ADD MSTORE PUSH2 0x2779 ADD MSTORE PUSH2 0x30A7 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x24A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7FB12001 GT PUSH2 0x139 JUMPI DUP1 PUSH4 0xB3FDAFB9 GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xC81FFDEA GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xC81FFDEA EQ PUSH2 0x750 JUMPI DUP1 PUSH4 0xD1F3B23E EQ PUSH2 0x77D JUMPI DUP1 PUSH4 0xE8E87389 EQ PUSH2 0x797 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x7C4 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x7E4 JUMPI DUP1 PUSH4 0xFD663DA2 EQ PUSH2 0x804 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB3FDAFB9 EQ PUSH2 0x5FA JUMPI DUP1 PUSH4 0xB5F522F7 EQ PUSH2 0x61A JUMPI DUP1 PUSH4 0xB9469E1A EQ PUSH2 0x691 JUMPI DUP1 PUSH4 0xC1560A14 EQ PUSH2 0x6B1 JUMPI DUP1 PUSH4 0xC211E1F9 EQ PUSH2 0x6C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x960524E3 GT PUSH2 0xFD JUMPI DUP1 PUSH4 0x960524E3 EQ PUSH2 0x551 JUMPI DUP1 PUSH4 0x9FA8ADB8 EQ PUSH2 0x566 JUMPI DUP1 PUSH4 0xA1C4B5A2 EQ PUSH2 0x586 JUMPI DUP1 PUSH4 0xA1E89AEC EQ PUSH2 0x5A6 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x5BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7FB12001 EQ PUSH2 0x4E6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4FB JUMPI DUP1 PUSH4 0x91152C5C EQ PUSH2 0x510 JUMPI DUP1 PUSH4 0x91D8730A EQ PUSH2 0x525 JUMPI DUP1 PUSH4 0x940C333E EQ PUSH2 0x53E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3FEB5F2B GT PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x63B20117 GT PUSH2 0x18B JUMPI DUP1 PUSH4 0x63B20117 EQ PUSH2 0x470 JUMPI DUP1 PUSH4 0x6C1909ED EQ PUSH2 0x486 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4A6 JUMPI DUP1 PUSH4 0x721BC38B EQ PUSH2 0x4BB JUMPI DUP1 PUSH4 0x7CF12B90 EQ PUSH2 0x4D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3FEB5F2B EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0x4DEE1DC3 EQ PUSH2 0x414 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x433 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x446 JUMPI DUP1 PUSH4 0x62A5AF3B EQ PUSH2 0x45B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2151206E GT PUSH2 0x20E JUMPI DUP1 PUSH4 0x2151206E EQ PUSH2 0x34F JUMPI DUP1 PUSH4 0x23CC75A8 EQ PUSH2 0x365 JUMPI DUP1 PUSH4 0x2593198D EQ PUSH2 0x37C JUMPI DUP1 PUSH4 0x2F48AB7D EQ PUSH2 0x39C JUMPI DUP1 PUSH4 0x3E413BEE EQ PUSH2 0x3D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5834E67 EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0x6E4D36F EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0x115AFC3A EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0x117D260F EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0x212EA247 EQ PUSH2 0x33A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x29C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x44697265637420424E42207472616E7366657273206E6F7420616C6C6F776564 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1 PUSH2 0x2BC CALLDATASIZE PUSH1 0x4 PUSH2 0x2A79 JUMP JUMPDEST PUSH2 0x824 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH1 0x7 SLOAD LT ISZERO JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2CB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x306 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1 PUSH2 0x315 CALLDATASIZE PUSH1 0x4 PUSH2 0x2AA3 JUMP JUMPDEST PUSH2 0x9A8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x326 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1 PUSH2 0x335 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A79 JUMP JUMPDEST PUSH2 0xB11 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x346 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH2 0x2C1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x371 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37A PUSH2 0xCAF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x388 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1 PUSH2 0x397 CALLDATASIZE PUSH1 0x4 PUSH2 0x2ABE JUMP JUMPDEST PUSH2 0xDFF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH2 0x3BC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2CB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xC SLOAD PUSH2 0x3BC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x400 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3BC PUSH2 0x40F CALLDATASIZE PUSH1 0x4 PUSH2 0x2ABE JUMP JUMPDEST PUSH2 0xE13 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x420 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH2 0x2EA SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x37A PUSH2 0x441 CALLDATASIZE PUSH1 0x4 PUSH2 0x2B02 JUMP JUMPDEST PUSH2 0xE3D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x452 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1 PUSH2 0xE5C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x467 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37A PUSH2 0xE79 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x492 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37A PUSH2 0x4A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BCE JUMP JUMPDEST PUSH2 0xEBD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37A PUSH2 0x1038 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37A PUSH2 0x104A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37A PUSH2 0x10AC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x507 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3BC PUSH2 0x156D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37A PUSH2 0x159B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x531 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH1 0x7 SLOAD EQ PUSH2 0x2EA JUMP JUMPDEST PUSH2 0x37A PUSH2 0x54C CALLDATASIZE PUSH1 0x4 PUSH2 0x2A79 JUMP JUMPDEST PUSH2 0x1978 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x55D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xA SLOAD PUSH2 0x2C1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x572 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1 PUSH2 0x581 CALLDATASIZE PUSH1 0x4 PUSH2 0x2ABE JUMP JUMPDEST PUSH2 0x1FDB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x592 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1 PUSH2 0x5A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2ABE JUMP JUMPDEST PUSH2 0x1FEF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5ED PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x352E302E3 PUSH1 0xDC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0x2C1E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x606 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1 PUSH2 0x615 CALLDATASIZE PUSH1 0x4 PUSH2 0x2ABE JUMP JUMPDEST PUSH2 0x2000 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x626 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x667 PUSH2 0x635 CALLDATASIZE PUSH1 0x4 PUSH2 0x2ABE JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 SWAP1 SWAP5 ADD SLOAD SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x2CB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x69D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH2 0x2EA SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x73B PUSH2 0x6E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2ABE JUMP JUMPDEST POP PUSH1 0x6 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0xA0 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP1 DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD SWAP4 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x2 DUP4 ADD SLOAD SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x80 SWAP1 SWAP2 ADD MSTORE SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x2CB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x75C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1 PUSH2 0x76B CALLDATASIZE PUSH1 0x4 PUSH2 0x2C51 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x789 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH2 0x2EA SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1 PUSH2 0x7B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C51 JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37A PUSH2 0x7DF CALLDATASIZE PUSH1 0x4 PUSH2 0x2C51 JUMP JUMPDEST PUSH2 0x2011 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x3BC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x810 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37A PUSH2 0x81F CALLDATASIZE PUSH1 0x4 PUSH2 0x2C6E JUMP JUMPDEST PUSH2 0x204F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x833 PUSH2 0x5A1 DUP6 PUSH2 0x9A8 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 SUB PUSH2 0x87A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x125B9D985B1A59081C1C9A58D94819995959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x293 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x885 PUSH1 0x6 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD SWAP3 SWAP4 POP SWAP2 SWAP1 DUP1 DUP9 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x8B0 JUMPI PUSH2 0x8B0 PUSH2 0x2D05 JUMP JUMPDEST SUB PUSH2 0x8C9 JUMPI PUSH2 0x8C2 PUSH2 0x581 DUP9 DUP8 PUSH2 0x2D31 JUMP JUMPDEST SWAP1 POP PUSH2 0x983 JUMP JUMPDEST PUSH1 0x2 DUP9 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x8DD JUMPI PUSH2 0x8DD PUSH2 0x2D05 JUMP JUMPDEST EQ DUP1 PUSH2 0x8FA JUMPI POP PUSH1 0x1 DUP9 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x8F8 JUMPI PUSH2 0x8F8 PUSH2 0x2D05 JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x93B JUMPI PUSH1 0x6 PUSH1 0x0 PUSH2 0x90E DUP3 PUSH1 0x12 PUSH2 0x2D48 JUMP JUMPDEST PUSH2 0x919 SWAP1 PUSH1 0xA PUSH2 0x2E42 JUMP JUMPDEST PUSH2 0x923 SWAP1 DUP11 PUSH2 0x2D31 JUMP JUMPDEST SWAP1 POP PUSH2 0x932 PUSH2 0x581 DUP3 DUP10 PUSH2 0x2D31 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x983 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E737570706F72746564207061796D656E74206D6574686F64000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x293 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x98F DUP4 PUSH2 0xDFF JUMP JUMPDEST PUSH2 0x999 SWAP2 SWAP1 PUSH2 0x2E4E JUMP JUMPDEST SWAP7 POP POP POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x9BD JUMPI PUSH2 0x9BD PUSH2 0x2D05 JUMP JUMPDEST SUB PUSH2 0xA46 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA16 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA3A SWAP2 SWAP1 PUSH2 0x2E8A JUMP JUMPDEST POP SWAP2 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xA5A JUMPI PUSH2 0xA5A PUSH2 0x2D05 JUMP JUMPDEST SUB PUSH2 0xAA9 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x3FABE5A3 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xFEAF968C SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0xA0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA16 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xABD JUMPI PUSH2 0xABD PUSH2 0x2D05 JUMP JUMPDEST SUB PUSH2 0x93B JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x3FABE5A3 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xFEAF968C SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0xA0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA16 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 SUB PUSH2 0xB63 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D75737420626520706F736974697665000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x293 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB71 PUSH2 0x5A1 DUP6 PUSH2 0x9A8 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 SUB PUSH2 0xBB8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x125B9D985B1A59081C1C9A58D94819995959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x293 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBC3 PUSH1 0x6 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 SUB PUSH2 0xC06 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x4E6F206163746976652073616C65 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x293 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD SWAP1 SWAP2 PUSH2 0xC28 PUSH2 0x581 DUP4 DUP10 PUSH2 0x2D31 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP10 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xC3F JUMPI PUSH2 0xC3F PUSH2 0x2D05 JUMP JUMPDEST SUB PUSH2 0xC5F JUMPI DUP6 PUSH2 0xC4E DUP4 PUSH2 0xDFF JUMP JUMPDEST PUSH2 0xC58 SWAP2 SWAP1 PUSH2 0x2E4E JUMP JUMPDEST SWAP1 POP PUSH2 0xCA3 JUMP JUMPDEST PUSH1 0x1 DUP10 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xC73 JUMPI PUSH2 0xC73 PUSH2 0x2D05 JUMP JUMPDEST EQ DUP1 PUSH2 0xC90 JUMPI POP PUSH1 0x2 DUP10 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xC8E JUMPI PUSH2 0xC8E PUSH2 0x2D05 JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x93B JUMPI DUP6 PUSH2 0xC4E DUP4 PUSH3 0xF4240 PUSH2 0x2D31 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xCB7 PUSH2 0x2265 JUMP JUMPDEST PUSH2 0xCBF PUSH2 0x229D JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xCE2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x293 SWAP1 PUSH2 0x2EDC JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xD0B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x293 SWAP1 PUSH2 0x2F0B JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x7 SLOAD LT ISZERO PUSH2 0xD56 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14DBD99D0810D85C081393DD0814995858DA1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x293 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xDA5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x105A5C991C9BDC081B9BDD0818DBDB5C1B195D1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x293 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xDBA PUSH2 0x22CF JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH32 0x9C4B134DA32AAB35252391880A9F2A3C13A760D7817AE8823F2B301D3522045A SWAP1 PUSH1 0x0 SWAP1 LOG2 PUSH2 0xDFD PUSH1 0x1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3052 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9A2 DUP3 PUSH8 0xDE0B6B3A7640000 PUSH2 0x2D31 JUMP JUMPDEST PUSH1 0xA DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xE23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0xE45 PUSH2 0x2604 JUMP JUMPDEST PUSH2 0xE4E DUP3 PUSH2 0x26A9 JUMP JUMPDEST PUSH2 0xE58 DUP3 DUP3 PUSH2 0x26B1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE66 PUSH2 0x276E JUMP JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3032 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0xE81 PUSH2 0x229D JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xEAA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x293 SWAP1 PUSH2 0x2F0B JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH3 0xFF0000 NOT AND PUSH3 0x10000 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xEC5 PUSH2 0x2265 JUMP JUMPDEST PUSH2 0xECD PUSH2 0x229D JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xEF0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x293 SWAP1 PUSH2 0x2EDC JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xF19 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x293 SWAP1 PUSH2 0x2F0B JUMP JUMPDEST TIMESTAMP DUP4 GT DUP1 ISZERO PUSH2 0xF27 JUMPI POP DUP3 DUP3 GT JUMPDEST DUP1 ISZERO PUSH2 0xF46 JUMPI POP PUSH1 0x6 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD TIMESTAMP GT JUMPDEST PUSH2 0xF92 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642073746172742074696D652072616E67650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x293 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0xFA0 SWAP1 PUSH1 0x1 PUSH2 0x2F2C JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP8 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP8 SWAP1 SSTORE PUSH1 0x2 DUP2 ADD DUP7 SWAP1 SSTORE PUSH1 0x3 DUP2 ADD SWAP5 SWAP1 SWAP5 SSTORE PUSH1 0x4 DUP5 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP2 SLOAD DUP3 MLOAD DUP8 DUP2 MSTORE SWAP2 DUP3 ADD DUP7 SWAP1 MSTORE SWAP2 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x63B43FA153147ADE1DE28ED76841CDBC34E510ED94DD1FF5A88E278B0B1AD9BA SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x1033 PUSH1 0x1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3052 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1040 PUSH2 0x229D JUMP JUMPDEST PUSH2 0xDFD PUSH1 0x0 PUSH2 0x27B7 JUMP JUMPDEST PUSH2 0x1052 PUSH2 0x229D JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x109E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x105B1C9958591E48155B919C99595E9959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x293 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH3 0xFF0000 NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x10B4 PUSH2 0x2265 JUMP JUMPDEST PUSH2 0x10BC PUSH2 0x229D JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x10DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x293 SWAP1 PUSH2 0x2EDC JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD TIMESTAMP GT PUSH2 0x1131 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x53616C65206F6E676F696E67 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x293 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x7 SLOAD LT PUSH2 0x1177 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14DBD99D0818D85C081C995858DA1959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x293 JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD SWAP1 PUSH1 0x0 SWAP1 DUP3 GT ISZERO PUSH2 0x1198 JUMPI PUSH2 0x1191 PUSH1 0xB DUP4 PUSH2 0x2D48 JUMP JUMPDEST SWAP1 POP PUSH2 0x119C JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x0 PUSH2 0x11A9 PUSH1 0x1 DUP5 PUSH2 0x2D48 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP2 DUP2 LT PUSH2 0x153B JUMPI PUSH1 0x0 PUSH1 0xA DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x11C8 JUMPI PUSH2 0x11C8 PUSH2 0x2F3F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP JUMPDEST PUSH1 0x3 DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x14E4 JUMPI PUSH1 0x0 DUP2 PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1202 JUMPI PUSH2 0x1202 PUSH2 0x2D05 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP3 POP SWAP1 DUP2 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1231 JUMPI PUSH2 0x1231 PUSH2 0x2D05 JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1242 JUMPI PUSH2 0x1242 PUSH2 0x2D05 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x14DA JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1287 JUMPI PUSH2 0x1287 PUSH2 0x2D05 JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1298 JUMPI PUSH2 0x1298 PUSH2 0x2D05 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x12C0 JUMPI PUSH2 0x12C0 PUSH2 0x2D05 JUMP JUMPDEST SUB PUSH2 0x1362 JUMPI PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1312 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1317 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x135C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x109390881C99599D5B990819985A5B1959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x293 JUMP JUMPDEST POP PUSH2 0x1496 JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1376 JUMPI PUSH2 0x1376 PUSH2 0x2D05 JUMP JUMPDEST EQ DUP1 PUSH2 0x1393 JUMPI POP PUSH1 0x2 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1391 JUMPI PUSH2 0x1391 PUSH2 0x2D05 JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x1496 JUMPI PUSH1 0x0 PUSH1 0x1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x13AE JUMPI PUSH2 0x13AE PUSH2 0x2D05 JUMP JUMPDEST EQ PUSH2 0x13C4 JUMPI PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x13D1 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 SWAP3 POP SWAP1 DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1424 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1448 SWAP2 SWAP1 PUSH2 0x2F55 JUMP JUMPDEST PUSH2 0x1494 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537461626C65636F696E20726566756E64206661696C65640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x293 JUMP JUMPDEST POP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x3829AB241648D7348F97E4F77D36451330F2276EA8EEB3428E462012F9699E7 DUP3 DUP5 PUSH1 0x40 MLOAD PUSH2 0x14D1 SWAP3 SWAP2 SWAP1 PUSH2 0x2F99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x11DF JUMP JUMPDEST POP PUSH1 0xA DUP1 SLOAD DUP1 PUSH2 0x14F6 JUMPI PUSH2 0x14F6 PUSH2 0x2FAD JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 DUP3 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE SWAP1 SWAP2 ADD SWAP1 SWAP2 SSTORE DUP3 SWAP1 SUB PUSH2 0x1528 JUMPI POP PUSH2 0x153B JUMP JUMPDEST POP DUP1 PUSH2 0x1533 DUP2 PUSH2 0x2FC3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x11AC JUMP JUMPDEST POP PUSH1 0xA SLOAD PUSH1 0x0 SUB PUSH2 0x1554 JUMPI PUSH1 0x9 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST POP POP PUSH2 0xDFD PUSH1 0x1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3052 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x15A3 PUSH2 0x2265 JUMP JUMPDEST PUSH2 0x15AB PUSH2 0x229D JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x15CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x293 SWAP1 PUSH2 0x2EDC JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x15F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x293 SWAP1 PUSH2 0x2F0B JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x164F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41697264726F7020616C726561647920636F6D706C6574656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x293 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x169A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16BE SWAP2 SWAP1 PUSH2 0x2FDA JUMP JUMPDEST LT ISZERO PUSH2 0x1701 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x496E73756666696369656E742046756E6473 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x293 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD TIMESTAMP GT PUSH2 0x1753 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x53616C65206F6E676F696E67 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x293 JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD SWAP1 PUSH1 0x0 SWAP1 DUP3 GT ISZERO PUSH2 0x1774 JUMPI PUSH2 0x176D PUSH1 0xB DUP4 PUSH2 0x2D48 JUMP JUMPDEST SWAP1 POP PUSH2 0x1778 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x0 PUSH2 0x1785 PUSH1 0x1 DUP5 PUSH2 0x2D48 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP2 DUP2 LT PUSH2 0x1945 JUMPI PUSH1 0x0 PUSH1 0xA DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x17A4 JUMPI PUSH2 0x17A4 PUSH2 0x2F3F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 DUP4 MSTORE PUSH1 0xF SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP1 ISZERO PUSH2 0x1921 JUMPI PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD PUSH2 0x17EB PUSH2 0x156D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP6 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1840 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1864 SWAP2 SWAP1 PUSH2 0x2F55 JUMP JUMPDEST PUSH2 0x18A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x151BDAD95B881D1C985B9CD9995C8819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x293 JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD DUP1 PUSH2 0x18B9 JUMPI PUSH2 0x18B9 PUSH2 0x2FAD JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0x9BDCD0CC5503FB9A8DD7311D9617E33108C4B7C8948CC544B16C1FD63C6F475B SWAP1 PUSH2 0x1918 SWAP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST DUP3 PUSH1 0x0 SUB PUSH2 0x1930 JUMPI POP POP PUSH2 0x1945 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x193D SWAP1 PUSH2 0x2FC3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1788 JUMP JUMPDEST POP PUSH1 0xA SLOAD PUSH1 0x0 SUB PUSH2 0x1554 JUMPI PUSH1 0x9 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE POP POP PUSH2 0xDFD PUSH1 0x1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3052 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMP JUMPDEST PUSH2 0x1980 PUSH2 0x2265 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x19A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x293 SWAP1 PUSH2 0x2EDC JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x19CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x293 SWAP1 PUSH2 0x2F0B JUMP JUMPDEST PUSH2 0x19D4 PUSH2 0x156D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1A2B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E65722063616E6E6F742062757920746F6B656E73000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x293 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x0 SUB PUSH2 0x1A67 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x24 DUP3 ADD MSTORE PUSH7 0x4E6F2073616C65 PUSH1 0xC8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x293 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1AC5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x14D85B1948185B1C9958591E48199A5B985B1A5E9959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x293 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1ADA JUMPI PUSH2 0x1ADA PUSH2 0x2D05 JUMP JUMPDEST SUB PUSH2 0x1B99 JUMPI CALLVALUE PUSH1 0x0 SUB PUSH2 0x1B2F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656E6420612076616C696420424E4220616D6F756E74000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x293 JUMP JUMPDEST PUSH2 0x1B39 DUP4 CALLVALUE PUSH2 0x824 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP3 POP CALLVALUE SWAP2 SWAP1 DUP6 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1B60 JUMPI PUSH2 0x1B60 PUSH2 0x2D05 JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1B71 JUMPI PUSH2 0x1B71 PUSH2 0x2D05 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1B8E SWAP2 SWAP1 PUSH2 0x2F2C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1D79 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1BAD JUMPI PUSH2 0x1BAD PUSH2 0x2D05 JUMP JUMPDEST EQ DUP1 PUSH2 0x1BCA JUMPI POP PUSH1 0x2 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1BC8 JUMPI PUSH2 0x1BC8 PUSH2 0x2D05 JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x1D79 JUMPI DUP2 PUSH1 0x0 SUB PUSH2 0x1C14 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x115B9D195C881D985B1A5908185B5BDD5B9D PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x293 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1C2A JUMPI PUSH2 0x1C2A PUSH2 0x2D05 JUMP JUMPDEST EQ PUSH2 0x1C40 JUMPI PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1C4D JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1CA3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1CC7 SWAP2 SWAP1 PUSH2 0x2F55 JUMP JUMPDEST PUSH2 0x1D13 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537461626C65636F696E207472616E73666572206661696C6564000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x293 JUMP JUMPDEST PUSH2 0x1D1D DUP5 DUP5 PUSH2 0x824 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP4 POP DUP5 SWAP2 SWAP1 DUP7 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1D44 JUMPI PUSH2 0x1D44 PUSH2 0x2D05 JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1D55 JUMPI PUSH2 0x1D55 PUSH2 0x2D05 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1D72 SWAP2 SWAP1 PUSH2 0x2F2C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP JUMPDEST DUP1 PUSH1 0x0 SUB PUSH2 0x1DC0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x125B9D985B1A59081D1BDAD95B88185B5BDD5B9D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x293 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH2 0x1DE9 SWAP1 DUP5 PUSH2 0x2D31 JUMP JUMPDEST PUSH2 0x1DF3 SWAP2 SWAP1 PUSH2 0x2E4E JUMP JUMPDEST SWAP1 POP PUSH1 0x5 SLOAD DUP2 PUSH1 0x7 SLOAD PUSH2 0x1E06 SWAP2 SWAP1 PUSH2 0x2F2C JUMP JUMPDEST GT ISZERO PUSH2 0x1E47 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x12185C990818D85C081C995858DA1959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x293 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1E62 SWAP1 DUP3 SWAP1 PUSH2 0x2F2C JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x7 SLOAD PUSH2 0x1E80 SWAP1 DUP3 SWAP1 PUSH2 0x2F2C JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x6 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1EA7 SWAP1 DUP5 SWAP1 PUSH2 0x2F2C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x8 SLOAD PUSH2 0x1EBA SWAP1 DUP4 SWAP1 PUSH2 0x2F2C JUMP JUMPDEST PUSH1 0x8 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x1F16 JUMPI PUSH1 0xA DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1F31 SWAP1 DUP4 SWAP1 PUSH2 0x2F2C JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x10 SWAP1 MSTORE KECCAK256 DUP1 SLOAD DUP6 SWAP2 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1F69 JUMPI PUSH2 0x1F69 PUSH2 0x2D05 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x6 SLOAD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 MLOAD CALLER SWAP2 PUSH32 0xDBCEF474A632721725D49E3F35D9DEFE0257100B01D1E4B4B135B14D6FE296E8 SWAP2 PUSH2 0x1FBA SWAP2 DUP8 SWAP2 DUP10 SWAP1 DUP12 SWAP1 PUSH2 0x2FF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH2 0xE58 PUSH1 0x1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3052 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9A2 PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x2E4E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9A2 DUP3 PUSH5 0x2540BE400 PUSH2 0x2D31 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9A2 PUSH5 0x2540BE400 DUP4 PUSH2 0x2E4E JUMP JUMPDEST PUSH2 0x2019 PUSH2 0x229D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2043 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x293 JUMP JUMPDEST PUSH2 0x204C DUP2 PUSH2 0x27B7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x2095 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x20B2 JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x20C0 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x20DE JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x2108 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0x2111 CALLER PUSH2 0x2828 JUMP JUMPDEST PUSH2 0x2119 PUSH2 0x2839 JUMP JUMPDEST DUP13 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP10 PUSH1 0x4 DUP2 SWAP1 SSTORE POP DUP9 PUSH1 0x5 DUP2 SWAP1 SSTORE POP DUP12 PUSH1 0xB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP11 PUSH1 0xC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP8 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP7 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x2256 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3052 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 NOT ADD PUSH2 0x2297 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH2 0x22A6 PUSH2 0x156D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xDFD JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x293 JUMP JUMPDEST ADDRESS DUP1 BALANCE DUP1 ISZERO PUSH2 0x2376 JUMPI PUSH1 0x0 PUSH2 0x22E2 PUSH2 0x156D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x232C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2331 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x2374 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x293 JUMP JUMPDEST POP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP3 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x23C1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x23E5 SWAP2 SWAP1 PUSH2 0x2FDA JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x24BA JUMPI PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x2406 PUSH2 0x156D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2453 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2477 SWAP2 SWAP1 PUSH2 0x2F55 JUMP JUMPDEST PUSH2 0x24BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x1554D115081D1C985B9CD9995C8819985A5B1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x293 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP3 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2505 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2529 SWAP2 SWAP1 PUSH2 0x2FDA JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x25FE JUMPI PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x254A PUSH2 0x156D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2597 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x25BB SWAP2 SWAP1 PUSH2 0x2F55 JUMP JUMPDEST PUSH2 0x25FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x1554D110C81D1C985B9CD9995C8819985A5B1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x293 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0x268B JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x267F PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3032 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xDFD JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x204C PUSH2 0x229D JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x270B JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x2708 SWAP2 DUP2 ADD SWAP1 PUSH2 0x2FDA JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2733 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x293 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3032 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0x2764 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x293 JUMP JUMPDEST PUSH2 0x1033 DUP4 DUP4 PUSH2 0x2841 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0xDFD JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP3 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x2830 PUSH2 0x2897 JUMP JUMPDEST PUSH2 0x204C DUP2 PUSH2 0x28E0 JUMP JUMPDEST PUSH2 0xDFD PUSH2 0x2897 JUMP JUMPDEST PUSH2 0x284A DUP3 PUSH2 0x28E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x288F JUMPI PUSH2 0x1033 DUP3 DUP3 PUSH2 0x294D JUMP JUMPDEST PUSH2 0xE58 PUSH2 0x29C3 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0xDFD JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2019 PUSH2 0x2897 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH1 0x0 SUB PUSH2 0x291E JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x293 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3032 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x296A SWAP2 SWAP1 PUSH2 0x3015 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x29A5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x29AA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x29BA DUP6 DUP4 DUP4 PUSH2 0x29E2 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0xDFD JUMPI PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x29F7 JUMPI PUSH2 0x29F2 DUP3 PUSH2 0x2A41 JUMP JUMPDEST PUSH2 0x2A3A JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x2A0E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x2A37 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x293 JUMP JUMPDEST POP DUP1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x2A51 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD6BDA275 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0xB0C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2A8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A95 DUP4 PUSH2 0x2A6A JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2AB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A3A DUP3 PUSH2 0x2A6A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2AD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x204C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2B15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2B20 DUP2 PUSH2 0x2AD7 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2B3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x2B4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2B67 JUMPI PUSH2 0x2B67 PUSH2 0x2AEC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x2B96 JUMPI PUSH2 0x2B96 PUSH2 0x2AEC JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 ADD PUSH1 0x20 ADD DUP8 LT ISZERO PUSH2 0x2BAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP4 DUP4 ADD ADD MSTORE DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2BE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2C15 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2BFD JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2C3D DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x2BFA JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2A3A DUP2 PUSH2 0x2AD7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x2C8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 CALLDATALOAD PUSH2 0x2C96 DUP2 PUSH2 0x2AD7 JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD PUSH2 0x2CA6 DUP2 PUSH2 0x2AD7 JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH2 0x2CB6 DUP2 PUSH2 0x2AD7 JUMP JUMPDEST SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD SWAP4 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD PUSH2 0x2CD4 DUP2 PUSH2 0x2AD7 JUMP JUMPDEST SWAP3 POP PUSH1 0xC0 DUP10 ADD CALLDATALOAD PUSH2 0x2CE4 DUP2 PUSH2 0x2AD7 JUMP JUMPDEST SWAP2 POP PUSH1 0xE0 DUP10 ADD CALLDATALOAD PUSH2 0x2CF4 DUP2 PUSH2 0x2AD7 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x9A2 JUMPI PUSH2 0x9A2 PUSH2 0x2D1B JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x9A2 JUMPI PUSH2 0x9A2 PUSH2 0x2D1B JUMP JUMPDEST PUSH1 0x1 DUP2 JUMPDEST PUSH1 0x1 DUP5 GT ISZERO PUSH2 0x2D96 JUMPI DUP1 DUP6 DIV DUP2 GT ISZERO PUSH2 0x2D7A JUMPI PUSH2 0x2D7A PUSH2 0x2D1B JUMP JUMPDEST PUSH1 0x1 DUP5 AND ISZERO PUSH2 0x2D88 JUMPI SWAP1 DUP2 MUL SWAP1 JUMPDEST PUSH1 0x1 SWAP4 SWAP1 SWAP4 SHR SWAP3 DUP1 MUL PUSH2 0x2D5F JUMP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2DAD JUMPI POP PUSH1 0x1 PUSH2 0x9A2 JUMP JUMPDEST DUP2 PUSH2 0x2DBA JUMPI POP PUSH1 0x0 PUSH2 0x9A2 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x2DD0 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x2DDA JUMPI PUSH2 0x2DF6 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x9A2 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x2DEB JUMPI PUSH2 0x2DEB PUSH2 0x2D1B JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x9A2 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x2E19 JUMPI POP DUP2 DUP2 EXP PUSH2 0x9A2 JUMP JUMPDEST PUSH2 0x2E26 PUSH1 0x0 NOT DUP5 DUP5 PUSH2 0x2D5B JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x2E3A JUMPI PUSH2 0x2E3A PUSH2 0x2D1B JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A3A DUP4 DUP4 PUSH2 0x2D9E JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2E6B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xB0C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2EA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2EAB DUP7 PUSH2 0x2E70 JUMP JUMPDEST PUSH1 0x20 DUP8 ADD MLOAD PUSH1 0x40 DUP9 ADD MLOAD PUSH1 0x60 DUP10 ADD MLOAD SWAP3 SWAP8 POP SWAP1 SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0x2ED0 PUSH1 0x80 DUP8 ADD PUSH2 0x2E70 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x1250D3C8185B1C9958591E48199A5B985B1A5E9959 PUSH1 0x5A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x7 SWAP1 DUP3 ADD MSTORE PUSH7 0x199C99595E9959 PUSH1 0xCA SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x9A2 JUMPI PUSH2 0x9A2 PUSH2 0x2D1B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2A3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x2F95 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 DUP2 ADD PUSH2 0x2A3A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2F77 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x2FD2 JUMPI PUSH2 0x2FD2 PUSH2 0x2D1B JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2FEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD PUSH2 0x29BA PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2F77 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x3027 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x2BFA JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC9B779B17422D0DF9222301 DUP12 ORIGIN 0xB4 0xD1 STATICCALL CHAINID 0xE0 PUSH18 0x723D6817E2486D003BECC55F00A264697066 PUSH20 0x58221220F6169F3EA7A8AFB825B42A594AE709B4 ORIGIN PUSH17 0xA6BB30BF1EBA66C467A8093DC64964736F PUSH13 0x634300081C0033000000000000 ",
							"sourceMap": "429:15325:14:-:0;;;1171:4:3;1128:48;;429:15325:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@UPGRADE_INTERFACE_VERSION_518": {
									"entryPoint": null,
									"id": 518,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_3060": {
									"entryPoint": null,
									"id": 3060,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Ownable_init_100": {
									"entryPoint": 10280,
									"id": 100,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_127": {
									"entryPoint": 10464,
									"id": 127,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__UUPSUpgradeable_init_548": {
									"entryPoint": 10297,
									"id": 548,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_authorizeUpgrade_3146": {
									"entryPoint": 9897,
									"id": 3146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkInitializing_416": {
									"entryPoint": 10391,
									"id": 416,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkNonPayable_1175": {
									"entryPoint": 10691,
									"id": 1175,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkNotDelegated_624": {
									"entryPoint": 10094,
									"id": 624,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_168": {
									"entryPoint": 8861,
									"id": 168,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkProxy_608": {
									"entryPoint": 9732,
									"id": 608,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getInitializableStorage_493": {
									"entryPoint": null,
									"id": 493,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getOwnableStorage_71": {
									"entryPoint": null,
									"id": 71,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getPriceFeed_1983": {
									"entryPoint": 2472,
									"id": 1983,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_getReentrancyGuardStorage_750": {
									"entryPoint": null,
									"id": 750,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_isInitializing_484": {
									"entryPoint": null,
									"id": 484,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_704": {
									"entryPoint": null,
									"id": 704,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_832": {
									"entryPoint": null,
									"id": 832,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_816": {
									"entryPoint": 8805,
									"id": 816,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revert_1522": {
									"entryPoint": 10817,
									"id": 1522,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setImplementation_955": {
									"entryPoint": 10472,
									"id": 955,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferFundsToOwner_2727": {
									"entryPoint": 8911,
									"id": 2727,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_239": {
									"entryPoint": 10167,
									"id": 239,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_upgradeToAndCallUUPS_675": {
									"entryPoint": 9905,
									"id": 675,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@airdropTokens_2857": {
									"entryPoint": 5531,
									"id": 2857,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@buyTokens_2601": {
									"entryPoint": 6520,
									"id": 2601,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@calculatePaymentAmount_2357": {
									"entryPoint": 2833,
									"id": 2357,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@calculateTokenAmount_2236": {
									"entryPoint": 2084,
									"id": 2236,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@contributionsInUSD_1747": {
									"entryPoint": null,
									"id": 1747,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@createSale_2117": {
									"entryPoint": 3773,
									"id": 2117,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@finalizeICO_2636": {
									"entryPoint": 3247,
									"id": 2636,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@freeze_1912": {
									"entryPoint": 3705,
									"id": 1912,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@functionDelegateCall_1440": {
									"entryPoint": 10573,
									"id": 1440,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getAddressSlot_1580": {
									"entryPoint": null,
									"id": 1580,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getCurrentSaleId_3068": {
									"entryPoint": null,
									"id": 3068,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getHardCapReached_3124": {
									"entryPoint": null,
									"id": 3124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getImplementation_928": {
									"entryPoint": null,
									"id": 928,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getInvestorCount_3137": {
									"entryPoint": null,
									"id": 3137,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getLatestSaleEndTime_3079": {
									"entryPoint": null,
									"id": 3079,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getSaleStartEndTime_3102": {
									"entryPoint": null,
									"id": 3102,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@getSoftCapReached_3113": {
									"entryPoint": null,
									"id": 3113,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hardCapInUSD_1713": {
									"entryPoint": null,
									"id": 1713,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@initialize_1880": {
									"entryPoint": 8271,
									"id": 1880,
									"parameterSlots": 8,
									"returnSlots": 0
								},
								"@initiateRefund_3052": {
									"entryPoint": 4268,
									"id": 3052,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@investors_1734": {
									"entryPoint": 3603,
									"id": 1734,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isFreezed_1731": {
									"entryPoint": null,
									"id": 1731,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isICOFinalized_1727": {
									"entryPoint": null,
									"id": 1727,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isTokensAirdropped_1729": {
									"entryPoint": null,
									"id": 1729,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_151": {
									"entryPoint": 5485,
									"id": 151,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@precision_div_10_2019": {
									"entryPoint": 8192,
									"id": 2019,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@precision_div_18_2031": {
									"entryPoint": 8155,
									"id": 2031,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@precision_mul_10_1995": {
									"entryPoint": 8175,
									"id": 1995,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@precision_mul_18_2007": {
									"entryPoint": 3583,
									"id": 2007,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@proxiableUUID_566": {
									"entryPoint": 3676,
									"id": 566,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_182": {
									"entryPoint": 4152,
									"id": 182,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@saleCount_1715": {
									"entryPoint": null,
									"id": 1715,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sales_1743": {
									"entryPoint": null,
									"id": 1743,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@softCapInUSD_1711": {
									"entryPoint": null,
									"id": 1711,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@token_1709": {
									"entryPoint": null,
									"id": 1709,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokensBoughtByInvestor_1751": {
									"entryPoint": null,
									"id": 1751,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalFundsRaisedUSD_1717": {
									"entryPoint": null,
									"id": 1717,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalTokensSold_1719": {
									"entryPoint": null,
									"id": 1719,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_210": {
									"entryPoint": 8209,
									"id": 210,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unFreeze_1927": {
									"entryPoint": 4170,
									"id": 1927,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@upgradeToAndCall_586": {
									"entryPoint": 3645,
									"id": 586,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@upgradeToAndCall_991": {
									"entryPoint": 10305,
									"id": 991,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@usdc_1738": {
									"entryPoint": null,
									"id": 1738,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@usdt_1736": {
									"entryPoint": null,
									"id": 1736,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_1480": {
									"entryPoint": 10722,
									"id": 1480,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_enum_PaymentMethod": {
									"entryPoint": 10858,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 11345,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_bytes_memory_ptr": {
									"entryPoint": 11010,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 12117,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32_fromMemory": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$1264t_addresst_addresst_uint256t_uint256t_addresst_addresst_address": {
									"entryPoint": 11374,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 8
								},
								"abi_decode_tuple_t_enum$_PaymentMethod_$1706": {
									"entryPoint": 10915,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_enum$_PaymentMethod_$1706t_uint256": {
									"entryPoint": 10873,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 10942,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 12250,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256": {
									"entryPoint": 11214,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory": {
									"entryPoint": 11914,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_uint80_fromMemory": {
									"entryPoint": 11888,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_enum_PaymentMethod": {
									"entryPoint": 12151,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 12309,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$1264__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11294,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_032fb3428477d66798bdf7801f58a252d723dc1362b9dfac5726f85f81cca815__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0ac6ed66eb10da1daf17a818038873a6c51ace7271027943cc6a6f233843a4a5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_17550aa7e27a420bf678ad118b2de30f8f99747e4dbc150a39e97cdeb8fb8119__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_20a9374871eda95a21489d37b12097781d38e0ea68a5e5d037a1b2c3ea6a8c04__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_35194372afc15163c58aa5af5530ba0e7f2576a9d985e6f8d166066860d6966a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_37095db391cf553f65f0eddf201a3c7bc5118c1120fca6827815be26758eff4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4c76e179fd3981278de294ff97a7ccb030d7577d0e7f55ac3f87e02e3abaa726__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_51e395ccdea9060dec5fa8fca2f2563cffa61f9f6f61f3f9c9b3895fa879ed58__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_52e3d128a4ea4439173e3f4b78f0e12548c2c4449a80c4b2fbefb1fd3e6a7665__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5e1a07520dc062ba4ff449fce67822fde8495347c7d50898a83b1dfb63596097__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12043,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6074d909f1c7eb2393bdf1029d0b7e2b2329445b551a02e61050a4a408023785__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_745b7c27209a9df0afa3e1a0af6f3a48dc087e43ee7b30261a0fc4b9578e75a7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7c68e13a7a3bf736cdb65f14ebef38f840872b490e156aead879b05f23b99d80__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8a7248c601ff75c171cc9e31d0318cd31dcd14aa40f22f649faacd9d755b61c5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9061bb5d1762fde4c9d1190b8ce0bd989de0debb196be3c053155f36b52a6ce0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_96b145fdc05e3ce6aa7fad5e89550d457f70c47d1f8d674ad654a917590143f7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a2d2e7a15f42f292e75295df8170c1409618a86fbef71da331c44b30609e3c68__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_aff7558382c088943ad2bf11af33e010b3e0eab9fe7e943d464ecefccf0c4c65__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c07dacc766697a4a5558e08455451d0672777bb5104aed3615bc1964c00cc795__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c4187a1289740d8ffce3bb99c104d1df31ca9848a3a5aafe5f4d5ecd5e91ee9b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c62da71e519c5f2bf89b59327b7f977696c4a0042adb3aafb9f068ba780f8ac7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c84bd9c4652ced38c134ab47300145495de9d5aff68e1b658cc1dca99fef7eb7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d894807d07a4878944df72000c35a26fc670b7c15dedc34156876b2464e1fd23__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11996,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_dbf071520f0a95e05bb16da9ebcd49bf0ac91e963647b14497245101e3db79a3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fbff1a1f6c2af74648d360c36de5f47b5c561797f493e9c58d33289d0ad24acc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_enum$_PaymentMethod_$1706__to_t_uint256_t_uint8__fromStack_reversed": {
									"entryPoint": 12185,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_enum$_PaymentMethod_$1706__to_t_uint256_t_uint256_t_uint256_t_uint8__fromStack_reversed": {
									"entryPoint": 12275,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 12076,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 11854,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 11611,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint256": {
									"entryPoint": 11842,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 11678,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 11569,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 11592,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 11258,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 12227,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 11547,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 11525,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 12205,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 12095,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 10988,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 10967,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:23790:15",
										"nodeType": "YulBlock",
										"src": "0:23790:15",
										"statements": [
											{
												"nativeSrc": "6:3:15",
												"nodeType": "YulBlock",
												"src": "6:3:15",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "188:182:15",
													"nodeType": "YulBlock",
													"src": "188:182:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "205:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "205:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "216:2:15",
																		"nodeType": "YulLiteral",
																		"src": "216:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "198:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "198:6:15"
																},
																"nativeSrc": "198:21:15",
																"nodeType": "YulFunctionCall",
																"src": "198:21:15"
															},
															"nativeSrc": "198:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "198:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "239:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "239:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "250:2:15",
																				"nodeType": "YulLiteral",
																				"src": "250:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "235:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:15"
																		},
																		"nativeSrc": "235:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "235:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "255:2:15",
																		"nodeType": "YulLiteral",
																		"src": "255:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "228:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "228:6:15"
																},
																"nativeSrc": "228:30:15",
																"nodeType": "YulFunctionCall",
																"src": "228:30:15"
															},
															"nativeSrc": "228:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "228:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "278:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "278:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "289:2:15",
																				"nodeType": "YulLiteral",
																				"src": "289:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "274:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "274:3:15"
																		},
																		"nativeSrc": "274:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "274:18:15"
																	},
																	{
																		"hexValue": "44697265637420424e42207472616e7366657273206e6f7420616c6c6f776564",
																		"kind": "string",
																		"nativeSrc": "294:34:15",
																		"nodeType": "YulLiteral",
																		"src": "294:34:15",
																		"type": "",
																		"value": "Direct BNB transfers not allowed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "267:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "267:6:15"
																},
																"nativeSrc": "267:62:15",
																"nodeType": "YulFunctionCall",
																"src": "267:62:15"
															},
															"nativeSrc": "267:62:15",
															"nodeType": "YulExpressionStatement",
															"src": "267:62:15"
														},
														{
															"nativeSrc": "338:26:15",
															"nodeType": "YulAssignment",
															"src": "338:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "350:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "350:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "361:2:15",
																		"nodeType": "YulLiteral",
																		"src": "361:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "346:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "346:3:15"
																},
																"nativeSrc": "346:18:15",
																"nodeType": "YulFunctionCall",
																"src": "346:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "338:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "338:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_17550aa7e27a420bf678ad118b2de30f8f99747e4dbc150a39e97cdeb8fb8119__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:356:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "165:9:15",
														"nodeType": "YulTypedName",
														"src": "165:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "179:4:15",
														"nodeType": "YulTypedName",
														"src": "179:4:15",
														"type": ""
													}
												],
												"src": "14:356:15"
											},
											{
												"body": {
													"nativeSrc": "435:94:15",
													"nodeType": "YulBlock",
													"src": "435:94:15",
													"statements": [
														{
															"nativeSrc": "445:29:15",
															"nodeType": "YulAssignment",
															"src": "445:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "467:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "467:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "454:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "454:12:15"
																},
																"nativeSrc": "454:20:15",
																"nodeType": "YulFunctionCall",
																"src": "454:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "445:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "445:5:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "507:16:15",
																"nodeType": "YulBlock",
																"src": "507:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "516:1:15",
																					"nodeType": "YulLiteral",
																					"src": "516:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "519:1:15",
																					"nodeType": "YulLiteral",
																					"src": "519:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "509:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "509:6:15"
																			},
																			"nativeSrc": "509:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "509:12:15"
																		},
																		"nativeSrc": "509:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "509:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "496:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "496:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "503:1:15",
																				"nodeType": "YulLiteral",
																				"src": "503:1:15",
																				"type": "",
																				"value": "3"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "493:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "493:2:15"
																		},
																		"nativeSrc": "493:12:15",
																		"nodeType": "YulFunctionCall",
																		"src": "493:12:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "486:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "486:6:15"
																},
																"nativeSrc": "486:20:15",
																"nodeType": "YulFunctionCall",
																"src": "486:20:15"
															},
															"nativeSrc": "483:40:15",
															"nodeType": "YulIf",
															"src": "483:40:15"
														}
													]
												},
												"name": "abi_decode_enum_PaymentMethod",
												"nativeSrc": "375:154:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "414:6:15",
														"nodeType": "YulTypedName",
														"src": "414:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "425:5:15",
														"nodeType": "YulTypedName",
														"src": "425:5:15",
														"type": ""
													}
												],
												"src": "375:154:15"
											},
											{
												"body": {
													"nativeSrc": "639:224:15",
													"nodeType": "YulBlock",
													"src": "639:224:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "685:16:15",
																"nodeType": "YulBlock",
																"src": "685:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "694:1:15",
																					"nodeType": "YulLiteral",
																					"src": "694:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "697:1:15",
																					"nodeType": "YulLiteral",
																					"src": "697:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "687:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "687:6:15"
																			},
																			"nativeSrc": "687:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "687:12:15"
																		},
																		"nativeSrc": "687:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "687:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "660:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "660:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "669:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "669:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "656:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "656:3:15"
																		},
																		"nativeSrc": "656:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "656:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "681:2:15",
																		"nodeType": "YulLiteral",
																		"src": "681:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "652:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "652:3:15"
																},
																"nativeSrc": "652:32:15",
																"nodeType": "YulFunctionCall",
																"src": "652:32:15"
															},
															"nativeSrc": "649:52:15",
															"nodeType": "YulIf",
															"src": "649:52:15"
														},
														{
															"nativeSrc": "710:50:15",
															"nodeType": "YulAssignment",
															"src": "710:50:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "750:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "750:9:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_enum_PaymentMethod",
																	"nativeSrc": "720:29:15",
																	"nodeType": "YulIdentifier",
																	"src": "720:29:15"
																},
																"nativeSrc": "720:40:15",
																"nodeType": "YulFunctionCall",
																"src": "720:40:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "710:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "710:6:15"
																}
															]
														},
														{
															"nativeSrc": "769:14:15",
															"nodeType": "YulVariableDeclaration",
															"src": "769:14:15",
															"value": {
																"kind": "number",
																"nativeSrc": "782:1:15",
																"nodeType": "YulLiteral",
																"src": "782:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "773:5:15",
																	"nodeType": "YulTypedName",
																	"src": "773:5:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "792:41:15",
															"nodeType": "YulAssignment",
															"src": "792:41:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "818:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "818:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "829:2:15",
																				"nodeType": "YulLiteral",
																				"src": "829:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "814:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "814:3:15"
																		},
																		"nativeSrc": "814:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "814:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "801:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "801:12:15"
																},
																"nativeSrc": "801:32:15",
																"nodeType": "YulFunctionCall",
																"src": "801:32:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "792:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "792:5:15"
																}
															]
														},
														{
															"nativeSrc": "842:15:15",
															"nodeType": "YulAssignment",
															"src": "842:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "852:5:15",
																"nodeType": "YulIdentifier",
																"src": "852:5:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "842:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "842:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_enum$_PaymentMethod_$1706t_uint256",
												"nativeSrc": "534:329:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "597:9:15",
														"nodeType": "YulTypedName",
														"src": "597:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "608:7:15",
														"nodeType": "YulTypedName",
														"src": "608:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "620:6:15",
														"nodeType": "YulTypedName",
														"src": "620:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "628:6:15",
														"nodeType": "YulTypedName",
														"src": "628:6:15",
														"type": ""
													}
												],
												"src": "534:329:15"
											},
											{
												"body": {
													"nativeSrc": "969:76:15",
													"nodeType": "YulBlock",
													"src": "969:76:15",
													"statements": [
														{
															"nativeSrc": "979:26:15",
															"nodeType": "YulAssignment",
															"src": "979:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "991:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "991:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1002:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1002:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "987:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "987:3:15"
																},
																"nativeSrc": "987:18:15",
																"nodeType": "YulFunctionCall",
																"src": "987:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "979:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "979:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1021:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "1021:9:15"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1032:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1032:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1014:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1014:6:15"
																},
																"nativeSrc": "1014:25:15",
																"nodeType": "YulFunctionCall",
																"src": "1014:25:15"
															},
															"nativeSrc": "1014:25:15",
															"nodeType": "YulExpressionStatement",
															"src": "1014:25:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "868:177:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "938:9:15",
														"nodeType": "YulTypedName",
														"src": "938:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "949:6:15",
														"nodeType": "YulTypedName",
														"src": "949:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "960:4:15",
														"nodeType": "YulTypedName",
														"src": "960:4:15",
														"type": ""
													}
												],
												"src": "868:177:15"
											},
											{
												"body": {
													"nativeSrc": "1145:92:15",
													"nodeType": "YulBlock",
													"src": "1145:92:15",
													"statements": [
														{
															"nativeSrc": "1155:26:15",
															"nodeType": "YulAssignment",
															"src": "1155:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1167:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "1167:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1178:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1178:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1163:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1163:3:15"
																},
																"nativeSrc": "1163:18:15",
																"nodeType": "YulFunctionCall",
																"src": "1163:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1155:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "1155:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1197:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "1197:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1222:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "1222:6:15"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1215:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "1215:6:15"
																				},
																				"nativeSrc": "1215:14:15",
																				"nodeType": "YulFunctionCall",
																				"src": "1215:14:15"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1208:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "1208:6:15"
																		},
																		"nativeSrc": "1208:22:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1208:22:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1190:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1190:6:15"
																},
																"nativeSrc": "1190:41:15",
																"nodeType": "YulFunctionCall",
																"src": "1190:41:15"
															},
															"nativeSrc": "1190:41:15",
															"nodeType": "YulExpressionStatement",
															"src": "1190:41:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1050:187:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1114:9:15",
														"nodeType": "YulTypedName",
														"src": "1114:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1125:6:15",
														"nodeType": "YulTypedName",
														"src": "1125:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1136:4:15",
														"nodeType": "YulTypedName",
														"src": "1136:4:15",
														"type": ""
													}
												],
												"src": "1050:187:15"
											},
											{
												"body": {
													"nativeSrc": "1330:127:15",
													"nodeType": "YulBlock",
													"src": "1330:127:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "1376:16:15",
																"nodeType": "YulBlock",
																"src": "1376:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1385:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1385:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1388:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1388:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1378:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1378:6:15"
																			},
																			"nativeSrc": "1378:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1378:12:15"
																		},
																		"nativeSrc": "1378:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "1378:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1351:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "1351:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1360:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "1360:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1347:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1347:3:15"
																		},
																		"nativeSrc": "1347:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1347:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1372:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1372:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1343:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1343:3:15"
																},
																"nativeSrc": "1343:32:15",
																"nodeType": "YulFunctionCall",
																"src": "1343:32:15"
															},
															"nativeSrc": "1340:52:15",
															"nodeType": "YulIf",
															"src": "1340:52:15"
														},
														{
															"nativeSrc": "1401:50:15",
															"nodeType": "YulAssignment",
															"src": "1401:50:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1441:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "1441:9:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_enum_PaymentMethod",
																	"nativeSrc": "1411:29:15",
																	"nodeType": "YulIdentifier",
																	"src": "1411:29:15"
																},
																"nativeSrc": "1411:40:15",
																"nodeType": "YulFunctionCall",
																"src": "1411:40:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1401:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1401:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_enum$_PaymentMethod_$1706",
												"nativeSrc": "1242:215:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1296:9:15",
														"nodeType": "YulTypedName",
														"src": "1296:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1307:7:15",
														"nodeType": "YulTypedName",
														"src": "1307:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1319:6:15",
														"nodeType": "YulTypedName",
														"src": "1319:6:15",
														"type": ""
													}
												],
												"src": "1242:215:15"
											},
											{
												"body": {
													"nativeSrc": "1561:76:15",
													"nodeType": "YulBlock",
													"src": "1561:76:15",
													"statements": [
														{
															"nativeSrc": "1571:26:15",
															"nodeType": "YulAssignment",
															"src": "1571:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1583:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "1583:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1594:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1594:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1579:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1579:3:15"
																},
																"nativeSrc": "1579:18:15",
																"nodeType": "YulFunctionCall",
																"src": "1579:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1571:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "1571:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1613:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "1613:9:15"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1624:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1624:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1606:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1606:6:15"
																},
																"nativeSrc": "1606:25:15",
																"nodeType": "YulFunctionCall",
																"src": "1606:25:15"
															},
															"nativeSrc": "1606:25:15",
															"nodeType": "YulExpressionStatement",
															"src": "1606:25:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed",
												"nativeSrc": "1462:175:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1530:9:15",
														"nodeType": "YulTypedName",
														"src": "1530:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1541:6:15",
														"nodeType": "YulTypedName",
														"src": "1541:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1552:4:15",
														"nodeType": "YulTypedName",
														"src": "1552:4:15",
														"type": ""
													}
												],
												"src": "1462:175:15"
											},
											{
												"body": {
													"nativeSrc": "1712:156:15",
													"nodeType": "YulBlock",
													"src": "1712:156:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "1758:16:15",
																"nodeType": "YulBlock",
																"src": "1758:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1767:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1767:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1770:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1770:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1760:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1760:6:15"
																			},
																			"nativeSrc": "1760:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1760:12:15"
																		},
																		"nativeSrc": "1760:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "1760:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1733:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "1733:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1742:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "1742:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1729:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1729:3:15"
																		},
																		"nativeSrc": "1729:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1729:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1754:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1754:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1725:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1725:3:15"
																},
																"nativeSrc": "1725:32:15",
																"nodeType": "YulFunctionCall",
																"src": "1725:32:15"
															},
															"nativeSrc": "1722:52:15",
															"nodeType": "YulIf",
															"src": "1722:52:15"
														},
														{
															"nativeSrc": "1783:14:15",
															"nodeType": "YulVariableDeclaration",
															"src": "1783:14:15",
															"value": {
																"kind": "number",
																"nativeSrc": "1796:1:15",
																"nodeType": "YulLiteral",
																"src": "1796:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1787:5:15",
																	"nodeType": "YulTypedName",
																	"src": "1787:5:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1806:32:15",
															"nodeType": "YulAssignment",
															"src": "1806:32:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1828:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "1828:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1815:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "1815:12:15"
																},
																"nativeSrc": "1815:23:15",
																"nodeType": "YulFunctionCall",
																"src": "1815:23:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1806:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "1806:5:15"
																}
															]
														},
														{
															"nativeSrc": "1847:15:15",
															"nodeType": "YulAssignment",
															"src": "1847:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "1857:5:15",
																"nodeType": "YulIdentifier",
																"src": "1857:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1847:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1847:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1642:226:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1678:9:15",
														"nodeType": "YulTypedName",
														"src": "1678:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1689:7:15",
														"nodeType": "YulTypedName",
														"src": "1689:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1701:6:15",
														"nodeType": "YulTypedName",
														"src": "1701:6:15",
														"type": ""
													}
												],
												"src": "1642:226:15"
											},
											{
												"body": {
													"nativeSrc": "1974:102:15",
													"nodeType": "YulBlock",
													"src": "1974:102:15",
													"statements": [
														{
															"nativeSrc": "1984:26:15",
															"nodeType": "YulAssignment",
															"src": "1984:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1996:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "1996:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2007:2:15",
																		"nodeType": "YulLiteral",
																		"src": "2007:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1992:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1992:3:15"
																},
																"nativeSrc": "1992:18:15",
																"nodeType": "YulFunctionCall",
																"src": "1992:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1984:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "1984:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2026:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "2026:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2041:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "2041:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2057:3:15",
																								"nodeType": "YulLiteral",
																								"src": "2057:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2062:1:15",
																								"nodeType": "YulLiteral",
																								"src": "2062:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2053:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "2053:3:15"
																						},
																						"nativeSrc": "2053:11:15",
																						"nodeType": "YulFunctionCall",
																						"src": "2053:11:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2066:1:15",
																						"nodeType": "YulLiteral",
																						"src": "2066:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2049:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "2049:3:15"
																				},
																				"nativeSrc": "2049:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "2049:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2037:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2037:3:15"
																		},
																		"nativeSrc": "2037:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2037:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2019:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2019:6:15"
																},
																"nativeSrc": "2019:51:15",
																"nodeType": "YulFunctionCall",
																"src": "2019:51:15"
															},
															"nativeSrc": "2019:51:15",
															"nodeType": "YulExpressionStatement",
															"src": "2019:51:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1873:203:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1943:9:15",
														"nodeType": "YulTypedName",
														"src": "1943:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1954:6:15",
														"nodeType": "YulTypedName",
														"src": "1954:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1965:4:15",
														"nodeType": "YulTypedName",
														"src": "1965:4:15",
														"type": ""
													}
												],
												"src": "1873:203:15"
											},
											{
												"body": {
													"nativeSrc": "2126:86:15",
													"nodeType": "YulBlock",
													"src": "2126:86:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "2190:16:15",
																"nodeType": "YulBlock",
																"src": "2190:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2199:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2199:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2202:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2202:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2192:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "2192:6:15"
																			},
																			"nativeSrc": "2192:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2192:12:15"
																		},
																		"nativeSrc": "2192:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "2192:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2149:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "2149:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2160:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "2160:5:15"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2175:3:15",
																										"nodeType": "YulLiteral",
																										"src": "2175:3:15",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2180:1:15",
																										"nodeType": "YulLiteral",
																										"src": "2180:1:15",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "2171:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "2171:3:15"
																								},
																								"nativeSrc": "2171:11:15",
																								"nodeType": "YulFunctionCall",
																								"src": "2171:11:15"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2184:1:15",
																								"nodeType": "YulLiteral",
																								"src": "2184:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "2167:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "2167:3:15"
																						},
																						"nativeSrc": "2167:19:15",
																						"nodeType": "YulFunctionCall",
																						"src": "2167:19:15"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "2156:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "2156:3:15"
																				},
																				"nativeSrc": "2156:31:15",
																				"nodeType": "YulFunctionCall",
																				"src": "2156:31:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2146:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "2146:2:15"
																		},
																		"nativeSrc": "2146:42:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2146:42:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2139:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2139:6:15"
																},
																"nativeSrc": "2139:50:15",
																"nodeType": "YulFunctionCall",
																"src": "2139:50:15"
															},
															"nativeSrc": "2136:70:15",
															"nodeType": "YulIf",
															"src": "2136:70:15"
														}
													]
												},
												"name": "validator_revert_address",
												"nativeSrc": "2081:131:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2115:5:15",
														"nodeType": "YulTypedName",
														"src": "2115:5:15",
														"type": ""
													}
												],
												"src": "2081:131:15"
											},
											{
												"body": {
													"nativeSrc": "2249:95:15",
													"nodeType": "YulBlock",
													"src": "2249:95:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2266:1:15",
																		"nodeType": "YulLiteral",
																		"src": "2266:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2273:3:15",
																				"nodeType": "YulLiteral",
																				"src": "2273:3:15",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2278:10:15",
																				"nodeType": "YulLiteral",
																				"src": "2278:10:15",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2269:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2269:3:15"
																		},
																		"nativeSrc": "2269:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2269:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2259:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2259:6:15"
																},
																"nativeSrc": "2259:31:15",
																"nodeType": "YulFunctionCall",
																"src": "2259:31:15"
															},
															"nativeSrc": "2259:31:15",
															"nodeType": "YulExpressionStatement",
															"src": "2259:31:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2306:1:15",
																		"nodeType": "YulLiteral",
																		"src": "2306:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2309:4:15",
																		"nodeType": "YulLiteral",
																		"src": "2309:4:15",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2299:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2299:6:15"
																},
																"nativeSrc": "2299:15:15",
																"nodeType": "YulFunctionCall",
																"src": "2299:15:15"
															},
															"nativeSrc": "2299:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "2299:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2330:1:15",
																		"nodeType": "YulLiteral",
																		"src": "2330:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2333:4:15",
																		"nodeType": "YulLiteral",
																		"src": "2333:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2323:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2323:6:15"
																},
																"nativeSrc": "2323:15:15",
																"nodeType": "YulFunctionCall",
																"src": "2323:15:15"
															},
															"nativeSrc": "2323:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "2323:15:15"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "2217:127:15",
												"nodeType": "YulFunctionDefinition",
												"src": "2217:127:15"
											},
											{
												"body": {
													"nativeSrc": "2445:983:15",
													"nodeType": "YulBlock",
													"src": "2445:983:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "2491:16:15",
																"nodeType": "YulBlock",
																"src": "2491:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2500:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2500:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2503:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2503:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2493:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "2493:6:15"
																			},
																			"nativeSrc": "2493:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2493:12:15"
																		},
																		"nativeSrc": "2493:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "2493:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2466:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "2466:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2475:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "2475:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2462:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2462:3:15"
																		},
																		"nativeSrc": "2462:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2462:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2487:2:15",
																		"nodeType": "YulLiteral",
																		"src": "2487:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2458:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2458:3:15"
																},
																"nativeSrc": "2458:32:15",
																"nodeType": "YulFunctionCall",
																"src": "2458:32:15"
															},
															"nativeSrc": "2455:52:15",
															"nodeType": "YulIf",
															"src": "2455:52:15"
														},
														{
															"nativeSrc": "2516:36:15",
															"nodeType": "YulVariableDeclaration",
															"src": "2516:36:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2542:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "2542:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2529:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "2529:12:15"
																},
																"nativeSrc": "2529:23:15",
																"nodeType": "YulFunctionCall",
																"src": "2529:23:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2520:5:15",
																	"nodeType": "YulTypedName",
																	"src": "2520:5:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2586:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "2586:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "2561:24:15",
																	"nodeType": "YulIdentifier",
																	"src": "2561:24:15"
																},
																"nativeSrc": "2561:31:15",
																"nodeType": "YulFunctionCall",
																"src": "2561:31:15"
															},
															"nativeSrc": "2561:31:15",
															"nodeType": "YulExpressionStatement",
															"src": "2561:31:15"
														},
														{
															"nativeSrc": "2601:15:15",
															"nodeType": "YulAssignment",
															"src": "2601:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "2611:5:15",
																"nodeType": "YulIdentifier",
																"src": "2611:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2601:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2601:6:15"
																}
															]
														},
														{
															"nativeSrc": "2625:46:15",
															"nodeType": "YulVariableDeclaration",
															"src": "2625:46:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2656:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "2656:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2667:2:15",
																				"nodeType": "YulLiteral",
																				"src": "2667:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2652:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2652:3:15"
																		},
																		"nativeSrc": "2652:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2652:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2639:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "2639:12:15"
																},
																"nativeSrc": "2639:32:15",
																"nodeType": "YulFunctionCall",
																"src": "2639:32:15"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "2629:6:15",
																	"nodeType": "YulTypedName",
																	"src": "2629:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2714:16:15",
																"nodeType": "YulBlock",
																"src": "2714:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2723:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2723:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2726:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2726:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2716:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "2716:6:15"
																			},
																			"nativeSrc": "2716:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2716:12:15"
																		},
																		"nativeSrc": "2716:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "2716:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2686:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2686:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2694:18:15",
																		"nodeType": "YulLiteral",
																		"src": "2694:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2683:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "2683:2:15"
																},
																"nativeSrc": "2683:30:15",
																"nodeType": "YulFunctionCall",
																"src": "2683:30:15"
															},
															"nativeSrc": "2680:50:15",
															"nodeType": "YulIf",
															"src": "2680:50:15"
														},
														{
															"nativeSrc": "2739:32:15",
															"nodeType": "YulVariableDeclaration",
															"src": "2739:32:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2753:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "2753:9:15"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2764:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2764:6:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2749:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2749:3:15"
																},
																"nativeSrc": "2749:22:15",
																"nodeType": "YulFunctionCall",
																"src": "2749:22:15"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "2743:2:15",
																	"nodeType": "YulTypedName",
																	"src": "2743:2:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2819:16:15",
																"nodeType": "YulBlock",
																"src": "2819:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2828:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2828:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2831:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2831:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2821:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "2821:6:15"
																			},
																			"nativeSrc": "2821:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2821:12:15"
																		},
																		"nativeSrc": "2821:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "2821:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "2798:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "2798:2:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2802:4:15",
																						"nodeType": "YulLiteral",
																						"src": "2802:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2794:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "2794:3:15"
																				},
																				"nativeSrc": "2794:13:15",
																				"nodeType": "YulFunctionCall",
																				"src": "2794:13:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2809:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "2809:7:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2790:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2790:3:15"
																		},
																		"nativeSrc": "2790:27:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2790:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2783:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2783:6:15"
																},
																"nativeSrc": "2783:35:15",
																"nodeType": "YulFunctionCall",
																"src": "2783:35:15"
															},
															"nativeSrc": "2780:55:15",
															"nodeType": "YulIf",
															"src": "2780:55:15"
														},
														{
															"nativeSrc": "2844:30:15",
															"nodeType": "YulVariableDeclaration",
															"src": "2844:30:15",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "2871:2:15",
																		"nodeType": "YulIdentifier",
																		"src": "2871:2:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2858:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "2858:12:15"
																},
																"nativeSrc": "2858:16:15",
																"nodeType": "YulFunctionCall",
																"src": "2858:16:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2848:6:15",
																	"nodeType": "YulTypedName",
																	"src": "2848:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2917:22:15",
																"nodeType": "YulBlock",
																"src": "2917:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2919:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "2919:16:15"
																			},
																			"nativeSrc": "2919:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2919:18:15"
																		},
																		"nativeSrc": "2919:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "2919:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2889:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2889:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2897:18:15",
																		"nodeType": "YulLiteral",
																		"src": "2897:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2886:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "2886:2:15"
																},
																"nativeSrc": "2886:30:15",
																"nodeType": "YulFunctionCall",
																"src": "2886:30:15"
															},
															"nativeSrc": "2883:56:15",
															"nodeType": "YulIf",
															"src": "2883:56:15"
														},
														{
															"nativeSrc": "2948:23:15",
															"nodeType": "YulVariableDeclaration",
															"src": "2948:23:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2968:2:15",
																		"nodeType": "YulLiteral",
																		"src": "2968:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2962:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "2962:5:15"
																},
																"nativeSrc": "2962:9:15",
																"nodeType": "YulFunctionCall",
																"src": "2962:9:15"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "2952:6:15",
																	"nodeType": "YulTypedName",
																	"src": "2952:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2980:85:15",
															"nodeType": "YulVariableDeclaration",
															"src": "2980:85:15",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "3002:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "3002:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nativeSrc": "3026:6:15",
																										"nodeType": "YulIdentifier",
																										"src": "3026:6:15"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3034:4:15",
																										"nodeType": "YulLiteral",
																										"src": "3034:4:15",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3022:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "3022:3:15"
																								},
																								"nativeSrc": "3022:17:15",
																								"nodeType": "YulFunctionCall",
																								"src": "3022:17:15"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "3045:2:15",
																										"nodeType": "YulLiteral",
																										"src": "3045:2:15",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "3041:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "3041:3:15"
																								},
																								"nativeSrc": "3041:7:15",
																								"nodeType": "YulFunctionCall",
																								"src": "3041:7:15"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "3018:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "3018:3:15"
																						},
																						"nativeSrc": "3018:31:15",
																						"nodeType": "YulFunctionCall",
																						"src": "3018:31:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3051:2:15",
																						"nodeType": "YulLiteral",
																						"src": "3051:2:15",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3014:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3014:3:15"
																				},
																				"nativeSrc": "3014:40:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3014:40:15"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3060:2:15",
																						"nodeType": "YulLiteral",
																						"src": "3060:2:15",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3056:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3056:3:15"
																				},
																				"nativeSrc": "3056:7:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3056:7:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3010:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3010:3:15"
																		},
																		"nativeSrc": "3010:54:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3010:54:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2998:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2998:3:15"
																},
																"nativeSrc": "2998:67:15",
																"nodeType": "YulFunctionCall",
																"src": "2998:67:15"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "2984:10:15",
																	"nodeType": "YulTypedName",
																	"src": "2984:10:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3140:22:15",
																"nodeType": "YulBlock",
																"src": "3140:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "3142:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "3142:16:15"
																			},
																			"nativeSrc": "3142:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3142:18:15"
																		},
																		"nativeSrc": "3142:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "3142:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "3083:10:15",
																				"nodeType": "YulIdentifier",
																				"src": "3083:10:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3095:18:15",
																				"nodeType": "YulLiteral",
																				"src": "3095:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3080:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "3080:2:15"
																		},
																		"nativeSrc": "3080:34:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3080:34:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "3119:10:15",
																				"nodeType": "YulIdentifier",
																				"src": "3119:10:15"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "3131:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "3131:6:15"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3116:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "3116:2:15"
																		},
																		"nativeSrc": "3116:22:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3116:22:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3077:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "3077:2:15"
																},
																"nativeSrc": "3077:62:15",
																"nodeType": "YulFunctionCall",
																"src": "3077:62:15"
															},
															"nativeSrc": "3074:88:15",
															"nodeType": "YulIf",
															"src": "3074:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3178:2:15",
																		"nodeType": "YulLiteral",
																		"src": "3178:2:15",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "3182:10:15",
																		"nodeType": "YulIdentifier",
																		"src": "3182:10:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3171:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3171:6:15"
																},
																"nativeSrc": "3171:22:15",
																"nodeType": "YulFunctionCall",
																"src": "3171:22:15"
															},
															"nativeSrc": "3171:22:15",
															"nodeType": "YulExpressionStatement",
															"src": "3171:22:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "3209:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "3209:6:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3217:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "3217:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3202:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3202:6:15"
																},
																"nativeSrc": "3202:22:15",
																"nodeType": "YulFunctionCall",
																"src": "3202:22:15"
															},
															"nativeSrc": "3202:22:15",
															"nodeType": "YulExpressionStatement",
															"src": "3202:22:15"
														},
														{
															"body": {
																"nativeSrc": "3274:16:15",
																"nodeType": "YulBlock",
																"src": "3274:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3283:1:15",
																					"nodeType": "YulLiteral",
																					"src": "3283:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3286:1:15",
																					"nodeType": "YulLiteral",
																					"src": "3286:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3276:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "3276:6:15"
																			},
																			"nativeSrc": "3276:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3276:12:15"
																		},
																		"nativeSrc": "3276:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "3276:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "3247:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "3247:2:15"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "3251:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "3251:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3243:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3243:3:15"
																				},
																				"nativeSrc": "3243:15:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3243:15:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3260:2:15",
																				"nodeType": "YulLiteral",
																				"src": "3260:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3239:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3239:3:15"
																		},
																		"nativeSrc": "3239:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3239:24:15"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "3265:7:15",
																		"nodeType": "YulIdentifier",
																		"src": "3265:7:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3236:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "3236:2:15"
																},
																"nativeSrc": "3236:37:15",
																"nodeType": "YulFunctionCall",
																"src": "3236:37:15"
															},
															"nativeSrc": "3233:57:15",
															"nodeType": "YulIf",
															"src": "3233:57:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3316:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "3316:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3324:2:15",
																				"nodeType": "YulLiteral",
																				"src": "3324:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3312:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3312:3:15"
																		},
																		"nativeSrc": "3312:15:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3312:15:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "3333:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "3333:2:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3337:2:15",
																				"nodeType": "YulLiteral",
																				"src": "3337:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3329:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3329:3:15"
																		},
																		"nativeSrc": "3329:11:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3329:11:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3342:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "3342:6:15"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "3299:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "3299:12:15"
																},
																"nativeSrc": "3299:50:15",
																"nodeType": "YulFunctionCall",
																"src": "3299:50:15"
															},
															"nativeSrc": "3299:50:15",
															"nodeType": "YulExpressionStatement",
															"src": "3299:50:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "3373:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "3373:6:15"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "3381:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "3381:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3369:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3369:3:15"
																				},
																				"nativeSrc": "3369:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3369:19:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3390:2:15",
																				"nodeType": "YulLiteral",
																				"src": "3390:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3365:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3365:3:15"
																		},
																		"nativeSrc": "3365:28:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3365:28:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3395:1:15",
																		"nodeType": "YulLiteral",
																		"src": "3395:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3358:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3358:6:15"
																},
																"nativeSrc": "3358:39:15",
																"nodeType": "YulFunctionCall",
																"src": "3358:39:15"
															},
															"nativeSrc": "3358:39:15",
															"nodeType": "YulExpressionStatement",
															"src": "3358:39:15"
														},
														{
															"nativeSrc": "3406:16:15",
															"nodeType": "YulAssignment",
															"src": "3406:16:15",
															"value": {
																"name": "memPtr",
																"nativeSrc": "3416:6:15",
																"nodeType": "YulIdentifier",
																"src": "3416:6:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3406:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3406:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_memory_ptr",
												"nativeSrc": "2349:1079:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2403:9:15",
														"nodeType": "YulTypedName",
														"src": "2403:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2414:7:15",
														"nodeType": "YulTypedName",
														"src": "2414:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2426:6:15",
														"nodeType": "YulTypedName",
														"src": "2426:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2434:6:15",
														"nodeType": "YulTypedName",
														"src": "2434:6:15",
														"type": ""
													}
												],
												"src": "2349:1079:15"
											},
											{
												"body": {
													"nativeSrc": "3534:76:15",
													"nodeType": "YulBlock",
													"src": "3534:76:15",
													"statements": [
														{
															"nativeSrc": "3544:26:15",
															"nodeType": "YulAssignment",
															"src": "3544:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3556:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "3556:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3567:2:15",
																		"nodeType": "YulLiteral",
																		"src": "3567:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3552:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3552:3:15"
																},
																"nativeSrc": "3552:18:15",
																"nodeType": "YulFunctionCall",
																"src": "3552:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3544:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "3544:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3586:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "3586:9:15"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "3597:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "3597:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3579:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3579:6:15"
																},
																"nativeSrc": "3579:25:15",
																"nodeType": "YulFunctionCall",
																"src": "3579:25:15"
															},
															"nativeSrc": "3579:25:15",
															"nodeType": "YulExpressionStatement",
															"src": "3579:25:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "3433:177:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3503:9:15",
														"nodeType": "YulTypedName",
														"src": "3503:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3514:6:15",
														"nodeType": "YulTypedName",
														"src": "3514:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3525:4:15",
														"nodeType": "YulTypedName",
														"src": "3525:4:15",
														"type": ""
													}
												],
												"src": "3433:177:15"
											},
											{
												"body": {
													"nativeSrc": "3719:362:15",
													"nodeType": "YulBlock",
													"src": "3719:362:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "3765:16:15",
																"nodeType": "YulBlock",
																"src": "3765:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3774:1:15",
																					"nodeType": "YulLiteral",
																					"src": "3774:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3777:1:15",
																					"nodeType": "YulLiteral",
																					"src": "3777:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3767:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "3767:6:15"
																			},
																			"nativeSrc": "3767:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3767:12:15"
																		},
																		"nativeSrc": "3767:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "3767:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3740:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "3740:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3749:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "3749:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3736:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3736:3:15"
																		},
																		"nativeSrc": "3736:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3736:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3761:2:15",
																		"nodeType": "YulLiteral",
																		"src": "3761:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3732:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3732:3:15"
																},
																"nativeSrc": "3732:32:15",
																"nodeType": "YulFunctionCall",
																"src": "3732:32:15"
															},
															"nativeSrc": "3729:52:15",
															"nodeType": "YulIf",
															"src": "3729:52:15"
														},
														{
															"nativeSrc": "3790:14:15",
															"nodeType": "YulVariableDeclaration",
															"src": "3790:14:15",
															"value": {
																"kind": "number",
																"nativeSrc": "3803:1:15",
																"nodeType": "YulLiteral",
																"src": "3803:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3794:5:15",
																	"nodeType": "YulTypedName",
																	"src": "3794:5:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3813:32:15",
															"nodeType": "YulAssignment",
															"src": "3813:32:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3835:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "3835:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3822:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "3822:12:15"
																},
																"nativeSrc": "3822:23:15",
																"nodeType": "YulFunctionCall",
																"src": "3822:23:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3813:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "3813:5:15"
																}
															]
														},
														{
															"nativeSrc": "3854:15:15",
															"nodeType": "YulAssignment",
															"src": "3854:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "3864:5:15",
																"nodeType": "YulIdentifier",
																"src": "3864:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3854:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3854:6:15"
																}
															]
														},
														{
															"nativeSrc": "3878:16:15",
															"nodeType": "YulVariableDeclaration",
															"src": "3878:16:15",
															"value": {
																"kind": "number",
																"nativeSrc": "3893:1:15",
																"nodeType": "YulLiteral",
																"src": "3893:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "3882:7:15",
																	"nodeType": "YulTypedName",
																	"src": "3882:7:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3903:43:15",
															"nodeType": "YulAssignment",
															"src": "3903:43:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3931:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "3931:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3942:2:15",
																				"nodeType": "YulLiteral",
																				"src": "3942:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3927:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3927:3:15"
																		},
																		"nativeSrc": "3927:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3927:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3914:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "3914:12:15"
																},
																"nativeSrc": "3914:32:15",
																"nodeType": "YulFunctionCall",
																"src": "3914:32:15"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "3903:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "3903:7:15"
																}
															]
														},
														{
															"nativeSrc": "3955:17:15",
															"nodeType": "YulAssignment",
															"src": "3955:17:15",
															"value": {
																"name": "value_1",
																"nativeSrc": "3965:7:15",
																"nodeType": "YulIdentifier",
																"src": "3965:7:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3955:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3955:6:15"
																}
															]
														},
														{
															"nativeSrc": "3981:16:15",
															"nodeType": "YulVariableDeclaration",
															"src": "3981:16:15",
															"value": {
																"kind": "number",
																"nativeSrc": "3996:1:15",
																"nodeType": "YulLiteral",
																"src": "3996:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "3985:7:15",
																	"nodeType": "YulTypedName",
																	"src": "3985:7:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4006:43:15",
															"nodeType": "YulAssignment",
															"src": "4006:43:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4034:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "4034:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4045:2:15",
																				"nodeType": "YulLiteral",
																				"src": "4045:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4030:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4030:3:15"
																		},
																		"nativeSrc": "4030:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4030:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4017:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "4017:12:15"
																},
																"nativeSrc": "4017:32:15",
																"nodeType": "YulFunctionCall",
																"src": "4017:32:15"
															},
															"variableNames": [
																{
																	"name": "value_2",
																	"nativeSrc": "4006:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "4006:7:15"
																}
															]
														},
														{
															"nativeSrc": "4058:17:15",
															"nodeType": "YulAssignment",
															"src": "4058:17:15",
															"value": {
																"name": "value_2",
																"nativeSrc": "4068:7:15",
																"nodeType": "YulIdentifier",
																"src": "4068:7:15"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "4058:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4058:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256",
												"nativeSrc": "3615:466:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3669:9:15",
														"nodeType": "YulTypedName",
														"src": "3669:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3680:7:15",
														"nodeType": "YulTypedName",
														"src": "3680:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3692:6:15",
														"nodeType": "YulTypedName",
														"src": "3692:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3700:6:15",
														"nodeType": "YulTypedName",
														"src": "3700:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3708:6:15",
														"nodeType": "YulTypedName",
														"src": "3708:6:15",
														"type": ""
													}
												],
												"src": "3615:466:15"
											},
											{
												"body": {
													"nativeSrc": "4152:184:15",
													"nodeType": "YulBlock",
													"src": "4152:184:15",
													"statements": [
														{
															"nativeSrc": "4162:10:15",
															"nodeType": "YulVariableDeclaration",
															"src": "4162:10:15",
															"value": {
																"kind": "number",
																"nativeSrc": "4171:1:15",
																"nodeType": "YulLiteral",
																"src": "4171:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "4166:1:15",
																	"nodeType": "YulTypedName",
																	"src": "4166:1:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4231:63:15",
																"nodeType": "YulBlock",
																"src": "4231:63:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "4256:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "4256:3:15"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "4261:1:15",
																							"nodeType": "YulIdentifier",
																							"src": "4261:1:15"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4252:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "4252:3:15"
																					},
																					"nativeSrc": "4252:11:15",
																					"nodeType": "YulFunctionCall",
																					"src": "4252:11:15"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "4275:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "4275:3:15"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "4280:1:15",
																									"nodeType": "YulIdentifier",
																									"src": "4280:1:15"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4271:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "4271:3:15"
																							},
																							"nativeSrc": "4271:11:15",
																							"nodeType": "YulFunctionCall",
																							"src": "4271:11:15"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "4265:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "4265:5:15"
																					},
																					"nativeSrc": "4265:18:15",
																					"nodeType": "YulFunctionCall",
																					"src": "4265:18:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4245:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "4245:6:15"
																			},
																			"nativeSrc": "4245:39:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4245:39:15"
																		},
																		"nativeSrc": "4245:39:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "4245:39:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "4192:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "4192:1:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4195:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4195:6:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "4189:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "4189:2:15"
																},
																"nativeSrc": "4189:13:15",
																"nodeType": "YulFunctionCall",
																"src": "4189:13:15"
															},
															"nativeSrc": "4181:113:15",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4203:19:15",
																"nodeType": "YulBlock",
																"src": "4203:19:15",
																"statements": [
																	{
																		"nativeSrc": "4205:15:15",
																		"nodeType": "YulAssignment",
																		"src": "4205:15:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "4214:1:15",
																					"nodeType": "YulIdentifier",
																					"src": "4214:1:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4217:2:15",
																					"nodeType": "YulLiteral",
																					"src": "4217:2:15",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4210:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "4210:3:15"
																			},
																			"nativeSrc": "4210:10:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4210:10:15"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "4205:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "4205:1:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "4185:3:15",
																"nodeType": "YulBlock",
																"src": "4185:3:15",
																"statements": []
															},
															"src": "4181:113:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "4314:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "4314:3:15"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "4319:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "4319:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4310:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4310:3:15"
																		},
																		"nativeSrc": "4310:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4310:16:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4328:1:15",
																		"nodeType": "YulLiteral",
																		"src": "4328:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4303:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4303:6:15"
																},
																"nativeSrc": "4303:27:15",
																"nodeType": "YulFunctionCall",
																"src": "4303:27:15"
															},
															"nativeSrc": "4303:27:15",
															"nodeType": "YulExpressionStatement",
															"src": "4303:27:15"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "4086:250:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "4130:3:15",
														"nodeType": "YulTypedName",
														"src": "4130:3:15",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "4135:3:15",
														"nodeType": "YulTypedName",
														"src": "4135:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4140:6:15",
														"nodeType": "YulTypedName",
														"src": "4140:6:15",
														"type": ""
													}
												],
												"src": "4086:250:15"
											},
											{
												"body": {
													"nativeSrc": "4462:275:15",
													"nodeType": "YulBlock",
													"src": "4462:275:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4479:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "4479:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4490:2:15",
																		"nodeType": "YulLiteral",
																		"src": "4490:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4472:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4472:6:15"
																},
																"nativeSrc": "4472:21:15",
																"nodeType": "YulFunctionCall",
																"src": "4472:21:15"
															},
															"nativeSrc": "4472:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "4472:21:15"
														},
														{
															"nativeSrc": "4502:27:15",
															"nodeType": "YulVariableDeclaration",
															"src": "4502:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4522:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4522:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4516:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "4516:5:15"
																},
																"nativeSrc": "4516:13:15",
																"nodeType": "YulFunctionCall",
																"src": "4516:13:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "4506:6:15",
																	"nodeType": "YulTypedName",
																	"src": "4506:6:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4549:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "4549:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4560:2:15",
																				"nodeType": "YulLiteral",
																				"src": "4560:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4545:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4545:3:15"
																		},
																		"nativeSrc": "4545:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4545:18:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4565:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4565:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4538:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4538:6:15"
																},
																"nativeSrc": "4538:34:15",
																"nodeType": "YulFunctionCall",
																"src": "4538:34:15"
															},
															"nativeSrc": "4538:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "4538:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4620:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "4620:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4628:2:15",
																				"nodeType": "YulLiteral",
																				"src": "4628:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4616:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4616:3:15"
																		},
																		"nativeSrc": "4616:15:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4616:15:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4637:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "4637:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4648:2:15",
																				"nodeType": "YulLiteral",
																				"src": "4648:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4633:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4633:3:15"
																		},
																		"nativeSrc": "4633:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4633:18:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4653:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4653:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "4581:34:15",
																	"nodeType": "YulIdentifier",
																	"src": "4581:34:15"
																},
																"nativeSrc": "4581:79:15",
																"nodeType": "YulFunctionCall",
																"src": "4581:79:15"
															},
															"nativeSrc": "4581:79:15",
															"nodeType": "YulExpressionStatement",
															"src": "4581:79:15"
														},
														{
															"nativeSrc": "4669:62:15",
															"nodeType": "YulAssignment",
															"src": "4669:62:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4685:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "4685:9:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "4704:6:15",
																								"nodeType": "YulIdentifier",
																								"src": "4704:6:15"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4712:2:15",
																								"nodeType": "YulLiteral",
																								"src": "4712:2:15",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "4700:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "4700:3:15"
																						},
																						"nativeSrc": "4700:15:15",
																						"nodeType": "YulFunctionCall",
																						"src": "4700:15:15"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4721:2:15",
																								"nodeType": "YulLiteral",
																								"src": "4721:2:15",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "4717:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "4717:3:15"
																						},
																						"nativeSrc": "4717:7:15",
																						"nodeType": "YulFunctionCall",
																						"src": "4717:7:15"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "4696:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4696:3:15"
																				},
																				"nativeSrc": "4696:29:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4696:29:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4681:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4681:3:15"
																		},
																		"nativeSrc": "4681:45:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4681:45:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4728:2:15",
																		"nodeType": "YulLiteral",
																		"src": "4728:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4677:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4677:3:15"
																},
																"nativeSrc": "4677:54:15",
																"nodeType": "YulFunctionCall",
																"src": "4677:54:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4669:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "4669:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4341:396:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4431:9:15",
														"nodeType": "YulTypedName",
														"src": "4431:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4442:6:15",
														"nodeType": "YulTypedName",
														"src": "4442:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4453:4:15",
														"nodeType": "YulTypedName",
														"src": "4453:4:15",
														"type": ""
													}
												],
												"src": "4341:396:15"
											},
											{
												"body": {
													"nativeSrc": "4949:266:15",
													"nodeType": "YulBlock",
													"src": "4949:266:15",
													"statements": [
														{
															"nativeSrc": "4959:27:15",
															"nodeType": "YulAssignment",
															"src": "4959:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4971:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "4971:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4982:3:15",
																		"nodeType": "YulLiteral",
																		"src": "4982:3:15",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4967:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4967:3:15"
																},
																"nativeSrc": "4967:19:15",
																"nodeType": "YulFunctionCall",
																"src": "4967:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4959:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "4959:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5002:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "5002:9:15"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "5013:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5013:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4995:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4995:6:15"
																},
																"nativeSrc": "4995:25:15",
																"nodeType": "YulFunctionCall",
																"src": "4995:25:15"
															},
															"nativeSrc": "4995:25:15",
															"nodeType": "YulExpressionStatement",
															"src": "4995:25:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5040:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "5040:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5051:2:15",
																				"nodeType": "YulLiteral",
																				"src": "5051:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5036:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5036:3:15"
																		},
																		"nativeSrc": "5036:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5036:18:15"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "5056:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5056:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5029:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5029:6:15"
																},
																"nativeSrc": "5029:34:15",
																"nodeType": "YulFunctionCall",
																"src": "5029:34:15"
															},
															"nativeSrc": "5029:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "5029:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5083:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "5083:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5094:2:15",
																				"nodeType": "YulLiteral",
																				"src": "5094:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5079:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5079:3:15"
																		},
																		"nativeSrc": "5079:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5079:18:15"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "5099:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5099:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5072:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5072:6:15"
																},
																"nativeSrc": "5072:34:15",
																"nodeType": "YulFunctionCall",
																"src": "5072:34:15"
															},
															"nativeSrc": "5072:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "5072:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5126:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "5126:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5137:2:15",
																				"nodeType": "YulLiteral",
																				"src": "5137:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5122:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5122:3:15"
																		},
																		"nativeSrc": "5122:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5122:18:15"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "5142:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5142:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5115:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5115:6:15"
																},
																"nativeSrc": "5115:34:15",
																"nodeType": "YulFunctionCall",
																"src": "5115:34:15"
															},
															"nativeSrc": "5115:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "5115:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5169:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "5169:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5180:3:15",
																				"nodeType": "YulLiteral",
																				"src": "5180:3:15",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5165:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5165:3:15"
																		},
																		"nativeSrc": "5165:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5165:19:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value4",
																						"nativeSrc": "5200:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "5200:6:15"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "5193:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "5193:6:15"
																				},
																				"nativeSrc": "5193:14:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5193:14:15"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "5186:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "5186:6:15"
																		},
																		"nativeSrc": "5186:22:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5186:22:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5158:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5158:6:15"
																},
																"nativeSrc": "5158:51:15",
																"nodeType": "YulFunctionCall",
																"src": "5158:51:15"
															},
															"nativeSrc": "5158:51:15",
															"nodeType": "YulExpressionStatement",
															"src": "5158:51:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed",
												"nativeSrc": "4742:473:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4886:9:15",
														"nodeType": "YulTypedName",
														"src": "4886:9:15",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "4897:6:15",
														"nodeType": "YulTypedName",
														"src": "4897:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "4905:6:15",
														"nodeType": "YulTypedName",
														"src": "4905:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4913:6:15",
														"nodeType": "YulTypedName",
														"src": "4913:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4921:6:15",
														"nodeType": "YulTypedName",
														"src": "4921:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4929:6:15",
														"nodeType": "YulTypedName",
														"src": "4929:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4940:4:15",
														"nodeType": "YulTypedName",
														"src": "4940:4:15",
														"type": ""
													}
												],
												"src": "4742:473:15"
											},
											{
												"body": {
													"nativeSrc": "5349:119:15",
													"nodeType": "YulBlock",
													"src": "5349:119:15",
													"statements": [
														{
															"nativeSrc": "5359:26:15",
															"nodeType": "YulAssignment",
															"src": "5359:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5371:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "5371:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5382:2:15",
																		"nodeType": "YulLiteral",
																		"src": "5382:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5367:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5367:3:15"
																},
																"nativeSrc": "5367:18:15",
																"nodeType": "YulFunctionCall",
																"src": "5367:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5359:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "5359:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5401:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "5401:9:15"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "5412:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5412:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5394:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5394:6:15"
																},
																"nativeSrc": "5394:25:15",
																"nodeType": "YulFunctionCall",
																"src": "5394:25:15"
															},
															"nativeSrc": "5394:25:15",
															"nodeType": "YulExpressionStatement",
															"src": "5394:25:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5439:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "5439:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5450:2:15",
																				"nodeType": "YulLiteral",
																				"src": "5450:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5435:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5435:3:15"
																		},
																		"nativeSrc": "5435:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5435:18:15"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "5455:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5455:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5428:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5428:6:15"
																},
																"nativeSrc": "5428:34:15",
																"nodeType": "YulFunctionCall",
																"src": "5428:34:15"
															},
															"nativeSrc": "5428:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "5428:34:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "5220:248:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5310:9:15",
														"nodeType": "YulTypedName",
														"src": "5310:9:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5321:6:15",
														"nodeType": "YulTypedName",
														"src": "5321:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5329:6:15",
														"nodeType": "YulTypedName",
														"src": "5329:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5340:4:15",
														"nodeType": "YulTypedName",
														"src": "5340:4:15",
														"type": ""
													}
												],
												"src": "5220:248:15"
											},
											{
												"body": {
													"nativeSrc": "5543:177:15",
													"nodeType": "YulBlock",
													"src": "5543:177:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "5589:16:15",
																"nodeType": "YulBlock",
																"src": "5589:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5598:1:15",
																					"nodeType": "YulLiteral",
																					"src": "5598:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5601:1:15",
																					"nodeType": "YulLiteral",
																					"src": "5601:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5591:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "5591:6:15"
																			},
																			"nativeSrc": "5591:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "5591:12:15"
																		},
																		"nativeSrc": "5591:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "5591:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5564:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "5564:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5573:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "5573:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5560:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5560:3:15"
																		},
																		"nativeSrc": "5560:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5560:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5585:2:15",
																		"nodeType": "YulLiteral",
																		"src": "5585:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5556:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5556:3:15"
																},
																"nativeSrc": "5556:32:15",
																"nodeType": "YulFunctionCall",
																"src": "5556:32:15"
															},
															"nativeSrc": "5553:52:15",
															"nodeType": "YulIf",
															"src": "5553:52:15"
														},
														{
															"nativeSrc": "5614:36:15",
															"nodeType": "YulVariableDeclaration",
															"src": "5614:36:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5640:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "5640:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5627:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "5627:12:15"
																},
																"nativeSrc": "5627:23:15",
																"nodeType": "YulFunctionCall",
																"src": "5627:23:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "5618:5:15",
																	"nodeType": "YulTypedName",
																	"src": "5618:5:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5684:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "5684:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "5659:24:15",
																	"nodeType": "YulIdentifier",
																	"src": "5659:24:15"
																},
																"nativeSrc": "5659:31:15",
																"nodeType": "YulFunctionCall",
																"src": "5659:31:15"
															},
															"nativeSrc": "5659:31:15",
															"nodeType": "YulExpressionStatement",
															"src": "5659:31:15"
														},
														{
															"nativeSrc": "5699:15:15",
															"nodeType": "YulAssignment",
															"src": "5699:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "5709:5:15",
																"nodeType": "YulIdentifier",
																"src": "5709:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5699:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5699:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5473:247:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5509:9:15",
														"nodeType": "YulTypedName",
														"src": "5509:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5520:7:15",
														"nodeType": "YulTypedName",
														"src": "5520:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5532:6:15",
														"nodeType": "YulTypedName",
														"src": "5532:6:15",
														"type": ""
													}
												],
												"src": "5473:247:15"
											},
											{
												"body": {
													"nativeSrc": "5841:102:15",
													"nodeType": "YulBlock",
													"src": "5841:102:15",
													"statements": [
														{
															"nativeSrc": "5851:26:15",
															"nodeType": "YulAssignment",
															"src": "5851:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5863:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "5863:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5874:2:15",
																		"nodeType": "YulLiteral",
																		"src": "5874:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5859:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5859:3:15"
																},
																"nativeSrc": "5859:18:15",
																"nodeType": "YulFunctionCall",
																"src": "5859:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5851:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "5851:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5893:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "5893:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5908:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "5908:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5924:3:15",
																								"nodeType": "YulLiteral",
																								"src": "5924:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5929:1:15",
																								"nodeType": "YulLiteral",
																								"src": "5929:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5920:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "5920:3:15"
																						},
																						"nativeSrc": "5920:11:15",
																						"nodeType": "YulFunctionCall",
																						"src": "5920:11:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5933:1:15",
																						"nodeType": "YulLiteral",
																						"src": "5933:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5916:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "5916:3:15"
																				},
																				"nativeSrc": "5916:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5916:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5904:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5904:3:15"
																		},
																		"nativeSrc": "5904:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5904:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5886:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5886:6:15"
																},
																"nativeSrc": "5886:51:15",
																"nodeType": "YulFunctionCall",
																"src": "5886:51:15"
															},
															"nativeSrc": "5886:51:15",
															"nodeType": "YulExpressionStatement",
															"src": "5886:51:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$1264__to_t_address__fromStack_reversed",
												"nativeSrc": "5725:218:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5810:9:15",
														"nodeType": "YulTypedName",
														"src": "5810:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5821:6:15",
														"nodeType": "YulTypedName",
														"src": "5821:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5832:4:15",
														"nodeType": "YulTypedName",
														"src": "5832:4:15",
														"type": ""
													}
												],
												"src": "5725:218:15"
											},
											{
												"body": {
													"nativeSrc": "6152:1008:15",
													"nodeType": "YulBlock",
													"src": "6152:1008:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "6199:16:15",
																"nodeType": "YulBlock",
																"src": "6199:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6208:1:15",
																					"nodeType": "YulLiteral",
																					"src": "6208:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6211:1:15",
																					"nodeType": "YulLiteral",
																					"src": "6211:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6201:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "6201:6:15"
																			},
																			"nativeSrc": "6201:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "6201:12:15"
																		},
																		"nativeSrc": "6201:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "6201:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6173:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "6173:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6182:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "6182:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6169:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6169:3:15"
																		},
																		"nativeSrc": "6169:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6169:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6194:3:15",
																		"nodeType": "YulLiteral",
																		"src": "6194:3:15",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6165:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6165:3:15"
																},
																"nativeSrc": "6165:33:15",
																"nodeType": "YulFunctionCall",
																"src": "6165:33:15"
															},
															"nativeSrc": "6162:53:15",
															"nodeType": "YulIf",
															"src": "6162:53:15"
														},
														{
															"nativeSrc": "6224:36:15",
															"nodeType": "YulVariableDeclaration",
															"src": "6224:36:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6250:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "6250:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6237:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "6237:12:15"
																},
																"nativeSrc": "6237:23:15",
																"nodeType": "YulFunctionCall",
																"src": "6237:23:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "6228:5:15",
																	"nodeType": "YulTypedName",
																	"src": "6228:5:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6294:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "6294:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "6269:24:15",
																	"nodeType": "YulIdentifier",
																	"src": "6269:24:15"
																},
																"nativeSrc": "6269:31:15",
																"nodeType": "YulFunctionCall",
																"src": "6269:31:15"
															},
															"nativeSrc": "6269:31:15",
															"nodeType": "YulExpressionStatement",
															"src": "6269:31:15"
														},
														{
															"nativeSrc": "6309:15:15",
															"nodeType": "YulAssignment",
															"src": "6309:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "6319:5:15",
																"nodeType": "YulIdentifier",
																"src": "6319:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "6309:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6309:6:15"
																}
															]
														},
														{
															"nativeSrc": "6333:47:15",
															"nodeType": "YulVariableDeclaration",
															"src": "6333:47:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6365:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "6365:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6376:2:15",
																				"nodeType": "YulLiteral",
																				"src": "6376:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6361:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6361:3:15"
																		},
																		"nativeSrc": "6361:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6361:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6348:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "6348:12:15"
																},
																"nativeSrc": "6348:32:15",
																"nodeType": "YulFunctionCall",
																"src": "6348:32:15"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "6337:7:15",
																	"nodeType": "YulTypedName",
																	"src": "6337:7:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "6414:7:15",
																		"nodeType": "YulIdentifier",
																		"src": "6414:7:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "6389:24:15",
																	"nodeType": "YulIdentifier",
																	"src": "6389:24:15"
																},
																"nativeSrc": "6389:33:15",
																"nodeType": "YulFunctionCall",
																"src": "6389:33:15"
															},
															"nativeSrc": "6389:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "6389:33:15"
														},
														{
															"nativeSrc": "6431:17:15",
															"nodeType": "YulAssignment",
															"src": "6431:17:15",
															"value": {
																"name": "value_1",
																"nativeSrc": "6441:7:15",
																"nodeType": "YulIdentifier",
																"src": "6441:7:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "6431:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6431:6:15"
																}
															]
														},
														{
															"nativeSrc": "6457:47:15",
															"nodeType": "YulVariableDeclaration",
															"src": "6457:47:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6489:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "6489:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6500:2:15",
																				"nodeType": "YulLiteral",
																				"src": "6500:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6485:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6485:3:15"
																		},
																		"nativeSrc": "6485:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6485:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6472:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "6472:12:15"
																},
																"nativeSrc": "6472:32:15",
																"nodeType": "YulFunctionCall",
																"src": "6472:32:15"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "6461:7:15",
																	"nodeType": "YulTypedName",
																	"src": "6461:7:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_2",
																		"nativeSrc": "6538:7:15",
																		"nodeType": "YulIdentifier",
																		"src": "6538:7:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "6513:24:15",
																	"nodeType": "YulIdentifier",
																	"src": "6513:24:15"
																},
																"nativeSrc": "6513:33:15",
																"nodeType": "YulFunctionCall",
																"src": "6513:33:15"
															},
															"nativeSrc": "6513:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "6513:33:15"
														},
														{
															"nativeSrc": "6555:17:15",
															"nodeType": "YulAssignment",
															"src": "6555:17:15",
															"value": {
																"name": "value_2",
																"nativeSrc": "6565:7:15",
																"nodeType": "YulIdentifier",
																"src": "6565:7:15"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "6555:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6555:6:15"
																}
															]
														},
														{
															"nativeSrc": "6581:16:15",
															"nodeType": "YulVariableDeclaration",
															"src": "6581:16:15",
															"value": {
																"kind": "number",
																"nativeSrc": "6596:1:15",
																"nodeType": "YulLiteral",
																"src": "6596:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_3",
																	"nativeSrc": "6585:7:15",
																	"nodeType": "YulTypedName",
																	"src": "6585:7:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6606:43:15",
															"nodeType": "YulAssignment",
															"src": "6606:43:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6634:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "6634:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6645:2:15",
																				"nodeType": "YulLiteral",
																				"src": "6645:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6630:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6630:3:15"
																		},
																		"nativeSrc": "6630:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6630:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6617:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "6617:12:15"
																},
																"nativeSrc": "6617:32:15",
																"nodeType": "YulFunctionCall",
																"src": "6617:32:15"
															},
															"variableNames": [
																{
																	"name": "value_3",
																	"nativeSrc": "6606:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "6606:7:15"
																}
															]
														},
														{
															"nativeSrc": "6658:17:15",
															"nodeType": "YulAssignment",
															"src": "6658:17:15",
															"value": {
																"name": "value_3",
																"nativeSrc": "6668:7:15",
																"nodeType": "YulIdentifier",
																"src": "6668:7:15"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "6658:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6658:6:15"
																}
															]
														},
														{
															"nativeSrc": "6684:16:15",
															"nodeType": "YulVariableDeclaration",
															"src": "6684:16:15",
															"value": {
																"kind": "number",
																"nativeSrc": "6699:1:15",
																"nodeType": "YulLiteral",
																"src": "6699:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_4",
																	"nativeSrc": "6688:7:15",
																	"nodeType": "YulTypedName",
																	"src": "6688:7:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6709:44:15",
															"nodeType": "YulAssignment",
															"src": "6709:44:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6737:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "6737:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6748:3:15",
																				"nodeType": "YulLiteral",
																				"src": "6748:3:15",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6733:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6733:3:15"
																		},
																		"nativeSrc": "6733:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6733:19:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6720:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "6720:12:15"
																},
																"nativeSrc": "6720:33:15",
																"nodeType": "YulFunctionCall",
																"src": "6720:33:15"
															},
															"variableNames": [
																{
																	"name": "value_4",
																	"nativeSrc": "6709:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "6709:7:15"
																}
															]
														},
														{
															"nativeSrc": "6762:17:15",
															"nodeType": "YulAssignment",
															"src": "6762:17:15",
															"value": {
																"name": "value_4",
																"nativeSrc": "6772:7:15",
																"nodeType": "YulIdentifier",
																"src": "6772:7:15"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "6762:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6762:6:15"
																}
															]
														},
														{
															"nativeSrc": "6788:48:15",
															"nodeType": "YulVariableDeclaration",
															"src": "6788:48:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6820:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "6820:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6831:3:15",
																				"nodeType": "YulLiteral",
																				"src": "6831:3:15",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6816:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6816:3:15"
																		},
																		"nativeSrc": "6816:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6816:19:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6803:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "6803:12:15"
																},
																"nativeSrc": "6803:33:15",
																"nodeType": "YulFunctionCall",
																"src": "6803:33:15"
															},
															"variables": [
																{
																	"name": "value_5",
																	"nativeSrc": "6792:7:15",
																	"nodeType": "YulTypedName",
																	"src": "6792:7:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_5",
																		"nativeSrc": "6870:7:15",
																		"nodeType": "YulIdentifier",
																		"src": "6870:7:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "6845:24:15",
																	"nodeType": "YulIdentifier",
																	"src": "6845:24:15"
																},
																"nativeSrc": "6845:33:15",
																"nodeType": "YulFunctionCall",
																"src": "6845:33:15"
															},
															"nativeSrc": "6845:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "6845:33:15"
														},
														{
															"nativeSrc": "6887:17:15",
															"nodeType": "YulAssignment",
															"src": "6887:17:15",
															"value": {
																"name": "value_5",
																"nativeSrc": "6897:7:15",
																"nodeType": "YulIdentifier",
																"src": "6897:7:15"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nativeSrc": "6887:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6887:6:15"
																}
															]
														},
														{
															"nativeSrc": "6913:48:15",
															"nodeType": "YulVariableDeclaration",
															"src": "6913:48:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6945:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "6945:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6956:3:15",
																				"nodeType": "YulLiteral",
																				"src": "6956:3:15",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6941:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6941:3:15"
																		},
																		"nativeSrc": "6941:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6941:19:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6928:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "6928:12:15"
																},
																"nativeSrc": "6928:33:15",
																"nodeType": "YulFunctionCall",
																"src": "6928:33:15"
															},
															"variables": [
																{
																	"name": "value_6",
																	"nativeSrc": "6917:7:15",
																	"nodeType": "YulTypedName",
																	"src": "6917:7:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_6",
																		"nativeSrc": "6995:7:15",
																		"nodeType": "YulIdentifier",
																		"src": "6995:7:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "6970:24:15",
																	"nodeType": "YulIdentifier",
																	"src": "6970:24:15"
																},
																"nativeSrc": "6970:33:15",
																"nodeType": "YulFunctionCall",
																"src": "6970:33:15"
															},
															"nativeSrc": "6970:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "6970:33:15"
														},
														{
															"nativeSrc": "7012:17:15",
															"nodeType": "YulAssignment",
															"src": "7012:17:15",
															"value": {
																"name": "value_6",
																"nativeSrc": "7022:7:15",
																"nodeType": "YulIdentifier",
																"src": "7022:7:15"
															},
															"variableNames": [
																{
																	"name": "value6",
																	"nativeSrc": "7012:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7012:6:15"
																}
															]
														},
														{
															"nativeSrc": "7038:48:15",
															"nodeType": "YulVariableDeclaration",
															"src": "7038:48:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7070:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "7070:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7081:3:15",
																				"nodeType": "YulLiteral",
																				"src": "7081:3:15",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7066:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7066:3:15"
																		},
																		"nativeSrc": "7066:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7066:19:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7053:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "7053:12:15"
																},
																"nativeSrc": "7053:33:15",
																"nodeType": "YulFunctionCall",
																"src": "7053:33:15"
															},
															"variables": [
																{
																	"name": "value_7",
																	"nativeSrc": "7042:7:15",
																	"nodeType": "YulTypedName",
																	"src": "7042:7:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_7",
																		"nativeSrc": "7120:7:15",
																		"nodeType": "YulIdentifier",
																		"src": "7120:7:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "7095:24:15",
																	"nodeType": "YulIdentifier",
																	"src": "7095:24:15"
																},
																"nativeSrc": "7095:33:15",
																"nodeType": "YulFunctionCall",
																"src": "7095:33:15"
															},
															"nativeSrc": "7095:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "7095:33:15"
														},
														{
															"nativeSrc": "7137:17:15",
															"nodeType": "YulAssignment",
															"src": "7137:17:15",
															"value": {
																"name": "value_7",
																"nativeSrc": "7147:7:15",
																"nodeType": "YulIdentifier",
																"src": "7147:7:15"
															},
															"variableNames": [
																{
																	"name": "value7",
																	"nativeSrc": "7137:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7137:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$1264t_addresst_addresst_uint256t_uint256t_addresst_addresst_address",
												"nativeSrc": "5948:1212:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6062:9:15",
														"nodeType": "YulTypedName",
														"src": "6062:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6073:7:15",
														"nodeType": "YulTypedName",
														"src": "6073:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6085:6:15",
														"nodeType": "YulTypedName",
														"src": "6085:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6093:6:15",
														"nodeType": "YulTypedName",
														"src": "6093:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6101:6:15",
														"nodeType": "YulTypedName",
														"src": "6101:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "6109:6:15",
														"nodeType": "YulTypedName",
														"src": "6109:6:15",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "6117:6:15",
														"nodeType": "YulTypedName",
														"src": "6117:6:15",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "6125:6:15",
														"nodeType": "YulTypedName",
														"src": "6125:6:15",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "6133:6:15",
														"nodeType": "YulTypedName",
														"src": "6133:6:15",
														"type": ""
													},
													{
														"name": "value7",
														"nativeSrc": "6141:6:15",
														"nodeType": "YulTypedName",
														"src": "6141:6:15",
														"type": ""
													}
												],
												"src": "5948:1212:15"
											},
											{
												"body": {
													"nativeSrc": "7339:168:15",
													"nodeType": "YulBlock",
													"src": "7339:168:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7356:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "7356:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7367:2:15",
																		"nodeType": "YulLiteral",
																		"src": "7367:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7349:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7349:6:15"
																},
																"nativeSrc": "7349:21:15",
																"nodeType": "YulFunctionCall",
																"src": "7349:21:15"
															},
															"nativeSrc": "7349:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "7349:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7390:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "7390:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7401:2:15",
																				"nodeType": "YulLiteral",
																				"src": "7401:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7386:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7386:3:15"
																		},
																		"nativeSrc": "7386:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7386:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7406:2:15",
																		"nodeType": "YulLiteral",
																		"src": "7406:2:15",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7379:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7379:6:15"
																},
																"nativeSrc": "7379:30:15",
																"nodeType": "YulFunctionCall",
																"src": "7379:30:15"
															},
															"nativeSrc": "7379:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "7379:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7429:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "7429:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7440:2:15",
																				"nodeType": "YulLiteral",
																				"src": "7440:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7425:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7425:3:15"
																		},
																		"nativeSrc": "7425:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7425:18:15"
																	},
																	{
																		"hexValue": "496e76616c69642070726963652066656564",
																		"kind": "string",
																		"nativeSrc": "7445:20:15",
																		"nodeType": "YulLiteral",
																		"src": "7445:20:15",
																		"type": "",
																		"value": "Invalid price feed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7418:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7418:6:15"
																},
																"nativeSrc": "7418:48:15",
																"nodeType": "YulFunctionCall",
																"src": "7418:48:15"
															},
															"nativeSrc": "7418:48:15",
															"nodeType": "YulExpressionStatement",
															"src": "7418:48:15"
														},
														{
															"nativeSrc": "7475:26:15",
															"nodeType": "YulAssignment",
															"src": "7475:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7487:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "7487:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7498:2:15",
																		"nodeType": "YulLiteral",
																		"src": "7498:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7483:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7483:3:15"
																},
																"nativeSrc": "7483:18:15",
																"nodeType": "YulFunctionCall",
																"src": "7483:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7475:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "7475:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dbf071520f0a95e05bb16da9ebcd49bf0ac91e963647b14497245101e3db79a3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7165:342:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7316:9:15",
														"nodeType": "YulTypedName",
														"src": "7316:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7330:4:15",
														"nodeType": "YulTypedName",
														"src": "7330:4:15",
														"type": ""
													}
												],
												"src": "7165:342:15"
											},
											{
												"body": {
													"nativeSrc": "7544:95:15",
													"nodeType": "YulBlock",
													"src": "7544:95:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7561:1:15",
																		"nodeType": "YulLiteral",
																		"src": "7561:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7568:3:15",
																				"nodeType": "YulLiteral",
																				"src": "7568:3:15",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7573:10:15",
																				"nodeType": "YulLiteral",
																				"src": "7573:10:15",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "7564:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7564:3:15"
																		},
																		"nativeSrc": "7564:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7564:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7554:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7554:6:15"
																},
																"nativeSrc": "7554:31:15",
																"nodeType": "YulFunctionCall",
																"src": "7554:31:15"
															},
															"nativeSrc": "7554:31:15",
															"nodeType": "YulExpressionStatement",
															"src": "7554:31:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7601:1:15",
																		"nodeType": "YulLiteral",
																		"src": "7601:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7604:4:15",
																		"nodeType": "YulLiteral",
																		"src": "7604:4:15",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7594:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7594:6:15"
																},
																"nativeSrc": "7594:15:15",
																"nodeType": "YulFunctionCall",
																"src": "7594:15:15"
															},
															"nativeSrc": "7594:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "7594:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7625:1:15",
																		"nodeType": "YulLiteral",
																		"src": "7625:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7628:4:15",
																		"nodeType": "YulLiteral",
																		"src": "7628:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7618:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7618:6:15"
																},
																"nativeSrc": "7618:15:15",
																"nodeType": "YulFunctionCall",
																"src": "7618:15:15"
															},
															"nativeSrc": "7618:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "7618:15:15"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "7512:127:15",
												"nodeType": "YulFunctionDefinition",
												"src": "7512:127:15"
											},
											{
												"body": {
													"nativeSrc": "7676:95:15",
													"nodeType": "YulBlock",
													"src": "7676:95:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7693:1:15",
																		"nodeType": "YulLiteral",
																		"src": "7693:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7700:3:15",
																				"nodeType": "YulLiteral",
																				"src": "7700:3:15",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7705:10:15",
																				"nodeType": "YulLiteral",
																				"src": "7705:10:15",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "7696:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7696:3:15"
																		},
																		"nativeSrc": "7696:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7696:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7686:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7686:6:15"
																},
																"nativeSrc": "7686:31:15",
																"nodeType": "YulFunctionCall",
																"src": "7686:31:15"
															},
															"nativeSrc": "7686:31:15",
															"nodeType": "YulExpressionStatement",
															"src": "7686:31:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7733:1:15",
																		"nodeType": "YulLiteral",
																		"src": "7733:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7736:4:15",
																		"nodeType": "YulLiteral",
																		"src": "7736:4:15",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7726:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7726:6:15"
																},
																"nativeSrc": "7726:15:15",
																"nodeType": "YulFunctionCall",
																"src": "7726:15:15"
															},
															"nativeSrc": "7726:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "7726:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7757:1:15",
																		"nodeType": "YulLiteral",
																		"src": "7757:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7760:4:15",
																		"nodeType": "YulLiteral",
																		"src": "7760:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7750:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7750:6:15"
																},
																"nativeSrc": "7750:15:15",
																"nodeType": "YulFunctionCall",
																"src": "7750:15:15"
															},
															"nativeSrc": "7750:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "7750:15:15"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7644:127:15",
												"nodeType": "YulFunctionDefinition",
												"src": "7644:127:15"
											},
											{
												"body": {
													"nativeSrc": "7828:116:15",
													"nodeType": "YulBlock",
													"src": "7828:116:15",
													"statements": [
														{
															"nativeSrc": "7838:20:15",
															"nodeType": "YulAssignment",
															"src": "7838:20:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7853:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "7853:1:15"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7856:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "7856:1:15"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "7849:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7849:3:15"
																},
																"nativeSrc": "7849:9:15",
																"nodeType": "YulFunctionCall",
																"src": "7849:9:15"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "7838:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "7838:7:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7916:22:15",
																"nodeType": "YulBlock",
																"src": "7916:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7918:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "7918:16:15"
																			},
																			"nativeSrc": "7918:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "7918:18:15"
																		},
																		"nativeSrc": "7918:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "7918:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "7887:1:15",
																						"nodeType": "YulIdentifier",
																						"src": "7887:1:15"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "7880:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "7880:6:15"
																				},
																				"nativeSrc": "7880:9:15",
																				"nodeType": "YulFunctionCall",
																				"src": "7880:9:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "7894:1:15",
																						"nodeType": "YulIdentifier",
																						"src": "7894:1:15"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "7901:7:15",
																								"nodeType": "YulIdentifier",
																								"src": "7901:7:15"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "7910:1:15",
																								"nodeType": "YulIdentifier",
																								"src": "7910:1:15"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "7897:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "7897:3:15"
																						},
																						"nativeSrc": "7897:15:15",
																						"nodeType": "YulFunctionCall",
																						"src": "7897:15:15"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "7891:2:15",
																					"nodeType": "YulIdentifier",
																					"src": "7891:2:15"
																				},
																				"nativeSrc": "7891:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "7891:22:15"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "7877:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "7877:2:15"
																		},
																		"nativeSrc": "7877:37:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7877:37:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7870:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7870:6:15"
																},
																"nativeSrc": "7870:45:15",
																"nodeType": "YulFunctionCall",
																"src": "7870:45:15"
															},
															"nativeSrc": "7867:71:15",
															"nodeType": "YulIf",
															"src": "7867:71:15"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "7776:168:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7807:1:15",
														"nodeType": "YulTypedName",
														"src": "7807:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7810:1:15",
														"nodeType": "YulTypedName",
														"src": "7810:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "7816:7:15",
														"nodeType": "YulTypedName",
														"src": "7816:7:15",
														"type": ""
													}
												],
												"src": "7776:168:15"
											},
											{
												"body": {
													"nativeSrc": "7998:79:15",
													"nodeType": "YulBlock",
													"src": "7998:79:15",
													"statements": [
														{
															"nativeSrc": "8008:17:15",
															"nodeType": "YulAssignment",
															"src": "8008:17:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8020:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "8020:1:15"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8023:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "8023:1:15"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "8016:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "8016:3:15"
																},
																"nativeSrc": "8016:9:15",
																"nodeType": "YulFunctionCall",
																"src": "8016:9:15"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "8008:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "8008:4:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8049:22:15",
																"nodeType": "YulBlock",
																"src": "8049:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8051:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "8051:16:15"
																			},
																			"nativeSrc": "8051:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "8051:18:15"
																		},
																		"nativeSrc": "8051:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "8051:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "8040:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "8040:4:15"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "8046:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "8046:1:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8037:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "8037:2:15"
																},
																"nativeSrc": "8037:11:15",
																"nodeType": "YulFunctionCall",
																"src": "8037:11:15"
															},
															"nativeSrc": "8034:37:15",
															"nodeType": "YulIf",
															"src": "8034:37:15"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "7949:128:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7980:1:15",
														"nodeType": "YulTypedName",
														"src": "7980:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7983:1:15",
														"nodeType": "YulTypedName",
														"src": "7983:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "7989:4:15",
														"nodeType": "YulTypedName",
														"src": "7989:4:15",
														"type": ""
													}
												],
												"src": "7949:128:15"
											},
											{
												"body": {
													"nativeSrc": "8151:306:15",
													"nodeType": "YulBlock",
													"src": "8151:306:15",
													"statements": [
														{
															"nativeSrc": "8161:10:15",
															"nodeType": "YulAssignment",
															"src": "8161:10:15",
															"value": {
																"kind": "number",
																"nativeSrc": "8170:1:15",
																"nodeType": "YulLiteral",
																"src": "8170:1:15",
																"type": "",
																"value": "1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "8161:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "8161:5:15"
																}
															]
														},
														{
															"nativeSrc": "8180:13:15",
															"nodeType": "YulAssignment",
															"src": "8180:13:15",
															"value": {
																"name": "_base",
																"nativeSrc": "8188:5:15",
																"nodeType": "YulIdentifier",
																"src": "8188:5:15"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "8180:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "8180:4:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8238:213:15",
																"nodeType": "YulBlock",
																"src": "8238:213:15",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "8280:22:15",
																			"nodeType": "YulBlock",
																			"src": "8280:22:15",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "8282:16:15",
																							"nodeType": "YulIdentifier",
																							"src": "8282:16:15"
																						},
																						"nativeSrc": "8282:18:15",
																						"nodeType": "YulFunctionCall",
																						"src": "8282:18:15"
																					},
																					"nativeSrc": "8282:18:15",
																					"nodeType": "YulExpressionStatement",
																					"src": "8282:18:15"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "8258:4:15",
																					"nodeType": "YulIdentifier",
																					"src": "8258:4:15"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "8268:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "8268:3:15"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "8273:4:15",
																							"nodeType": "YulIdentifier",
																							"src": "8273:4:15"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "8264:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "8264:3:15"
																					},
																					"nativeSrc": "8264:14:15",
																					"nodeType": "YulFunctionCall",
																					"src": "8264:14:15"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "8255:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "8255:2:15"
																			},
																			"nativeSrc": "8255:24:15",
																			"nodeType": "YulFunctionCall",
																			"src": "8255:24:15"
																		},
																		"nativeSrc": "8252:50:15",
																		"nodeType": "YulIf",
																		"src": "8252:50:15"
																	},
																	{
																		"body": {
																			"nativeSrc": "8335:29:15",
																			"nodeType": "YulBlock",
																			"src": "8335:29:15",
																			"statements": [
																				{
																					"nativeSrc": "8337:25:15",
																					"nodeType": "YulAssignment",
																					"src": "8337:25:15",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "8350:5:15",
																								"nodeType": "YulIdentifier",
																								"src": "8350:5:15"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "8357:4:15",
																								"nodeType": "YulIdentifier",
																								"src": "8357:4:15"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "8346:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "8346:3:15"
																						},
																						"nativeSrc": "8346:16:15",
																						"nodeType": "YulFunctionCall",
																						"src": "8346:16:15"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "8337:5:15",
																							"nodeType": "YulIdentifier",
																							"src": "8337:5:15"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "8322:8:15",
																					"nodeType": "YulIdentifier",
																					"src": "8322:8:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8332:1:15",
																					"nodeType": "YulLiteral",
																					"src": "8332:1:15",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "8318:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "8318:3:15"
																			},
																			"nativeSrc": "8318:16:15",
																			"nodeType": "YulFunctionCall",
																			"src": "8318:16:15"
																		},
																		"nativeSrc": "8315:49:15",
																		"nodeType": "YulIf",
																		"src": "8315:49:15"
																	},
																	{
																		"nativeSrc": "8377:23:15",
																		"nodeType": "YulAssignment",
																		"src": "8377:23:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "8389:4:15",
																					"nodeType": "YulIdentifier",
																					"src": "8389:4:15"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "8395:4:15",
																					"nodeType": "YulIdentifier",
																					"src": "8395:4:15"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "8385:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "8385:3:15"
																			},
																			"nativeSrc": "8385:15:15",
																			"nodeType": "YulFunctionCall",
																			"src": "8385:15:15"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "8377:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "8377:4:15"
																			}
																		]
																	},
																	{
																		"nativeSrc": "8413:28:15",
																		"nodeType": "YulAssignment",
																		"src": "8413:28:15",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8429:1:15",
																					"nodeType": "YulLiteral",
																					"src": "8429:1:15",
																					"type": "",
																					"value": "1"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "8432:8:15",
																					"nodeType": "YulIdentifier",
																					"src": "8432:8:15"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nativeSrc": "8425:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "8425:3:15"
																			},
																			"nativeSrc": "8425:16:15",
																			"nodeType": "YulFunctionCall",
																			"src": "8425:16:15"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "8413:8:15",
																				"nodeType": "YulIdentifier",
																				"src": "8413:8:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "8213:8:15",
																		"nodeType": "YulIdentifier",
																		"src": "8213:8:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8223:1:15",
																		"nodeType": "YulLiteral",
																		"src": "8223:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8210:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "8210:2:15"
																},
																"nativeSrc": "8210:15:15",
																"nodeType": "YulFunctionCall",
																"src": "8210:15:15"
															},
															"nativeSrc": "8202:249:15",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "8226:3:15",
																"nodeType": "YulBlock",
																"src": "8226:3:15",
																"statements": []
															},
															"pre": {
																"nativeSrc": "8206:3:15",
																"nodeType": "YulBlock",
																"src": "8206:3:15",
																"statements": []
															},
															"src": "8202:249:15"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "8082:375:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nativeSrc": "8110:5:15",
														"nodeType": "YulTypedName",
														"src": "8110:5:15",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "8117:8:15",
														"nodeType": "YulTypedName",
														"src": "8117:8:15",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "8127:3:15",
														"nodeType": "YulTypedName",
														"src": "8127:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "8135:5:15",
														"nodeType": "YulTypedName",
														"src": "8135:5:15",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "8142:4:15",
														"nodeType": "YulTypedName",
														"src": "8142:4:15",
														"type": ""
													}
												],
												"src": "8082:375:15"
											},
											{
												"body": {
													"nativeSrc": "8521:843:15",
													"nodeType": "YulBlock",
													"src": "8521:843:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "8559:52:15",
																"nodeType": "YulBlock",
																"src": "8559:52:15",
																"statements": [
																	{
																		"nativeSrc": "8573:10:15",
																		"nodeType": "YulAssignment",
																		"src": "8573:10:15",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "8582:1:15",
																			"nodeType": "YulLiteral",
																			"src": "8582:1:15",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "8573:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "8573:5:15"
																			}
																		]
																	},
																	{
																		"nativeSrc": "8596:5:15",
																		"nodeType": "YulLeave",
																		"src": "8596:5:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "8541:8:15",
																		"nodeType": "YulIdentifier",
																		"src": "8541:8:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8534:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8534:6:15"
																},
																"nativeSrc": "8534:16:15",
																"nodeType": "YulFunctionCall",
																"src": "8534:16:15"
															},
															"nativeSrc": "8531:80:15",
															"nodeType": "YulIf",
															"src": "8531:80:15"
														},
														{
															"body": {
																"nativeSrc": "8644:52:15",
																"nodeType": "YulBlock",
																"src": "8644:52:15",
																"statements": [
																	{
																		"nativeSrc": "8658:10:15",
																		"nodeType": "YulAssignment",
																		"src": "8658:10:15",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "8667:1:15",
																			"nodeType": "YulLiteral",
																			"src": "8667:1:15",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "8658:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "8658:5:15"
																			}
																		]
																	},
																	{
																		"nativeSrc": "8681:5:15",
																		"nodeType": "YulLeave",
																		"src": "8681:5:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "8630:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "8630:4:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8623:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8623:6:15"
																},
																"nativeSrc": "8623:12:15",
																"nodeType": "YulFunctionCall",
																"src": "8623:12:15"
															},
															"nativeSrc": "8620:76:15",
															"nodeType": "YulIf",
															"src": "8620:76:15"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8732:52:15",
																		"nodeType": "YulBlock",
																		"src": "8732:52:15",
																		"statements": [
																			{
																				"nativeSrc": "8746:10:15",
																				"nodeType": "YulAssignment",
																				"src": "8746:10:15",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8755:1:15",
																					"nodeType": "YulLiteral",
																					"src": "8755:1:15",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "8746:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "8746:5:15"
																					}
																				]
																			},
																			{
																				"nativeSrc": "8769:5:15",
																				"nodeType": "YulLeave",
																				"src": "8769:5:15"
																			}
																		]
																	},
																	"nativeSrc": "8725:59:15",
																	"nodeType": "YulCase",
																	"src": "8725:59:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8730:1:15",
																		"nodeType": "YulLiteral",
																		"src": "8730:1:15",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8800:167:15",
																		"nodeType": "YulBlock",
																		"src": "8800:167:15",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "8835:22:15",
																					"nodeType": "YulBlock",
																					"src": "8835:22:15",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "8837:16:15",
																									"nodeType": "YulIdentifier",
																									"src": "8837:16:15"
																								},
																								"nativeSrc": "8837:18:15",
																								"nodeType": "YulFunctionCall",
																								"src": "8837:18:15"
																							},
																							"nativeSrc": "8837:18:15",
																							"nodeType": "YulExpressionStatement",
																							"src": "8837:18:15"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "8820:8:15",
																							"nodeType": "YulIdentifier",
																							"src": "8820:8:15"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "8830:3:15",
																							"nodeType": "YulLiteral",
																							"src": "8830:3:15",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "8817:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "8817:2:15"
																					},
																					"nativeSrc": "8817:17:15",
																					"nodeType": "YulFunctionCall",
																					"src": "8817:17:15"
																				},
																				"nativeSrc": "8814:43:15",
																				"nodeType": "YulIf",
																				"src": "8814:43:15"
																			},
																			{
																				"nativeSrc": "8870:25:15",
																				"nodeType": "YulAssignment",
																				"src": "8870:25:15",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "8883:8:15",
																							"nodeType": "YulIdentifier",
																							"src": "8883:8:15"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "8893:1:15",
																							"nodeType": "YulLiteral",
																							"src": "8893:1:15",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "8879:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "8879:3:15"
																					},
																					"nativeSrc": "8879:16:15",
																					"nodeType": "YulFunctionCall",
																					"src": "8879:16:15"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "8870:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "8870:5:15"
																					}
																				]
																			},
																			{
																				"nativeSrc": "8908:11:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8908:11:15",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8918:1:15",
																					"nodeType": "YulLiteral",
																					"src": "8918:1:15",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "_1",
																						"nativeSrc": "8912:2:15",
																						"nodeType": "YulTypedName",
																						"src": "8912:2:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8932:7:15",
																				"nodeType": "YulAssignment",
																				"src": "8932:7:15",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8938:1:15",
																					"nodeType": "YulLiteral",
																					"src": "8938:1:15",
																					"type": "",
																					"value": "0"
																				},
																				"variableNames": [
																					{
																						"name": "_1",
																						"nativeSrc": "8932:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "8932:2:15"
																					}
																				]
																			},
																			{
																				"nativeSrc": "8952:5:15",
																				"nodeType": "YulLeave",
																				"src": "8952:5:15"
																			}
																		]
																	},
																	"nativeSrc": "8793:174:15",
																	"nodeType": "YulCase",
																	"src": "8793:174:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8798:1:15",
																		"nodeType": "YulLiteral",
																		"src": "8798:1:15",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "8712:4:15",
																"nodeType": "YulIdentifier",
																"src": "8712:4:15"
															},
															"nativeSrc": "8705:262:15",
															"nodeType": "YulSwitch",
															"src": "8705:262:15"
														},
														{
															"body": {
																"nativeSrc": "9065:114:15",
																"nodeType": "YulBlock",
																"src": "9065:114:15",
																"statements": [
																	{
																		"nativeSrc": "9079:28:15",
																		"nodeType": "YulAssignment",
																		"src": "9079:28:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "9092:4:15",
																					"nodeType": "YulIdentifier",
																					"src": "9092:4:15"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "9098:8:15",
																					"nodeType": "YulIdentifier",
																					"src": "9098:8:15"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "9088:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "9088:3:15"
																			},
																			"nativeSrc": "9088:19:15",
																			"nodeType": "YulFunctionCall",
																			"src": "9088:19:15"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "9079:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "9079:5:15"
																			}
																		]
																	},
																	{
																		"nativeSrc": "9120:11:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9120:11:15",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "9130:1:15",
																			"nodeType": "YulLiteral",
																			"src": "9130:1:15",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nativeSrc": "9124:2:15",
																				"nodeType": "YulTypedName",
																				"src": "9124:2:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "9144:7:15",
																		"nodeType": "YulAssignment",
																		"src": "9144:7:15",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "9150:1:15",
																			"nodeType": "YulLiteral",
																			"src": "9150:1:15",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "_2",
																				"nativeSrc": "9144:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "9144:2:15"
																			}
																		]
																	},
																	{
																		"nativeSrc": "9164:5:15",
																		"nodeType": "YulLeave",
																		"src": "9164:5:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "8989:4:15",
																						"nodeType": "YulIdentifier",
																						"src": "8989:4:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8995:2:15",
																						"nodeType": "YulLiteral",
																						"src": "8995:2:15",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8986:2:15",
																					"nodeType": "YulIdentifier",
																					"src": "8986:2:15"
																				},
																				"nativeSrc": "8986:12:15",
																				"nodeType": "YulFunctionCall",
																				"src": "8986:12:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "9003:8:15",
																						"nodeType": "YulIdentifier",
																						"src": "9003:8:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9013:2:15",
																						"nodeType": "YulLiteral",
																						"src": "9013:2:15",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "9000:2:15",
																					"nodeType": "YulIdentifier",
																					"src": "9000:2:15"
																				},
																				"nativeSrc": "9000:16:15",
																				"nodeType": "YulFunctionCall",
																				"src": "9000:16:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8982:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8982:3:15"
																		},
																		"nativeSrc": "8982:35:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8982:35:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "9026:4:15",
																						"nodeType": "YulIdentifier",
																						"src": "9026:4:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9032:3:15",
																						"nodeType": "YulLiteral",
																						"src": "9032:3:15",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "9023:2:15",
																					"nodeType": "YulIdentifier",
																					"src": "9023:2:15"
																				},
																				"nativeSrc": "9023:13:15",
																				"nodeType": "YulFunctionCall",
																				"src": "9023:13:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "9041:8:15",
																						"nodeType": "YulIdentifier",
																						"src": "9041:8:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9051:2:15",
																						"nodeType": "YulLiteral",
																						"src": "9051:2:15",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "9038:2:15",
																					"nodeType": "YulIdentifier",
																					"src": "9038:2:15"
																				},
																				"nativeSrc": "9038:16:15",
																				"nodeType": "YulFunctionCall",
																				"src": "9038:16:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9019:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9019:3:15"
																		},
																		"nativeSrc": "9019:36:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9019:36:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8979:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "8979:2:15"
																},
																"nativeSrc": "8979:77:15",
																"nodeType": "YulFunctionCall",
																"src": "8979:77:15"
															},
															"nativeSrc": "8976:203:15",
															"nodeType": "YulIf",
															"src": "8976:203:15"
														},
														{
															"nativeSrc": "9188:65:15",
															"nodeType": "YulVariableDeclaration",
															"src": "9188:65:15",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "9230:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "9230:4:15"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "9236:8:15",
																		"nodeType": "YulIdentifier",
																		"src": "9236:8:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9250:1:15",
																				"nodeType": "YulLiteral",
																				"src": "9250:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "9246:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9246:3:15"
																		},
																		"nativeSrc": "9246:6:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9246:6:15"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "9211:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "9211:18:15"
																},
																"nativeSrc": "9211:42:15",
																"nodeType": "YulFunctionCall",
																"src": "9211:42:15"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nativeSrc": "9192:7:15",
																	"nodeType": "YulTypedName",
																	"src": "9192:7:15",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nativeSrc": "9201:6:15",
																	"nodeType": "YulTypedName",
																	"src": "9201:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9298:22:15",
																"nodeType": "YulBlock",
																"src": "9298:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9300:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "9300:16:15"
																			},
																			"nativeSrc": "9300:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "9300:18:15"
																		},
																		"nativeSrc": "9300:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "9300:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "9268:7:15",
																		"nodeType": "YulIdentifier",
																		"src": "9268:7:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "9285:1:15",
																						"nodeType": "YulLiteral",
																						"src": "9285:1:15",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "9281:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "9281:3:15"
																				},
																				"nativeSrc": "9281:6:15",
																				"nodeType": "YulFunctionCall",
																				"src": "9281:6:15"
																			},
																			{
																				"name": "base_1",
																				"nativeSrc": "9289:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "9289:6:15"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "9277:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9277:3:15"
																		},
																		"nativeSrc": "9277:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9277:19:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9265:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "9265:2:15"
																},
																"nativeSrc": "9265:32:15",
																"nodeType": "YulFunctionCall",
																"src": "9265:32:15"
															},
															"nativeSrc": "9262:58:15",
															"nodeType": "YulIf",
															"src": "9262:58:15"
														},
														{
															"nativeSrc": "9329:29:15",
															"nodeType": "YulAssignment",
															"src": "9329:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "9342:7:15",
																		"nodeType": "YulIdentifier",
																		"src": "9342:7:15"
																	},
																	{
																		"name": "base_1",
																		"nativeSrc": "9351:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "9351:6:15"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "9338:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "9338:3:15"
																},
																"nativeSrc": "9338:20:15",
																"nodeType": "YulFunctionCall",
																"src": "9338:20:15"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "9329:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "9329:5:15"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "8462:902:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "8492:4:15",
														"nodeType": "YulTypedName",
														"src": "8492:4:15",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "8498:8:15",
														"nodeType": "YulTypedName",
														"src": "8498:8:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "8511:5:15",
														"nodeType": "YulTypedName",
														"src": "8511:5:15",
														"type": ""
													}
												],
												"src": "8462:902:15"
											},
											{
												"body": {
													"nativeSrc": "9439:61:15",
													"nodeType": "YulBlock",
													"src": "9439:61:15",
													"statements": [
														{
															"nativeSrc": "9449:45:15",
															"nodeType": "YulAssignment",
															"src": "9449:45:15",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "9479:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "9479:4:15"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "9485:8:15",
																		"nodeType": "YulIdentifier",
																		"src": "9485:8:15"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "9458:20:15",
																	"nodeType": "YulIdentifier",
																	"src": "9458:20:15"
																},
																"nativeSrc": "9458:36:15",
																"nodeType": "YulFunctionCall",
																"src": "9458:36:15"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "9449:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "9449:5:15"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint256",
												"nativeSrc": "9369:131:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "9410:4:15",
														"nodeType": "YulTypedName",
														"src": "9410:4:15",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "9416:8:15",
														"nodeType": "YulTypedName",
														"src": "9416:8:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "9429:5:15",
														"nodeType": "YulTypedName",
														"src": "9429:5:15",
														"type": ""
													}
												],
												"src": "9369:131:15"
											},
											{
												"body": {
													"nativeSrc": "9679:176:15",
													"nodeType": "YulBlock",
													"src": "9679:176:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9696:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "9696:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9707:2:15",
																		"nodeType": "YulLiteral",
																		"src": "9707:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9689:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "9689:6:15"
																},
																"nativeSrc": "9689:21:15",
																"nodeType": "YulFunctionCall",
																"src": "9689:21:15"
															},
															"nativeSrc": "9689:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "9689:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9730:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "9730:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9741:2:15",
																				"nodeType": "YulLiteral",
																				"src": "9741:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9726:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9726:3:15"
																		},
																		"nativeSrc": "9726:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9726:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9746:2:15",
																		"nodeType": "YulLiteral",
																		"src": "9746:2:15",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9719:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "9719:6:15"
																},
																"nativeSrc": "9719:30:15",
																"nodeType": "YulFunctionCall",
																"src": "9719:30:15"
															},
															"nativeSrc": "9719:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "9719:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9769:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "9769:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9780:2:15",
																				"nodeType": "YulLiteral",
																				"src": "9780:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9765:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9765:3:15"
																		},
																		"nativeSrc": "9765:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9765:18:15"
																	},
																	{
																		"hexValue": "556e737570706f72746564207061796d656e74206d6574686f64",
																		"kind": "string",
																		"nativeSrc": "9785:28:15",
																		"nodeType": "YulLiteral",
																		"src": "9785:28:15",
																		"type": "",
																		"value": "Unsupported payment method"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9758:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "9758:6:15"
																},
																"nativeSrc": "9758:56:15",
																"nodeType": "YulFunctionCall",
																"src": "9758:56:15"
															},
															"nativeSrc": "9758:56:15",
															"nodeType": "YulExpressionStatement",
															"src": "9758:56:15"
														},
														{
															"nativeSrc": "9823:26:15",
															"nodeType": "YulAssignment",
															"src": "9823:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9835:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "9835:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9846:2:15",
																		"nodeType": "YulLiteral",
																		"src": "9846:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9831:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "9831:3:15"
																},
																"nativeSrc": "9831:18:15",
																"nodeType": "YulFunctionCall",
																"src": "9831:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9823:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "9823:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_20a9374871eda95a21489d37b12097781d38e0ea68a5e5d037a1b2c3ea6a8c04__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9505:350:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9656:9:15",
														"nodeType": "YulTypedName",
														"src": "9656:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9670:4:15",
														"nodeType": "YulTypedName",
														"src": "9670:4:15",
														"type": ""
													}
												],
												"src": "9505:350:15"
											},
											{
												"body": {
													"nativeSrc": "9906:171:15",
													"nodeType": "YulBlock",
													"src": "9906:171:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "9937:111:15",
																"nodeType": "YulBlock",
																"src": "9937:111:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9958:1:15",
																					"nodeType": "YulLiteral",
																					"src": "9958:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "9965:3:15",
																							"nodeType": "YulLiteral",
																							"src": "9965:3:15",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "9970:10:15",
																							"nodeType": "YulLiteral",
																							"src": "9970:10:15",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "9961:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "9961:3:15"
																					},
																					"nativeSrc": "9961:20:15",
																					"nodeType": "YulFunctionCall",
																					"src": "9961:20:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "9951:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "9951:6:15"
																			},
																			"nativeSrc": "9951:31:15",
																			"nodeType": "YulFunctionCall",
																			"src": "9951:31:15"
																		},
																		"nativeSrc": "9951:31:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "9951:31:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10002:1:15",
																					"nodeType": "YulLiteral",
																					"src": "10002:1:15",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10005:4:15",
																					"nodeType": "YulLiteral",
																					"src": "10005:4:15",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "9995:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "9995:6:15"
																			},
																			"nativeSrc": "9995:15:15",
																			"nodeType": "YulFunctionCall",
																			"src": "9995:15:15"
																		},
																		"nativeSrc": "9995:15:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "9995:15:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10030:1:15",
																					"nodeType": "YulLiteral",
																					"src": "10030:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10033:4:15",
																					"nodeType": "YulLiteral",
																					"src": "10033:4:15",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10023:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "10023:6:15"
																			},
																			"nativeSrc": "10023:15:15",
																			"nodeType": "YulFunctionCall",
																			"src": "10023:15:15"
																		},
																		"nativeSrc": "10023:15:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "10023:15:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9926:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "9926:1:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9919:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "9919:6:15"
																},
																"nativeSrc": "9919:9:15",
																"nodeType": "YulFunctionCall",
																"src": "9919:9:15"
															},
															"nativeSrc": "9916:132:15",
															"nodeType": "YulIf",
															"src": "9916:132:15"
														},
														{
															"nativeSrc": "10057:14:15",
															"nodeType": "YulAssignment",
															"src": "10057:14:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10066:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "10066:1:15"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10069:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "10069:1:15"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "10062:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "10062:3:15"
																},
																"nativeSrc": "10062:9:15",
																"nodeType": "YulFunctionCall",
																"src": "10062:9:15"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "10057:1:15",
																	"nodeType": "YulIdentifier",
																	"src": "10057:1:15"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "9860:217:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9891:1:15",
														"nodeType": "YulTypedName",
														"src": "9891:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9894:1:15",
														"nodeType": "YulTypedName",
														"src": "9894:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "9900:1:15",
														"nodeType": "YulTypedName",
														"src": "9900:1:15",
														"type": ""
													}
												],
												"src": "9860:217:15"
											},
											{
												"body": {
													"nativeSrc": "10141:120:15",
													"nodeType": "YulBlock",
													"src": "10141:120:15",
													"statements": [
														{
															"nativeSrc": "10151:22:15",
															"nodeType": "YulAssignment",
															"src": "10151:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10166:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "10166:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10160:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "10160:5:15"
																},
																"nativeSrc": "10160:13:15",
																"nodeType": "YulFunctionCall",
																"src": "10160:13:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "10151:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "10151:5:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10239:16:15",
																"nodeType": "YulBlock",
																"src": "10239:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10248:1:15",
																					"nodeType": "YulLiteral",
																					"src": "10248:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10251:1:15",
																					"nodeType": "YulLiteral",
																					"src": "10251:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10241:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "10241:6:15"
																			},
																			"nativeSrc": "10241:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "10241:12:15"
																		},
																		"nativeSrc": "10241:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "10241:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10195:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "10195:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "10206:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "10206:5:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10213:22:15",
																						"nodeType": "YulLiteral",
																						"src": "10213:22:15",
																						"type": "",
																						"value": "0xffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "10202:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "10202:3:15"
																				},
																				"nativeSrc": "10202:34:15",
																				"nodeType": "YulFunctionCall",
																				"src": "10202:34:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "10192:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "10192:2:15"
																		},
																		"nativeSrc": "10192:45:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10192:45:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10185:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10185:6:15"
																},
																"nativeSrc": "10185:53:15",
																"nodeType": "YulFunctionCall",
																"src": "10185:53:15"
															},
															"nativeSrc": "10182:73:15",
															"nodeType": "YulIf",
															"src": "10182:73:15"
														}
													]
												},
												"name": "abi_decode_uint80_fromMemory",
												"nativeSrc": "10082:179:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10120:6:15",
														"nodeType": "YulTypedName",
														"src": "10120:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "10131:5:15",
														"nodeType": "YulTypedName",
														"src": "10131:5:15",
														"type": ""
													}
												],
												"src": "10082:179:15"
											},
											{
												"body": {
													"nativeSrc": "10412:425:15",
													"nodeType": "YulBlock",
													"src": "10412:425:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "10459:16:15",
																"nodeType": "YulBlock",
																"src": "10459:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10468:1:15",
																					"nodeType": "YulLiteral",
																					"src": "10468:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10471:1:15",
																					"nodeType": "YulLiteral",
																					"src": "10471:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10461:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "10461:6:15"
																			},
																			"nativeSrc": "10461:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "10461:12:15"
																		},
																		"nativeSrc": "10461:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "10461:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10433:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "10433:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10442:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "10442:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10429:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10429:3:15"
																		},
																		"nativeSrc": "10429:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10429:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10454:3:15",
																		"nodeType": "YulLiteral",
																		"src": "10454:3:15",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10425:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "10425:3:15"
																},
																"nativeSrc": "10425:33:15",
																"nodeType": "YulFunctionCall",
																"src": "10425:33:15"
															},
															"nativeSrc": "10422:53:15",
															"nodeType": "YulIf",
															"src": "10422:53:15"
														},
														{
															"nativeSrc": "10484:49:15",
															"nodeType": "YulAssignment",
															"src": "10484:49:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10523:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "10523:9:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint80_fromMemory",
																	"nativeSrc": "10494:28:15",
																	"nodeType": "YulIdentifier",
																	"src": "10494:28:15"
																},
																"nativeSrc": "10494:39:15",
																"nodeType": "YulFunctionCall",
																"src": "10494:39:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "10484:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10484:6:15"
																}
															]
														},
														{
															"nativeSrc": "10542:35:15",
															"nodeType": "YulAssignment",
															"src": "10542:35:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10562:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "10562:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10573:2:15",
																				"nodeType": "YulLiteral",
																				"src": "10573:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10558:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10558:3:15"
																		},
																		"nativeSrc": "10558:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10558:18:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10552:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "10552:5:15"
																},
																"nativeSrc": "10552:25:15",
																"nodeType": "YulFunctionCall",
																"src": "10552:25:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "10542:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10542:6:15"
																}
															]
														},
														{
															"nativeSrc": "10586:14:15",
															"nodeType": "YulVariableDeclaration",
															"src": "10586:14:15",
															"value": {
																"kind": "number",
																"nativeSrc": "10599:1:15",
																"nodeType": "YulLiteral",
																"src": "10599:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "10590:5:15",
																	"nodeType": "YulTypedName",
																	"src": "10590:5:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10609:34:15",
															"nodeType": "YulAssignment",
															"src": "10609:34:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10628:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "10628:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10639:2:15",
																				"nodeType": "YulLiteral",
																				"src": "10639:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10624:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10624:3:15"
																		},
																		"nativeSrc": "10624:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10624:18:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10618:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "10618:5:15"
																},
																"nativeSrc": "10618:25:15",
																"nodeType": "YulFunctionCall",
																"src": "10618:25:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "10609:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "10609:5:15"
																}
															]
														},
														{
															"nativeSrc": "10652:15:15",
															"nodeType": "YulAssignment",
															"src": "10652:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "10662:5:15",
																"nodeType": "YulIdentifier",
																"src": "10662:5:15"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "10652:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10652:6:15"
																}
															]
														},
														{
															"nativeSrc": "10676:16:15",
															"nodeType": "YulVariableDeclaration",
															"src": "10676:16:15",
															"value": {
																"kind": "number",
																"nativeSrc": "10691:1:15",
																"nodeType": "YulLiteral",
																"src": "10691:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "10680:7:15",
																	"nodeType": "YulTypedName",
																	"src": "10680:7:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10701:36:15",
															"nodeType": "YulAssignment",
															"src": "10701:36:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10722:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "10722:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10733:2:15",
																				"nodeType": "YulLiteral",
																				"src": "10733:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10718:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10718:3:15"
																		},
																		"nativeSrc": "10718:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10718:18:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10712:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "10712:5:15"
																},
																"nativeSrc": "10712:25:15",
																"nodeType": "YulFunctionCall",
																"src": "10712:25:15"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "10701:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "10701:7:15"
																}
															]
														},
														{
															"nativeSrc": "10746:17:15",
															"nodeType": "YulAssignment",
															"src": "10746:17:15",
															"value": {
																"name": "value_1",
																"nativeSrc": "10756:7:15",
																"nodeType": "YulIdentifier",
																"src": "10756:7:15"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "10746:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10746:6:15"
																}
															]
														},
														{
															"nativeSrc": "10772:59:15",
															"nodeType": "YulAssignment",
															"src": "10772:59:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10815:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "10815:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10826:3:15",
																				"nodeType": "YulLiteral",
																				"src": "10826:3:15",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10811:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10811:3:15"
																		},
																		"nativeSrc": "10811:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10811:19:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint80_fromMemory",
																	"nativeSrc": "10782:28:15",
																	"nodeType": "YulIdentifier",
																	"src": "10782:28:15"
																},
																"nativeSrc": "10782:49:15",
																"nodeType": "YulFunctionCall",
																"src": "10782:49:15"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "10772:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10772:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
												"nativeSrc": "10266:571:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10346:9:15",
														"nodeType": "YulTypedName",
														"src": "10346:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10357:7:15",
														"nodeType": "YulTypedName",
														"src": "10357:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10369:6:15",
														"nodeType": "YulTypedName",
														"src": "10369:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10377:6:15",
														"nodeType": "YulTypedName",
														"src": "10377:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10385:6:15",
														"nodeType": "YulTypedName",
														"src": "10385:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "10393:6:15",
														"nodeType": "YulTypedName",
														"src": "10393:6:15",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "10401:6:15",
														"nodeType": "YulTypedName",
														"src": "10401:6:15",
														"type": ""
													}
												],
												"src": "10266:571:15"
											},
											{
												"body": {
													"nativeSrc": "11016:173:15",
													"nodeType": "YulBlock",
													"src": "11016:173:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11033:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "11033:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11044:2:15",
																		"nodeType": "YulLiteral",
																		"src": "11044:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11026:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11026:6:15"
																},
																"nativeSrc": "11026:21:15",
																"nodeType": "YulFunctionCall",
																"src": "11026:21:15"
															},
															"nativeSrc": "11026:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "11026:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11067:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "11067:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11078:2:15",
																				"nodeType": "YulLiteral",
																				"src": "11078:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11063:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11063:3:15"
																		},
																		"nativeSrc": "11063:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11063:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11083:2:15",
																		"nodeType": "YulLiteral",
																		"src": "11083:2:15",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11056:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11056:6:15"
																},
																"nativeSrc": "11056:30:15",
																"nodeType": "YulFunctionCall",
																"src": "11056:30:15"
															},
															"nativeSrc": "11056:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "11056:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11106:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "11106:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11117:2:15",
																				"nodeType": "YulLiteral",
																				"src": "11117:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11102:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11102:3:15"
																		},
																		"nativeSrc": "11102:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11102:18:15"
																	},
																	{
																		"hexValue": "416d6f756e74206d75737420626520706f736974697665",
																		"kind": "string",
																		"nativeSrc": "11122:25:15",
																		"nodeType": "YulLiteral",
																		"src": "11122:25:15",
																		"type": "",
																		"value": "Amount must be positive"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11095:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11095:6:15"
																},
																"nativeSrc": "11095:53:15",
																"nodeType": "YulFunctionCall",
																"src": "11095:53:15"
															},
															"nativeSrc": "11095:53:15",
															"nodeType": "YulExpressionStatement",
															"src": "11095:53:15"
														},
														{
															"nativeSrc": "11157:26:15",
															"nodeType": "YulAssignment",
															"src": "11157:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11169:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "11169:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11180:2:15",
																		"nodeType": "YulLiteral",
																		"src": "11180:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11165:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "11165:3:15"
																},
																"nativeSrc": "11165:18:15",
																"nodeType": "YulFunctionCall",
																"src": "11165:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11157:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "11157:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fbff1a1f6c2af74648d360c36de5f47b5c561797f493e9c58d33289d0ad24acc__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10842:347:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10993:9:15",
														"nodeType": "YulTypedName",
														"src": "10993:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11007:4:15",
														"nodeType": "YulTypedName",
														"src": "11007:4:15",
														"type": ""
													}
												],
												"src": "10842:347:15"
											},
											{
												"body": {
													"nativeSrc": "11368:164:15",
													"nodeType": "YulBlock",
													"src": "11368:164:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11385:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "11385:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11396:2:15",
																		"nodeType": "YulLiteral",
																		"src": "11396:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11378:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11378:6:15"
																},
																"nativeSrc": "11378:21:15",
																"nodeType": "YulFunctionCall",
																"src": "11378:21:15"
															},
															"nativeSrc": "11378:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "11378:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11419:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "11419:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11430:2:15",
																				"nodeType": "YulLiteral",
																				"src": "11430:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11415:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11415:3:15"
																		},
																		"nativeSrc": "11415:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11415:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11435:2:15",
																		"nodeType": "YulLiteral",
																		"src": "11435:2:15",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11408:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11408:6:15"
																},
																"nativeSrc": "11408:30:15",
																"nodeType": "YulFunctionCall",
																"src": "11408:30:15"
															},
															"nativeSrc": "11408:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "11408:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11458:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "11458:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11469:2:15",
																				"nodeType": "YulLiteral",
																				"src": "11469:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11454:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11454:3:15"
																		},
																		"nativeSrc": "11454:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11454:18:15"
																	},
																	{
																		"hexValue": "4e6f206163746976652073616c65",
																		"kind": "string",
																		"nativeSrc": "11474:16:15",
																		"nodeType": "YulLiteral",
																		"src": "11474:16:15",
																		"type": "",
																		"value": "No active sale"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11447:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11447:6:15"
																},
																"nativeSrc": "11447:44:15",
																"nodeType": "YulFunctionCall",
																"src": "11447:44:15"
															},
															"nativeSrc": "11447:44:15",
															"nodeType": "YulExpressionStatement",
															"src": "11447:44:15"
														},
														{
															"nativeSrc": "11500:26:15",
															"nodeType": "YulAssignment",
															"src": "11500:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11512:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "11512:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11523:2:15",
																		"nodeType": "YulLiteral",
																		"src": "11523:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11508:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "11508:3:15"
																},
																"nativeSrc": "11508:18:15",
																"nodeType": "YulFunctionCall",
																"src": "11508:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11500:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "11500:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_96b145fdc05e3ce6aa7fad5e89550d457f70c47d1f8d674ad654a917590143f7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11194:338:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11345:9:15",
														"nodeType": "YulTypedName",
														"src": "11345:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11359:4:15",
														"nodeType": "YulTypedName",
														"src": "11359:4:15",
														"type": ""
													}
												],
												"src": "11194:338:15"
											},
											{
												"body": {
													"nativeSrc": "11711:171:15",
													"nodeType": "YulBlock",
													"src": "11711:171:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11728:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "11728:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11739:2:15",
																		"nodeType": "YulLiteral",
																		"src": "11739:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11721:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11721:6:15"
																},
																"nativeSrc": "11721:21:15",
																"nodeType": "YulFunctionCall",
																"src": "11721:21:15"
															},
															"nativeSrc": "11721:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "11721:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11762:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "11762:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11773:2:15",
																				"nodeType": "YulLiteral",
																				"src": "11773:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11758:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11758:3:15"
																		},
																		"nativeSrc": "11758:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11758:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11778:2:15",
																		"nodeType": "YulLiteral",
																		"src": "11778:2:15",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11751:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11751:6:15"
																},
																"nativeSrc": "11751:30:15",
																"nodeType": "YulFunctionCall",
																"src": "11751:30:15"
															},
															"nativeSrc": "11751:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "11751:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11801:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "11801:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11812:2:15",
																				"nodeType": "YulLiteral",
																				"src": "11812:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11797:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11797:3:15"
																		},
																		"nativeSrc": "11797:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11797:18:15"
																	},
																	{
																		"hexValue": "49434f20616c72656164792066696e616c697a6564",
																		"kind": "string",
																		"nativeSrc": "11817:23:15",
																		"nodeType": "YulLiteral",
																		"src": "11817:23:15",
																		"type": "",
																		"value": "ICO already finalized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11790:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11790:6:15"
																},
																"nativeSrc": "11790:51:15",
																"nodeType": "YulFunctionCall",
																"src": "11790:51:15"
															},
															"nativeSrc": "11790:51:15",
															"nodeType": "YulExpressionStatement",
															"src": "11790:51:15"
														},
														{
															"nativeSrc": "11850:26:15",
															"nodeType": "YulAssignment",
															"src": "11850:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11862:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "11862:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11873:2:15",
																		"nodeType": "YulLiteral",
																		"src": "11873:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11858:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "11858:3:15"
																},
																"nativeSrc": "11858:18:15",
																"nodeType": "YulFunctionCall",
																"src": "11858:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11850:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "11850:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d894807d07a4878944df72000c35a26fc670b7c15dedc34156876b2464e1fd23__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11537:345:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11688:9:15",
														"nodeType": "YulTypedName",
														"src": "11688:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11702:4:15",
														"nodeType": "YulTypedName",
														"src": "11702:4:15",
														"type": ""
													}
												],
												"src": "11537:345:15"
											},
											{
												"body": {
													"nativeSrc": "12061:156:15",
													"nodeType": "YulBlock",
													"src": "12061:156:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12078:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "12078:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12089:2:15",
																		"nodeType": "YulLiteral",
																		"src": "12089:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12071:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "12071:6:15"
																},
																"nativeSrc": "12071:21:15",
																"nodeType": "YulFunctionCall",
																"src": "12071:21:15"
															},
															"nativeSrc": "12071:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "12071:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12112:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "12112:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12123:2:15",
																				"nodeType": "YulLiteral",
																				"src": "12123:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12108:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "12108:3:15"
																		},
																		"nativeSrc": "12108:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12108:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12128:1:15",
																		"nodeType": "YulLiteral",
																		"src": "12128:1:15",
																		"type": "",
																		"value": "7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12101:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "12101:6:15"
																},
																"nativeSrc": "12101:29:15",
																"nodeType": "YulFunctionCall",
																"src": "12101:29:15"
															},
															"nativeSrc": "12101:29:15",
															"nodeType": "YulExpressionStatement",
															"src": "12101:29:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12150:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "12150:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12161:2:15",
																				"nodeType": "YulLiteral",
																				"src": "12161:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12146:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "12146:3:15"
																		},
																		"nativeSrc": "12146:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12146:18:15"
																	},
																	{
																		"hexValue": "667265657a6564",
																		"kind": "string",
																		"nativeSrc": "12166:9:15",
																		"nodeType": "YulLiteral",
																		"src": "12166:9:15",
																		"type": "",
																		"value": "freezed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12139:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "12139:6:15"
																},
																"nativeSrc": "12139:37:15",
																"nodeType": "YulFunctionCall",
																"src": "12139:37:15"
															},
															"nativeSrc": "12139:37:15",
															"nodeType": "YulExpressionStatement",
															"src": "12139:37:15"
														},
														{
															"nativeSrc": "12185:26:15",
															"nodeType": "YulAssignment",
															"src": "12185:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12197:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "12197:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12208:2:15",
																		"nodeType": "YulLiteral",
																		"src": "12208:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12193:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "12193:3:15"
																},
																"nativeSrc": "12193:18:15",
																"nodeType": "YulFunctionCall",
																"src": "12193:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12185:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "12185:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5e1a07520dc062ba4ff449fce67822fde8495347c7d50898a83b1dfb63596097__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11887:330:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12038:9:15",
														"nodeType": "YulTypedName",
														"src": "12038:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12052:4:15",
														"nodeType": "YulTypedName",
														"src": "12052:4:15",
														"type": ""
													}
												],
												"src": "11887:330:15"
											},
											{
												"body": {
													"nativeSrc": "12396:170:15",
													"nodeType": "YulBlock",
													"src": "12396:170:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12413:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "12413:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12424:2:15",
																		"nodeType": "YulLiteral",
																		"src": "12424:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12406:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "12406:6:15"
																},
																"nativeSrc": "12406:21:15",
																"nodeType": "YulFunctionCall",
																"src": "12406:21:15"
															},
															"nativeSrc": "12406:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "12406:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12447:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "12447:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12458:2:15",
																				"nodeType": "YulLiteral",
																				"src": "12458:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12443:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "12443:3:15"
																		},
																		"nativeSrc": "12443:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12443:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12463:2:15",
																		"nodeType": "YulLiteral",
																		"src": "12463:2:15",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12436:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "12436:6:15"
																},
																"nativeSrc": "12436:30:15",
																"nodeType": "YulFunctionCall",
																"src": "12436:30:15"
															},
															"nativeSrc": "12436:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "12436:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12486:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "12486:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12497:2:15",
																				"nodeType": "YulLiteral",
																				"src": "12497:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12482:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "12482:3:15"
																		},
																		"nativeSrc": "12482:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12482:18:15"
																	},
																	{
																		"hexValue": "536f667420436170204e4f742052656163686564",
																		"kind": "string",
																		"nativeSrc": "12502:22:15",
																		"nodeType": "YulLiteral",
																		"src": "12502:22:15",
																		"type": "",
																		"value": "Soft Cap NOt Reached"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12475:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "12475:6:15"
																},
																"nativeSrc": "12475:50:15",
																"nodeType": "YulFunctionCall",
																"src": "12475:50:15"
															},
															"nativeSrc": "12475:50:15",
															"nodeType": "YulExpressionStatement",
															"src": "12475:50:15"
														},
														{
															"nativeSrc": "12534:26:15",
															"nodeType": "YulAssignment",
															"src": "12534:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12546:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "12546:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12557:2:15",
																		"nodeType": "YulLiteral",
																		"src": "12557:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12542:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "12542:3:15"
																},
																"nativeSrc": "12542:18:15",
																"nodeType": "YulFunctionCall",
																"src": "12542:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12534:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "12534:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0ac6ed66eb10da1daf17a818038873a6c51ace7271027943cc6a6f233843a4a5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12222:344:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12373:9:15",
														"nodeType": "YulTypedName",
														"src": "12373:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12387:4:15",
														"nodeType": "YulTypedName",
														"src": "12387:4:15",
														"type": ""
													}
												],
												"src": "12222:344:15"
											},
											{
												"body": {
													"nativeSrc": "12745:171:15",
													"nodeType": "YulBlock",
													"src": "12745:171:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12762:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "12762:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12773:2:15",
																		"nodeType": "YulLiteral",
																		"src": "12773:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12755:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "12755:6:15"
																},
																"nativeSrc": "12755:21:15",
																"nodeType": "YulFunctionCall",
																"src": "12755:21:15"
															},
															"nativeSrc": "12755:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "12755:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12796:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "12796:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12807:2:15",
																				"nodeType": "YulLiteral",
																				"src": "12807:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12792:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "12792:3:15"
																		},
																		"nativeSrc": "12792:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12792:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12812:2:15",
																		"nodeType": "YulLiteral",
																		"src": "12812:2:15",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12785:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "12785:6:15"
																},
																"nativeSrc": "12785:30:15",
																"nodeType": "YulFunctionCall",
																"src": "12785:30:15"
															},
															"nativeSrc": "12785:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "12785:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12835:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "12835:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12846:2:15",
																				"nodeType": "YulLiteral",
																				"src": "12846:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12831:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "12831:3:15"
																		},
																		"nativeSrc": "12831:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12831:18:15"
																	},
																	{
																		"hexValue": "41697264726f70206e6f7420636f6d706c65746564",
																		"kind": "string",
																		"nativeSrc": "12851:23:15",
																		"nodeType": "YulLiteral",
																		"src": "12851:23:15",
																		"type": "",
																		"value": "Airdrop not completed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12824:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "12824:6:15"
																},
																"nativeSrc": "12824:51:15",
																"nodeType": "YulFunctionCall",
																"src": "12824:51:15"
															},
															"nativeSrc": "12824:51:15",
															"nodeType": "YulExpressionStatement",
															"src": "12824:51:15"
														},
														{
															"nativeSrc": "12884:26:15",
															"nodeType": "YulAssignment",
															"src": "12884:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12896:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "12896:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12907:2:15",
																		"nodeType": "YulLiteral",
																		"src": "12907:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12892:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "12892:3:15"
																},
																"nativeSrc": "12892:18:15",
																"nodeType": "YulFunctionCall",
																"src": "12892:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12884:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "12884:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_aff7558382c088943ad2bf11af33e010b3e0eab9fe7e943d464ecefccf0c4c65__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12571:345:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12722:9:15",
														"nodeType": "YulTypedName",
														"src": "12722:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12736:4:15",
														"nodeType": "YulTypedName",
														"src": "12736:4:15",
														"type": ""
													}
												],
												"src": "12571:345:15"
											},
											{
												"body": {
													"nativeSrc": "13095:174:15",
													"nodeType": "YulBlock",
													"src": "13095:174:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13112:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "13112:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13123:2:15",
																		"nodeType": "YulLiteral",
																		"src": "13123:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13105:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "13105:6:15"
																},
																"nativeSrc": "13105:21:15",
																"nodeType": "YulFunctionCall",
																"src": "13105:21:15"
															},
															"nativeSrc": "13105:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "13105:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13146:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "13146:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13157:2:15",
																				"nodeType": "YulLiteral",
																				"src": "13157:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13142:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "13142:3:15"
																		},
																		"nativeSrc": "13142:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13142:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13162:2:15",
																		"nodeType": "YulLiteral",
																		"src": "13162:2:15",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13135:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "13135:6:15"
																},
																"nativeSrc": "13135:30:15",
																"nodeType": "YulFunctionCall",
																"src": "13135:30:15"
															},
															"nativeSrc": "13135:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "13135:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13185:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "13185:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13196:2:15",
																				"nodeType": "YulLiteral",
																				"src": "13196:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13181:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "13181:3:15"
																		},
																		"nativeSrc": "13181:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13181:18:15"
																	},
																	{
																		"hexValue": "496e76616c69642073746172742074696d652072616e6765",
																		"kind": "string",
																		"nativeSrc": "13201:26:15",
																		"nodeType": "YulLiteral",
																		"src": "13201:26:15",
																		"type": "",
																		"value": "Invalid start time range"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13174:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "13174:6:15"
																},
																"nativeSrc": "13174:54:15",
																"nodeType": "YulFunctionCall",
																"src": "13174:54:15"
															},
															"nativeSrc": "13174:54:15",
															"nodeType": "YulExpressionStatement",
															"src": "13174:54:15"
														},
														{
															"nativeSrc": "13237:26:15",
															"nodeType": "YulAssignment",
															"src": "13237:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13249:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "13249:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13260:2:15",
																		"nodeType": "YulLiteral",
																		"src": "13260:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13245:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "13245:3:15"
																},
																"nativeSrc": "13245:18:15",
																"nodeType": "YulFunctionCall",
																"src": "13245:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13237:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "13237:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a2d2e7a15f42f292e75295df8170c1409618a86fbef71da331c44b30609e3c68__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12921:348:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13072:9:15",
														"nodeType": "YulTypedName",
														"src": "13072:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13086:4:15",
														"nodeType": "YulTypedName",
														"src": "13086:4:15",
														"type": ""
													}
												],
												"src": "12921:348:15"
											},
											{
												"body": {
													"nativeSrc": "13322:77:15",
													"nodeType": "YulBlock",
													"src": "13322:77:15",
													"statements": [
														{
															"nativeSrc": "13332:16:15",
															"nodeType": "YulAssignment",
															"src": "13332:16:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13343:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "13343:1:15"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13346:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "13346:1:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13339:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "13339:3:15"
																},
																"nativeSrc": "13339:9:15",
																"nodeType": "YulFunctionCall",
																"src": "13339:9:15"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "13332:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "13332:3:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13371:22:15",
																"nodeType": "YulBlock",
																"src": "13371:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13373:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "13373:16:15"
																			},
																			"nativeSrc": "13373:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "13373:18:15"
																		},
																		"nativeSrc": "13373:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "13373:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13363:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "13363:1:15"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "13366:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "13366:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13360:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "13360:2:15"
																},
																"nativeSrc": "13360:10:15",
																"nodeType": "YulFunctionCall",
																"src": "13360:10:15"
															},
															"nativeSrc": "13357:36:15",
															"nodeType": "YulIf",
															"src": "13357:36:15"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "13274:125:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13305:1:15",
														"nodeType": "YulTypedName",
														"src": "13305:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13308:1:15",
														"nodeType": "YulTypedName",
														"src": "13308:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "13314:3:15",
														"nodeType": "YulTypedName",
														"src": "13314:3:15",
														"type": ""
													}
												],
												"src": "13274:125:15"
											},
											{
												"body": {
													"nativeSrc": "13561:162:15",
													"nodeType": "YulBlock",
													"src": "13561:162:15",
													"statements": [
														{
															"nativeSrc": "13571:26:15",
															"nodeType": "YulAssignment",
															"src": "13571:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13583:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "13583:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13594:2:15",
																		"nodeType": "YulLiteral",
																		"src": "13594:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13579:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "13579:3:15"
																},
																"nativeSrc": "13579:18:15",
																"nodeType": "YulFunctionCall",
																"src": "13579:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13571:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "13571:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13613:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "13613:9:15"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "13624:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "13624:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13606:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "13606:6:15"
																},
																"nativeSrc": "13606:25:15",
																"nodeType": "YulFunctionCall",
																"src": "13606:25:15"
															},
															"nativeSrc": "13606:25:15",
															"nodeType": "YulExpressionStatement",
															"src": "13606:25:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13651:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "13651:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13662:2:15",
																				"nodeType": "YulLiteral",
																				"src": "13662:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13647:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "13647:3:15"
																		},
																		"nativeSrc": "13647:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13647:18:15"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "13667:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "13667:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13640:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "13640:6:15"
																},
																"nativeSrc": "13640:34:15",
																"nodeType": "YulFunctionCall",
																"src": "13640:34:15"
															},
															"nativeSrc": "13640:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "13640:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13694:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "13694:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13705:2:15",
																				"nodeType": "YulLiteral",
																				"src": "13705:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13690:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "13690:3:15"
																		},
																		"nativeSrc": "13690:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13690:18:15"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "13710:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "13710:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13683:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "13683:6:15"
																},
																"nativeSrc": "13683:34:15",
																"nodeType": "YulFunctionCall",
																"src": "13683:34:15"
															},
															"nativeSrc": "13683:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "13683:34:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "13404:319:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13514:9:15",
														"nodeType": "YulTypedName",
														"src": "13514:9:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13525:6:15",
														"nodeType": "YulTypedName",
														"src": "13525:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13533:6:15",
														"nodeType": "YulTypedName",
														"src": "13533:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13541:6:15",
														"nodeType": "YulTypedName",
														"src": "13541:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13552:4:15",
														"nodeType": "YulTypedName",
														"src": "13552:4:15",
														"type": ""
													}
												],
												"src": "13404:319:15"
											},
											{
												"body": {
													"nativeSrc": "13902:167:15",
													"nodeType": "YulBlock",
													"src": "13902:167:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13919:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "13919:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13930:2:15",
																		"nodeType": "YulLiteral",
																		"src": "13930:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13912:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "13912:6:15"
																},
																"nativeSrc": "13912:21:15",
																"nodeType": "YulFunctionCall",
																"src": "13912:21:15"
															},
															"nativeSrc": "13912:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "13912:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13953:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "13953:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13964:2:15",
																				"nodeType": "YulLiteral",
																				"src": "13964:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13949:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "13949:3:15"
																		},
																		"nativeSrc": "13949:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13949:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13969:2:15",
																		"nodeType": "YulLiteral",
																		"src": "13969:2:15",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13942:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "13942:6:15"
																},
																"nativeSrc": "13942:30:15",
																"nodeType": "YulFunctionCall",
																"src": "13942:30:15"
															},
															"nativeSrc": "13942:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "13942:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13992:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "13992:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14003:2:15",
																				"nodeType": "YulLiteral",
																				"src": "14003:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13988:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "13988:3:15"
																		},
																		"nativeSrc": "13988:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13988:18:15"
																	},
																	{
																		"hexValue": "416c726561647920556e467265657a6564",
																		"kind": "string",
																		"nativeSrc": "14008:19:15",
																		"nodeType": "YulLiteral",
																		"src": "14008:19:15",
																		"type": "",
																		"value": "Already UnFreezed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13981:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "13981:6:15"
																},
																"nativeSrc": "13981:47:15",
																"nodeType": "YulFunctionCall",
																"src": "13981:47:15"
															},
															"nativeSrc": "13981:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "13981:47:15"
														},
														{
															"nativeSrc": "14037:26:15",
															"nodeType": "YulAssignment",
															"src": "14037:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14049:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "14049:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14060:2:15",
																		"nodeType": "YulLiteral",
																		"src": "14060:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14045:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "14045:3:15"
																},
																"nativeSrc": "14045:18:15",
																"nodeType": "YulFunctionCall",
																"src": "14045:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14037:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "14037:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_37095db391cf553f65f0eddf201a3c7bc5118c1120fca6827815be26758eff4c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13728:341:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13879:9:15",
														"nodeType": "YulTypedName",
														"src": "13879:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13893:4:15",
														"nodeType": "YulTypedName",
														"src": "13893:4:15",
														"type": ""
													}
												],
												"src": "13728:341:15"
											},
											{
												"body": {
													"nativeSrc": "14248:162:15",
													"nodeType": "YulBlock",
													"src": "14248:162:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14265:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "14265:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14276:2:15",
																		"nodeType": "YulLiteral",
																		"src": "14276:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14258:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "14258:6:15"
																},
																"nativeSrc": "14258:21:15",
																"nodeType": "YulFunctionCall",
																"src": "14258:21:15"
															},
															"nativeSrc": "14258:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "14258:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14299:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "14299:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14310:2:15",
																				"nodeType": "YulLiteral",
																				"src": "14310:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14295:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "14295:3:15"
																		},
																		"nativeSrc": "14295:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14295:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14315:2:15",
																		"nodeType": "YulLiteral",
																		"src": "14315:2:15",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14288:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "14288:6:15"
																},
																"nativeSrc": "14288:30:15",
																"nodeType": "YulFunctionCall",
																"src": "14288:30:15"
															},
															"nativeSrc": "14288:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "14288:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14338:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "14338:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14349:2:15",
																				"nodeType": "YulLiteral",
																				"src": "14349:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14334:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "14334:3:15"
																		},
																		"nativeSrc": "14334:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14334:18:15"
																	},
																	{
																		"hexValue": "53616c65206f6e676f696e67",
																		"kind": "string",
																		"nativeSrc": "14354:14:15",
																		"nodeType": "YulLiteral",
																		"src": "14354:14:15",
																		"type": "",
																		"value": "Sale ongoing"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14327:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "14327:6:15"
																},
																"nativeSrc": "14327:42:15",
																"nodeType": "YulFunctionCall",
																"src": "14327:42:15"
															},
															"nativeSrc": "14327:42:15",
															"nodeType": "YulExpressionStatement",
															"src": "14327:42:15"
														},
														{
															"nativeSrc": "14378:26:15",
															"nodeType": "YulAssignment",
															"src": "14378:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14390:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "14390:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14401:2:15",
																		"nodeType": "YulLiteral",
																		"src": "14401:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14386:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "14386:3:15"
																},
																"nativeSrc": "14386:18:15",
																"nodeType": "YulFunctionCall",
																"src": "14386:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14378:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "14378:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_52e3d128a4ea4439173e3f4b78f0e12548c2c4449a80c4b2fbefb1fd3e6a7665__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14074:336:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14225:9:15",
														"nodeType": "YulTypedName",
														"src": "14225:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14239:4:15",
														"nodeType": "YulTypedName",
														"src": "14239:4:15",
														"type": ""
													}
												],
												"src": "14074:336:15"
											},
											{
												"body": {
													"nativeSrc": "14589:166:15",
													"nodeType": "YulBlock",
													"src": "14589:166:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14606:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "14606:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14617:2:15",
																		"nodeType": "YulLiteral",
																		"src": "14617:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14599:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "14599:6:15"
																},
																"nativeSrc": "14599:21:15",
																"nodeType": "YulFunctionCall",
																"src": "14599:21:15"
															},
															"nativeSrc": "14599:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "14599:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14640:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "14640:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14651:2:15",
																				"nodeType": "YulLiteral",
																				"src": "14651:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14636:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "14636:3:15"
																		},
																		"nativeSrc": "14636:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14636:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14656:2:15",
																		"nodeType": "YulLiteral",
																		"src": "14656:2:15",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14629:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "14629:6:15"
																},
																"nativeSrc": "14629:30:15",
																"nodeType": "YulFunctionCall",
																"src": "14629:30:15"
															},
															"nativeSrc": "14629:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "14629:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14679:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "14679:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14690:2:15",
																				"nodeType": "YulLiteral",
																				"src": "14690:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14675:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "14675:3:15"
																		},
																		"nativeSrc": "14675:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14675:18:15"
																	},
																	{
																		"hexValue": "536f6674206361702072656163686564",
																		"kind": "string",
																		"nativeSrc": "14695:18:15",
																		"nodeType": "YulLiteral",
																		"src": "14695:18:15",
																		"type": "",
																		"value": "Soft cap reached"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14668:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "14668:6:15"
																},
																"nativeSrc": "14668:46:15",
																"nodeType": "YulFunctionCall",
																"src": "14668:46:15"
															},
															"nativeSrc": "14668:46:15",
															"nodeType": "YulExpressionStatement",
															"src": "14668:46:15"
														},
														{
															"nativeSrc": "14723:26:15",
															"nodeType": "YulAssignment",
															"src": "14723:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14735:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "14735:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14746:2:15",
																		"nodeType": "YulLiteral",
																		"src": "14746:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14731:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "14731:3:15"
																},
																"nativeSrc": "14731:18:15",
																"nodeType": "YulFunctionCall",
																"src": "14731:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14723:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "14723:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7c68e13a7a3bf736cdb65f14ebef38f840872b490e156aead879b05f23b99d80__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14415:340:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14566:9:15",
														"nodeType": "YulTypedName",
														"src": "14566:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14580:4:15",
														"nodeType": "YulTypedName",
														"src": "14580:4:15",
														"type": ""
													}
												],
												"src": "14415:340:15"
											},
											{
												"body": {
													"nativeSrc": "14792:95:15",
													"nodeType": "YulBlock",
													"src": "14792:95:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14809:1:15",
																		"nodeType": "YulLiteral",
																		"src": "14809:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "14816:3:15",
																				"nodeType": "YulLiteral",
																				"src": "14816:3:15",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14821:10:15",
																				"nodeType": "YulLiteral",
																				"src": "14821:10:15",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "14812:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "14812:3:15"
																		},
																		"nativeSrc": "14812:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14812:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14802:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "14802:6:15"
																},
																"nativeSrc": "14802:31:15",
																"nodeType": "YulFunctionCall",
																"src": "14802:31:15"
															},
															"nativeSrc": "14802:31:15",
															"nodeType": "YulExpressionStatement",
															"src": "14802:31:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14849:1:15",
																		"nodeType": "YulLiteral",
																		"src": "14849:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14852:4:15",
																		"nodeType": "YulLiteral",
																		"src": "14852:4:15",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14842:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "14842:6:15"
																},
																"nativeSrc": "14842:15:15",
																"nodeType": "YulFunctionCall",
																"src": "14842:15:15"
															},
															"nativeSrc": "14842:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "14842:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14873:1:15",
																		"nodeType": "YulLiteral",
																		"src": "14873:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14876:4:15",
																		"nodeType": "YulLiteral",
																		"src": "14876:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14866:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "14866:6:15"
																},
																"nativeSrc": "14866:15:15",
																"nodeType": "YulFunctionCall",
																"src": "14866:15:15"
															},
															"nativeSrc": "14866:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "14866:15:15"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "14760:127:15",
												"nodeType": "YulFunctionDefinition",
												"src": "14760:127:15"
											},
											{
												"body": {
													"nativeSrc": "15083:14:15",
													"nodeType": "YulBlock",
													"src": "15083:14:15",
													"statements": [
														{
															"nativeSrc": "15085:10:15",
															"nodeType": "YulAssignment",
															"src": "15085:10:15",
															"value": {
																"name": "pos",
																"nativeSrc": "15092:3:15",
																"nodeType": "YulIdentifier",
																"src": "15092:3:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15085:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "15085:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "14892:205:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15067:3:15",
														"nodeType": "YulTypedName",
														"src": "15067:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15075:3:15",
														"nodeType": "YulTypedName",
														"src": "15075:3:15",
														"type": ""
													}
												],
												"src": "14892:205:15"
											},
											{
												"body": {
													"nativeSrc": "15276:167:15",
													"nodeType": "YulBlock",
													"src": "15276:167:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15293:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "15293:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15304:2:15",
																		"nodeType": "YulLiteral",
																		"src": "15304:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15286:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "15286:6:15"
																},
																"nativeSrc": "15286:21:15",
																"nodeType": "YulFunctionCall",
																"src": "15286:21:15"
															},
															"nativeSrc": "15286:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "15286:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15327:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "15327:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15338:2:15",
																				"nodeType": "YulLiteral",
																				"src": "15338:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15323:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "15323:3:15"
																		},
																		"nativeSrc": "15323:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15323:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15343:2:15",
																		"nodeType": "YulLiteral",
																		"src": "15343:2:15",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15316:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "15316:6:15"
																},
																"nativeSrc": "15316:30:15",
																"nodeType": "YulFunctionCall",
																"src": "15316:30:15"
															},
															"nativeSrc": "15316:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "15316:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15366:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "15366:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15377:2:15",
																				"nodeType": "YulLiteral",
																				"src": "15377:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15362:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "15362:3:15"
																		},
																		"nativeSrc": "15362:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15362:18:15"
																	},
																	{
																		"hexValue": "424e4220726566756e64206661696c6564",
																		"kind": "string",
																		"nativeSrc": "15382:19:15",
																		"nodeType": "YulLiteral",
																		"src": "15382:19:15",
																		"type": "",
																		"value": "BNB refund failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15355:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "15355:6:15"
																},
																"nativeSrc": "15355:47:15",
																"nodeType": "YulFunctionCall",
																"src": "15355:47:15"
															},
															"nativeSrc": "15355:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "15355:47:15"
														},
														{
															"nativeSrc": "15411:26:15",
															"nodeType": "YulAssignment",
															"src": "15411:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15423:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "15423:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15434:2:15",
																		"nodeType": "YulLiteral",
																		"src": "15434:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15419:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "15419:3:15"
																},
																"nativeSrc": "15419:18:15",
																"nodeType": "YulFunctionCall",
																"src": "15419:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15411:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "15411:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9061bb5d1762fde4c9d1190b8ce0bd989de0debb196be3c053155f36b52a6ce0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15102:341:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15253:9:15",
														"nodeType": "YulTypedName",
														"src": "15253:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15267:4:15",
														"nodeType": "YulTypedName",
														"src": "15267:4:15",
														"type": ""
													}
												],
												"src": "15102:341:15"
											},
											{
												"body": {
													"nativeSrc": "15577:145:15",
													"nodeType": "YulBlock",
													"src": "15577:145:15",
													"statements": [
														{
															"nativeSrc": "15587:26:15",
															"nodeType": "YulAssignment",
															"src": "15587:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15599:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "15599:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15610:2:15",
																		"nodeType": "YulLiteral",
																		"src": "15610:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15595:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "15595:3:15"
																},
																"nativeSrc": "15595:18:15",
																"nodeType": "YulFunctionCall",
																"src": "15595:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15587:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "15587:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15629:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "15629:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "15644:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "15644:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "15660:3:15",
																								"nodeType": "YulLiteral",
																								"src": "15660:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "15665:1:15",
																								"nodeType": "YulLiteral",
																								"src": "15665:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "15656:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "15656:3:15"
																						},
																						"nativeSrc": "15656:11:15",
																						"nodeType": "YulFunctionCall",
																						"src": "15656:11:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "15669:1:15",
																						"nodeType": "YulLiteral",
																						"src": "15669:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "15652:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "15652:3:15"
																				},
																				"nativeSrc": "15652:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "15652:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "15640:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "15640:3:15"
																		},
																		"nativeSrc": "15640:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15640:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15622:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "15622:6:15"
																},
																"nativeSrc": "15622:51:15",
																"nodeType": "YulFunctionCall",
																"src": "15622:51:15"
															},
															"nativeSrc": "15622:51:15",
															"nodeType": "YulExpressionStatement",
															"src": "15622:51:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15693:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "15693:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15704:2:15",
																				"nodeType": "YulLiteral",
																				"src": "15704:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15689:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "15689:3:15"
																		},
																		"nativeSrc": "15689:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15689:18:15"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "15709:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "15709:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15682:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "15682:6:15"
																},
																"nativeSrc": "15682:34:15",
																"nodeType": "YulFunctionCall",
																"src": "15682:34:15"
															},
															"nativeSrc": "15682:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "15682:34:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "15448:274:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15538:9:15",
														"nodeType": "YulTypedName",
														"src": "15538:9:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15549:6:15",
														"nodeType": "YulTypedName",
														"src": "15549:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15557:6:15",
														"nodeType": "YulTypedName",
														"src": "15557:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15568:4:15",
														"nodeType": "YulTypedName",
														"src": "15568:4:15",
														"type": ""
													}
												],
												"src": "15448:274:15"
											},
											{
												"body": {
													"nativeSrc": "15805:199:15",
													"nodeType": "YulBlock",
													"src": "15805:199:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "15851:16:15",
																"nodeType": "YulBlock",
																"src": "15851:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "15860:1:15",
																					"nodeType": "YulLiteral",
																					"src": "15860:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15863:1:15",
																					"nodeType": "YulLiteral",
																					"src": "15863:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "15853:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "15853:6:15"
																			},
																			"nativeSrc": "15853:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "15853:12:15"
																		},
																		"nativeSrc": "15853:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "15853:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15826:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "15826:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15835:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "15835:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15822:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "15822:3:15"
																		},
																		"nativeSrc": "15822:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15822:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15847:2:15",
																		"nodeType": "YulLiteral",
																		"src": "15847:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "15818:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "15818:3:15"
																},
																"nativeSrc": "15818:32:15",
																"nodeType": "YulFunctionCall",
																"src": "15818:32:15"
															},
															"nativeSrc": "15815:52:15",
															"nodeType": "YulIf",
															"src": "15815:52:15"
														},
														{
															"nativeSrc": "15876:29:15",
															"nodeType": "YulVariableDeclaration",
															"src": "15876:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15895:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "15895:9:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "15889:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "15889:5:15"
																},
																"nativeSrc": "15889:16:15",
																"nodeType": "YulFunctionCall",
																"src": "15889:16:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "15880:5:15",
																	"nodeType": "YulTypedName",
																	"src": "15880:5:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15958:16:15",
																"nodeType": "YulBlock",
																"src": "15958:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "15967:1:15",
																					"nodeType": "YulLiteral",
																					"src": "15967:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15970:1:15",
																					"nodeType": "YulLiteral",
																					"src": "15970:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "15960:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "15960:6:15"
																			},
																			"nativeSrc": "15960:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "15960:12:15"
																		},
																		"nativeSrc": "15960:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "15960:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "15927:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "15927:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "15948:5:15",
																								"nodeType": "YulIdentifier",
																								"src": "15948:5:15"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "15941:6:15",
																							"nodeType": "YulIdentifier",
																							"src": "15941:6:15"
																						},
																						"nativeSrc": "15941:13:15",
																						"nodeType": "YulFunctionCall",
																						"src": "15941:13:15"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "15934:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "15934:6:15"
																				},
																				"nativeSrc": "15934:21:15",
																				"nodeType": "YulFunctionCall",
																				"src": "15934:21:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "15924:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "15924:2:15"
																		},
																		"nativeSrc": "15924:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15924:32:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "15917:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "15917:6:15"
																},
																"nativeSrc": "15917:40:15",
																"nodeType": "YulFunctionCall",
																"src": "15917:40:15"
															},
															"nativeSrc": "15914:60:15",
															"nodeType": "YulIf",
															"src": "15914:60:15"
														},
														{
															"nativeSrc": "15983:15:15",
															"nodeType": "YulAssignment",
															"src": "15983:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "15993:5:15",
																"nodeType": "YulIdentifier",
																"src": "15993:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "15983:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "15983:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "15727:277:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15771:9:15",
														"nodeType": "YulTypedName",
														"src": "15771:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "15782:7:15",
														"nodeType": "YulTypedName",
														"src": "15782:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "15794:6:15",
														"nodeType": "YulTypedName",
														"src": "15794:6:15",
														"type": ""
													}
												],
												"src": "15727:277:15"
											},
											{
												"body": {
													"nativeSrc": "16183:174:15",
													"nodeType": "YulBlock",
													"src": "16183:174:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16200:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "16200:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16211:2:15",
																		"nodeType": "YulLiteral",
																		"src": "16211:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16193:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "16193:6:15"
																},
																"nativeSrc": "16193:21:15",
																"nodeType": "YulFunctionCall",
																"src": "16193:21:15"
															},
															"nativeSrc": "16193:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "16193:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16234:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "16234:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16245:2:15",
																				"nodeType": "YulLiteral",
																				"src": "16245:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16230:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16230:3:15"
																		},
																		"nativeSrc": "16230:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16230:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16250:2:15",
																		"nodeType": "YulLiteral",
																		"src": "16250:2:15",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16223:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "16223:6:15"
																},
																"nativeSrc": "16223:30:15",
																"nodeType": "YulFunctionCall",
																"src": "16223:30:15"
															},
															"nativeSrc": "16223:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "16223:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16273:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "16273:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16284:2:15",
																				"nodeType": "YulLiteral",
																				"src": "16284:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16269:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16269:3:15"
																		},
																		"nativeSrc": "16269:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16269:18:15"
																	},
																	{
																		"hexValue": "537461626c65636f696e20726566756e64206661696c6564",
																		"kind": "string",
																		"nativeSrc": "16289:26:15",
																		"nodeType": "YulLiteral",
																		"src": "16289:26:15",
																		"type": "",
																		"value": "Stablecoin refund failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16262:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "16262:6:15"
																},
																"nativeSrc": "16262:54:15",
																"nodeType": "YulFunctionCall",
																"src": "16262:54:15"
															},
															"nativeSrc": "16262:54:15",
															"nodeType": "YulExpressionStatement",
															"src": "16262:54:15"
														},
														{
															"nativeSrc": "16325:26:15",
															"nodeType": "YulAssignment",
															"src": "16325:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16337:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "16337:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16348:2:15",
																		"nodeType": "YulLiteral",
																		"src": "16348:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16333:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "16333:3:15"
																},
																"nativeSrc": "16333:18:15",
																"nodeType": "YulFunctionCall",
																"src": "16333:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16325:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "16325:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4c76e179fd3981278de294ff97a7ccb030d7577d0e7f55ac3f87e02e3abaa726__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16009:348:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16160:9:15",
														"nodeType": "YulTypedName",
														"src": "16160:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16174:4:15",
														"nodeType": "YulTypedName",
														"src": "16174:4:15",
														"type": ""
													}
												],
												"src": "16009:348:15"
											},
											{
												"body": {
													"nativeSrc": "16417:186:15",
													"nodeType": "YulBlock",
													"src": "16417:186:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "16459:111:15",
																"nodeType": "YulBlock",
																"src": "16459:111:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "16480:1:15",
																					"nodeType": "YulLiteral",
																					"src": "16480:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "16487:3:15",
																							"nodeType": "YulLiteral",
																							"src": "16487:3:15",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "16492:10:15",
																							"nodeType": "YulLiteral",
																							"src": "16492:10:15",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "16483:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "16483:3:15"
																					},
																					"nativeSrc": "16483:20:15",
																					"nodeType": "YulFunctionCall",
																					"src": "16483:20:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "16473:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "16473:6:15"
																			},
																			"nativeSrc": "16473:31:15",
																			"nodeType": "YulFunctionCall",
																			"src": "16473:31:15"
																		},
																		"nativeSrc": "16473:31:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "16473:31:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "16524:1:15",
																					"nodeType": "YulLiteral",
																					"src": "16524:1:15",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "16527:4:15",
																					"nodeType": "YulLiteral",
																					"src": "16527:4:15",
																					"type": "",
																					"value": "0x21"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "16517:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "16517:6:15"
																			},
																			"nativeSrc": "16517:15:15",
																			"nodeType": "YulFunctionCall",
																			"src": "16517:15:15"
																		},
																		"nativeSrc": "16517:15:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "16517:15:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "16552:1:15",
																					"nodeType": "YulLiteral",
																					"src": "16552:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "16555:4:15",
																					"nodeType": "YulLiteral",
																					"src": "16555:4:15",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "16545:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "16545:6:15"
																			},
																			"nativeSrc": "16545:15:15",
																			"nodeType": "YulFunctionCall",
																			"src": "16545:15:15"
																		},
																		"nativeSrc": "16545:15:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "16545:15:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "16440:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "16440:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16447:1:15",
																				"nodeType": "YulLiteral",
																				"src": "16447:1:15",
																				"type": "",
																				"value": "3"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "16437:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "16437:2:15"
																		},
																		"nativeSrc": "16437:12:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16437:12:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "16430:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "16430:6:15"
																},
																"nativeSrc": "16430:20:15",
																"nodeType": "YulFunctionCall",
																"src": "16430:20:15"
															},
															"nativeSrc": "16427:143:15",
															"nodeType": "YulIf",
															"src": "16427:143:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16586:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "16586:3:15"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "16591:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "16591:5:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16579:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "16579:6:15"
																},
																"nativeSrc": "16579:18:15",
																"nodeType": "YulFunctionCall",
																"src": "16579:18:15"
															},
															"nativeSrc": "16579:18:15",
															"nodeType": "YulExpressionStatement",
															"src": "16579:18:15"
														}
													]
												},
												"name": "abi_encode_enum_PaymentMethod",
												"nativeSrc": "16362:241:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16401:5:15",
														"nodeType": "YulTypedName",
														"src": "16401:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "16408:3:15",
														"nodeType": "YulTypedName",
														"src": "16408:3:15",
														"type": ""
													}
												],
												"src": "16362:241:15"
											},
											{
												"body": {
													"nativeSrc": "16753:142:15",
													"nodeType": "YulBlock",
													"src": "16753:142:15",
													"statements": [
														{
															"nativeSrc": "16763:26:15",
															"nodeType": "YulAssignment",
															"src": "16763:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16775:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "16775:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16786:2:15",
																		"nodeType": "YulLiteral",
																		"src": "16786:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16771:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "16771:3:15"
																},
																"nativeSrc": "16771:18:15",
																"nodeType": "YulFunctionCall",
																"src": "16771:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16763:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "16763:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16805:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "16805:9:15"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "16816:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "16816:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16798:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "16798:6:15"
																},
																"nativeSrc": "16798:25:15",
																"nodeType": "YulFunctionCall",
																"src": "16798:25:15"
															},
															"nativeSrc": "16798:25:15",
															"nodeType": "YulExpressionStatement",
															"src": "16798:25:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "16862:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "16862:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16874:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "16874:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16885:2:15",
																				"nodeType": "YulLiteral",
																				"src": "16885:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16870:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16870:3:15"
																		},
																		"nativeSrc": "16870:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16870:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_enum_PaymentMethod",
																	"nativeSrc": "16832:29:15",
																	"nodeType": "YulIdentifier",
																	"src": "16832:29:15"
																},
																"nativeSrc": "16832:57:15",
																"nodeType": "YulFunctionCall",
																"src": "16832:57:15"
															},
															"nativeSrc": "16832:57:15",
															"nodeType": "YulExpressionStatement",
															"src": "16832:57:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_enum$_PaymentMethod_$1706__to_t_uint256_t_uint8__fromStack_reversed",
												"nativeSrc": "16608:287:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16714:9:15",
														"nodeType": "YulTypedName",
														"src": "16714:9:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16725:6:15",
														"nodeType": "YulTypedName",
														"src": "16725:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16733:6:15",
														"nodeType": "YulTypedName",
														"src": "16733:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16744:4:15",
														"nodeType": "YulTypedName",
														"src": "16744:4:15",
														"type": ""
													}
												],
												"src": "16608:287:15"
											},
											{
												"body": {
													"nativeSrc": "16932:95:15",
													"nodeType": "YulBlock",
													"src": "16932:95:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16949:1:15",
																		"nodeType": "YulLiteral",
																		"src": "16949:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "16956:3:15",
																				"nodeType": "YulLiteral",
																				"src": "16956:3:15",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16961:10:15",
																				"nodeType": "YulLiteral",
																				"src": "16961:10:15",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "16952:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16952:3:15"
																		},
																		"nativeSrc": "16952:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16952:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16942:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "16942:6:15"
																},
																"nativeSrc": "16942:31:15",
																"nodeType": "YulFunctionCall",
																"src": "16942:31:15"
															},
															"nativeSrc": "16942:31:15",
															"nodeType": "YulExpressionStatement",
															"src": "16942:31:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16989:1:15",
																		"nodeType": "YulLiteral",
																		"src": "16989:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16992:4:15",
																		"nodeType": "YulLiteral",
																		"src": "16992:4:15",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16982:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "16982:6:15"
																},
																"nativeSrc": "16982:15:15",
																"nodeType": "YulFunctionCall",
																"src": "16982:15:15"
															},
															"nativeSrc": "16982:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "16982:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17013:1:15",
																		"nodeType": "YulLiteral",
																		"src": "17013:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17016:4:15",
																		"nodeType": "YulLiteral",
																		"src": "17016:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "17006:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "17006:6:15"
																},
																"nativeSrc": "17006:15:15",
																"nodeType": "YulFunctionCall",
																"src": "17006:15:15"
															},
															"nativeSrc": "17006:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "17006:15:15"
														}
													]
												},
												"name": "panic_error_0x31",
												"nativeSrc": "16900:127:15",
												"nodeType": "YulFunctionDefinition",
												"src": "16900:127:15"
											},
											{
												"body": {
													"nativeSrc": "17079:89:15",
													"nodeType": "YulBlock",
													"src": "17079:89:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "17106:22:15",
																"nodeType": "YulBlock",
																"src": "17106:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "17108:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "17108:16:15"
																			},
																			"nativeSrc": "17108:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "17108:18:15"
																		},
																		"nativeSrc": "17108:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "17108:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17099:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "17099:5:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "17092:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "17092:6:15"
																},
																"nativeSrc": "17092:13:15",
																"nodeType": "YulFunctionCall",
																"src": "17092:13:15"
															},
															"nativeSrc": "17089:39:15",
															"nodeType": "YulIf",
															"src": "17089:39:15"
														},
														{
															"nativeSrc": "17137:25:15",
															"nodeType": "YulAssignment",
															"src": "17137:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17148:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "17148:5:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "17159:1:15",
																				"nodeType": "YulLiteral",
																				"src": "17159:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "17155:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "17155:3:15"
																		},
																		"nativeSrc": "17155:6:15",
																		"nodeType": "YulFunctionCall",
																		"src": "17155:6:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17144:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "17144:3:15"
																},
																"nativeSrc": "17144:18:15",
																"nodeType": "YulFunctionCall",
																"src": "17144:18:15"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "17137:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "17137:3:15"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nativeSrc": "17032:136:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17061:5:15",
														"nodeType": "YulTypedName",
														"src": "17061:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "17071:3:15",
														"nodeType": "YulTypedName",
														"src": "17071:3:15",
														"type": ""
													}
												],
												"src": "17032:136:15"
											},
											{
												"body": {
													"nativeSrc": "17347:175:15",
													"nodeType": "YulBlock",
													"src": "17347:175:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17364:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "17364:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17375:2:15",
																		"nodeType": "YulLiteral",
																		"src": "17375:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17357:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "17357:6:15"
																},
																"nativeSrc": "17357:21:15",
																"nodeType": "YulFunctionCall",
																"src": "17357:21:15"
															},
															"nativeSrc": "17357:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "17357:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17398:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "17398:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17409:2:15",
																				"nodeType": "YulLiteral",
																				"src": "17409:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17394:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "17394:3:15"
																		},
																		"nativeSrc": "17394:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "17394:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17414:2:15",
																		"nodeType": "YulLiteral",
																		"src": "17414:2:15",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17387:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "17387:6:15"
																},
																"nativeSrc": "17387:30:15",
																"nodeType": "YulFunctionCall",
																"src": "17387:30:15"
															},
															"nativeSrc": "17387:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "17387:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17437:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "17437:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17448:2:15",
																				"nodeType": "YulLiteral",
																				"src": "17448:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17433:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "17433:3:15"
																		},
																		"nativeSrc": "17433:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "17433:18:15"
																	},
																	{
																		"hexValue": "41697264726f7020616c726561647920636f6d706c65746564",
																		"kind": "string",
																		"nativeSrc": "17453:27:15",
																		"nodeType": "YulLiteral",
																		"src": "17453:27:15",
																		"type": "",
																		"value": "Airdrop already completed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17426:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "17426:6:15"
																},
																"nativeSrc": "17426:55:15",
																"nodeType": "YulFunctionCall",
																"src": "17426:55:15"
															},
															"nativeSrc": "17426:55:15",
															"nodeType": "YulExpressionStatement",
															"src": "17426:55:15"
														},
														{
															"nativeSrc": "17490:26:15",
															"nodeType": "YulAssignment",
															"src": "17490:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17502:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "17502:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17513:2:15",
																		"nodeType": "YulLiteral",
																		"src": "17513:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17498:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "17498:3:15"
																},
																"nativeSrc": "17498:18:15",
																"nodeType": "YulFunctionCall",
																"src": "17498:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17490:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "17490:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_35194372afc15163c58aa5af5530ba0e7f2576a9d985e6f8d166066860d6966a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17173:349:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17324:9:15",
														"nodeType": "YulTypedName",
														"src": "17324:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17338:4:15",
														"nodeType": "YulTypedName",
														"src": "17338:4:15",
														"type": ""
													}
												],
												"src": "17173:349:15"
											},
											{
												"body": {
													"nativeSrc": "17608:149:15",
													"nodeType": "YulBlock",
													"src": "17608:149:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "17654:16:15",
																"nodeType": "YulBlock",
																"src": "17654:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "17663:1:15",
																					"nodeType": "YulLiteral",
																					"src": "17663:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "17666:1:15",
																					"nodeType": "YulLiteral",
																					"src": "17666:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "17656:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "17656:6:15"
																			},
																			"nativeSrc": "17656:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "17656:12:15"
																		},
																		"nativeSrc": "17656:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "17656:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17629:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "17629:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17638:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "17638:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17625:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "17625:3:15"
																		},
																		"nativeSrc": "17625:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "17625:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17650:2:15",
																		"nodeType": "YulLiteral",
																		"src": "17650:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "17621:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "17621:3:15"
																},
																"nativeSrc": "17621:32:15",
																"nodeType": "YulFunctionCall",
																"src": "17621:32:15"
															},
															"nativeSrc": "17618:52:15",
															"nodeType": "YulIf",
															"src": "17618:52:15"
														},
														{
															"nativeSrc": "17679:14:15",
															"nodeType": "YulVariableDeclaration",
															"src": "17679:14:15",
															"value": {
																"kind": "number",
																"nativeSrc": "17692:1:15",
																"nodeType": "YulLiteral",
																"src": "17692:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "17683:5:15",
																	"nodeType": "YulTypedName",
																	"src": "17683:5:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "17702:25:15",
															"nodeType": "YulAssignment",
															"src": "17702:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17717:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "17717:9:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "17711:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "17711:5:15"
																},
																"nativeSrc": "17711:16:15",
																"nodeType": "YulFunctionCall",
																"src": "17711:16:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "17702:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "17702:5:15"
																}
															]
														},
														{
															"nativeSrc": "17736:15:15",
															"nodeType": "YulAssignment",
															"src": "17736:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "17746:5:15",
																"nodeType": "YulIdentifier",
																"src": "17746:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "17736:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "17736:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "17527:230:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17574:9:15",
														"nodeType": "YulTypedName",
														"src": "17574:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "17585:7:15",
														"nodeType": "YulTypedName",
														"src": "17585:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "17597:6:15",
														"nodeType": "YulTypedName",
														"src": "17597:6:15",
														"type": ""
													}
												],
												"src": "17527:230:15"
											},
											{
												"body": {
													"nativeSrc": "17936:168:15",
													"nodeType": "YulBlock",
													"src": "17936:168:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17953:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "17953:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17964:2:15",
																		"nodeType": "YulLiteral",
																		"src": "17964:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17946:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "17946:6:15"
																},
																"nativeSrc": "17946:21:15",
																"nodeType": "YulFunctionCall",
																"src": "17946:21:15"
															},
															"nativeSrc": "17946:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "17946:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17987:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "17987:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17998:2:15",
																				"nodeType": "YulLiteral",
																				"src": "17998:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17983:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "17983:3:15"
																		},
																		"nativeSrc": "17983:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "17983:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18003:2:15",
																		"nodeType": "YulLiteral",
																		"src": "18003:2:15",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17976:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "17976:6:15"
																},
																"nativeSrc": "17976:30:15",
																"nodeType": "YulFunctionCall",
																"src": "17976:30:15"
															},
															"nativeSrc": "17976:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "17976:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18026:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "18026:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18037:2:15",
																				"nodeType": "YulLiteral",
																				"src": "18037:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18022:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "18022:3:15"
																		},
																		"nativeSrc": "18022:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "18022:18:15"
																	},
																	{
																		"hexValue": "496e73756666696369656e742046756e6473",
																		"kind": "string",
																		"nativeSrc": "18042:20:15",
																		"nodeType": "YulLiteral",
																		"src": "18042:20:15",
																		"type": "",
																		"value": "Insufficient Funds"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18015:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "18015:6:15"
																},
																"nativeSrc": "18015:48:15",
																"nodeType": "YulFunctionCall",
																"src": "18015:48:15"
															},
															"nativeSrc": "18015:48:15",
															"nodeType": "YulExpressionStatement",
															"src": "18015:48:15"
														},
														{
															"nativeSrc": "18072:26:15",
															"nodeType": "YulAssignment",
															"src": "18072:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18084:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "18084:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18095:2:15",
																		"nodeType": "YulLiteral",
																		"src": "18095:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18080:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "18080:3:15"
																},
																"nativeSrc": "18080:18:15",
																"nodeType": "YulFunctionCall",
																"src": "18080:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18072:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "18072:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17762:342:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17913:9:15",
														"nodeType": "YulTypedName",
														"src": "17913:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17927:4:15",
														"nodeType": "YulTypedName",
														"src": "17927:4:15",
														"type": ""
													}
												],
												"src": "17762:342:15"
											},
											{
												"body": {
													"nativeSrc": "18266:214:15",
													"nodeType": "YulBlock",
													"src": "18266:214:15",
													"statements": [
														{
															"nativeSrc": "18276:26:15",
															"nodeType": "YulAssignment",
															"src": "18276:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18288:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "18288:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18299:2:15",
																		"nodeType": "YulLiteral",
																		"src": "18299:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18284:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "18284:3:15"
																},
																"nativeSrc": "18284:18:15",
																"nodeType": "YulFunctionCall",
																"src": "18284:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18276:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "18276:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18318:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "18318:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "18333:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "18333:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "18349:3:15",
																								"nodeType": "YulLiteral",
																								"src": "18349:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "18354:1:15",
																								"nodeType": "YulLiteral",
																								"src": "18354:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "18345:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "18345:3:15"
																						},
																						"nativeSrc": "18345:11:15",
																						"nodeType": "YulFunctionCall",
																						"src": "18345:11:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "18358:1:15",
																						"nodeType": "YulLiteral",
																						"src": "18358:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "18341:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "18341:3:15"
																				},
																				"nativeSrc": "18341:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "18341:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "18329:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "18329:3:15"
																		},
																		"nativeSrc": "18329:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "18329:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18311:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "18311:6:15"
																},
																"nativeSrc": "18311:51:15",
																"nodeType": "YulFunctionCall",
																"src": "18311:51:15"
															},
															"nativeSrc": "18311:51:15",
															"nodeType": "YulExpressionStatement",
															"src": "18311:51:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18382:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "18382:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18393:2:15",
																				"nodeType": "YulLiteral",
																				"src": "18393:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18378:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "18378:3:15"
																		},
																		"nativeSrc": "18378:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "18378:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "18402:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "18402:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "18418:3:15",
																								"nodeType": "YulLiteral",
																								"src": "18418:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "18423:1:15",
																								"nodeType": "YulLiteral",
																								"src": "18423:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "18414:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "18414:3:15"
																						},
																						"nativeSrc": "18414:11:15",
																						"nodeType": "YulFunctionCall",
																						"src": "18414:11:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "18427:1:15",
																						"nodeType": "YulLiteral",
																						"src": "18427:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "18410:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "18410:3:15"
																				},
																				"nativeSrc": "18410:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "18410:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "18398:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "18398:3:15"
																		},
																		"nativeSrc": "18398:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "18398:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18371:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "18371:6:15"
																},
																"nativeSrc": "18371:60:15",
																"nodeType": "YulFunctionCall",
																"src": "18371:60:15"
															},
															"nativeSrc": "18371:60:15",
															"nodeType": "YulExpressionStatement",
															"src": "18371:60:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18451:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "18451:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18462:2:15",
																				"nodeType": "YulLiteral",
																				"src": "18462:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18447:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "18447:3:15"
																		},
																		"nativeSrc": "18447:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "18447:18:15"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "18467:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "18467:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18440:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "18440:6:15"
																},
																"nativeSrc": "18440:34:15",
																"nodeType": "YulFunctionCall",
																"src": "18440:34:15"
															},
															"nativeSrc": "18440:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "18440:34:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "18109:371:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18219:9:15",
														"nodeType": "YulTypedName",
														"src": "18219:9:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "18230:6:15",
														"nodeType": "YulTypedName",
														"src": "18230:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18238:6:15",
														"nodeType": "YulTypedName",
														"src": "18238:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18246:6:15",
														"nodeType": "YulTypedName",
														"src": "18246:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18257:4:15",
														"nodeType": "YulTypedName",
														"src": "18257:4:15",
														"type": ""
													}
												],
												"src": "18109:371:15"
											},
											{
												"body": {
													"nativeSrc": "18659:171:15",
													"nodeType": "YulBlock",
													"src": "18659:171:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18676:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "18676:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18687:2:15",
																		"nodeType": "YulLiteral",
																		"src": "18687:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18669:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "18669:6:15"
																},
																"nativeSrc": "18669:21:15",
																"nodeType": "YulFunctionCall",
																"src": "18669:21:15"
															},
															"nativeSrc": "18669:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "18669:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18710:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "18710:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18721:2:15",
																				"nodeType": "YulLiteral",
																				"src": "18721:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18706:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "18706:3:15"
																		},
																		"nativeSrc": "18706:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "18706:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18726:2:15",
																		"nodeType": "YulLiteral",
																		"src": "18726:2:15",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18699:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "18699:6:15"
																},
																"nativeSrc": "18699:30:15",
																"nodeType": "YulFunctionCall",
																"src": "18699:30:15"
															},
															"nativeSrc": "18699:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "18699:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18749:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "18749:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18760:2:15",
																				"nodeType": "YulLiteral",
																				"src": "18760:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18745:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "18745:3:15"
																		},
																		"nativeSrc": "18745:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "18745:18:15"
																	},
																	{
																		"hexValue": "546f6b656e207472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "18765:23:15",
																		"nodeType": "YulLiteral",
																		"src": "18765:23:15",
																		"type": "",
																		"value": "Token transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18738:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "18738:6:15"
																},
																"nativeSrc": "18738:51:15",
																"nodeType": "YulFunctionCall",
																"src": "18738:51:15"
															},
															"nativeSrc": "18738:51:15",
															"nodeType": "YulExpressionStatement",
															"src": "18738:51:15"
														},
														{
															"nativeSrc": "18798:26:15",
															"nodeType": "YulAssignment",
															"src": "18798:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18810:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "18810:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18821:2:15",
																		"nodeType": "YulLiteral",
																		"src": "18821:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18806:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "18806:3:15"
																},
																"nativeSrc": "18806:18:15",
																"nodeType": "YulFunctionCall",
																"src": "18806:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18798:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "18798:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18485:345:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18636:9:15",
														"nodeType": "YulTypedName",
														"src": "18636:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18650:4:15",
														"nodeType": "YulTypedName",
														"src": "18650:4:15",
														"type": ""
													}
												],
												"src": "18485:345:15"
											},
											{
												"body": {
													"nativeSrc": "19009:173:15",
													"nodeType": "YulBlock",
													"src": "19009:173:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19026:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "19026:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19037:2:15",
																		"nodeType": "YulLiteral",
																		"src": "19037:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19019:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "19019:6:15"
																},
																"nativeSrc": "19019:21:15",
																"nodeType": "YulFunctionCall",
																"src": "19019:21:15"
															},
															"nativeSrc": "19019:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "19019:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19060:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "19060:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19071:2:15",
																				"nodeType": "YulLiteral",
																				"src": "19071:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19056:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "19056:3:15"
																		},
																		"nativeSrc": "19056:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "19056:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19076:2:15",
																		"nodeType": "YulLiteral",
																		"src": "19076:2:15",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19049:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "19049:6:15"
																},
																"nativeSrc": "19049:30:15",
																"nodeType": "YulFunctionCall",
																"src": "19049:30:15"
															},
															"nativeSrc": "19049:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "19049:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19099:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "19099:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19110:2:15",
																				"nodeType": "YulLiteral",
																				"src": "19110:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19095:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "19095:3:15"
																		},
																		"nativeSrc": "19095:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "19095:18:15"
																	},
																	{
																		"hexValue": "4f776e65722063616e6e6f742062757920746f6b656e73",
																		"kind": "string",
																		"nativeSrc": "19115:25:15",
																		"nodeType": "YulLiteral",
																		"src": "19115:25:15",
																		"type": "",
																		"value": "Owner cannot buy tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19088:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "19088:6:15"
																},
																"nativeSrc": "19088:53:15",
																"nodeType": "YulFunctionCall",
																"src": "19088:53:15"
															},
															"nativeSrc": "19088:53:15",
															"nodeType": "YulExpressionStatement",
															"src": "19088:53:15"
														},
														{
															"nativeSrc": "19150:26:15",
															"nodeType": "YulAssignment",
															"src": "19150:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19162:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "19162:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19173:2:15",
																		"nodeType": "YulLiteral",
																		"src": "19173:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19158:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "19158:3:15"
																},
																"nativeSrc": "19158:18:15",
																"nodeType": "YulFunctionCall",
																"src": "19158:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19150:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "19150:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6074d909f1c7eb2393bdf1029d0b7e2b2329445b551a02e61050a4a408023785__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18835:347:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18986:9:15",
														"nodeType": "YulTypedName",
														"src": "18986:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19000:4:15",
														"nodeType": "YulTypedName",
														"src": "19000:4:15",
														"type": ""
													}
												],
												"src": "18835:347:15"
											},
											{
												"body": {
													"nativeSrc": "19361:156:15",
													"nodeType": "YulBlock",
													"src": "19361:156:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19378:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "19378:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19389:2:15",
																		"nodeType": "YulLiteral",
																		"src": "19389:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19371:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "19371:6:15"
																},
																"nativeSrc": "19371:21:15",
																"nodeType": "YulFunctionCall",
																"src": "19371:21:15"
															},
															"nativeSrc": "19371:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "19371:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19412:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "19412:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19423:2:15",
																				"nodeType": "YulLiteral",
																				"src": "19423:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19408:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "19408:3:15"
																		},
																		"nativeSrc": "19408:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "19408:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19428:1:15",
																		"nodeType": "YulLiteral",
																		"src": "19428:1:15",
																		"type": "",
																		"value": "7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19401:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "19401:6:15"
																},
																"nativeSrc": "19401:29:15",
																"nodeType": "YulFunctionCall",
																"src": "19401:29:15"
															},
															"nativeSrc": "19401:29:15",
															"nodeType": "YulExpressionStatement",
															"src": "19401:29:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19450:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "19450:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19461:2:15",
																				"nodeType": "YulLiteral",
																				"src": "19461:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19446:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "19446:3:15"
																		},
																		"nativeSrc": "19446:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "19446:18:15"
																	},
																	{
																		"hexValue": "4e6f2073616c65",
																		"kind": "string",
																		"nativeSrc": "19466:9:15",
																		"nodeType": "YulLiteral",
																		"src": "19466:9:15",
																		"type": "",
																		"value": "No sale"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19439:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "19439:6:15"
																},
																"nativeSrc": "19439:37:15",
																"nodeType": "YulFunctionCall",
																"src": "19439:37:15"
															},
															"nativeSrc": "19439:37:15",
															"nodeType": "YulExpressionStatement",
															"src": "19439:37:15"
														},
														{
															"nativeSrc": "19485:26:15",
															"nodeType": "YulAssignment",
															"src": "19485:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19497:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "19497:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19508:2:15",
																		"nodeType": "YulLiteral",
																		"src": "19508:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19493:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "19493:3:15"
																},
																"nativeSrc": "19493:18:15",
																"nodeType": "YulFunctionCall",
																"src": "19493:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19485:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "19485:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_745b7c27209a9df0afa3e1a0af6f3a48dc087e43ee7b30261a0fc4b9578e75a7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19187:330:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19338:9:15",
														"nodeType": "YulTypedName",
														"src": "19338:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19352:4:15",
														"nodeType": "YulTypedName",
														"src": "19352:4:15",
														"type": ""
													}
												],
												"src": "19187:330:15"
											},
											{
												"body": {
													"nativeSrc": "19696:172:15",
													"nodeType": "YulBlock",
													"src": "19696:172:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19713:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "19713:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19724:2:15",
																		"nodeType": "YulLiteral",
																		"src": "19724:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19706:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "19706:6:15"
																},
																"nativeSrc": "19706:21:15",
																"nodeType": "YulFunctionCall",
																"src": "19706:21:15"
															},
															"nativeSrc": "19706:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "19706:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19747:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "19747:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19758:2:15",
																				"nodeType": "YulLiteral",
																				"src": "19758:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19743:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "19743:3:15"
																		},
																		"nativeSrc": "19743:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "19743:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19763:2:15",
																		"nodeType": "YulLiteral",
																		"src": "19763:2:15",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19736:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "19736:6:15"
																},
																"nativeSrc": "19736:30:15",
																"nodeType": "YulFunctionCall",
																"src": "19736:30:15"
															},
															"nativeSrc": "19736:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "19736:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19786:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "19786:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19797:2:15",
																				"nodeType": "YulLiteral",
																				"src": "19797:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19782:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "19782:3:15"
																		},
																		"nativeSrc": "19782:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "19782:18:15"
																	},
																	{
																		"hexValue": "53616c6520616c72656164792066696e616c697a6564",
																		"kind": "string",
																		"nativeSrc": "19802:24:15",
																		"nodeType": "YulLiteral",
																		"src": "19802:24:15",
																		"type": "",
																		"value": "Sale already finalized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19775:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "19775:6:15"
																},
																"nativeSrc": "19775:52:15",
																"nodeType": "YulFunctionCall",
																"src": "19775:52:15"
															},
															"nativeSrc": "19775:52:15",
															"nodeType": "YulExpressionStatement",
															"src": "19775:52:15"
														},
														{
															"nativeSrc": "19836:26:15",
															"nodeType": "YulAssignment",
															"src": "19836:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19848:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "19848:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19859:2:15",
																		"nodeType": "YulLiteral",
																		"src": "19859:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19844:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "19844:3:15"
																},
																"nativeSrc": "19844:18:15",
																"nodeType": "YulFunctionCall",
																"src": "19844:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19836:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "19836:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c62da71e519c5f2bf89b59327b7f977696c4a0042adb3aafb9f068ba780f8ac7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19522:346:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19673:9:15",
														"nodeType": "YulTypedName",
														"src": "19673:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19687:4:15",
														"nodeType": "YulTypedName",
														"src": "19687:4:15",
														"type": ""
													}
												],
												"src": "19522:346:15"
											},
											{
												"body": {
													"nativeSrc": "20047:173:15",
													"nodeType": "YulBlock",
													"src": "20047:173:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20064:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "20064:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20075:2:15",
																		"nodeType": "YulLiteral",
																		"src": "20075:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20057:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "20057:6:15"
																},
																"nativeSrc": "20057:21:15",
																"nodeType": "YulFunctionCall",
																"src": "20057:21:15"
															},
															"nativeSrc": "20057:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "20057:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20098:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "20098:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20109:2:15",
																				"nodeType": "YulLiteral",
																				"src": "20109:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20094:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "20094:3:15"
																		},
																		"nativeSrc": "20094:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "20094:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20114:2:15",
																		"nodeType": "YulLiteral",
																		"src": "20114:2:15",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20087:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "20087:6:15"
																},
																"nativeSrc": "20087:30:15",
																"nodeType": "YulFunctionCall",
																"src": "20087:30:15"
															},
															"nativeSrc": "20087:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "20087:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20137:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "20137:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20148:2:15",
																				"nodeType": "YulLiteral",
																				"src": "20148:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20133:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "20133:3:15"
																		},
																		"nativeSrc": "20133:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "20133:18:15"
																	},
																	{
																		"hexValue": "53656e6420612076616c696420424e4220616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "20153:25:15",
																		"nodeType": "YulLiteral",
																		"src": "20153:25:15",
																		"type": "",
																		"value": "Send a valid BNB amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20126:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "20126:6:15"
																},
																"nativeSrc": "20126:53:15",
																"nodeType": "YulFunctionCall",
																"src": "20126:53:15"
															},
															"nativeSrc": "20126:53:15",
															"nodeType": "YulExpressionStatement",
															"src": "20126:53:15"
														},
														{
															"nativeSrc": "20188:26:15",
															"nodeType": "YulAssignment",
															"src": "20188:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20200:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "20200:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20211:2:15",
																		"nodeType": "YulLiteral",
																		"src": "20211:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20196:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "20196:3:15"
																},
																"nativeSrc": "20196:18:15",
																"nodeType": "YulFunctionCall",
																"src": "20196:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20188:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "20188:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c4187a1289740d8ffce3bb99c104d1df31ca9848a3a5aafe5f4d5ecd5e91ee9b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19873:347:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20024:9:15",
														"nodeType": "YulTypedName",
														"src": "20024:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20038:4:15",
														"nodeType": "YulTypedName",
														"src": "20038:4:15",
														"type": ""
													}
												],
												"src": "19873:347:15"
											},
											{
												"body": {
													"nativeSrc": "20399:168:15",
													"nodeType": "YulBlock",
													"src": "20399:168:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20416:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "20416:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20427:2:15",
																		"nodeType": "YulLiteral",
																		"src": "20427:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20409:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "20409:6:15"
																},
																"nativeSrc": "20409:21:15",
																"nodeType": "YulFunctionCall",
																"src": "20409:21:15"
															},
															"nativeSrc": "20409:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "20409:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20450:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "20450:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20461:2:15",
																				"nodeType": "YulLiteral",
																				"src": "20461:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20446:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "20446:3:15"
																		},
																		"nativeSrc": "20446:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "20446:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20466:2:15",
																		"nodeType": "YulLiteral",
																		"src": "20466:2:15",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20439:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "20439:6:15"
																},
																"nativeSrc": "20439:30:15",
																"nodeType": "YulFunctionCall",
																"src": "20439:30:15"
															},
															"nativeSrc": "20439:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "20439:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20489:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "20489:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20500:2:15",
																				"nodeType": "YulLiteral",
																				"src": "20500:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20485:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "20485:3:15"
																		},
																		"nativeSrc": "20485:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "20485:18:15"
																	},
																	{
																		"hexValue": "456e7465722076616c696420616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "20505:20:15",
																		"nodeType": "YulLiteral",
																		"src": "20505:20:15",
																		"type": "",
																		"value": "Enter valid amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20478:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "20478:6:15"
																},
																"nativeSrc": "20478:48:15",
																"nodeType": "YulFunctionCall",
																"src": "20478:48:15"
															},
															"nativeSrc": "20478:48:15",
															"nodeType": "YulExpressionStatement",
															"src": "20478:48:15"
														},
														{
															"nativeSrc": "20535:26:15",
															"nodeType": "YulAssignment",
															"src": "20535:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20547:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "20547:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20558:2:15",
																		"nodeType": "YulLiteral",
																		"src": "20558:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20543:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "20543:3:15"
																},
																"nativeSrc": "20543:18:15",
																"nodeType": "YulFunctionCall",
																"src": "20543:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20535:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "20535:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8a7248c601ff75c171cc9e31d0318cd31dcd14aa40f22f649faacd9d755b61c5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20225:342:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20376:9:15",
														"nodeType": "YulTypedName",
														"src": "20376:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20390:4:15",
														"nodeType": "YulTypedName",
														"src": "20390:4:15",
														"type": ""
													}
												],
												"src": "20225:342:15"
											},
											{
												"body": {
													"nativeSrc": "20746:176:15",
													"nodeType": "YulBlock",
													"src": "20746:176:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20763:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "20763:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20774:2:15",
																		"nodeType": "YulLiteral",
																		"src": "20774:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20756:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "20756:6:15"
																},
																"nativeSrc": "20756:21:15",
																"nodeType": "YulFunctionCall",
																"src": "20756:21:15"
															},
															"nativeSrc": "20756:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "20756:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20797:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "20797:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20808:2:15",
																				"nodeType": "YulLiteral",
																				"src": "20808:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20793:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "20793:3:15"
																		},
																		"nativeSrc": "20793:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "20793:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20813:2:15",
																		"nodeType": "YulLiteral",
																		"src": "20813:2:15",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20786:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "20786:6:15"
																},
																"nativeSrc": "20786:30:15",
																"nodeType": "YulFunctionCall",
																"src": "20786:30:15"
															},
															"nativeSrc": "20786:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "20786:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20836:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "20836:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20847:2:15",
																				"nodeType": "YulLiteral",
																				"src": "20847:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20832:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "20832:3:15"
																		},
																		"nativeSrc": "20832:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "20832:18:15"
																	},
																	{
																		"hexValue": "537461626c65636f696e207472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "20852:28:15",
																		"nodeType": "YulLiteral",
																		"src": "20852:28:15",
																		"type": "",
																		"value": "Stablecoin transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20825:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "20825:6:15"
																},
																"nativeSrc": "20825:56:15",
																"nodeType": "YulFunctionCall",
																"src": "20825:56:15"
															},
															"nativeSrc": "20825:56:15",
															"nodeType": "YulExpressionStatement",
															"src": "20825:56:15"
														},
														{
															"nativeSrc": "20890:26:15",
															"nodeType": "YulAssignment",
															"src": "20890:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20902:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "20902:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20913:2:15",
																		"nodeType": "YulLiteral",
																		"src": "20913:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20898:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "20898:3:15"
																},
																"nativeSrc": "20898:18:15",
																"nodeType": "YulFunctionCall",
																"src": "20898:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20890:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "20890:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c84bd9c4652ced38c134ab47300145495de9d5aff68e1b658cc1dca99fef7eb7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20572:350:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20723:9:15",
														"nodeType": "YulTypedName",
														"src": "20723:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20737:4:15",
														"nodeType": "YulTypedName",
														"src": "20737:4:15",
														"type": ""
													}
												],
												"src": "20572:350:15"
											},
											{
												"body": {
													"nativeSrc": "21101:170:15",
													"nodeType": "YulBlock",
													"src": "21101:170:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21118:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "21118:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21129:2:15",
																		"nodeType": "YulLiteral",
																		"src": "21129:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21111:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "21111:6:15"
																},
																"nativeSrc": "21111:21:15",
																"nodeType": "YulFunctionCall",
																"src": "21111:21:15"
															},
															"nativeSrc": "21111:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "21111:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21152:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "21152:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21163:2:15",
																				"nodeType": "YulLiteral",
																				"src": "21163:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21148:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "21148:3:15"
																		},
																		"nativeSrc": "21148:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "21148:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21168:2:15",
																		"nodeType": "YulLiteral",
																		"src": "21168:2:15",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21141:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "21141:6:15"
																},
																"nativeSrc": "21141:30:15",
																"nodeType": "YulFunctionCall",
																"src": "21141:30:15"
															},
															"nativeSrc": "21141:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "21141:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21191:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "21191:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21202:2:15",
																				"nodeType": "YulLiteral",
																				"src": "21202:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21187:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "21187:3:15"
																		},
																		"nativeSrc": "21187:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "21187:18:15"
																	},
																	{
																		"hexValue": "496e76616c696420746f6b656e20616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "21207:22:15",
																		"nodeType": "YulLiteral",
																		"src": "21207:22:15",
																		"type": "",
																		"value": "Invalid token amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21180:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "21180:6:15"
																},
																"nativeSrc": "21180:50:15",
																"nodeType": "YulFunctionCall",
																"src": "21180:50:15"
															},
															"nativeSrc": "21180:50:15",
															"nodeType": "YulExpressionStatement",
															"src": "21180:50:15"
														},
														{
															"nativeSrc": "21239:26:15",
															"nodeType": "YulAssignment",
															"src": "21239:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21251:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "21251:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21262:2:15",
																		"nodeType": "YulLiteral",
																		"src": "21262:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21247:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "21247:3:15"
																},
																"nativeSrc": "21247:18:15",
																"nodeType": "YulFunctionCall",
																"src": "21247:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21239:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "21239:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_51e395ccdea9060dec5fa8fca2f2563cffa61f9f6f61f3f9c9b3895fa879ed58__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20927:344:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21078:9:15",
														"nodeType": "YulTypedName",
														"src": "21078:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21092:4:15",
														"nodeType": "YulTypedName",
														"src": "21092:4:15",
														"type": ""
													}
												],
												"src": "20927:344:15"
											},
											{
												"body": {
													"nativeSrc": "21450:166:15",
													"nodeType": "YulBlock",
													"src": "21450:166:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21467:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "21467:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21478:2:15",
																		"nodeType": "YulLiteral",
																		"src": "21478:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21460:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "21460:6:15"
																},
																"nativeSrc": "21460:21:15",
																"nodeType": "YulFunctionCall",
																"src": "21460:21:15"
															},
															"nativeSrc": "21460:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "21460:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21501:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "21501:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21512:2:15",
																				"nodeType": "YulLiteral",
																				"src": "21512:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21497:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "21497:3:15"
																		},
																		"nativeSrc": "21497:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "21497:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21517:2:15",
																		"nodeType": "YulLiteral",
																		"src": "21517:2:15",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21490:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "21490:6:15"
																},
																"nativeSrc": "21490:30:15",
																"nodeType": "YulFunctionCall",
																"src": "21490:30:15"
															},
															"nativeSrc": "21490:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "21490:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21540:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "21540:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21551:2:15",
																				"nodeType": "YulLiteral",
																				"src": "21551:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21536:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "21536:3:15"
																		},
																		"nativeSrc": "21536:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "21536:18:15"
																	},
																	{
																		"hexValue": "48617264206361702072656163686564",
																		"kind": "string",
																		"nativeSrc": "21556:18:15",
																		"nodeType": "YulLiteral",
																		"src": "21556:18:15",
																		"type": "",
																		"value": "Hard cap reached"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21529:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "21529:6:15"
																},
																"nativeSrc": "21529:46:15",
																"nodeType": "YulFunctionCall",
																"src": "21529:46:15"
															},
															"nativeSrc": "21529:46:15",
															"nodeType": "YulExpressionStatement",
															"src": "21529:46:15"
														},
														{
															"nativeSrc": "21584:26:15",
															"nodeType": "YulAssignment",
															"src": "21584:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21596:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "21596:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21607:2:15",
																		"nodeType": "YulLiteral",
																		"src": "21607:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21592:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "21592:3:15"
																},
																"nativeSrc": "21592:18:15",
																"nodeType": "YulFunctionCall",
																"src": "21592:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21584:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "21584:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c07dacc766697a4a5558e08455451d0672777bb5104aed3615bc1964c00cc795__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "21276:340:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21427:9:15",
														"nodeType": "YulTypedName",
														"src": "21427:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21441:4:15",
														"nodeType": "YulTypedName",
														"src": "21441:4:15",
														"type": ""
													}
												],
												"src": "21276:340:15"
											},
											{
												"body": {
													"nativeSrc": "21822:229:15",
													"nodeType": "YulBlock",
													"src": "21822:229:15",
													"statements": [
														{
															"nativeSrc": "21832:27:15",
															"nodeType": "YulAssignment",
															"src": "21832:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21844:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "21844:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21855:3:15",
																		"nodeType": "YulLiteral",
																		"src": "21855:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21840:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "21840:3:15"
																},
																"nativeSrc": "21840:19:15",
																"nodeType": "YulFunctionCall",
																"src": "21840:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21832:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "21832:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21875:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "21875:9:15"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "21886:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "21886:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21868:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "21868:6:15"
																},
																"nativeSrc": "21868:25:15",
																"nodeType": "YulFunctionCall",
																"src": "21868:25:15"
															},
															"nativeSrc": "21868:25:15",
															"nodeType": "YulExpressionStatement",
															"src": "21868:25:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21913:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "21913:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21924:2:15",
																				"nodeType": "YulLiteral",
																				"src": "21924:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21909:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "21909:3:15"
																		},
																		"nativeSrc": "21909:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "21909:18:15"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "21929:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "21929:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21902:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "21902:6:15"
																},
																"nativeSrc": "21902:34:15",
																"nodeType": "YulFunctionCall",
																"src": "21902:34:15"
															},
															"nativeSrc": "21902:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "21902:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21956:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "21956:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21967:2:15",
																				"nodeType": "YulLiteral",
																				"src": "21967:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21952:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "21952:3:15"
																		},
																		"nativeSrc": "21952:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "21952:18:15"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "21972:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "21972:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21945:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "21945:6:15"
																},
																"nativeSrc": "21945:34:15",
																"nodeType": "YulFunctionCall",
																"src": "21945:34:15"
															},
															"nativeSrc": "21945:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "21945:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "22018:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "22018:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22030:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "22030:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22041:2:15",
																				"nodeType": "YulLiteral",
																				"src": "22041:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22026:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "22026:3:15"
																		},
																		"nativeSrc": "22026:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "22026:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_enum_PaymentMethod",
																	"nativeSrc": "21988:29:15",
																	"nodeType": "YulIdentifier",
																	"src": "21988:29:15"
																},
																"nativeSrc": "21988:57:15",
																"nodeType": "YulFunctionCall",
																"src": "21988:57:15"
															},
															"nativeSrc": "21988:57:15",
															"nodeType": "YulExpressionStatement",
															"src": "21988:57:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_enum$_PaymentMethod_$1706__to_t_uint256_t_uint256_t_uint256_t_uint8__fromStack_reversed",
												"nativeSrc": "21621:430:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21767:9:15",
														"nodeType": "YulTypedName",
														"src": "21767:9:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "21778:6:15",
														"nodeType": "YulTypedName",
														"src": "21778:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "21786:6:15",
														"nodeType": "YulTypedName",
														"src": "21786:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "21794:6:15",
														"nodeType": "YulTypedName",
														"src": "21794:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "21802:6:15",
														"nodeType": "YulTypedName",
														"src": "21802:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21813:4:15",
														"nodeType": "YulTypedName",
														"src": "21813:4:15",
														"type": ""
													}
												],
												"src": "21621:430:15"
											},
											{
												"body": {
													"nativeSrc": "22164:101:15",
													"nodeType": "YulBlock",
													"src": "22164:101:15",
													"statements": [
														{
															"nativeSrc": "22174:26:15",
															"nodeType": "YulAssignment",
															"src": "22174:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22186:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "22186:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22197:2:15",
																		"nodeType": "YulLiteral",
																		"src": "22197:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22182:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "22182:3:15"
																},
																"nativeSrc": "22182:18:15",
																"nodeType": "YulFunctionCall",
																"src": "22182:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22174:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "22174:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22216:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "22216:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "22231:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "22231:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22239:18:15",
																				"nodeType": "YulLiteral",
																				"src": "22239:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "22227:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "22227:3:15"
																		},
																		"nativeSrc": "22227:31:15",
																		"nodeType": "YulFunctionCall",
																		"src": "22227:31:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22209:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "22209:6:15"
																},
																"nativeSrc": "22209:50:15",
																"nodeType": "YulFunctionCall",
																"src": "22209:50:15"
															},
															"nativeSrc": "22209:50:15",
															"nodeType": "YulExpressionStatement",
															"src": "22209:50:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nativeSrc": "22056:209:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22133:9:15",
														"nodeType": "YulTypedName",
														"src": "22133:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "22144:6:15",
														"nodeType": "YulTypedName",
														"src": "22144:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22155:4:15",
														"nodeType": "YulTypedName",
														"src": "22155:4:15",
														"type": ""
													}
												],
												"src": "22056:209:15"
											},
											{
												"body": {
													"nativeSrc": "22444:165:15",
													"nodeType": "YulBlock",
													"src": "22444:165:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22461:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "22461:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22472:2:15",
																		"nodeType": "YulLiteral",
																		"src": "22472:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22454:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "22454:6:15"
																},
																"nativeSrc": "22454:21:15",
																"nodeType": "YulFunctionCall",
																"src": "22454:21:15"
															},
															"nativeSrc": "22454:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "22454:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22495:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "22495:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22506:2:15",
																				"nodeType": "YulLiteral",
																				"src": "22506:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22491:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "22491:3:15"
																		},
																		"nativeSrc": "22491:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "22491:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22511:2:15",
																		"nodeType": "YulLiteral",
																		"src": "22511:2:15",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22484:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "22484:6:15"
																},
																"nativeSrc": "22484:30:15",
																"nodeType": "YulFunctionCall",
																"src": "22484:30:15"
															},
															"nativeSrc": "22484:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "22484:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22534:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "22534:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22545:2:15",
																				"nodeType": "YulLiteral",
																				"src": "22545:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22530:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "22530:3:15"
																		},
																		"nativeSrc": "22530:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "22530:18:15"
																	},
																	{
																		"hexValue": "5472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "22550:17:15",
																		"nodeType": "YulLiteral",
																		"src": "22550:17:15",
																		"type": "",
																		"value": "Transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22523:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "22523:6:15"
																},
																"nativeSrc": "22523:45:15",
																"nodeType": "YulFunctionCall",
																"src": "22523:45:15"
															},
															"nativeSrc": "22523:45:15",
															"nodeType": "YulExpressionStatement",
															"src": "22523:45:15"
														},
														{
															"nativeSrc": "22577:26:15",
															"nodeType": "YulAssignment",
															"src": "22577:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22589:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "22589:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22600:2:15",
																		"nodeType": "YulLiteral",
																		"src": "22600:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22585:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "22585:3:15"
																},
																"nativeSrc": "22585:18:15",
																"nodeType": "YulFunctionCall",
																"src": "22585:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22577:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "22577:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "22270:339:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22421:9:15",
														"nodeType": "YulTypedName",
														"src": "22421:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22435:4:15",
														"nodeType": "YulTypedName",
														"src": "22435:4:15",
														"type": ""
													}
												],
												"src": "22270:339:15"
											},
											{
												"body": {
													"nativeSrc": "22788:170:15",
													"nodeType": "YulBlock",
													"src": "22788:170:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22805:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "22805:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22816:2:15",
																		"nodeType": "YulLiteral",
																		"src": "22816:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22798:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "22798:6:15"
																},
																"nativeSrc": "22798:21:15",
																"nodeType": "YulFunctionCall",
																"src": "22798:21:15"
															},
															"nativeSrc": "22798:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "22798:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22839:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "22839:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22850:2:15",
																				"nodeType": "YulLiteral",
																				"src": "22850:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22835:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "22835:3:15"
																		},
																		"nativeSrc": "22835:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "22835:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22855:2:15",
																		"nodeType": "YulLiteral",
																		"src": "22855:2:15",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22828:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "22828:6:15"
																},
																"nativeSrc": "22828:30:15",
																"nodeType": "YulFunctionCall",
																"src": "22828:30:15"
															},
															"nativeSrc": "22828:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "22828:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22878:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "22878:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22889:2:15",
																				"nodeType": "YulLiteral",
																				"src": "22889:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22874:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "22874:3:15"
																		},
																		"nativeSrc": "22874:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "22874:18:15"
																	},
																	{
																		"hexValue": "55534454207472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "22894:22:15",
																		"nodeType": "YulLiteral",
																		"src": "22894:22:15",
																		"type": "",
																		"value": "USDT transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22867:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "22867:6:15"
																},
																"nativeSrc": "22867:50:15",
																"nodeType": "YulFunctionCall",
																"src": "22867:50:15"
															},
															"nativeSrc": "22867:50:15",
															"nodeType": "YulExpressionStatement",
															"src": "22867:50:15"
														},
														{
															"nativeSrc": "22926:26:15",
															"nodeType": "YulAssignment",
															"src": "22926:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22938:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "22938:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22949:2:15",
																		"nodeType": "YulLiteral",
																		"src": "22949:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22934:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "22934:3:15"
																},
																"nativeSrc": "22934:18:15",
																"nodeType": "YulFunctionCall",
																"src": "22934:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22926:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "22926:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "22614:344:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22765:9:15",
														"nodeType": "YulTypedName",
														"src": "22765:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22779:4:15",
														"nodeType": "YulTypedName",
														"src": "22779:4:15",
														"type": ""
													}
												],
												"src": "22614:344:15"
											},
											{
												"body": {
													"nativeSrc": "23137:170:15",
													"nodeType": "YulBlock",
													"src": "23137:170:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23154:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "23154:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23165:2:15",
																		"nodeType": "YulLiteral",
																		"src": "23165:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23147:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "23147:6:15"
																},
																"nativeSrc": "23147:21:15",
																"nodeType": "YulFunctionCall",
																"src": "23147:21:15"
															},
															"nativeSrc": "23147:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "23147:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23188:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "23188:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23199:2:15",
																				"nodeType": "YulLiteral",
																				"src": "23199:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23184:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "23184:3:15"
																		},
																		"nativeSrc": "23184:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "23184:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23204:2:15",
																		"nodeType": "YulLiteral",
																		"src": "23204:2:15",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23177:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "23177:6:15"
																},
																"nativeSrc": "23177:30:15",
																"nodeType": "YulFunctionCall",
																"src": "23177:30:15"
															},
															"nativeSrc": "23177:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "23177:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23227:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "23227:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23238:2:15",
																				"nodeType": "YulLiteral",
																				"src": "23238:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23223:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "23223:3:15"
																		},
																		"nativeSrc": "23223:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "23223:18:15"
																	},
																	{
																		"hexValue": "55534443207472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "23243:22:15",
																		"nodeType": "YulLiteral",
																		"src": "23243:22:15",
																		"type": "",
																		"value": "USDC transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23216:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "23216:6:15"
																},
																"nativeSrc": "23216:50:15",
																"nodeType": "YulFunctionCall",
																"src": "23216:50:15"
															},
															"nativeSrc": "23216:50:15",
															"nodeType": "YulExpressionStatement",
															"src": "23216:50:15"
														},
														{
															"nativeSrc": "23275:26:15",
															"nodeType": "YulAssignment",
															"src": "23275:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23287:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "23287:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23298:2:15",
																		"nodeType": "YulLiteral",
																		"src": "23298:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23283:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "23283:3:15"
																},
																"nativeSrc": "23283:18:15",
																"nodeType": "YulFunctionCall",
																"src": "23283:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23275:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "23275:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_032fb3428477d66798bdf7801f58a252d723dc1362b9dfac5726f85f81cca815__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "22963:344:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23114:9:15",
														"nodeType": "YulTypedName",
														"src": "23114:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23128:4:15",
														"nodeType": "YulTypedName",
														"src": "23128:4:15",
														"type": ""
													}
												],
												"src": "22963:344:15"
											},
											{
												"body": {
													"nativeSrc": "23393:103:15",
													"nodeType": "YulBlock",
													"src": "23393:103:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "23439:16:15",
																"nodeType": "YulBlock",
																"src": "23439:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "23448:1:15",
																					"nodeType": "YulLiteral",
																					"src": "23448:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "23451:1:15",
																					"nodeType": "YulLiteral",
																					"src": "23451:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "23441:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "23441:6:15"
																			},
																			"nativeSrc": "23441:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "23441:12:15"
																		},
																		"nativeSrc": "23441:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "23441:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "23414:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "23414:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "23423:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "23423:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "23410:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "23410:3:15"
																		},
																		"nativeSrc": "23410:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "23410:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23435:2:15",
																		"nodeType": "YulLiteral",
																		"src": "23435:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "23406:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "23406:3:15"
																},
																"nativeSrc": "23406:32:15",
																"nodeType": "YulFunctionCall",
																"src": "23406:32:15"
															},
															"nativeSrc": "23403:52:15",
															"nodeType": "YulIf",
															"src": "23403:52:15"
														},
														{
															"nativeSrc": "23464:26:15",
															"nodeType": "YulAssignment",
															"src": "23464:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23480:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "23480:9:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "23474:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "23474:5:15"
																},
																"nativeSrc": "23474:16:15",
																"nodeType": "YulFunctionCall",
																"src": "23474:16:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "23464:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "23464:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32_fromMemory",
												"nativeSrc": "23312:184:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23359:9:15",
														"nodeType": "YulTypedName",
														"src": "23359:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "23370:7:15",
														"nodeType": "YulTypedName",
														"src": "23370:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "23382:6:15",
														"nodeType": "YulTypedName",
														"src": "23382:6:15",
														"type": ""
													}
												],
												"src": "23312:184:15"
											},
											{
												"body": {
													"nativeSrc": "23638:150:15",
													"nodeType": "YulBlock",
													"src": "23638:150:15",
													"statements": [
														{
															"nativeSrc": "23648:27:15",
															"nodeType": "YulVariableDeclaration",
															"src": "23648:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "23668:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "23668:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "23662:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "23662:5:15"
																},
																"nativeSrc": "23662:13:15",
																"nodeType": "YulFunctionCall",
																"src": "23662:13:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "23652:6:15",
																	"nodeType": "YulTypedName",
																	"src": "23652:6:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "23723:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "23723:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23731:4:15",
																				"nodeType": "YulLiteral",
																				"src": "23731:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23719:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "23719:3:15"
																		},
																		"nativeSrc": "23719:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "23719:17:15"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "23738:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "23738:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "23743:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "23743:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "23684:34:15",
																	"nodeType": "YulIdentifier",
																	"src": "23684:34:15"
																},
																"nativeSrc": "23684:66:15",
																"nodeType": "YulFunctionCall",
																"src": "23684:66:15"
															},
															"nativeSrc": "23684:66:15",
															"nodeType": "YulExpressionStatement",
															"src": "23684:66:15"
														},
														{
															"nativeSrc": "23759:23:15",
															"nodeType": "YulAssignment",
															"src": "23759:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23770:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "23770:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "23775:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "23775:6:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23766:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "23766:3:15"
																},
																"nativeSrc": "23766:16:15",
																"nodeType": "YulFunctionCall",
																"src": "23766:16:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "23759:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "23759:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "23501:287:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "23614:3:15",
														"nodeType": "YulTypedName",
														"src": "23614:3:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "23619:6:15",
														"nodeType": "YulTypedName",
														"src": "23619:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "23630:3:15",
														"nodeType": "YulTypedName",
														"src": "23630:3:15",
														"type": ""
													}
												],
												"src": "23501:287:15"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_stringliteral_17550aa7e27a420bf678ad118b2de30f8f99747e4dbc150a39e97cdeb8fb8119__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Direct BNB transfers not allowed\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_enum_PaymentMethod(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(lt(value, 3)) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_enum$_PaymentMethod_$1706t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_enum_PaymentMethod(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_enum$_PaymentMethod_$1706(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_enum_PaymentMethod(headStart)\n    }\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_1)\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 0x1f), not(31)), 63), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(_1, length), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_1, 32), length)\n        mstore(add(add(memPtr, length), 32), 0)\n        value1 := memPtr\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n        let value_2 := 0\n        value_2 := calldataload(add(headStart, 64))\n        value2 := value_2\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), iszero(iszero(value4)))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$1264__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_contract$_IERC20_$1264t_addresst_addresst_uint256t_uint256t_addresst_addresst_address(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7\n    {\n        if slt(sub(dataEnd, headStart), 256) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := calldataload(add(headStart, 64))\n        validator_revert_address(value_2)\n        value2 := value_2\n        let value_3 := 0\n        value_3 := calldataload(add(headStart, 96))\n        value3 := value_3\n        let value_4 := 0\n        value_4 := calldataload(add(headStart, 128))\n        value4 := value_4\n        let value_5 := calldataload(add(headStart, 160))\n        validator_revert_address(value_5)\n        value5 := value_5\n        let value_6 := calldataload(add(headStart, 192))\n        validator_revert_address(value_6)\n        value6 := value_6\n        let value_7 := calldataload(add(headStart, 224))\n        validator_revert_address(value_7)\n        value7 := value_7\n    }\n    function abi_encode_tuple_t_stringliteral_dbf071520f0a95e05bb16da9ebcd49bf0ac91e963647b14497245101e3db79a3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Invalid price feed\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_exp_helper(_base, exponent, max) -> power, base\n    {\n        power := 1\n        base := _base\n        for { } gt(exponent, 1) { }\n        {\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            let _1 := 0\n            _1 := 0\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            let _2 := 0\n            _2 := 0\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent, not(0))\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, exponent)\n    }\n    function abi_encode_tuple_t_stringliteral_20a9374871eda95a21489d37b12097781d38e0ea68a5e5d037a1b2c3ea6a8c04__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Unsupported payment method\")\n        tail := add(headStart, 96)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_decode_uint80_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_uint80_fromMemory(headStart)\n        value1 := mload(add(headStart, 32))\n        let value := 0\n        value := mload(add(headStart, 64))\n        value2 := value\n        let value_1 := 0\n        value_1 := mload(add(headStart, 96))\n        value3 := value_1\n        value4 := abi_decode_uint80_fromMemory(add(headStart, 128))\n    }\n    function abi_encode_tuple_t_stringliteral_fbff1a1f6c2af74648d360c36de5f47b5c561797f493e9c58d33289d0ad24acc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Amount must be positive\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_96b145fdc05e3ce6aa7fad5e89550d457f70c47d1f8d674ad654a917590143f7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"No active sale\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d894807d07a4878944df72000c35a26fc670b7c15dedc34156876b2464e1fd23__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"ICO already finalized\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5e1a07520dc062ba4ff449fce67822fde8495347c7d50898a83b1dfb63596097__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 7)\n        mstore(add(headStart, 64), \"freezed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0ac6ed66eb10da1daf17a818038873a6c51ace7271027943cc6a6f233843a4a5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Soft Cap NOt Reached\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_aff7558382c088943ad2bf11af33e010b3e0eab9fe7e943d464ecefccf0c4c65__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Airdrop not completed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a2d2e7a15f42f292e75295df8170c1409618a86fbef71da331c44b30609e3c68__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Invalid start time range\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_37095db391cf553f65f0eddf201a3c7bc5118c1120fca6827815be26758eff4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Already UnFreezed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_52e3d128a4ea4439173e3f4b78f0e12548c2c4449a80c4b2fbefb1fd3e6a7665__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"Sale ongoing\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7c68e13a7a3bf736cdb65f14ebef38f840872b490e156aead879b05f23b99d80__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Soft cap reached\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_stringliteral_9061bb5d1762fde4c9d1190b8ce0bd989de0debb196be3c053155f36b52a6ce0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"BNB refund failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_4c76e179fd3981278de294ff97a7ccb030d7577d0e7f55ac3f87e02e3abaa726__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Stablecoin refund failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_enum_PaymentMethod(value, pos)\n    {\n        if iszero(lt(value, 3))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(pos, value)\n    }\n    function abi_encode_tuple_t_uint256_t_enum$_PaymentMethod_$1706__to_t_uint256_t_uint8__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        abi_encode_enum_PaymentMethod(value1, add(headStart, 32))\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function abi_encode_tuple_t_stringliteral_35194372afc15163c58aa5af5530ba0e7f2576a9d985e6f8d166066860d6966a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Airdrop already completed\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := mload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Insufficient Funds\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Token transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6074d909f1c7eb2393bdf1029d0b7e2b2329445b551a02e61050a4a408023785__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Owner cannot buy tokens\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_745b7c27209a9df0afa3e1a0af6f3a48dc087e43ee7b30261a0fc4b9578e75a7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 7)\n        mstore(add(headStart, 64), \"No sale\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c62da71e519c5f2bf89b59327b7f977696c4a0042adb3aafb9f068ba780f8ac7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Sale already finalized\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c4187a1289740d8ffce3bb99c104d1df31ca9848a3a5aafe5f4d5ecd5e91ee9b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Send a valid BNB amount\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8a7248c601ff75c171cc9e31d0318cd31dcd14aa40f22f649faacd9d755b61c5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Enter valid amount\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c84bd9c4652ced38c134ab47300145495de9d5aff68e1b658cc1dca99fef7eb7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Stablecoin transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_51e395ccdea9060dec5fa8fca2f2563cffa61f9f6f61f3f9c9b3895fa879ed58__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Invalid token amount\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c07dacc766697a4a5558e08455451d0672777bb5104aed3615bc1964c00cc795__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Hard cap reached\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_enum$_PaymentMethod_$1706__to_t_uint256_t_uint256_t_uint256_t_uint8__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        abi_encode_enum_PaymentMethod(value3, add(headStart, 96))\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"USDT transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_032fb3428477d66798bdf7801f58a252d723dc1362b9dfac5726f85f81cca815__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"USDC transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n}",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"514": [
									{
										"length": 32,
										"start": 9743
									},
									{
										"length": 32,
										"start": 9784
									},
									{
										"length": 32,
										"start": 10105
									}
								]
							},
							"linkReferences": {},
							"object": "60806040526004361061024a5760003560e01c80637fb1200111610139578063b3fdafb9116100b6578063c81ffdea1161007a578063c81ffdea14610750578063d1f3b23e1461077d578063e8e8738914610797578063f2fde38b146107c4578063fc0c546a146107e4578063fd663da21461080457600080fd5b8063b3fdafb9146105fa578063b5f522f71461061a578063b9469e1a14610691578063c1560a14146106b1578063c211e1f9146106c757600080fd5b8063960524e3116100fd578063960524e3146105515780639fa8adb814610566578063a1c4b5a214610586578063a1e89aec146105a6578063ad3cb1cc146105bc57600080fd5b80637fb12001146104e65780638da5cb5b146104fb57806391152c5c1461051057806391d8730a14610525578063940c333e1461053e57600080fd5b80633feb5f2b116101c757806363b201171161018b57806363b20117146104705780636c1909ed14610486578063715018a6146104a6578063721bc38b146104bb5780637cf12b90146104d157600080fd5b80633feb5f2b146103f45780634dee1dc3146104145780634f1ef2861461043357806352d1902d1461044657806362a5af3b1461045b57600080fd5b80632151206e1161020e5780632151206e1461034f57806323cc75a8146103655780632593198d1461037c5780632f48ab7d1461039c5780633e413bee146103d457600080fd5b806305834e67146102a157806306e4d36f146102d4578063115afc3a146102fa578063117d260f1461031a578063212ea2471461033a57600080fd5b3661029c5760405162461bcd60e51b815260206004820181905260248201527f44697265637420424e42207472616e7366657273206e6f7420616c6c6f77656460448201526064015b60405180910390fd5b600080fd5b3480156102ad57600080fd5b506102c16102bc366004612a79565b610824565b6040519081526020015b60405180910390f35b3480156102e057600080fd5b5060045460075410155b60405190151581526020016102cb565b34801561030657600080fd5b506102c1610315366004612aa3565b6109a8565b34801561032657600080fd5b506102c1610335366004612a79565b610b11565b34801561034657600080fd5b506006546102c1565b34801561035b57600080fd5b506102c160045481565b34801561037157600080fd5b5061037a610caf565b005b34801561038857600080fd5b506102c1610397366004612abe565b610dff565b3480156103a857600080fd5b50600b546103bc906001600160a01b031681565b6040516001600160a01b0390911681526020016102cb565b3480156103e057600080fd5b50600c546103bc906001600160a01b031681565b34801561040057600080fd5b506103bc61040f366004612abe565b610e13565b34801561042057600080fd5b506009546102ea90610100900460ff1681565b61037a610441366004612b02565b610e3d565b34801561045257600080fd5b506102c1610e5c565b34801561046757600080fd5b5061037a610e79565b34801561047c57600080fd5b506102c160085481565b34801561049257600080fd5b5061037a6104a1366004612bce565b610ebd565b3480156104b257600080fd5b5061037a611038565b3480156104c757600080fd5b506102c160075481565b3480156104dd57600080fd5b5061037a61104a565b3480156104f257600080fd5b5061037a6110ac565b34801561050757600080fd5b506103bc61156d565b34801561051c57600080fd5b5061037a61159b565b34801561053157600080fd5b50600554600754146102ea565b61037a61054c366004612a79565b611978565b34801561055d57600080fd5b50600a546102c1565b34801561057257600080fd5b506102c1610581366004612abe565b611fdb565b34801561059257600080fd5b506102c16105a1366004612abe565b611fef565b3480156105b257600080fd5b506102c160065481565b3480156105c857600080fd5b506105ed604051806040016040528060058152602001640352e302e360dc1b81525081565b6040516102cb9190612c1e565b34801561060657600080fd5b506102c1610615366004612abe565b612000565b34801561062657600080fd5b50610667610635366004612abe565b600d60205260009081526040902080546001820154600283015460038401546004909401549293919290919060ff1685565b6040805195865260208601949094529284019190915260608301521515608082015260a0016102cb565b34801561069d57600080fd5b506009546102ea9062010000900460ff1681565b3480156106bd57600080fd5b506102c160055481565b3480156106d357600080fd5b5061073b6106e2366004612abe565b506006546000908152600d6020908152604091829020825160a081018452815480825260018301549382018490526002830154948201949094526003820154606082015260049091015460ff1615156080909101529091565b604080519283526020830191909152016102cb565b34801561075c57600080fd5b506102c161076b366004612c51565b600e6020526000908152604090205481565b34801561078957600080fd5b506009546102ea9060ff1681565b3480156107a357600080fd5b506102c16107b2366004612c51565b600f6020526000908152604090205481565b3480156107d057600080fd5b5061037a6107df366004612c51565b612011565b3480156107f057600080fd5b506003546103bc906001600160a01b031681565b34801561081057600080fd5b5061037a61081f366004612c6e565b61204f565b6000806108336105a1856109a8565b90508060000361087a5760405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a59081c1c9a58d9481999595960721b6044820152606401610293565b600061088560065490565b6000818152600d6020526040812060028101549293509190808860028111156108b0576108b0612d05565b036108c9576108c26105818887612d31565b9050610983565b60028860028111156108dd576108dd612d05565b14806108fa575060018860028111156108f8576108f8612d05565b145b1561093b576006600061090e826012612d48565b61091990600a612e42565b610923908a612d31565b90506109326105818289612d31565b92505050610983565b60405162461bcd60e51b815260206004820152601a60248201527f556e737570706f72746564207061796d656e74206d6574686f640000000000006044820152606401610293565b60008261098f83610dff565b6109999190612e4e565b96505050505050505b92915050565b6000808260028111156109bd576109bd612d05565b03610a465760008060009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610a16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3a9190612e8a565b50919695505050505050565b6001826002811115610a5a57610a5a612d05565b03610aa95760015460408051633fabe5a360e21b815290516000926001600160a01b03169163feaf968c9160048083019260a09291908290030181865afa158015610a16573d6000803e3d6000fd5b6002826002811115610abd57610abd612d05565b0361093b5760025460408051633fabe5a360e21b815290516000926001600160a01b03169163feaf968c9160048083019260a09291908290030181865afa158015610a16573d6000803e3d6000fd5b919050565b600081600003610b635760405162461bcd60e51b815260206004820152601760248201527f416d6f756e74206d75737420626520706f7369746976650000000000000000006044820152606401610293565b6000610b716105a1856109a8565b905080600003610bb85760405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a59081c1c9a58d9481999595960721b6044820152606401610293565b6000610bc360065490565b905080600003610c065760405162461bcd60e51b815260206004820152600e60248201526d4e6f206163746976652073616c6560901b6044820152606401610293565b6000818152600d6020526040812060028101549091610c286105818389612d31565b9050600080896002811115610c3f57610c3f612d05565b03610c5f5785610c4e83610dff565b610c589190612e4e565b9050610ca3565b6001896002811115610c7357610c73612d05565b1480610c9057506002896002811115610c8e57610c8e612d05565b145b1561093b5785610c4e83620f4240612d31565b98975050505050505050565b610cb7612265565b610cbf61229d565b60095460ff1615610ce25760405162461bcd60e51b815260040161029390612edc565b60095462010000900460ff1615610d0b5760405162461bcd60e51b815260040161029390612f0b565b6004546007541015610d565760405162461bcd60e51b815260206004820152601460248201527314dbd99d0810d85c081393dd0814995858da195960621b6044820152606401610293565b600954610100900460ff16610da55760405162461bcd60e51b8152602060048201526015602482015274105a5c991c9bdc081b9bdd0818dbdb5c1b195d1959605a1b6044820152606401610293565b6009805460ff19166001179055610dba6122cf565b6008546040517f9c4b134da32aab35252391880a9f2a3c13a760d7817ae8823f2b301d3522045a90600090a2610dfd600160008051602061305283398151915255565b565b60006109a282670de0b6b3a7640000612d31565b600a8181548110610e2357600080fd5b6000918252602090912001546001600160a01b0316905081565b610e45612604565b610e4e826126a9565b610e5882826126b1565b5050565b6000610e6661276e565b5060008051602061303283398151915290565b610e8161229d565b60095462010000900460ff1615610eaa5760405162461bcd60e51b815260040161029390612f0b565b6009805462ff0000191662010000179055565b610ec5612265565b610ecd61229d565b60095460ff1615610ef05760405162461bcd60e51b815260040161029390612edc565b60095462010000900460ff1615610f195760405162461bcd60e51b815260040161029390612f0b565b4283118015610f2757508282115b8015610f4657506006546000908152600d602052604090206001015442115b610f925760405162461bcd60e51b815260206004820152601860248201527f496e76616c69642073746172742074696d652072616e676500000000000000006044820152606401610293565b600654610fa0906001612f2c565b60068181556000918252600d602090815260408084208781556001810187905560028101869055600381019490945560048401805460ff19169055915482518781529182018690529181018490527f63b43fa153147ade1de28ed76841cdbc34e510ed94dd1ff5a88e278b0b1ad9ba9060600160405180910390a250611033600160008051602061305283398151915255565b505050565b61104061229d565b610dfd60006127b7565b61105261229d565b60095462010000900460ff1661109e5760405162461bcd60e51b8152602060048201526011602482015270105b1c9958591e48155b919c99595e9959607a1b6044820152606401610293565b6009805462ff000019169055565b6110b4612265565b6110bc61229d565b60095460ff16156110df5760405162461bcd60e51b815260040161029390612edc565b6006546000908152600d602052604090206001015442116111315760405162461bcd60e51b815260206004820152600c60248201526b53616c65206f6e676f696e6760a01b6044820152606401610293565b600454600754106111775760405162461bcd60e51b815260206004820152601060248201526f14dbd99d0818d85c081c995858da195960821b6044820152606401610293565b600a80549060009082111561119857611191600b83612d48565b905061119c565b5060005b60006111a9600184612d48565b90505b81811061153b576000600a82815481106111c8576111c8612f3f565b60009182526020822001546001600160a01b031691505b60038160ff1610156114e45760008160ff16600281111561120257611202612d05565b6001600160a01b0384166000908152601160205260408120919250908183600281111561123157611231612d05565b600281111561124257611242612d05565b815260200190815260200160002054905060008111156114da576001600160a01b03841660009081526011602052604081208184600281111561128757611287612d05565b600281111561129857611298612d05565b815260208101919091526040016000908120919091558260028111156112c0576112c0612d05565b03611362576000846001600160a01b03168260405160006040518083038185875af1925050503d8060008114611312576040519150601f19603f3d011682016040523d82523d6000602084013e611317565b606091505b505090508061135c5760405162461bcd60e51b8152602060048201526011602482015270109390881c99599d5b990819985a5b1959607a1b6044820152606401610293565b50611496565b600182600281111561137657611376612d05565b14806113935750600282600281111561139157611391612d05565b145b1561149657600060018360028111156113ae576113ae612d05565b146113c457600c546001600160a01b03166113d1565b600b546001600160a01b03165b60405163a9059cbb60e01b81526001600160a01b038781166004830152602482018590529192509082169063a9059cbb906044016020604051808303816000875af1158015611424573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114489190612f55565b6114945760405162461bcd60e51b815260206004820152601860248201527f537461626c65636f696e20726566756e64206661696c656400000000000000006044820152606401610293565b505b836001600160a01b03167f03829ab241648d7348f97e4f77d36451330f2276ea8eeb3428e462012f9699e782846040516114d1929190612f99565b60405180910390a25b50506001016111df565b50600a8054806114f6576114f6612fad565b600082815260208120820160001990810180546001600160a01b0319169055909101909155829003611528575061153b565b508061153381612fc3565b9150506111ac565b50600a54600003611554576009805460ff191660011790555b5050610dfd600160008051602061305283398151915255565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6115a3612265565b6115ab61229d565b60095460ff16156115ce5760405162461bcd60e51b815260040161029390612edc565b60095462010000900460ff16156115f75760405162461bcd60e51b815260040161029390612f0b565b600954610100900460ff161561164f5760405162461bcd60e51b815260206004820152601960248201527f41697264726f7020616c726561647920636f6d706c65746564000000000000006044820152606401610293565b6008546003546040516370a0823160e01b81523360048201526001600160a01b03909116906370a0823190602401602060405180830381865afa15801561169a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116be9190612fda565b10156117015760405162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e742046756e647360701b6044820152606401610293565b6006546000908152600d602052604090206001015442116117535760405162461bcd60e51b815260206004820152600c60248201526b53616c65206f6e676f696e6760a01b6044820152606401610293565b600a8054906000908211156117745761176d600b83612d48565b9050611778565b5060005b6000611785600184612d48565b90505b818110611945576000600a82815481106117a4576117a4612f3f565b60009182526020808320909101546001600160a01b0316808352600f9091526040909120549091508015611921576003546001600160a01b03166323b872dd6117eb61156d565b6040516001600160e01b031960e084901b1681526001600160a01b0391821660048201529085166024820152604481018490526064016020604051808303816000875af1158015611840573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118649190612f55565b6118a85760405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b6044820152606401610293565b600a8054806118b9576118b9612fad565b600082815260209020810160001990810180546001600160a01b03191690550190556040516001600160a01b038316907f9bdcd0cc5503fb9a8dd7311d9617e33108c4b7c8948cc544b16c1fd63c6f475b906119189084815260200190565b60405180910390a25b82600003611930575050611945565b5050808061193d90612fc3565b915050611788565b50600a54600003611554576009805461ff0019166101001790555050610dfd600160008051602061305283398151915255565b611980612265565b60095460ff16156119a35760405162461bcd60e51b815260040161029390612edc565b60095462010000900460ff16156119cc5760405162461bcd60e51b815260040161029390612f0b565b6119d461156d565b6001600160a01b03163303611a2b5760405162461bcd60e51b815260206004820152601760248201527f4f776e65722063616e6e6f742062757920746f6b656e730000000000000000006044820152606401610293565b600654600003611a675760405162461bcd60e51b81526020600482015260076024820152664e6f2073616c6560c81b6044820152606401610293565b6006546000908152600d602052604090206004015460ff1615611ac55760405162461bcd60e51b815260206004820152601660248201527514d85b1948185b1c9958591e48199a5b985b1a5e995960521b6044820152606401610293565b600080836002811115611ada57611ada612d05565b03611b995734600003611b2f5760405162461bcd60e51b815260206004820152601760248201527f53656e6420612076616c696420424e4220616d6f756e740000000000000000006044820152606401610293565b611b398334610824565b336000908152601160205260408120919250349190856002811115611b6057611b60612d05565b6002811115611b7157611b71612d05565b81526020019081526020016000206000828254611b8e9190612f2c565b90915550611d799050565b6001836002811115611bad57611bad612d05565b1480611bca57506002836002811115611bc857611bc8612d05565b145b15611d795781600003611c145760405162461bcd60e51b8152602060048201526012602482015271115b9d195c881d985b1a5908185b5bdd5b9d60721b6044820152606401610293565b60006001846002811115611c2a57611c2a612d05565b14611c4057600c546001600160a01b0316611c4d565b600b546001600160a01b03165b6040516323b872dd60e01b8152336004820152306024820152604481018590529091506001600160a01b038216906323b872dd906064016020604051808303816000875af1158015611ca3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cc79190612f55565b611d135760405162461bcd60e51b815260206004820152601a60248201527f537461626c65636f696e207472616e73666572206661696c65640000000000006044820152606401610293565b611d1d8484610824565b336000908152601160205260408120919350849190866002811115611d4457611d44612d05565b6002811115611d5557611d55612d05565b81526020019081526020016000206000828254611d729190612f2c565b9091555050505b80600003611dc05760405162461bcd60e51b8152602060048201526014602482015273125b9d985b1a59081d1bdad95b88185b5bdd5b9d60621b6044820152606401610293565b6006546000908152600d6020526040812060020154670de0b6b3a764000090611de99084612d31565b611df39190612e4e565b905060055481600754611e069190612f2c565b1115611e475760405162461bcd60e51b815260206004820152601060248201526f12185c990818d85c081c995858da195960821b6044820152606401610293565b336000908152600e6020526040902054611e62908290612f2c565b336000908152600e6020526040902055600754611e80908290612f2c565b6007556006546000908152600d602052604081206003018054849290611ea7908490612f2c565b9091555050600854611eba908390612f2c565b600855336000908152600f60205260408120549003611f1657600a80546001810182556000919091527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80180546001600160a01b031916331790555b336000908152600f6020526040902054611f31908390612f2c565b336000908152600f60209081526040808320939093556010905220805485919060ff19166001836002811115611f6957611f69612d05565b02179055506006546000818152600d60205260409081902060020154905133917fdbcef474a632721725d49e3f35d9defe0257100b01d1e4b4b135b14d6fe296e891611fba91879189908b90612ff3565b60405180910390a35050610e58600160008051602061305283398151915255565b60006109a2670de0b6b3a764000083612e4e565b60006109a2826402540be400612d31565b60006109a26402540be40083612e4e565b61201961229d565b6001600160a01b03811661204357604051631e4fbdf760e01b815260006004820152602401610293565b61204c816127b7565b50565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff166000811580156120955750825b905060008267ffffffffffffffff1660011480156120b25750303b155b9050811580156120c0575080155b156120de5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561210857845460ff60401b1916600160401b1785555b61211133612828565b612119612839565b8c600360006101000a8154816001600160a01b0302191690836001600160a01b0316021790555089600481905550886005819055508b600b60006101000a8154816001600160a01b0302191690836001600160a01b031602179055508a600c60006101000a8154816001600160a01b0302191690836001600160a01b03160217905550876000806101000a8154816001600160a01b0302191690836001600160a01b0316021790555086600160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555085600260006101000a8154816001600160a01b0302191690836001600160a01b03160217905550831561225657845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050505050505050565b60008051602061305283398151915280546001190161229757604051633ee5aeb560e01b815260040160405180910390fd5b60029055565b336122a661156d565b6001600160a01b031614610dfd5760405163118cdaa760e01b8152336004820152602401610293565b30803180156123765760006122e261156d565b6001600160a01b03168260405160006040518083038185875af1925050503d806000811461232c576040519150601f19603f3d011682016040523d82523d6000602084013e612331565b606091505b50509050806123745760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606401610293565b505b600b546040516370a0823160e01b81526001600160a01b03848116600483015260009216906370a0823190602401602060405180830381865afa1580156123c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123e59190612fda565b905080156124ba57600b546001600160a01b031663a9059cbb61240661156d565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af1158015612453573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124779190612f55565b6124ba5760405162461bcd60e51b81526020600482015260146024820152731554d115081d1c985b9cd9995c8819985a5b195960621b6044820152606401610293565b600c546040516370a0823160e01b81526001600160a01b03858116600483015260009216906370a0823190602401602060405180830381865afa158015612505573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125299190612fda565b905080156125fe57600c546001600160a01b031663a9059cbb61254a61156d565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af1158015612597573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125bb9190612f55565b6125fe5760405162461bcd60e51b81526020600482015260146024820152731554d110c81d1c985b9cd9995c8819985a5b195960621b6044820152606401610293565b50505050565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148061268b57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661267f600080516020613032833981519152546001600160a01b031690565b6001600160a01b031614155b15610dfd5760405163703e46dd60e11b815260040160405180910390fd5b61204c61229d565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561270b575060408051601f3d908101601f1916820190925261270891810190612fda565b60015b61273357604051634c9c8ce360e01b81526001600160a01b0383166004820152602401610293565b600080516020613032833981519152811461276457604051632a87526960e21b815260048101829052602401610293565b6110338383612841565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610dfd5760405163703e46dd60e11b815260040160405180910390fd5b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b612830612897565b61204c816128e0565b610dfd612897565b61284a826128e8565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a280511561288f57611033828261294d565b610e586129c3565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff16610dfd57604051631afcd79f60e31b815260040160405180910390fd5b612019612897565b806001600160a01b03163b60000361291e57604051634c9c8ce360e01b81526001600160a01b0382166004820152602401610293565b60008051602061303283398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6060600080846001600160a01b03168460405161296a9190613015565b600060405180830381855af49150503d80600081146129a5576040519150601f19603f3d011682016040523d82523d6000602084013e6129aa565b606091505b50915091506129ba8583836129e2565b95945050505050565b3415610dfd5760405163b398979f60e01b815260040160405180910390fd5b6060826129f7576129f282612a41565b612a3a565b8151158015612a0e57506001600160a01b0384163b155b15612a3757604051639996b31560e01b81526001600160a01b0385166004820152602401610293565b50805b9392505050565b805115612a515780518082602001fd5b60405163d6bda27560e01b815260040160405180910390fd5b803560038110610b0c57600080fd5b60008060408385031215612a8c57600080fd5b612a9583612a6a565b946020939093013593505050565b600060208284031215612ab557600080fd5b612a3a82612a6a565b600060208284031215612ad057600080fd5b5035919050565b6001600160a01b038116811461204c57600080fd5b634e487b7160e01b600052604160045260246000fd5b60008060408385031215612b1557600080fd5b8235612b2081612ad7565b9150602083013567ffffffffffffffff811115612b3c57600080fd5b8301601f81018513612b4d57600080fd5b803567ffffffffffffffff811115612b6757612b67612aec565b604051601f8201601f19908116603f0116810167ffffffffffffffff81118282101715612b9657612b96612aec565b604052818152828201602001871015612bae57600080fd5b816020840160208301376000602083830101528093505050509250929050565b600080600060608486031215612be357600080fd5b505081359360208301359350604090920135919050565b60005b83811015612c15578181015183820152602001612bfd565b50506000910152565b6020815260008251806020840152612c3d816040850160208701612bfa565b601f01601f19169190910160400192915050565b600060208284031215612c6357600080fd5b8135612a3a81612ad7565b600080600080600080600080610100898b031215612c8b57600080fd5b8835612c9681612ad7565b97506020890135612ca681612ad7565b96506040890135612cb681612ad7565b9550606089013594506080890135935060a0890135612cd481612ad7565b925060c0890135612ce481612ad7565b915060e0890135612cf481612ad7565b809150509295985092959890939650565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176109a2576109a2612d1b565b818103818111156109a2576109a2612d1b565b6001815b6001841115612d9657808504811115612d7a57612d7a612d1b565b6001841615612d8857908102905b60019390931c928002612d5f565b935093915050565b600082612dad575060016109a2565b81612dba575060006109a2565b8160018114612dd05760028114612dda57612df6565b60019150506109a2565b60ff841115612deb57612deb612d1b565b50506001821b6109a2565b5060208310610133831016604e8410600b8410161715612e19575081810a6109a2565b612e266000198484612d5b565b8060001904821115612e3a57612e3a612d1b565b029392505050565b6000612a3a8383612d9e565b600082612e6b57634e487b7160e01b600052601260045260246000fd5b500490565b805169ffffffffffffffffffff81168114610b0c57600080fd5b600080600080600060a08688031215612ea257600080fd5b612eab86612e70565b60208701516040880151606089015192975090955093509150612ed060808701612e70565b90509295509295909350565b6020808252601590820152741250d3c8185b1c9958591e48199a5b985b1a5e9959605a1b604082015260600190565b602080825260079082015266199c99595e995960ca1b604082015260600190565b808201808211156109a2576109a2612d1b565b634e487b7160e01b600052603260045260246000fd5b600060208284031215612f6757600080fd5b81518015158114612a3a57600080fd5b60038110612f9557634e487b7160e01b600052602160045260246000fd5b9052565b82815260408101612a3a6020830184612f77565b634e487b7160e01b600052603160045260246000fd5b600081612fd257612fd2612d1b565b506000190190565b600060208284031215612fec57600080fd5b5051919050565b8481526020810184905260408101839052608081016129ba6060830184612f77565b60008251613027818460208701612bfa565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00a2646970667358221220f6169f3ea7a8afb825b42a594ae709b43270a6bb30bf1eba66c467a8093dc64964736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x24A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7FB12001 GT PUSH2 0x139 JUMPI DUP1 PUSH4 0xB3FDAFB9 GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xC81FFDEA GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xC81FFDEA EQ PUSH2 0x750 JUMPI DUP1 PUSH4 0xD1F3B23E EQ PUSH2 0x77D JUMPI DUP1 PUSH4 0xE8E87389 EQ PUSH2 0x797 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x7C4 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x7E4 JUMPI DUP1 PUSH4 0xFD663DA2 EQ PUSH2 0x804 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB3FDAFB9 EQ PUSH2 0x5FA JUMPI DUP1 PUSH4 0xB5F522F7 EQ PUSH2 0x61A JUMPI DUP1 PUSH4 0xB9469E1A EQ PUSH2 0x691 JUMPI DUP1 PUSH4 0xC1560A14 EQ PUSH2 0x6B1 JUMPI DUP1 PUSH4 0xC211E1F9 EQ PUSH2 0x6C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x960524E3 GT PUSH2 0xFD JUMPI DUP1 PUSH4 0x960524E3 EQ PUSH2 0x551 JUMPI DUP1 PUSH4 0x9FA8ADB8 EQ PUSH2 0x566 JUMPI DUP1 PUSH4 0xA1C4B5A2 EQ PUSH2 0x586 JUMPI DUP1 PUSH4 0xA1E89AEC EQ PUSH2 0x5A6 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x5BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7FB12001 EQ PUSH2 0x4E6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4FB JUMPI DUP1 PUSH4 0x91152C5C EQ PUSH2 0x510 JUMPI DUP1 PUSH4 0x91D8730A EQ PUSH2 0x525 JUMPI DUP1 PUSH4 0x940C333E EQ PUSH2 0x53E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3FEB5F2B GT PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x63B20117 GT PUSH2 0x18B JUMPI DUP1 PUSH4 0x63B20117 EQ PUSH2 0x470 JUMPI DUP1 PUSH4 0x6C1909ED EQ PUSH2 0x486 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4A6 JUMPI DUP1 PUSH4 0x721BC38B EQ PUSH2 0x4BB JUMPI DUP1 PUSH4 0x7CF12B90 EQ PUSH2 0x4D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3FEB5F2B EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0x4DEE1DC3 EQ PUSH2 0x414 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x433 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x446 JUMPI DUP1 PUSH4 0x62A5AF3B EQ PUSH2 0x45B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2151206E GT PUSH2 0x20E JUMPI DUP1 PUSH4 0x2151206E EQ PUSH2 0x34F JUMPI DUP1 PUSH4 0x23CC75A8 EQ PUSH2 0x365 JUMPI DUP1 PUSH4 0x2593198D EQ PUSH2 0x37C JUMPI DUP1 PUSH4 0x2F48AB7D EQ PUSH2 0x39C JUMPI DUP1 PUSH4 0x3E413BEE EQ PUSH2 0x3D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5834E67 EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0x6E4D36F EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0x115AFC3A EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0x117D260F EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0x212EA247 EQ PUSH2 0x33A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x29C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x44697265637420424E42207472616E7366657273206E6F7420616C6C6F776564 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1 PUSH2 0x2BC CALLDATASIZE PUSH1 0x4 PUSH2 0x2A79 JUMP JUMPDEST PUSH2 0x824 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH1 0x7 SLOAD LT ISZERO JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2CB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x306 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1 PUSH2 0x315 CALLDATASIZE PUSH1 0x4 PUSH2 0x2AA3 JUMP JUMPDEST PUSH2 0x9A8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x326 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1 PUSH2 0x335 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A79 JUMP JUMPDEST PUSH2 0xB11 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x346 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH2 0x2C1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x371 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37A PUSH2 0xCAF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x388 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1 PUSH2 0x397 CALLDATASIZE PUSH1 0x4 PUSH2 0x2ABE JUMP JUMPDEST PUSH2 0xDFF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH2 0x3BC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2CB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xC SLOAD PUSH2 0x3BC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x400 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3BC PUSH2 0x40F CALLDATASIZE PUSH1 0x4 PUSH2 0x2ABE JUMP JUMPDEST PUSH2 0xE13 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x420 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH2 0x2EA SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x37A PUSH2 0x441 CALLDATASIZE PUSH1 0x4 PUSH2 0x2B02 JUMP JUMPDEST PUSH2 0xE3D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x452 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1 PUSH2 0xE5C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x467 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37A PUSH2 0xE79 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x492 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37A PUSH2 0x4A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BCE JUMP JUMPDEST PUSH2 0xEBD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37A PUSH2 0x1038 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37A PUSH2 0x104A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37A PUSH2 0x10AC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x507 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3BC PUSH2 0x156D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37A PUSH2 0x159B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x531 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH1 0x7 SLOAD EQ PUSH2 0x2EA JUMP JUMPDEST PUSH2 0x37A PUSH2 0x54C CALLDATASIZE PUSH1 0x4 PUSH2 0x2A79 JUMP JUMPDEST PUSH2 0x1978 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x55D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xA SLOAD PUSH2 0x2C1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x572 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1 PUSH2 0x581 CALLDATASIZE PUSH1 0x4 PUSH2 0x2ABE JUMP JUMPDEST PUSH2 0x1FDB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x592 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1 PUSH2 0x5A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2ABE JUMP JUMPDEST PUSH2 0x1FEF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5ED PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x352E302E3 PUSH1 0xDC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0x2C1E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x606 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1 PUSH2 0x615 CALLDATASIZE PUSH1 0x4 PUSH2 0x2ABE JUMP JUMPDEST PUSH2 0x2000 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x626 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x667 PUSH2 0x635 CALLDATASIZE PUSH1 0x4 PUSH2 0x2ABE JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 SWAP1 SWAP5 ADD SLOAD SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x2CB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x69D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH2 0x2EA SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x73B PUSH2 0x6E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2ABE JUMP JUMPDEST POP PUSH1 0x6 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0xA0 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP1 DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD SWAP4 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x2 DUP4 ADD SLOAD SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x80 SWAP1 SWAP2 ADD MSTORE SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x2CB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x75C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1 PUSH2 0x76B CALLDATASIZE PUSH1 0x4 PUSH2 0x2C51 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x789 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH2 0x2EA SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1 PUSH2 0x7B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C51 JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37A PUSH2 0x7DF CALLDATASIZE PUSH1 0x4 PUSH2 0x2C51 JUMP JUMPDEST PUSH2 0x2011 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x3BC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x810 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37A PUSH2 0x81F CALLDATASIZE PUSH1 0x4 PUSH2 0x2C6E JUMP JUMPDEST PUSH2 0x204F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x833 PUSH2 0x5A1 DUP6 PUSH2 0x9A8 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 SUB PUSH2 0x87A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x125B9D985B1A59081C1C9A58D94819995959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x293 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x885 PUSH1 0x6 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD SWAP3 SWAP4 POP SWAP2 SWAP1 DUP1 DUP9 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x8B0 JUMPI PUSH2 0x8B0 PUSH2 0x2D05 JUMP JUMPDEST SUB PUSH2 0x8C9 JUMPI PUSH2 0x8C2 PUSH2 0x581 DUP9 DUP8 PUSH2 0x2D31 JUMP JUMPDEST SWAP1 POP PUSH2 0x983 JUMP JUMPDEST PUSH1 0x2 DUP9 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x8DD JUMPI PUSH2 0x8DD PUSH2 0x2D05 JUMP JUMPDEST EQ DUP1 PUSH2 0x8FA JUMPI POP PUSH1 0x1 DUP9 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x8F8 JUMPI PUSH2 0x8F8 PUSH2 0x2D05 JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x93B JUMPI PUSH1 0x6 PUSH1 0x0 PUSH2 0x90E DUP3 PUSH1 0x12 PUSH2 0x2D48 JUMP JUMPDEST PUSH2 0x919 SWAP1 PUSH1 0xA PUSH2 0x2E42 JUMP JUMPDEST PUSH2 0x923 SWAP1 DUP11 PUSH2 0x2D31 JUMP JUMPDEST SWAP1 POP PUSH2 0x932 PUSH2 0x581 DUP3 DUP10 PUSH2 0x2D31 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x983 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E737570706F72746564207061796D656E74206D6574686F64000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x293 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x98F DUP4 PUSH2 0xDFF JUMP JUMPDEST PUSH2 0x999 SWAP2 SWAP1 PUSH2 0x2E4E JUMP JUMPDEST SWAP7 POP POP POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x9BD JUMPI PUSH2 0x9BD PUSH2 0x2D05 JUMP JUMPDEST SUB PUSH2 0xA46 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA16 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA3A SWAP2 SWAP1 PUSH2 0x2E8A JUMP JUMPDEST POP SWAP2 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xA5A JUMPI PUSH2 0xA5A PUSH2 0x2D05 JUMP JUMPDEST SUB PUSH2 0xAA9 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x3FABE5A3 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xFEAF968C SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0xA0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA16 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xABD JUMPI PUSH2 0xABD PUSH2 0x2D05 JUMP JUMPDEST SUB PUSH2 0x93B JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x3FABE5A3 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xFEAF968C SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0xA0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA16 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 SUB PUSH2 0xB63 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D75737420626520706F736974697665000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x293 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB71 PUSH2 0x5A1 DUP6 PUSH2 0x9A8 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 SUB PUSH2 0xBB8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x125B9D985B1A59081C1C9A58D94819995959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x293 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBC3 PUSH1 0x6 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 SUB PUSH2 0xC06 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x4E6F206163746976652073616C65 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x293 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD SWAP1 SWAP2 PUSH2 0xC28 PUSH2 0x581 DUP4 DUP10 PUSH2 0x2D31 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP10 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xC3F JUMPI PUSH2 0xC3F PUSH2 0x2D05 JUMP JUMPDEST SUB PUSH2 0xC5F JUMPI DUP6 PUSH2 0xC4E DUP4 PUSH2 0xDFF JUMP JUMPDEST PUSH2 0xC58 SWAP2 SWAP1 PUSH2 0x2E4E JUMP JUMPDEST SWAP1 POP PUSH2 0xCA3 JUMP JUMPDEST PUSH1 0x1 DUP10 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xC73 JUMPI PUSH2 0xC73 PUSH2 0x2D05 JUMP JUMPDEST EQ DUP1 PUSH2 0xC90 JUMPI POP PUSH1 0x2 DUP10 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xC8E JUMPI PUSH2 0xC8E PUSH2 0x2D05 JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x93B JUMPI DUP6 PUSH2 0xC4E DUP4 PUSH3 0xF4240 PUSH2 0x2D31 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xCB7 PUSH2 0x2265 JUMP JUMPDEST PUSH2 0xCBF PUSH2 0x229D JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xCE2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x293 SWAP1 PUSH2 0x2EDC JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xD0B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x293 SWAP1 PUSH2 0x2F0B JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x7 SLOAD LT ISZERO PUSH2 0xD56 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14DBD99D0810D85C081393DD0814995858DA1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x293 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xDA5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x105A5C991C9BDC081B9BDD0818DBDB5C1B195D1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x293 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xDBA PUSH2 0x22CF JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH32 0x9C4B134DA32AAB35252391880A9F2A3C13A760D7817AE8823F2B301D3522045A SWAP1 PUSH1 0x0 SWAP1 LOG2 PUSH2 0xDFD PUSH1 0x1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3052 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9A2 DUP3 PUSH8 0xDE0B6B3A7640000 PUSH2 0x2D31 JUMP JUMPDEST PUSH1 0xA DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xE23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0xE45 PUSH2 0x2604 JUMP JUMPDEST PUSH2 0xE4E DUP3 PUSH2 0x26A9 JUMP JUMPDEST PUSH2 0xE58 DUP3 DUP3 PUSH2 0x26B1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE66 PUSH2 0x276E JUMP JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3032 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0xE81 PUSH2 0x229D JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xEAA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x293 SWAP1 PUSH2 0x2F0B JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH3 0xFF0000 NOT AND PUSH3 0x10000 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xEC5 PUSH2 0x2265 JUMP JUMPDEST PUSH2 0xECD PUSH2 0x229D JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xEF0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x293 SWAP1 PUSH2 0x2EDC JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xF19 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x293 SWAP1 PUSH2 0x2F0B JUMP JUMPDEST TIMESTAMP DUP4 GT DUP1 ISZERO PUSH2 0xF27 JUMPI POP DUP3 DUP3 GT JUMPDEST DUP1 ISZERO PUSH2 0xF46 JUMPI POP PUSH1 0x6 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD TIMESTAMP GT JUMPDEST PUSH2 0xF92 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642073746172742074696D652072616E67650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x293 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0xFA0 SWAP1 PUSH1 0x1 PUSH2 0x2F2C JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP8 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP8 SWAP1 SSTORE PUSH1 0x2 DUP2 ADD DUP7 SWAP1 SSTORE PUSH1 0x3 DUP2 ADD SWAP5 SWAP1 SWAP5 SSTORE PUSH1 0x4 DUP5 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP2 SLOAD DUP3 MLOAD DUP8 DUP2 MSTORE SWAP2 DUP3 ADD DUP7 SWAP1 MSTORE SWAP2 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x63B43FA153147ADE1DE28ED76841CDBC34E510ED94DD1FF5A88E278B0B1AD9BA SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x1033 PUSH1 0x1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3052 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1040 PUSH2 0x229D JUMP JUMPDEST PUSH2 0xDFD PUSH1 0x0 PUSH2 0x27B7 JUMP JUMPDEST PUSH2 0x1052 PUSH2 0x229D JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x109E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x105B1C9958591E48155B919C99595E9959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x293 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH3 0xFF0000 NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x10B4 PUSH2 0x2265 JUMP JUMPDEST PUSH2 0x10BC PUSH2 0x229D JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x10DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x293 SWAP1 PUSH2 0x2EDC JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD TIMESTAMP GT PUSH2 0x1131 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x53616C65206F6E676F696E67 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x293 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x7 SLOAD LT PUSH2 0x1177 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14DBD99D0818D85C081C995858DA1959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x293 JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD SWAP1 PUSH1 0x0 SWAP1 DUP3 GT ISZERO PUSH2 0x1198 JUMPI PUSH2 0x1191 PUSH1 0xB DUP4 PUSH2 0x2D48 JUMP JUMPDEST SWAP1 POP PUSH2 0x119C JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x0 PUSH2 0x11A9 PUSH1 0x1 DUP5 PUSH2 0x2D48 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP2 DUP2 LT PUSH2 0x153B JUMPI PUSH1 0x0 PUSH1 0xA DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x11C8 JUMPI PUSH2 0x11C8 PUSH2 0x2F3F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP JUMPDEST PUSH1 0x3 DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x14E4 JUMPI PUSH1 0x0 DUP2 PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1202 JUMPI PUSH2 0x1202 PUSH2 0x2D05 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP3 POP SWAP1 DUP2 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1231 JUMPI PUSH2 0x1231 PUSH2 0x2D05 JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1242 JUMPI PUSH2 0x1242 PUSH2 0x2D05 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x14DA JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1287 JUMPI PUSH2 0x1287 PUSH2 0x2D05 JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1298 JUMPI PUSH2 0x1298 PUSH2 0x2D05 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x12C0 JUMPI PUSH2 0x12C0 PUSH2 0x2D05 JUMP JUMPDEST SUB PUSH2 0x1362 JUMPI PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1312 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1317 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x135C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x109390881C99599D5B990819985A5B1959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x293 JUMP JUMPDEST POP PUSH2 0x1496 JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1376 JUMPI PUSH2 0x1376 PUSH2 0x2D05 JUMP JUMPDEST EQ DUP1 PUSH2 0x1393 JUMPI POP PUSH1 0x2 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1391 JUMPI PUSH2 0x1391 PUSH2 0x2D05 JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x1496 JUMPI PUSH1 0x0 PUSH1 0x1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x13AE JUMPI PUSH2 0x13AE PUSH2 0x2D05 JUMP JUMPDEST EQ PUSH2 0x13C4 JUMPI PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x13D1 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 SWAP3 POP SWAP1 DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1424 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1448 SWAP2 SWAP1 PUSH2 0x2F55 JUMP JUMPDEST PUSH2 0x1494 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537461626C65636F696E20726566756E64206661696C65640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x293 JUMP JUMPDEST POP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x3829AB241648D7348F97E4F77D36451330F2276EA8EEB3428E462012F9699E7 DUP3 DUP5 PUSH1 0x40 MLOAD PUSH2 0x14D1 SWAP3 SWAP2 SWAP1 PUSH2 0x2F99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x11DF JUMP JUMPDEST POP PUSH1 0xA DUP1 SLOAD DUP1 PUSH2 0x14F6 JUMPI PUSH2 0x14F6 PUSH2 0x2FAD JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 DUP3 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE SWAP1 SWAP2 ADD SWAP1 SWAP2 SSTORE DUP3 SWAP1 SUB PUSH2 0x1528 JUMPI POP PUSH2 0x153B JUMP JUMPDEST POP DUP1 PUSH2 0x1533 DUP2 PUSH2 0x2FC3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x11AC JUMP JUMPDEST POP PUSH1 0xA SLOAD PUSH1 0x0 SUB PUSH2 0x1554 JUMPI PUSH1 0x9 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST POP POP PUSH2 0xDFD PUSH1 0x1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3052 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x15A3 PUSH2 0x2265 JUMP JUMPDEST PUSH2 0x15AB PUSH2 0x229D JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x15CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x293 SWAP1 PUSH2 0x2EDC JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x15F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x293 SWAP1 PUSH2 0x2F0B JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x164F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41697264726F7020616C726561647920636F6D706C6574656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x293 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x169A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16BE SWAP2 SWAP1 PUSH2 0x2FDA JUMP JUMPDEST LT ISZERO PUSH2 0x1701 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x496E73756666696369656E742046756E6473 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x293 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD TIMESTAMP GT PUSH2 0x1753 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x53616C65206F6E676F696E67 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x293 JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD SWAP1 PUSH1 0x0 SWAP1 DUP3 GT ISZERO PUSH2 0x1774 JUMPI PUSH2 0x176D PUSH1 0xB DUP4 PUSH2 0x2D48 JUMP JUMPDEST SWAP1 POP PUSH2 0x1778 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x0 PUSH2 0x1785 PUSH1 0x1 DUP5 PUSH2 0x2D48 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP2 DUP2 LT PUSH2 0x1945 JUMPI PUSH1 0x0 PUSH1 0xA DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x17A4 JUMPI PUSH2 0x17A4 PUSH2 0x2F3F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 DUP4 MSTORE PUSH1 0xF SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP1 ISZERO PUSH2 0x1921 JUMPI PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD PUSH2 0x17EB PUSH2 0x156D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP6 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1840 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1864 SWAP2 SWAP1 PUSH2 0x2F55 JUMP JUMPDEST PUSH2 0x18A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x151BDAD95B881D1C985B9CD9995C8819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x293 JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD DUP1 PUSH2 0x18B9 JUMPI PUSH2 0x18B9 PUSH2 0x2FAD JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0x9BDCD0CC5503FB9A8DD7311D9617E33108C4B7C8948CC544B16C1FD63C6F475B SWAP1 PUSH2 0x1918 SWAP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST DUP3 PUSH1 0x0 SUB PUSH2 0x1930 JUMPI POP POP PUSH2 0x1945 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x193D SWAP1 PUSH2 0x2FC3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1788 JUMP JUMPDEST POP PUSH1 0xA SLOAD PUSH1 0x0 SUB PUSH2 0x1554 JUMPI PUSH1 0x9 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE POP POP PUSH2 0xDFD PUSH1 0x1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3052 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMP JUMPDEST PUSH2 0x1980 PUSH2 0x2265 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x19A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x293 SWAP1 PUSH2 0x2EDC JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x19CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x293 SWAP1 PUSH2 0x2F0B JUMP JUMPDEST PUSH2 0x19D4 PUSH2 0x156D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1A2B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E65722063616E6E6F742062757920746F6B656E73000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x293 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x0 SUB PUSH2 0x1A67 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x24 DUP3 ADD MSTORE PUSH7 0x4E6F2073616C65 PUSH1 0xC8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x293 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1AC5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x14D85B1948185B1C9958591E48199A5B985B1A5E9959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x293 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1ADA JUMPI PUSH2 0x1ADA PUSH2 0x2D05 JUMP JUMPDEST SUB PUSH2 0x1B99 JUMPI CALLVALUE PUSH1 0x0 SUB PUSH2 0x1B2F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656E6420612076616C696420424E4220616D6F756E74000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x293 JUMP JUMPDEST PUSH2 0x1B39 DUP4 CALLVALUE PUSH2 0x824 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP3 POP CALLVALUE SWAP2 SWAP1 DUP6 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1B60 JUMPI PUSH2 0x1B60 PUSH2 0x2D05 JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1B71 JUMPI PUSH2 0x1B71 PUSH2 0x2D05 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1B8E SWAP2 SWAP1 PUSH2 0x2F2C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1D79 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1BAD JUMPI PUSH2 0x1BAD PUSH2 0x2D05 JUMP JUMPDEST EQ DUP1 PUSH2 0x1BCA JUMPI POP PUSH1 0x2 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1BC8 JUMPI PUSH2 0x1BC8 PUSH2 0x2D05 JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x1D79 JUMPI DUP2 PUSH1 0x0 SUB PUSH2 0x1C14 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x115B9D195C881D985B1A5908185B5BDD5B9D PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x293 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1C2A JUMPI PUSH2 0x1C2A PUSH2 0x2D05 JUMP JUMPDEST EQ PUSH2 0x1C40 JUMPI PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1C4D JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1CA3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1CC7 SWAP2 SWAP1 PUSH2 0x2F55 JUMP JUMPDEST PUSH2 0x1D13 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537461626C65636F696E207472616E73666572206661696C6564000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x293 JUMP JUMPDEST PUSH2 0x1D1D DUP5 DUP5 PUSH2 0x824 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP4 POP DUP5 SWAP2 SWAP1 DUP7 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1D44 JUMPI PUSH2 0x1D44 PUSH2 0x2D05 JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1D55 JUMPI PUSH2 0x1D55 PUSH2 0x2D05 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1D72 SWAP2 SWAP1 PUSH2 0x2F2C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP JUMPDEST DUP1 PUSH1 0x0 SUB PUSH2 0x1DC0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x125B9D985B1A59081D1BDAD95B88185B5BDD5B9D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x293 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH2 0x1DE9 SWAP1 DUP5 PUSH2 0x2D31 JUMP JUMPDEST PUSH2 0x1DF3 SWAP2 SWAP1 PUSH2 0x2E4E JUMP JUMPDEST SWAP1 POP PUSH1 0x5 SLOAD DUP2 PUSH1 0x7 SLOAD PUSH2 0x1E06 SWAP2 SWAP1 PUSH2 0x2F2C JUMP JUMPDEST GT ISZERO PUSH2 0x1E47 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x12185C990818D85C081C995858DA1959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x293 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1E62 SWAP1 DUP3 SWAP1 PUSH2 0x2F2C JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x7 SLOAD PUSH2 0x1E80 SWAP1 DUP3 SWAP1 PUSH2 0x2F2C JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x6 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1EA7 SWAP1 DUP5 SWAP1 PUSH2 0x2F2C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x8 SLOAD PUSH2 0x1EBA SWAP1 DUP4 SWAP1 PUSH2 0x2F2C JUMP JUMPDEST PUSH1 0x8 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x1F16 JUMPI PUSH1 0xA DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1F31 SWAP1 DUP4 SWAP1 PUSH2 0x2F2C JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x10 SWAP1 MSTORE KECCAK256 DUP1 SLOAD DUP6 SWAP2 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1F69 JUMPI PUSH2 0x1F69 PUSH2 0x2D05 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x6 SLOAD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 MLOAD CALLER SWAP2 PUSH32 0xDBCEF474A632721725D49E3F35D9DEFE0257100B01D1E4B4B135B14D6FE296E8 SWAP2 PUSH2 0x1FBA SWAP2 DUP8 SWAP2 DUP10 SWAP1 DUP12 SWAP1 PUSH2 0x2FF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH2 0xE58 PUSH1 0x1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3052 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9A2 PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x2E4E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9A2 DUP3 PUSH5 0x2540BE400 PUSH2 0x2D31 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9A2 PUSH5 0x2540BE400 DUP4 PUSH2 0x2E4E JUMP JUMPDEST PUSH2 0x2019 PUSH2 0x229D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2043 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x293 JUMP JUMPDEST PUSH2 0x204C DUP2 PUSH2 0x27B7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x2095 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x20B2 JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x20C0 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x20DE JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x2108 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0x2111 CALLER PUSH2 0x2828 JUMP JUMPDEST PUSH2 0x2119 PUSH2 0x2839 JUMP JUMPDEST DUP13 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP10 PUSH1 0x4 DUP2 SWAP1 SSTORE POP DUP9 PUSH1 0x5 DUP2 SWAP1 SSTORE POP DUP12 PUSH1 0xB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP11 PUSH1 0xC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP8 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP7 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x2256 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3052 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 NOT ADD PUSH2 0x2297 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH2 0x22A6 PUSH2 0x156D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xDFD JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x293 JUMP JUMPDEST ADDRESS DUP1 BALANCE DUP1 ISZERO PUSH2 0x2376 JUMPI PUSH1 0x0 PUSH2 0x22E2 PUSH2 0x156D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x232C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2331 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x2374 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x293 JUMP JUMPDEST POP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP3 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x23C1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x23E5 SWAP2 SWAP1 PUSH2 0x2FDA JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x24BA JUMPI PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x2406 PUSH2 0x156D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2453 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2477 SWAP2 SWAP1 PUSH2 0x2F55 JUMP JUMPDEST PUSH2 0x24BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x1554D115081D1C985B9CD9995C8819985A5B1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x293 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP3 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2505 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2529 SWAP2 SWAP1 PUSH2 0x2FDA JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x25FE JUMPI PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x254A PUSH2 0x156D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2597 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x25BB SWAP2 SWAP1 PUSH2 0x2F55 JUMP JUMPDEST PUSH2 0x25FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x1554D110C81D1C985B9CD9995C8819985A5B1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x293 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0x268B JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x267F PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3032 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xDFD JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x204C PUSH2 0x229D JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x270B JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x2708 SWAP2 DUP2 ADD SWAP1 PUSH2 0x2FDA JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2733 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x293 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3032 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0x2764 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x293 JUMP JUMPDEST PUSH2 0x1033 DUP4 DUP4 PUSH2 0x2841 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0xDFD JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP3 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x2830 PUSH2 0x2897 JUMP JUMPDEST PUSH2 0x204C DUP2 PUSH2 0x28E0 JUMP JUMPDEST PUSH2 0xDFD PUSH2 0x2897 JUMP JUMPDEST PUSH2 0x284A DUP3 PUSH2 0x28E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x288F JUMPI PUSH2 0x1033 DUP3 DUP3 PUSH2 0x294D JUMP JUMPDEST PUSH2 0xE58 PUSH2 0x29C3 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0xDFD JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2019 PUSH2 0x2897 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH1 0x0 SUB PUSH2 0x291E JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x293 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3032 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x296A SWAP2 SWAP1 PUSH2 0x3015 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x29A5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x29AA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x29BA DUP6 DUP4 DUP4 PUSH2 0x29E2 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0xDFD JUMPI PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x29F7 JUMPI PUSH2 0x29F2 DUP3 PUSH2 0x2A41 JUMP JUMPDEST PUSH2 0x2A3A JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x2A0E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x2A37 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x293 JUMP JUMPDEST POP DUP1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x2A51 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD6BDA275 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0xB0C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2A8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A95 DUP4 PUSH2 0x2A6A JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2AB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A3A DUP3 PUSH2 0x2A6A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2AD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x204C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2B15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2B20 DUP2 PUSH2 0x2AD7 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2B3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x2B4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2B67 JUMPI PUSH2 0x2B67 PUSH2 0x2AEC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x2B96 JUMPI PUSH2 0x2B96 PUSH2 0x2AEC JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 ADD PUSH1 0x20 ADD DUP8 LT ISZERO PUSH2 0x2BAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP4 DUP4 ADD ADD MSTORE DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2BE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2C15 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2BFD JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2C3D DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x2BFA JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2A3A DUP2 PUSH2 0x2AD7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x2C8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 CALLDATALOAD PUSH2 0x2C96 DUP2 PUSH2 0x2AD7 JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD PUSH2 0x2CA6 DUP2 PUSH2 0x2AD7 JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH2 0x2CB6 DUP2 PUSH2 0x2AD7 JUMP JUMPDEST SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD SWAP4 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD PUSH2 0x2CD4 DUP2 PUSH2 0x2AD7 JUMP JUMPDEST SWAP3 POP PUSH1 0xC0 DUP10 ADD CALLDATALOAD PUSH2 0x2CE4 DUP2 PUSH2 0x2AD7 JUMP JUMPDEST SWAP2 POP PUSH1 0xE0 DUP10 ADD CALLDATALOAD PUSH2 0x2CF4 DUP2 PUSH2 0x2AD7 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x9A2 JUMPI PUSH2 0x9A2 PUSH2 0x2D1B JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x9A2 JUMPI PUSH2 0x9A2 PUSH2 0x2D1B JUMP JUMPDEST PUSH1 0x1 DUP2 JUMPDEST PUSH1 0x1 DUP5 GT ISZERO PUSH2 0x2D96 JUMPI DUP1 DUP6 DIV DUP2 GT ISZERO PUSH2 0x2D7A JUMPI PUSH2 0x2D7A PUSH2 0x2D1B JUMP JUMPDEST PUSH1 0x1 DUP5 AND ISZERO PUSH2 0x2D88 JUMPI SWAP1 DUP2 MUL SWAP1 JUMPDEST PUSH1 0x1 SWAP4 SWAP1 SWAP4 SHR SWAP3 DUP1 MUL PUSH2 0x2D5F JUMP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2DAD JUMPI POP PUSH1 0x1 PUSH2 0x9A2 JUMP JUMPDEST DUP2 PUSH2 0x2DBA JUMPI POP PUSH1 0x0 PUSH2 0x9A2 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x2DD0 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x2DDA JUMPI PUSH2 0x2DF6 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x9A2 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x2DEB JUMPI PUSH2 0x2DEB PUSH2 0x2D1B JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x9A2 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x2E19 JUMPI POP DUP2 DUP2 EXP PUSH2 0x9A2 JUMP JUMPDEST PUSH2 0x2E26 PUSH1 0x0 NOT DUP5 DUP5 PUSH2 0x2D5B JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x2E3A JUMPI PUSH2 0x2E3A PUSH2 0x2D1B JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A3A DUP4 DUP4 PUSH2 0x2D9E JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2E6B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xB0C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2EA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2EAB DUP7 PUSH2 0x2E70 JUMP JUMPDEST PUSH1 0x20 DUP8 ADD MLOAD PUSH1 0x40 DUP9 ADD MLOAD PUSH1 0x60 DUP10 ADD MLOAD SWAP3 SWAP8 POP SWAP1 SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0x2ED0 PUSH1 0x80 DUP8 ADD PUSH2 0x2E70 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x1250D3C8185B1C9958591E48199A5B985B1A5E9959 PUSH1 0x5A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x7 SWAP1 DUP3 ADD MSTORE PUSH7 0x199C99595E9959 PUSH1 0xCA SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x9A2 JUMPI PUSH2 0x9A2 PUSH2 0x2D1B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2A3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x2F95 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 DUP2 ADD PUSH2 0x2A3A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2F77 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x2FD2 JUMPI PUSH2 0x2FD2 PUSH2 0x2D1B JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2FEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD PUSH2 0x29BA PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2F77 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x3027 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x2BFA JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC9B779B17422D0DF9222301 DUP12 ORIGIN 0xB4 0xD1 STATICCALL CHAINID 0xE0 PUSH18 0x723D6817E2486D003BECC55F00A264697066 PUSH20 0x58221220F6169F3EA7A8AFB825B42A594AE709B4 ORIGIN PUSH17 0xA6BB30BF1EBA66C467A8093DC64964736F PUSH13 0x634300081C0033000000000000 ",
							"sourceMap": "429:15325:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14766:42;;-1:-1:-1;;;14766:42:14;;216:2:15;14766:42:14;;;198:21:15;;;235:18;;;228:30;294:34;274:18;;;267:62;346:18;;14766:42:14;;;;;;;;429:15325;;;;5373:1232;;;;;;;;;;-1:-1:-1;5373:1232:14;;;;;:::i;:::-;;:::i;:::-;;;1014:25:15;;;1002:2;987:18;5373:1232:14;;;;;;;;15266:117;;;;;;;;;;-1:-1:-1;15363:12:14;;15340:19;;:35;;15266:117;;;1215:14:15;;1208:22;1190:41;;1178:2;1163:18;15266:117:14;1050:187:15;3601:646:14;;;;;;;;;;-1:-1:-1;3601:646:14;;;;;:::i;:::-;;:::i;6611:1113::-;;;;;;;;;;-1:-1:-1;6611:1113:14;;;;;:::i;:::-;;:::i;14821:91::-;;;;;;;;;;-1:-1:-1;14896:9:14;;14821:91;;973:27;;;;;;;;;;;;;;;;10159:411;;;;;;;;;;;;;:::i;:::-;;4355:96;;;;;;;;;;-1:-1:-1;4355:96:14;;;;;:::i;:::-;;:::i;1359:19::-;;;;;;;;;;-1:-1:-1;1359:19:14;;;;-1:-1:-1;;;;;1359:19:14;;;;;;-1:-1:-1;;;;;2037:32:15;;;2019:51;;2007:2;1992:18;1359:19:14;1873:203:15;1384:19:14;;;;;;;;;;-1:-1:-1;1384:19:14;;;;-1:-1:-1;;;;;1384:19:14;;;1327:26;;;;;;;;;;-1:-1:-1;1327:26:14;;;;;:::i;:::-;;:::i;1262:30::-;;;;;;;;;;-1:-1:-1;1262:30:14;;;;;;;;;;;4161:214:3;;;;;;:::i;:::-;;:::i;3708:134::-;;;;;;;;;;;;;:::i;3338:129:14:-;;;;;;;;;;;;;:::i;1109:30::-;;;;;;;;;;;;;;;;4659:708;;;;;;;;;;-1:-1:-1;4659:708:14;;;;;:::i;:::-;;:::i;3155:101:1:-;;;;;;;;;;;;;:::i;1069:34:14:-;;;;;;;;;;;;;;;;3473:122;;;;;;;;;;;;;:::i;12677:2046::-;;;;;;;;;;;;;:::i;2441:144:1:-;;;;;;;;;;;;;:::i;11362:1309:14:-;;;;;;;;;;;;;:::i;15389:117::-;;;;;;;;;;-1:-1:-1;15486:12:14;;15463:19;;:35;15389:117;;7730:2423;;;;;;:::i;:::-;;:::i;15512:151::-;;;;;;;;;;-1:-1:-1;15610:9:14;:16;15512:151;;4557:96;;;;;;;;;;-1:-1:-1;4557:96:14;;;;;:::i;:::-;;:::i;4253:::-;;;;;;;;;;-1:-1:-1;4253:96:14;;;;;:::i;:::-;;:::i;1039:24::-;;;;;;;;;;;;;;;;1819:58:3;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1819:58:3;;;;;;;;;;;;:::i;4456:96:14:-;;;;;;;;;;-1:-1:-1;4456:96:14;;;;;:::i;:::-;;:::i;1426:37::-;;;;;;;;;;-1:-1:-1;1426:37:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4995:25:15;;;5051:2;5036:18;;5029:34;;;;5079:18;;;5072:34;;;;5137:2;5122:18;;5115:34;5193:14;5186:22;5180:3;5165:19;;5158:51;4982:3;4967:19;1426:37:14;4742:473:15;1298:21:14;;;;;;;;;;-1:-1:-1;1298:21:14;;;;;;;;;;;1006:27;;;;;;;;;;;;;;;;15036:224;;;;;;;;;;-1:-1:-1;15036:224:14;;;;;:::i;:::-;-1:-1:-1;15196:9:14;;15119:18;15190:16;;;:5;:16;;;;;;;;;15171:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15036:224;;;;;5394:25:15;;;5450:2;5435:18;;5428:34;;;;5367:18;15036:224:14;5220:248:15;1469:53:14;;;;;;;;;;-1:-1:-1;1469:53:14;;;;;:::i;:::-;;;;;;;;;;;;;;1229:26;;;;;;;;;;-1:-1:-1;1229:26:14;;;;;;;;1528:57;;;;;;;;;;-1:-1:-1;1528:57:14;;;;;:::i;:::-;;;;;;;;;;;;;;3405:215:1;;;;;;;;;;-1:-1:-1;3405:215:1;;;;;:::i;:::-;;:::i;948:19:14:-;;;;;;;;;;-1:-1:-1;948:19:14;;;;-1:-1:-1;;;;;948:19:14;;;2459:680;;;;;;;;;;-1:-1:-1;2459:680:14;;;;;:::i;:::-;;:::i;5373:1232::-;5498:7;5517:13;5533:52;5555:28;5569:13;5555;:28::i;5533:52::-;5517:68;;5604:5;5613:1;5604:10;5596:41;;;;-1:-1:-1;;;5596:41:14;;7367:2:15;5596:41:14;;;7349:21:15;7406:2;7386:18;;;7379:30;-1:-1:-1;;;7425:18:15;;;7418:48;7483:18;;5596:41:14;7165:342:15;5596:41:14;5647:21;5671:18;14896:9;;;14821:91;5671:18;5699:17;5719:20;;;:5;:20;;;;;5776:18;;;;5647:42;;-1:-1:-1;5719:20:14;5776:18;5699:17;5878:13;:34;;;;;;;;:::i;:::-;;5874:598;;5965:48;5982:30;5999:13;5990:5;5982:30;:::i;5965:48::-;5928:85;;5874:598;;;6064:18;6047:13;:35;;;;;;;;:::i;:::-;;:86;;;-1:-1:-1;6115:18:14;6098:13;:35;;;;;;;;:::i;:::-;;6047:86;6030:442;;;6187:1;6158:26;6267:23;6187:1;6267:2;:23;:::i;:::-;6262:29;;:2;:29;:::i;:::-;6229:63;;:13;:63;:::i;:::-;6202:90;-1:-1:-1;6343:51:14;6360:33;6202:90;6368:5;6360:33;:::i;6343:51::-;6306:88;;6144:261;;6030:442;;;6425:36;;-1:-1:-1;;;6425:36:14;;9707:2:15;6425:36:14;;;9689:21:15;9746:2;9726:18;;;9719:30;9785:28;9765:18;;;9758:56;9831:18;;6425:36:14;9505:350:15;6030:442:14;6482:19;6555:15;6504:36;6521:18;6504:16;:36::i;:::-;:66;;;;:::i;:::-;6482:88;-1:-1:-1;;;;;;;5373:1232:14;;;;;:::o;3601:646::-;3698:6;;3724:13;:34;;;;;;;;:::i;:::-;;3720:521;;3777:12;3799;;;;;;;;;-1:-1:-1;;;;;3799:12:14;-1:-1:-1;;;;;3799:28:14;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3774:55:14;;3601:646;-1:-1:-1;;;;;;3601:646:14:o;3720:521::-;3893:18;3876:13;:35;;;;;;;;:::i;:::-;;3872:369;;3952:13;;:31;;;-1:-1:-1;;;3952:31:14;;;;3930:12;;-1:-1:-1;;;;;3952:13:14;;:29;;:31;;;;;;;;;;;;;;:13;:31;;;;;;;;;;;;;;3872:369;4047:18;4030:13;:35;;;;;;;;:::i;:::-;;4026:215;;4106:13;;:31;;;-1:-1:-1;;;4106:31:14;;;;4084:12;;-1:-1:-1;;;;;4106:13:14;;:29;;:31;;;;;;;;;;;;;;:13;:31;;;;;;;;;;;;;;4026:215;3601:646;;;:::o;6611:1113::-;6738:7;6765:11;6780:1;6765:16;6757:52;;;;-1:-1:-1;;;6757:52:14;;11044:2:15;6757:52:14;;;11026:21:15;11083:2;11063:18;;;11056:30;11122:25;11102:18;;;11095:53;11165:18;;6757:52:14;10842:347:15;6757:52:14;6820:13;6836:52;6858:28;6872:13;6858;:28::i;6836:52::-;6820:68;;6907:5;6916:1;6907:10;6899:41;;;;-1:-1:-1;;;6899:41:14;;7367:2:15;6899:41:14;;;7349:21:15;7406:2;7386:18;;;7379:30;-1:-1:-1;;;7425:18:15;;;7418:48;7483:18;;6899:41:14;7165:342:15;6899:41:14;6951:21;6975:18;14896:9;;;14821:91;6975:18;6951:42;;7011:13;7028:1;7011:18;7003:45;;;;-1:-1:-1;;;7003:45:14;;11396:2:15;7003:45:14;;;11378:21:15;11435:2;11415:18;;;11408:30;-1:-1:-1;;;11454:18:15;;;11447:44;11508:18;;7003:45:14;11194:338:15;7003:45:14;7058:17;7078:20;;;:5;:20;;;;;7134:18;;;;7078:20;;7191:47;7208:29;7134:18;7208:11;:29;:::i;7191:47::-;7163:75;-1:-1:-1;7249:21:14;;7284:13;:34;;;;;;;;:::i;:::-;;7280:407;;7396:5;7350:35;7367:17;7350:16;:35::i;:::-;:52;;;;:::i;:::-;7334:68;;7280:407;;;7453:18;7436:13;:35;;;;;;;;:::i;:::-;;:86;;;-1:-1:-1;7504:18:14;7487:13;:35;;;;;;;;:::i;:::-;;7436:86;7419:268;;;7603:5;7564:27;:17;7585:5;7564:27;:::i;7419:268::-;7704:13;6611:1113;-1:-1:-1;;;;;;;;6611:1113:14:o;10159:411::-;3395:21:5;:19;:21::i;:::-;2334:13:1::1;:11;:13::i;:::-;3191:14:14::2;::::0;::::2;;3190:15;3182:49;;;;-1:-1:-1::0;;;3182:49:14::2;;;;;;;:::i;:::-;3293:9:::3;::::0;;;::::3;;;3292:10;3284:30;;;;-1:-1:-1::0;;;3284:30:14::3;;;;;;;:::i;:::-;10334:12:::4;;10311:19;;:35;;10290:102;;;::::0;-1:-1:-1;;;10290:102:14;;12424:2:15;10290:102:14::4;::::0;::::4;12406:21:15::0;12463:2;12443:18;;;12436:30;-1:-1:-1;;;12482:18:15;;;12475:50;12542:18;;10290:102:14::4;12222:344:15::0;10290:102:14::4;10410:18;::::0;::::4;::::0;::::4;;;10402:52;;;::::0;-1:-1:-1;;;10402:52:14;;12773:2:15;10402:52:14::4;::::0;::::4;12755:21:15::0;12812:2;12792:18;;;12785:30;-1:-1:-1;;;12831:18:15;;;12824:51;12892:18;;10402:52:14::4;12571:345:15::0;10402:52:14::4;10465:14;:21:::0;;-1:-1:-1;;10465:21:14::4;10482:4;10465:21;::::0;;10496:23:::4;:21;:23::i;:::-;10547:15;::::0;10534:29:::4;::::0;::::4;::::0;;;::::4;3437:20:5::0;1949:1;-1:-1:-1;;;;;;;;;;;4113:23:5;3860:283;3437:20;10159:411:14:o;4355:96::-;4411:4;4434:10;:3;4440:4;4434:10;:::i;1327:26::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1327:26:14;;-1:-1:-1;1327:26:14;:::o;4161:214:3:-;2655:13;:11;:13::i;:::-;4276:36:::1;4294:17;4276;:36::i;:::-;4322:46;4344:17;4363:4;4322:21;:46::i;:::-;4161:214:::0;;:::o;3708:134::-;3777:7;2926:20;:18;:20::i;:::-;-1:-1:-1;;;;;;;;;;;;3708:134:3;:::o;3338:129:14:-;2334:13:1;:11;:13::i;:::-;3293:9:14::1;::::0;;;::::1;;;3292:10;3284:30;;;;-1:-1:-1::0;;;3284:30:14::1;;;;;;;:::i;:::-;3444:9:::2;:16:::0;;-1:-1:-1;;3444:16:14::2;::::0;::::2;::::0;;3338:129::o;4659:708::-;3395:21:5;:19;:21::i;:::-;2334:13:1::1;:11;:13::i;:::-;3191:14:14::2;::::0;::::2;;3190:15;3182:49;;;;-1:-1:-1::0;;;3182:49:14::2;;;;;;;:::i;:::-;3293:9:::3;::::0;;;::::3;;;3292:10;3284:30;;;;-1:-1:-1::0;;;3284:30:14::3;;;;;;;:::i;:::-;4870:15:::4;4857:10;:28;:53;;;;;4900:10;4889:8;:21;4857:53;:97;;;;-1:-1:-1::0;15005:9:14;;14973:7;14999:16;;;:5;:16;;;;;:24;;;4914:15:::4;:40;4857:97;4837:167;;;::::0;-1:-1:-1;;;4837:167:14;;13123:2:15;4837:167:14::4;::::0;::::4;13105:21:15::0;13162:2;13142:18;;;13135:30;13201:26;13181:18;;;13174:54;13245:18;;4837:167:14::4;12921:348:15::0;4837:167:14::4;5026:9;::::0;:12:::4;::::0;5037:1:::4;5026:12;:::i;:::-;5014:9;:24:::0;;;5048:17:::4;5068:16:::0;;;:5:::4;:16;::::0;;;;;;;5098:27;;;5139:12:::4;::::0;::::4;:23:::0;;;5176:18:::4;::::0;::::4;:35:::0;;;5225:15:::4;::::0;::::4;:19:::0;;;;5258:16:::4;::::0;::::4;:24:::0;;-1:-1:-1;;5258:24:14::4;::::0;;5312:9;;5297:63;;13606:25:15;;;13647:18;;;13640:34;;;13690:18;;;13683:34;;;5297:63:14::4;::::0;13594:2:15;13579:18;5297:63:14::4;;;;;;;4827:540;3437:20:5::0;1949:1;-1:-1:-1;;;;;;;;;;;4113:23:5;3860:283;3437:20;4659:708:14;;;:::o;3155:101:1:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;3473:122:14:-:0;2334:13:1;:11;:13::i;:::-;3530:9:14::1;::::0;;;::::1;;;3522:39;;;::::0;-1:-1:-1;;;3522:39:14;;13930:2:15;3522:39:14::1;::::0;::::1;13912:21:15::0;13969:2;13949:18;;;13942:30;-1:-1:-1;;;13988:18:15;;;13981:47;14045:18;;3522:39:14::1;13728:341:15::0;3522:39:14::1;3571:9;:17:::0;;-1:-1:-1;;3571:17:14::1;::::0;;3473:122::o;12677:2046::-;3395:21:5;:19;:21::i;:::-;2334:13:1::1;:11;:13::i;:::-;3191:14:14::2;::::0;::::2;;3190:15;3182:49;;;;-1:-1:-1::0;;;3182:49:14::2;;;;;;;:::i;:::-;15005:9:::0;;14973:7;14999:16;;;:5;:16;;;;;:24;;;12769:15:::3;:40;12761:65;;;::::0;-1:-1:-1;;;12761:65:14;;14276:2:15;12761:65:14::3;::::0;::::3;14258:21:15::0;14315:2;14295:18;;;14288:30;-1:-1:-1;;;14334:18:15;;;14327:42;14386:18;;12761:65:14::3;14074:336:15::0;12761:65:14::3;12866:12;;12844:19;;:34;12836:63;;;::::0;-1:-1:-1;;;12836:63:14;;14617:2:15;12836:63:14::3;::::0;::::3;14599:21:15::0;14656:2;14636:18;;;14629:30;-1:-1:-1;;;14675:18:15;;;14668:46;14731:18;;12836:63:14::3;14415:340:15::0;12836:63:14::3;12935:9;:16:::0;;;12910:22:::3;::::0;13001:19;::::3;12997:141;;;13056:19;13073:2;13056:14:::0;:19:::3;:::i;:::-;13036:39;;12997:141;;;-1:-1:-1::0;13126:1:14::3;12997:141;13153:9;13165:18;13182:1;13165:14:::0;:18:::3;:::i;:::-;13153:30;;13148:1487;13190:17;13185:1;:22;13148:1487;;13228:16;13247:9;13257:1;13247:12;;;;;;;;:::i;:::-;;::::0;;;::::3;::::0;;::::3;::::0;-1:-1:-1;;;;;13247:12:14::3;::::0;-1:-1:-1;13273:1252:14::3;13295:1;13291;:5;;;13273:1252;;;13321:27;13365:1;13351:16;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;13402:26:14;::::3;13385:14;13402:26:::0;;;:16:::3;:26;::::0;;;;13321:46;;-1:-1:-1;13385:14:14;;13321:46;13402:41:::3;::::0;::::3;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;13385:58;;13475:1;13466:6;:10;13462:1032;;;-1:-1:-1::0;;;;;13500:26:14;::::3;13544:1;13500:26:::0;;;:16:::3;:26;::::0;;;;13544:1;13527:13;13500:41:::3;::::0;::::3;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;::::0;;::::3;::::0;::::3;::::0;;;;;;-1:-1:-1;13500:41:14;;;:45;;;;13571:13:::3;:34;;;;;;;;:::i;:::-;::::0;13567:813:::3;;13634:9;13657:8;-1:-1:-1::0;;;;;13649:22:14::3;13679:6;13649:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13633:111;;;13778:4;13770:34;;;::::0;-1:-1:-1;;;13770:34:14;;15304:2:15;13770:34:14::3;::::0;::::3;15286:21:15::0;15343:2;15323:18;;;15316:30;-1:-1:-1;;;15362:18:15;;;15355:47;15419:18;;13770:34:14::3;15102:341:15::0;13770:34:14::3;13607:220;13567:813;;;13879:18;13862:13;:35;;;;;;;;:::i;:::-;;:98;;;-1:-1:-1::0;13942:18:14::3;13925:13;:35;;;;;;;;:::i;:::-;;13862:98;13833:547;;;14009:17;14046:18;14029:13;:35;;;;;;;;:::i;:::-;;:121;;14145:4;::::0;-1:-1:-1;;;;;14145:4:14::3;14029:121;;;14102:4;::::0;-1:-1:-1;;;;;14102:4:14::3;14029:121;14213:37;::::0;-1:-1:-1;;;14213:37:14;;-1:-1:-1;;;;;15640:32:15;;;14213:37:14::3;::::0;::::3;15622:51:15::0;15689:18;;;15682:34;;;14009:141:14;;-1:-1:-1;14213:19:14;;::::3;::::0;::::3;::::0;15595:18:15;;14213:37:14::3;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14176:156;;;::::0;-1:-1:-1;;;14176:156:14;;16211:2:15;14176:156:14::3;::::0;::::3;16193:21:15::0;16250:2;16230:18;;;16223:30;16289:26;16269:18;;;16262:54;16333:18;;14176:156:14::3;16009:348:15::0;14176:156:14::3;13983:397;13833:547;14443:8;-1:-1:-1::0;;;;;14427:48:14::3;;14453:6;14461:13;14427:48;;;;;;;:::i;:::-;;;;;;;;13462:1032;-1:-1:-1::0;;13298:3:14::3;;13273:1252;;;;14538:9;:15;;;;;;;:::i;:::-;;::::0;;;::::3;::::0;;;;-1:-1:-1;;14538:15:14;;;;;-1:-1:-1;;;;;;14538:15:14::3;::::0;;;;;;;;14571:6;;;14567:58:::3;;14601:5;;;14567:58;-1:-1:-1::0;13209:3:14;::::3;::::0;::::3;:::i;:::-;;;;13148:1487;;;-1:-1:-1::0;14648:9:14::3;:16:::0;14668:1:::3;14648:21:::0;14644:73:::3;;14685:14;:21:::0;;-1:-1:-1;;14685:21:14::3;14702:4;14685:21;::::0;;14644:73:::3;12751:1972;;3437:20:5::0;1949:1;-1:-1:-1;;;;;;;;;;;4113:23:5;3860:283;2441:144:1;1313:22;2570:8;-1:-1:-1;;;;;2570:8:1;;2441:144::o;11362:1309:14:-;3395:21:5;:19;:21::i;:::-;2334:13:1::1;:11;:13::i;:::-;3191:14:14::2;::::0;::::2;;3190:15;3182:49;;;;-1:-1:-1::0;;;3182:49:14::2;;;;;;;:::i;:::-;3293:9:::3;::::0;;;::::3;;;3292:10;3284:30;;;;-1:-1:-1::0;;;3284:30:14::3;;;;;;;:::i;:::-;11506:18:::4;::::0;::::4;::::0;::::4;;;11505:19;11497:57;;;::::0;-1:-1:-1;;;11497:57:14;;17375:2:15;11497:57:14::4;::::0;::::4;17357:21:15::0;17414:2;17394:18;;;17387:30;17453:27;17433:18;;;17426:55;17498:18;;11497:57:14::4;17173:349:15::0;11497:57:14::4;11616:15;::::0;11585:5:::4;::::0;:27:::4;::::0;-1:-1:-1;;;11585:27:14;;11601:10:::4;11585:27;::::0;::::4;2019:51:15::0;-1:-1:-1;;;;;11585:5:14;;::::4;::::0;:15:::4;::::0;1992:18:15;;11585:27:14::4;;;;;;;;;;;;;;;;;::::0;::::4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:46;;11564:111;;;::::0;-1:-1:-1;;;11564:111:14;;17964:2:15;11564:111:14::4;::::0;::::4;17946:21:15::0;18003:2;17983:18;;;17976:30;-1:-1:-1;;;18022:18:15;;;18015:48;18080:18;;11564:111:14::4;17762:342:15::0;11564:111:14::4;15005:9:::0;;14973:7;14999:16;;;:5;:16;;;;;:24;;;11693:15:::4;:40;11685:65;;;::::0;-1:-1:-1;;;11685:65:14;;14276:2:15;11685:65:14::4;::::0;::::4;14258:21:15::0;14315:2;14295:18;;;14288:30;-1:-1:-1;;;14334:18:15;;;14327:42;14386:18;;11685:65:14::4;14074:336:15::0;11685:65:14::4;11786:9;:16:::0;;;11761:22:::4;::::0;11852:19;::::4;11848:141;;;11907:19;11924:2;11907:14:::0;:19:::4;:::i;:::-;11887:39;;11848:141;;;-1:-1:-1::0;11977:1:14::4;11848:141;12003:9;12015:18;12032:1;12015:14:::0;:18:::4;:::i;:::-;12003:30;;11998:581;12040:17;12035:1;:22;11998:581;;12078:16;12097:9;12107:1;12097:12;;;;;;;;:::i;:::-;;::::0;;;::::4;::::0;;;;;::::4;::::0;-1:-1:-1;;;;;12097:12:14::4;12146:32:::0;;;:22:::4;:32:::0;;;;;;;;12097:12;;-1:-1:-1;12197:16:14;;12193:313:::4;;12241:5;::::0;-1:-1:-1;;;;;12241:5:14::4;:18;12281:7;:5;:7::i;:::-;12241:129;::::0;-1:-1:-1;;;;;;12241:129:14::4;::::0;;;;;;-1:-1:-1;;;;;18329:32:15;;;12241:129:14::4;::::0;::::4;18311:51:15::0;18398:32;;;18378:18;;;18371:60;18447:18;;;18440:34;;;18284:18;;12241:129:14::4;;;;;;;;;;;;;;;;;;::::0;::::4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12233:163;;;::::0;-1:-1:-1;;;12233:163:14;;18687:2:15;12233:163:14::4;::::0;::::4;18669:21:15::0;18726:2;18706:18;;;18699:30;-1:-1:-1;;;18745:18:15;;;18738:51;18806:18;;12233:163:14::4;18485:345:15::0;12233:163:14::4;12414:9;:15;;;;;;;:::i;:::-;;::::0;;;::::4;::::0;;;;-1:-1:-1;;12414:15:14;;;;;-1:-1:-1;;;;;;12414:15:14::4;::::0;;;;;12452:39:::4;::::0;-1:-1:-1;;;;;12452:39:14;::::4;::::0;::::4;::::0;::::4;::::0;12478:12;1014:25:15;;1002:2;987:18;;868:177;12452:39:14::4;;;;;;;;12193:313;12523:1;12528;12523:6:::0;12519:50:::4;;12549:5;;;;12519:50;12064:515;;12059:3;;;;;:::i;:::-;;;;11998:581;;;-1:-1:-1::0;12592:9:14::4;:16:::0;12612:1:::4;12592:21:::0;12588:77:::4;;12629:18;:25:::0;;-1:-1:-1;;12629:25:14::4;;;::::0;;11487:1184:::4;;3437:20:5::0;1949:1;-1:-1:-1;;;;;;;;;;;4113:23:5;3860:283;7730:2423:14;3395:21:5;:19;:21::i;:::-;3191:14:14::1;::::0;::::1;;3190:15;3182:49;;;;-1:-1:-1::0;;;3182:49:14::1;;;;;;;:::i;:::-;3293:9:::2;::::0;;;::::2;;;3292:10;3284:30;;;;-1:-1:-1::0;;;3284:30:14::2;;;;;;;:::i;:::-;7940:7:::3;:5;:7::i;:::-;-1:-1:-1::0;;;;;7926:21:14::3;:10;:21:::0;7918:57:::3;;;::::0;-1:-1:-1;;;7918:57:14;;19037:2:15;7918:57:14::3;::::0;::::3;19019:21:15::0;19076:2;19056:18;;;19049:30;19115:25;19095:18;;;19088:53;19158:18;;7918:57:14::3;18835:347:15::0;7918:57:14::3;7993:9;;8006:1;7993:14:::0;7985:34:::3;;;::::0;-1:-1:-1;;;7985:34:14;;19389:2:15;7985:34:14::3;::::0;::::3;19371:21:15::0;19428:1;19408:18;;;19401:29;-1:-1:-1;;;19446:18:15;;;19439:37;19493:18;;7985:34:14::3;19187:330:15::0;7985:34:14::3;8044:9;::::0;8038:16:::3;::::0;;;:5:::3;:16;::::0;;;;:28:::3;;::::0;::::3;;8037:29;8029:64;;;::::0;-1:-1:-1;;;8029:64:14;;19724:2:15;8029:64:14::3;::::0;::::3;19706:21:15::0;19763:2;19743:18;;;19736:30;-1:-1:-1;;;19782:18:15;;;19775:52;19844:18;;8029:64:14::3;19522:346:15::0;8029:64:14::3;8103:19;::::0;8136:13:::3;:34;;;;;;;;:::i;:::-;::::0;8132:978:::3;;8194:9;8207:1;8194:14:::0;8186:50:::3;;;::::0;-1:-1:-1;;;8186:50:14;;20075:2:15;8186:50:14::3;::::0;::::3;20057:21:15::0;20114:2;20094:18;;;20087:30;20153:25;20133:18;;;20126:53;20196:18;;8186:50:14::3;19873:347:15::0;8186:50:14::3;8264:46;8285:13;8300:9;8264:20;:46::i;:::-;8341:10;8324:28;::::0;;;:16:::3;:28;::::0;;;;8250:60;;-1:-1:-1;8371:9:14::3;::::0;8324:28;8353:13;8324:43:::3;::::0;::::3;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:56;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;8132:978:14::3;::::0;-1:-1:-1;8132:978:14::3;;8431:18;8414:13;:35;;;;;;;;:::i;:::-;;:86;;;-1:-1:-1::0;8482:18:14::3;8465:13;:35;;;;;;;;:::i;:::-;;8414:86;8397:713;;;8533:13;8550:1;8533:18:::0;8525:49:::3;;;::::0;-1:-1:-1;;;8525:49:14;;20427:2:15;8525:49:14::3;::::0;::::3;20409:21:15::0;20466:2;20446:18;;;20439:30;-1:-1:-1;;;20485:18:15;;;20478:48;20543:18;;8525:49:14::3;20225:342:15::0;8525:49:14::3;8588:17;8625:18;8608:13;:35;;;;;;;;:::i;:::-;;:97;;8700:4;::::0;-1:-1:-1;;;;;8700:4:14::3;8608:97;;;8669:4;::::0;-1:-1:-1;;;;;8669:4:14::3;8608:97;8744:143;::::0;-1:-1:-1;;;8744:143:14;;8789:10:::3;8744:143;::::0;::::3;18311:51:15::0;8829:4:14::3;18378:18:15::0;;;18371:60;18447:18;;;18440:34;;;8588:117:14;;-1:-1:-1;;;;;;8744:23:14;::::3;::::0;::::3;::::0;18284:18:15;;8744:143:14::3;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8719:228;;;::::0;-1:-1:-1;;;8719:228:14;;20774:2:15;8719:228:14::3;::::0;::::3;20756:21:15::0;20813:2;20793:18;;;20786:30;20852:28;20832:18;;;20825:56;20898:18;;8719:228:14::3;20572:350:15::0;8719:228:14::3;8975:50;8996:13;9011;8975:20;:50::i;:::-;9056:10;9039:28;::::0;;;:16:::3;:28;::::0;;;;8961:64;;-1:-1:-1;9086:13:14;;9039:28;9068:13;9039:43:::3;::::0;::::3;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:60;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;;8397:713:14::3;9137:11;9152:1;9137:16:::0;9129:49:::3;;;::::0;-1:-1:-1;;;9129:49:14;;21129:2:15;9129:49:14::3;::::0;::::3;21111:21:15::0;21168:2;21148:18;;;21141:30;-1:-1:-1;;;21187:18:15;;;21180:50;21247:18;;9129:49:14::3;20927:344:15::0;9129:49:14::3;9246:9;::::0;9188:22:::3;9240:16:::0;;;:5:::3;:16;::::0;;;;:30:::3;;::::0;1219:4:::3;::::0;9214:56:::3;::::0;:11;:56:::3;:::i;:::-;9213:73;;;;:::i;:::-;9188:98;;9357:12;;9339:14;9317:19;;:36;;;;:::i;:::-;:52;;9296:115;;;::::0;-1:-1:-1;;;9296:115:14;;21478:2:15;9296:115:14::3;::::0;::::3;21460:21:15::0;21517:2;21497:18;;;21490:30;-1:-1:-1;;;21536:18:15;;;21529:46;21592:18;;9296:115:14::3;21276:340:15::0;9296:115:14::3;9472:10;9453:30;::::0;;;:18:::3;:30;::::0;;;;;:46:::3;::::0;9485:14;;9453:46:::3;:::i;:::-;9440:10;9421:30;::::0;;;:18:::3;:30;::::0;;;;:78;9531:19:::3;::::0;:35:::3;::::0;9552:14;;9531:35:::3;:::i;:::-;9509:19;:57:::0;9582:9:::3;::::0;9576:16:::3;::::0;;;:5:::3;:16;::::0;;;;:27:::3;;:42:::0;;9607:11;;9576:16;:42:::3;::::0;9607:11;;9576:42:::3;:::i;:::-;::::0;;;-1:-1:-1;;9646:15:14::3;::::0;:28:::3;::::0;9663:11;;9646:28:::3;:::i;:::-;9628:15;:46:::0;9712:10:::3;9689:34;::::0;;;:22:::3;:34;::::0;;;;;:39;;9685:96:::3;;9744:9;:26:::0;;::::3;::::0;::::3;::::0;;-1:-1:-1;9744:26:14;;;;;::::3;::::0;;-1:-1:-1;;;;;;9744:26:14::3;9759:10;9744:26;::::0;;9685:96:::3;9849:10;9826:34;::::0;;;:22:::3;:34;::::0;;;;;:47:::3;::::0;9862:11;;9826:47:::3;:::i;:::-;9813:10;9790:34;::::0;;;:22:::3;:34;::::0;;;;;;;:83;;;;9883:24:::3;:36:::0;;;:52;;9922:13;;9883:36;-1:-1:-1;;9883:52:14::3;::::0;9922:13;9883:52:::3;::::0;::::3;;;;;;:::i;:::-;;;::::0;;-1:-1:-1;10004:9:14::3;::::0;10052:16:::3;::::0;;;:5:::3;:16;::::0;;;;;;:30:::3;;::::0;9951:195;;9980:10:::3;::::0;9951:195:::3;::::0;::::3;::::0;10027:11;;10096:13;;10123;;9951:195:::3;:::i;:::-;;;;;;;;7908:2245;;3437:20:5::0;1949:1;-1:-1:-1;;;;;;;;;;;4113:23:5;3860:283;4557:96:14;4613:4;4636:10;4642:4;4636:3;:10;:::i;4253:96::-;4309:4;4332:10;:3;4338:4;4332:10;:::i;4456:96::-;4512:4;4535:10;4541:4;4535:3;:10;:::i;3405:215:1:-;2334:13;:11;:13::i;:::-;-1:-1:-1;;;;;3489:22:1;::::1;3485:91;;3534:31;::::0;-1:-1:-1;;;3534:31:1;;3562:1:::1;3534:31;::::0;::::1;2019:51:15::0;1992:18;;3534:31:1::1;1873:203:15::0;3485:91:1::1;3585:28;3604:8;3585:18;:28::i;:::-;3405:215:::0;:::o;2459:680:14:-;8870:21:2;4302:15;;-1:-1:-1;;;4302:15:2;;;;4301:16;;4348:14;;4158:30;4726:16;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4790:11;:16;;4805:1;4790:16;:50;;;;-1:-1:-1;4818:4:2;4810:25;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;-1:-1:-1;;;4908:23:2;;;;;;;;;;;4851:91;4951:18;;-1:-1:-1;;4951:18:2;4968:1;4951:18;;;4979:67;;;;5013:22;;-1:-1:-1;;;;5013:22:2;-1:-1:-1;;;5013:22:2;;;4979:67;2740:26:14::1;2755:10;2740:14;:26::i;:::-;2776:24;:22;:24::i;:::-;2819:6;2811:5;;:14;;;;;-1:-1:-1::0;;;;;2811:14:14::1;;;;;-1:-1:-1::0;;;;;2811:14:14::1;;;;;;2850:13;2835:12;:28;;;;2888:13;2873:12;:28;;;;2918:5;2911:4;;:12;;;;;-1:-1:-1::0;;;;;2911:12:14::1;;;;;-1:-1:-1::0;;;;;2911:12:14::1;;;;;;2940:5;2933:4;;:12;;;;;-1:-1:-1::0;;;;;2933:12:14::1;;;;;-1:-1:-1::0;;;;;2933:12:14::1;;;;;;2992:13;2955:12;::::0;:51:::1;;;;;-1:-1:-1::0;;;;;2955:51:14::1;;;;;-1:-1:-1::0;;;;;2955:51:14::1;;;;;;3054:14;3016:13;;:53;;;;;-1:-1:-1::0;;;;;3016:53:14::1;;;;;-1:-1:-1::0;;;;;3016:53:14::1;;;;;;3117:14;3079:13;;:53;;;;;-1:-1:-1::0;;;;;3079:53:14::1;;;;;-1:-1:-1::0;;;;;3079:53:14::1;;;;;;5070:14:2::0;5066:101;;;5100:23;;-1:-1:-1;;;;5100:23:2;;;5142:14;;-1:-1:-1;22209:50:15;;5142:14:2;;22197:2:15;22182:18;5142:14:2;;;;;;;5066:101;4092:1081;;;;;2459:680:14;;;;;;;;:::o;3470:384:5:-;-1:-1:-1;;;;;;;;;;;3670:9:5;;-1:-1:-1;;3670:20:5;3666:88;;3713:30;;-1:-1:-1;;;3713:30:5;;;;;;;;;;;3666:88;1991:1;3828:19;;3470:384::o;2658:162:1:-;966:10:4;2717:7:1;:5;:7::i;:::-;-1:-1:-1;;;;;2717:23:1;;2713:101;;2763:40;;-1:-1:-1;;;2763:40:1;;966:10:4;2763:40:1;;;2019:51:15;1992:18;;2763:40:1;1873:203:15;10576:780:14;10649:4;10688:12;;10714:18;;10710:164;;10749:12;10775:7;:5;:7::i;:::-;-1:-1:-1;;;;;10767:21:14;10796:13;10767:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10748:66;;;10836:7;10828:35;;;;-1:-1:-1;;;10828:35:14;;22472:2:15;10828:35:14;;;22454:21:15;22511:2;22491:18;;;22484:30;-1:-1:-1;;;22530:18:15;;;22523:45;22585:18;;10828:35:14;22270:339:15;10828:35:14;10734:140;10710:164;10912:4;;10905:28;;-1:-1:-1;;;10905:28:14;;-1:-1:-1;;;;;2037:32:15;;;10905:28:14;;;2019:51:15;10883:19:14;;10912:4;;10905:22;;1992:18:15;;10905:28:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10883:50;-1:-1:-1;10947:16:14;;10943:169;;11011:4;;-1:-1:-1;;;;;11011:4:14;11004:21;11026:7;:5;:7::i;:::-;11004:43;;-1:-1:-1;;;;;;11004:43:14;;;;;;;-1:-1:-1;;;;;15640:32:15;;;11004:43:14;;;15622:51:15;15689:18;;;15682:34;;;15595:18;;11004:43:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10979:122;;;;-1:-1:-1;;;10979:122:14;;22816:2:15;10979:122:14;;;22798:21:15;22855:2;22835:18;;;22828:30;-1:-1:-1;;;22874:18:15;;;22867:50;22934:18;;10979:122:14;22614:344:15;10979:122:14;11150:4;;11143:28;;-1:-1:-1;;;11143:28:14;;-1:-1:-1;;;;;2037:32:15;;;11143:28:14;;;2019:51:15;11121:19:14;;11150:4;;11143:22;;1992:18:15;;11143:28:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11121:50;-1:-1:-1;11185:16:14;;11181:169;;11249:4;;-1:-1:-1;;;;;11249:4:14;11242:21;11264:7;:5;:7::i;:::-;11242:43;;-1:-1:-1;;;;;;11242:43:14;;;;;;;-1:-1:-1;;;;;15640:32:15;;;11242:43:14;;;15622:51:15;15689:18;;;15682:34;;;15595:18;;11242:43:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11217:122;;;;-1:-1:-1;;;11217:122:14;;23165:2:15;11217:122:14;;;23147:21:15;23204:2;23184:18;;;23177:30;-1:-1:-1;;;23223:18:15;;;23216:50;23283:18;;11217:122:14;22963:344:15;11217:122:14;10616:740;;;;10576:780::o;4603:312:3:-;4683:4;-1:-1:-1;;;;;4692:6:3;4675:23;;;:120;;;4789:6;-1:-1:-1;;;;;4753:42:3;:32;-1:-1:-1;;;;;;;;;;;1519:53:8;-1:-1:-1;;;;;1519:53:8;;1441:138;4753:32:3;-1:-1:-1;;;;;4753:42:3;;;4675:120;4658:251;;;4869:29;;-1:-1:-1;;;4869:29:3;;;;;;;;;;;15668:84:14;2334:13:1;:11;:13::i;6057:538:3:-;6174:17;-1:-1:-1;;;;;6156:50:3;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6156:52:3;;;;;;;;-1:-1:-1;;6156:52:3;;;;;;;;;;;;:::i;:::-;;;6152:437;;6518:60;;-1:-1:-1;;;6518:60:3;;-1:-1:-1;;;;;2037:32:15;;6518:60:3;;;2019:51:15;1992:18;;6518:60:3;1873:203:15;6152:437:3;-1:-1:-1;;;;;;;;;;;6250:40:3;;6246:120;;6317:34;;-1:-1:-1;;;6317:34:3;;;;;1014:25:15;;;987:18;;6317:34:3;868:177:15;6246:120:3;6379:54;6409:17;6428:4;6379:29;:54::i;5032:213::-;5106:4;-1:-1:-1;;;;;5115:6:3;5098:23;;5094:145;;5199:29;;-1:-1:-1;;;5199:29:3;;;;;;;;;;;3774:248:1;1313:22;3923:8;;-1:-1:-1;;;;;;3941:19:1;;-1:-1:-1;;;;;3941:19:1;;;;;;;;3975:40;;3923:8;;;;;3975:40;;3847:24;;3975:40;3837:185;;3774:248;:::o;1847:127::-;6931:20:2;:18;:20::i;:::-;1929:38:1::1;1954:12;1929:24;:38::i;2970:67:3:-:0;6931:20:2;:18;:20::i;2264:344:8:-;2355:37;2374:17;2355:18;:37::i;:::-;2407:36;;-1:-1:-1;;;;;2407:36:8;;;;;;;;2458:11;;:15;2454:148;;2489:53;2518:17;2537:4;2489:28;:53::i;2454:148::-;2573:18;:16;:18::i;7084:141:2:-;8870:21;8560:40;-1:-1:-1;;;8560:40:2;;;;7146:73;;7191:17;;-1:-1:-1;;;7191:17:2;;;;;;;;;;;1980:235:1;6931:20:2;:18;:20::i;1671:281:8:-;1748:17;-1:-1:-1;;;;;1748:29:8;;1781:1;1748:34;1744:119;;1805:47;;-1:-1:-1;;;1805:47:8;;-1:-1:-1;;;;;2037:32:15;;1805:47:8;;;2019:51:15;1992:18;;1805:47:8;1873:203:15;1744:119:8;-1:-1:-1;;;;;;;;;;;1872:73:8;;-1:-1:-1;;;;;;1872:73:8;-1:-1:-1;;;;;1872:73:8;;;;;;;;;;1671:281::o;3900:253:11:-;3983:12;4008;4022:23;4049:6;-1:-1:-1;;;;;4049:19:11;4069:4;4049:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4007:67;;;;4091:55;4118:6;4126:7;4135:10;4091:26;:55::i;:::-;4084:62;3900:253;-1:-1:-1;;;;;3900:253:11:o;6113:122:8:-;6163:9;:13;6159:70;;6199:19;;-1:-1:-1;;;6199:19:8;;;;;;;;;;;4421:582:11;4565:12;4594:7;4589:408;;4617:19;4625:10;4617:7;:19::i;:::-;4589:408;;;4841:17;;:22;:49;;;;-1:-1:-1;;;;;;4867:18:11;;;:23;4841:49;4837:119;;;4917:24;;-1:-1:-1;;;4917:24:11;;-1:-1:-1;;;;;2037:32:15;;4917:24:11;;;2019:51:15;1992:18;;4917:24:11;1873:203:15;4837:119:11;-1:-1:-1;4976:10:11;4589:408;4421:582;;;;;:::o;5543:487::-;5674:17;;:21;5670:354;;5871:10;5865:17;5927:15;5914:10;5910:2;5906:19;5899:44;5670:354;5994:19;;-1:-1:-1;;;5994:19:11;;;;;;;;;;;375:154:15;454:20;;503:1;493:12;;483:40;;519:1;516;509:12;534:329;620:6;628;681:2;669:9;660:7;656:23;652:32;649:52;;;697:1;694;687:12;649:52;720:40;750:9;720:40;:::i;:::-;710:50;829:2;814:18;;;;801:32;;-1:-1:-1;;;534:329:15:o;1242:215::-;1319:6;1372:2;1360:9;1351:7;1347:23;1343:32;1340:52;;;1388:1;1385;1378:12;1340:52;1411:40;1441:9;1411:40;:::i;1642:226::-;1701:6;1754:2;1742:9;1733:7;1729:23;1725:32;1722:52;;;1770:1;1767;1760:12;1722:52;-1:-1:-1;1815:23:15;;1642:226;-1:-1:-1;1642:226:15:o;2081:131::-;-1:-1:-1;;;;;2156:31:15;;2146:42;;2136:70;;2202:1;2199;2192:12;2217:127;2278:10;2273:3;2269:20;2266:1;2259:31;2309:4;2306:1;2299:15;2333:4;2330:1;2323:15;2349:1079;2426:6;2434;2487:2;2475:9;2466:7;2462:23;2458:32;2455:52;;;2503:1;2500;2493:12;2455:52;2542:9;2529:23;2561:31;2586:5;2561:31;:::i;:::-;2611:5;-1:-1:-1;2667:2:15;2652:18;;2639:32;2694:18;2683:30;;2680:50;;;2726:1;2723;2716:12;2680:50;2749:22;;2802:4;2794:13;;2790:27;-1:-1:-1;2780:55:15;;2831:1;2828;2821:12;2780:55;2871:2;2858:16;2897:18;2889:6;2886:30;2883:56;;;2919:18;;:::i;:::-;2968:2;2962:9;3060:2;3022:17;;-1:-1:-1;;3018:31:15;;;3051:2;3014:40;3010:54;2998:67;;3095:18;3080:34;;3116:22;;;3077:62;3074:88;;;3142:18;;:::i;:::-;3178:2;3171:22;3202;;;3243:15;;;3260:2;3239:24;3236:37;-1:-1:-1;3233:57:15;;;3286:1;3283;3276:12;3233:57;3342:6;3337:2;3333;3329:11;3324:2;3316:6;3312:15;3299:50;3395:1;3390:2;3381:6;3373;3369:19;3365:28;3358:39;3416:6;3406:16;;;;;2349:1079;;;;;:::o;3615:466::-;3692:6;3700;3708;3761:2;3749:9;3740:7;3736:23;3732:32;3729:52;;;3777:1;3774;3767:12;3729:52;-1:-1:-1;;3822:23:15;;;3942:2;3927:18;;3914:32;;-1:-1:-1;4045:2:15;4030:18;;;4017:32;;3615:466;-1:-1:-1;3615:466:15:o;4086:250::-;4171:1;4181:113;4195:6;4192:1;4189:13;4181:113;;;4271:11;;;4265:18;4252:11;;;4245:39;4217:2;4210:10;4181:113;;;-1:-1:-1;;4328:1:15;4310:16;;4303:27;4086:250::o;4341:396::-;4490:2;4479:9;4472:21;4453:4;4522:6;4516:13;4565:6;4560:2;4549:9;4545:18;4538:34;4581:79;4653:6;4648:2;4637:9;4633:18;4628:2;4620:6;4616:15;4581:79;:::i;:::-;4721:2;4700:15;-1:-1:-1;;4696:29:15;4681:45;;;;4728:2;4677:54;;4341:396;-1:-1:-1;;4341:396:15:o;5473:247::-;5532:6;5585:2;5573:9;5564:7;5560:23;5556:32;5553:52;;;5601:1;5598;5591:12;5553:52;5640:9;5627:23;5659:31;5684:5;5659:31;:::i;5948:1212::-;6085:6;6093;6101;6109;6117;6125;6133;6141;6194:3;6182:9;6173:7;6169:23;6165:33;6162:53;;;6211:1;6208;6201:12;6162:53;6250:9;6237:23;6269:31;6294:5;6269:31;:::i;:::-;6319:5;-1:-1:-1;6376:2:15;6361:18;;6348:32;6389:33;6348:32;6389:33;:::i;:::-;6441:7;-1:-1:-1;6500:2:15;6485:18;;6472:32;6513:33;6472:32;6513:33;:::i;:::-;6565:7;-1:-1:-1;6645:2:15;6630:18;;6617:32;;-1:-1:-1;6748:3:15;6733:19;;6720:33;;-1:-1:-1;6831:3:15;6816:19;;6803:33;6845;6803;6845;:::i;:::-;6897:7;-1:-1:-1;6956:3:15;6941:19;;6928:33;6970;6928;6970;:::i;:::-;7022:7;-1:-1:-1;7081:3:15;7066:19;;7053:33;7095;7053;7095;:::i;:::-;7147:7;7137:17;;;5948:1212;;;;;;;;;;;:::o;7512:127::-;7573:10;7568:3;7564:20;7561:1;7554:31;7604:4;7601:1;7594:15;7628:4;7625:1;7618:15;7644:127;7705:10;7700:3;7696:20;7693:1;7686:31;7736:4;7733:1;7726:15;7760:4;7757:1;7750:15;7776:168;7849:9;;;7880;;7897:15;;;7891:22;;7877:37;7867:71;;7918:18;;:::i;7949:128::-;8016:9;;;8037:11;;;8034:37;;;8051:18;;:::i;8082:375::-;8170:1;8188:5;8202:249;8223:1;8213:8;8210:15;8202:249;;;8273:4;8268:3;8264:14;8258:4;8255:24;8252:50;;;8282:18;;:::i;:::-;8332:1;8322:8;8318:16;8315:49;;;8346:16;;;;8315:49;8429:1;8425:16;;;;;8385:15;;8202:249;;;8082:375;;;;;;:::o;8462:902::-;8511:5;8541:8;8531:80;;-1:-1:-1;8582:1:15;8596:5;;8531:80;8630:4;8620:76;;-1:-1:-1;8667:1:15;8681:5;;8620:76;8712:4;8730:1;8725:59;;;;8798:1;8793:174;;;;8705:262;;8725:59;8755:1;8746:10;;8769:5;;;8793:174;8830:3;8820:8;8817:17;8814:43;;;8837:18;;:::i;:::-;-1:-1:-1;;8893:1:15;8879:16;;8952:5;;8705:262;;9051:2;9041:8;9038:16;9032:3;9026:4;9023:13;9019:36;9013:2;9003:8;9000:16;8995:2;8989:4;8986:12;8982:35;8979:77;8976:203;;;-1:-1:-1;9088:19:15;;;9164:5;;8976:203;9211:42;-1:-1:-1;;9236:8:15;9230:4;9211:42;:::i;:::-;9289:6;9285:1;9281:6;9277:19;9268:7;9265:32;9262:58;;;9300:18;;:::i;:::-;9338:20;;8462:902;-1:-1:-1;;;8462:902:15:o;9369:131::-;9429:5;9458:36;9485:8;9479:4;9458:36;:::i;9860:217::-;9900:1;9926;9916:132;;9970:10;9965:3;9961:20;9958:1;9951:31;10005:4;10002:1;9995:15;10033:4;10030:1;10023:15;9916:132;-1:-1:-1;10062:9:15;;9860:217::o;10082:179::-;10160:13;;10213:22;10202:34;;10192:45;;10182:73;;10251:1;10248;10241:12;10266:571;10369:6;10377;10385;10393;10401;10454:3;10442:9;10433:7;10429:23;10425:33;10422:53;;;10471:1;10468;10461:12;10422:53;10494:39;10523:9;10494:39;:::i;:::-;10573:2;10558:18;;10552:25;10639:2;10624:18;;10618:25;10733:2;10718:18;;10712:25;10484:49;;-1:-1:-1;10552:25:15;;-1:-1:-1;10618:25:15;-1:-1:-1;10712:25:15;-1:-1:-1;10782:49:15;10826:3;10811:19;;10782:49;:::i;:::-;10772:59;;10266:571;;;;;;;;:::o;11537:345::-;11739:2;11721:21;;;11778:2;11758:18;;;11751:30;-1:-1:-1;;;11812:2:15;11797:18;;11790:51;11873:2;11858:18;;11537:345::o;11887:330::-;12089:2;12071:21;;;12128:1;12108:18;;;12101:29;-1:-1:-1;;;12161:2:15;12146:18;;12139:37;12208:2;12193:18;;11887:330::o;13274:125::-;13339:9;;;13360:10;;;13357:36;;;13373:18;;:::i;14760:127::-;14821:10;14816:3;14812:20;14809:1;14802:31;14852:4;14849:1;14842:15;14876:4;14873:1;14866:15;15727:277;15794:6;15847:2;15835:9;15826:7;15822:23;15818:32;15815:52;;;15863:1;15860;15853:12;15815:52;15895:9;15889:16;15948:5;15941:13;15934:21;15927:5;15924:32;15914:60;;15970:1;15967;15960:12;16362:241;16447:1;16440:5;16437:12;16427:143;;16492:10;16487:3;16483:20;16480:1;16473:31;16527:4;16524:1;16517:15;16555:4;16552:1;16545:15;16427:143;16579:18;;16362:241::o;16608:287::-;16798:25;;;16786:2;16771:18;;16832:57;16885:2;16870:18;;16862:6;16832:57;:::i;16900:127::-;16961:10;16956:3;16952:20;16949:1;16942:31;16992:4;16989:1;16982:15;17016:4;17013:1;17006:15;17032:136;17071:3;17099:5;17089:39;;17108:18;;:::i;:::-;-1:-1:-1;;;17144:18:15;;17032:136::o;17527:230::-;17597:6;17650:2;17638:9;17629:7;17625:23;17621:32;17618:52;;;17666:1;17663;17656:12;17618:52;-1:-1:-1;17711:16:15;;17527:230;-1:-1:-1;17527:230:15:o;21621:430::-;21868:25;;;21924:2;21909:18;;21902:34;;;21967:2;21952:18;;21945:34;;;21855:3;21840:19;;21988:57;22041:2;22026:18;;22018:6;21988:57;:::i;23501:287::-;23630:3;23668:6;23662:13;23684:66;23743:6;23738:3;23731:4;23723:6;23719:17;23684:66;:::i;:::-;23766:16;;;;;23501:287;-1:-1:-1;;23501:287:15:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2491000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"UPGRADE_INTERFACE_VERSION()": "infinite",
								"_getPriceFeed(uint8)": "infinite",
								"airdropTokens()": "infinite",
								"buyTokens(uint8,uint256)": "infinite",
								"calculatePaymentAmount(uint8,uint256)": "infinite",
								"calculateTokenAmount(uint8,uint256)": "infinite",
								"contributionsInUSD(address)": "2546",
								"createSale(uint256,uint256,uint256)": "infinite",
								"finalizeICO()": "infinite",
								"freeze()": "28848",
								"getCurrentSaleId()": "2416",
								"getHardCapReached()": "4516",
								"getInvestorCount()": "2326",
								"getSaleStartEndTime(uint256)": "13280",
								"getSoftCapReached()": "4465",
								"hardCapInUSD()": "2395",
								"initialize(address,address,address,uint256,uint256,address,address,address)": "infinite",
								"initiateRefund()": "infinite",
								"investors(uint256)": "4660",
								"isFreezed()": "2410",
								"isICOFinalized()": "2376",
								"isTokensAirdropped()": "2389",
								"owner()": "2414",
								"precision_div_10(uint256)": "385",
								"precision_div_18(uint256)": "407",
								"precision_mul_10(uint256)": "infinite",
								"precision_mul_18(uint256)": "infinite",
								"proxiableUUID()": "infinite",
								"renounceOwnership()": "infinite",
								"saleCount()": "2395",
								"sales(uint256)": "11061",
								"softCapInUSD()": "2330",
								"token()": "2469",
								"tokensBoughtByInvestor(address)": "2590",
								"totalFundsRaisedUSD()": "2395",
								"totalTokensSold()": "2329",
								"transferOwnership(address)": "infinite",
								"unFreeze()": "28838",
								"upgradeToAndCall(address,bytes)": "infinite",
								"usdc()": "2471",
								"usdt()": "2449"
							},
							"internal": {
								"_authorizeUpgrade(address)": "infinite",
								"_transferFundsToOwner()": "infinite",
								"getLatestSaleEndTime()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 429,
									"end": 15754,
									"name": "PUSH",
									"source": 14,
									"value": "A0"
								},
								{
									"begin": 429,
									"end": 15754,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 429,
									"end": 15754,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1171,
									"end": 1175,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 429,
									"end": 15754,
									"name": "CALLVALUE",
									"source": 14
								},
								{
									"begin": 429,
									"end": 15754,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 429,
									"end": 15754,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 429,
									"end": 15754,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 429,
									"end": 15754,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 429,
									"end": 15754,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 429,
									"end": 15754,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 429,
									"end": 15754,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 429,
									"end": 15754,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 429,
									"end": 15754,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 429,
									"end": 15754,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 429,
									"end": 15754,
									"name": "PUSH",
									"source": 14,
									"value": "80"
								},
								{
									"begin": 429,
									"end": 15754,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 429,
									"end": 15754,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 429,
									"end": 15754,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 429,
									"end": 15754,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 429,
									"end": 15754,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 429,
									"end": 15754,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 429,
									"end": 15754,
									"name": "ASSIGNIMMUTABLE",
									"source": 14,
									"value": "514"
								},
								{
									"begin": 429,
									"end": 15754,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 429,
									"end": 15754,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 429,
									"end": 15754,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f6169f3ea7a8afb825b42a594ae709b43270a6bb30bf1eba66c467a8093dc64964736f6c634300081c0033",
									".code": [
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH",
											"source": 14,
											"value": "7FB12001"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH",
											"source": 14,
											"value": "B3FDAFB9"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "45"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH",
											"source": 14,
											"value": "C81FFDEA"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "46"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH",
											"source": 14,
											"value": "C81FFDEA"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "38"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH",
											"source": 14,
											"value": "D1F3B23E"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "39"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH",
											"source": 14,
											"value": "E8E87389"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH",
											"source": 14,
											"value": "F2FDE38B"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "41"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH",
											"source": 14,
											"value": "FC0C546A"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "42"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH",
											"source": 14,
											"value": "FD663DA2"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "43"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "tag",
											"source": 14,
											"value": "46"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH",
											"source": 14,
											"value": "B3FDAFB9"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "33"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH",
											"source": 14,
											"value": "B5F522F7"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "34"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH",
											"source": 14,
											"value": "B9469E1A"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "35"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH",
											"source": 14,
											"value": "C1560A14"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "36"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH",
											"source": 14,
											"value": "C211E1F9"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "37"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "tag",
											"source": 14,
											"value": "45"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH",
											"source": 14,
											"value": "960524E3"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "47"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH",
											"source": 14,
											"value": "960524E3"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "28"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH",
											"source": 14,
											"value": "9FA8ADB8"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "29"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH",
											"source": 14,
											"value": "A1C4B5A2"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "30"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH",
											"source": 14,
											"value": "A1E89AEC"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "31"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH",
											"source": 14,
											"value": "AD3CB1CC"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "tag",
											"source": 14,
											"value": "47"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH",
											"source": 14,
											"value": "7FB12001"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "23"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH",
											"source": 14,
											"value": "8DA5CB5B"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH",
											"source": 14,
											"value": "91152C5C"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "25"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH",
											"source": 14,
											"value": "91D8730A"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "26"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH",
											"source": 14,
											"value": "940C333E"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "27"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "tag",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH",
											"source": 14,
											"value": "3FEB5F2B"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "48"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH",
											"source": 14,
											"value": "63B20117"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "49"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH",
											"source": 14,
											"value": "63B20117"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "18"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH",
											"source": 14,
											"value": "6C1909ED"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "19"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH",
											"source": 14,
											"value": "715018A6"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH",
											"source": 14,
											"value": "721BC38B"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "21"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH",
											"source": 14,
											"value": "7CF12B90"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "tag",
											"source": 14,
											"value": "49"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH",
											"source": 14,
											"value": "3FEB5F2B"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "13"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH",
											"source": 14,
											"value": "4DEE1DC3"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "14"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH",
											"source": 14,
											"value": "4F1EF286"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "15"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH",
											"source": 14,
											"value": "52D1902D"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "16"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH",
											"source": 14,
											"value": "62A5AF3B"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "17"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "tag",
											"source": 14,
											"value": "48"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH",
											"source": 14,
											"value": "2151206E"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "50"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH",
											"source": 14,
											"value": "2151206E"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH",
											"source": 14,
											"value": "23CC75A8"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH",
											"source": 14,
											"value": "2593198D"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH",
											"source": 14,
											"value": "2F48AB7D"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH",
											"source": 14,
											"value": "3E413BEE"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "tag",
											"source": 14,
											"value": "50"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH",
											"source": 14,
											"value": "5834E67"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH",
											"source": 14,
											"value": "6E4D36F"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH",
											"source": 14,
											"value": "115AFC3A"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH",
											"source": 14,
											"value": "117D260F"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH",
											"source": 14,
											"value": "212EA247"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "tag",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 14766,
											"end": 14808,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 14766,
											"end": 14808,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14766,
											"end": 14808,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14766,
											"end": 14808,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 216,
											"end": 218,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 14766,
											"end": 14808,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 14766,
											"end": 14808,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14766,
											"end": 14808,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 198,
											"end": 219,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 198,
											"end": 219,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 198,
											"end": 219,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 235,
											"end": 253,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 235,
											"end": 253,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 235,
											"end": 253,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 228,
											"end": 258,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 294,
											"end": 328,
											"name": "PUSH",
											"source": 15,
											"value": "44697265637420424E42207472616E7366657273206E6F7420616C6C6F776564"
										},
										{
											"begin": 274,
											"end": 292,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 274,
											"end": 292,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 274,
											"end": 292,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 267,
											"end": 329,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 346,
											"end": 364,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 346,
											"end": 364,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14766,
											"end": 14808,
											"name": "tag",
											"source": 14,
											"value": "53"
										},
										{
											"begin": 14766,
											"end": 14808,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14766,
											"end": 14808,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 14766,
											"end": 14808,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 14766,
											"end": 14808,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 14766,
											"end": 14808,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14766,
											"end": 14808,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 14766,
											"end": 14808,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14766,
											"end": 14808,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "tag",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 429,
											"end": 15754,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 5373,
											"end": 6605,
											"name": "tag",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 5373,
											"end": 6605,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5373,
											"end": 6605,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 5373,
											"end": 6605,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5373,
											"end": 6605,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5373,
											"end": 6605,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "55"
										},
										{
											"begin": 5373,
											"end": 6605,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5373,
											"end": 6605,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5373,
											"end": 6605,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5373,
											"end": 6605,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 5373,
											"end": 6605,
											"name": "tag",
											"source": 14,
											"value": "55"
										},
										{
											"begin": 5373,
											"end": 6605,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5373,
											"end": 6605,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "56"
										},
										{
											"begin": 5373,
											"end": 6605,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "57"
										},
										{
											"begin": 5373,
											"end": 6605,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 5373,
											"end": 6605,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 5373,
											"end": 6605,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "58"
										},
										{
											"begin": 5373,
											"end": 6605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5373,
											"end": 6605,
											"name": "tag",
											"source": 14,
											"value": "57"
										},
										{
											"begin": 5373,
											"end": 6605,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5373,
											"end": 6605,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "59"
										},
										{
											"begin": 5373,
											"end": 6605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5373,
											"end": 6605,
											"name": "tag",
											"source": 14,
											"value": "56"
										},
										{
											"begin": 5373,
											"end": 6605,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5373,
											"end": 6605,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5373,
											"end": 6605,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1014,
											"end": 1039,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1014,
											"end": 1039,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1014,
											"end": 1039,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1002,
											"end": 1004,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 987,
											"end": 1005,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5373,
											"end": 6605,
											"name": "tag",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 5373,
											"end": 6605,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5373,
											"end": 6605,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5373,
											"end": 6605,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5373,
											"end": 6605,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5373,
											"end": 6605,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5373,
											"end": 6605,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 5373,
											"end": 6605,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5373,
											"end": 6605,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 15266,
											"end": 15383,
											"name": "tag",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 15266,
											"end": 15383,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15266,
											"end": 15383,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 15266,
											"end": 15383,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 15266,
											"end": 15383,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 15266,
											"end": 15383,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "62"
										},
										{
											"begin": 15266,
											"end": 15383,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 15266,
											"end": 15383,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15266,
											"end": 15383,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 15266,
											"end": 15383,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 15266,
											"end": 15383,
											"name": "tag",
											"source": 14,
											"value": "62"
										},
										{
											"begin": 15266,
											"end": 15383,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15363,
											"end": 15375,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 15363,
											"end": 15375,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 15340,
											"end": 15359,
											"name": "PUSH",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 15340,
											"end": 15359,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 15340,
											"end": 15375,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 15340,
											"end": 15375,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 15266,
											"end": 15383,
											"name": "tag",
											"source": 14,
											"value": "63"
										},
										{
											"begin": 15266,
											"end": 15383,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15266,
											"end": 15383,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 15266,
											"end": 15383,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1215,
											"end": 1229,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1215,
											"end": 1229,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1208,
											"end": 1230,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1190,
											"end": 1231,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1190,
											"end": 1231,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1178,
											"end": 1180,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15266,
											"end": 15383,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 1050,
											"end": 1237,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3601,
											"end": 4247,
											"name": "tag",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 3601,
											"end": 4247,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3601,
											"end": 4247,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 3601,
											"end": 4247,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3601,
											"end": 4247,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3601,
											"end": 4247,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "67"
										},
										{
											"begin": 3601,
											"end": 4247,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3601,
											"end": 4247,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3601,
											"end": 4247,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3601,
											"end": 4247,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3601,
											"end": 4247,
											"name": "tag",
											"source": 14,
											"value": "67"
										},
										{
											"begin": 3601,
											"end": 4247,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3601,
											"end": 4247,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "56"
										},
										{
											"begin": 3601,
											"end": 4247,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "69"
										},
										{
											"begin": 3601,
											"end": 4247,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 3601,
											"end": 4247,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3601,
											"end": 4247,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "70"
										},
										{
											"begin": 3601,
											"end": 4247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3601,
											"end": 4247,
											"name": "tag",
											"source": 14,
											"value": "69"
										},
										{
											"begin": 3601,
											"end": 4247,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3601,
											"end": 4247,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "71"
										},
										{
											"begin": 3601,
											"end": 4247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6611,
											"end": 7724,
											"name": "tag",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 6611,
											"end": 7724,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6611,
											"end": 7724,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 6611,
											"end": 7724,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6611,
											"end": 7724,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 6611,
											"end": 7724,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "74"
										},
										{
											"begin": 6611,
											"end": 7724,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6611,
											"end": 7724,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6611,
											"end": 7724,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6611,
											"end": 7724,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 6611,
											"end": 7724,
											"name": "tag",
											"source": 14,
											"value": "74"
										},
										{
											"begin": 6611,
											"end": 7724,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6611,
											"end": 7724,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "56"
										},
										{
											"begin": 6611,
											"end": 7724,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "76"
										},
										{
											"begin": 6611,
											"end": 7724,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 6611,
											"end": 7724,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 6611,
											"end": 7724,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "58"
										},
										{
											"begin": 6611,
											"end": 7724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6611,
											"end": 7724,
											"name": "tag",
											"source": 14,
											"value": "76"
										},
										{
											"begin": 6611,
											"end": 7724,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6611,
											"end": 7724,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "77"
										},
										{
											"begin": 6611,
											"end": 7724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14821,
											"end": 14912,
											"name": "tag",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 14821,
											"end": 14912,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14821,
											"end": 14912,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 14821,
											"end": 14912,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 14821,
											"end": 14912,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 14821,
											"end": 14912,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "79"
										},
										{
											"begin": 14821,
											"end": 14912,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 14821,
											"end": 14912,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14821,
											"end": 14912,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 14821,
											"end": 14912,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 14821,
											"end": 14912,
											"name": "tag",
											"source": 14,
											"value": "79"
										},
										{
											"begin": 14821,
											"end": 14912,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14896,
											"end": 14905,
											"name": "PUSH",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 14896,
											"end": 14905,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 14821,
											"end": 14912,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "56"
										},
										{
											"begin": 14821,
											"end": 14912,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 973,
											"end": 1000,
											"name": "tag",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 973,
											"end": 1000,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 973,
											"end": 1000,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 973,
											"end": 1000,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 973,
											"end": 1000,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 973,
											"end": 1000,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "83"
										},
										{
											"begin": 973,
											"end": 1000,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 973,
											"end": 1000,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 973,
											"end": 1000,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 973,
											"end": 1000,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 973,
											"end": 1000,
											"name": "tag",
											"source": 14,
											"value": "83"
										},
										{
											"begin": 973,
											"end": 1000,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 973,
											"end": 1000,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 973,
											"end": 1000,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "56"
										},
										{
											"begin": 973,
											"end": 1000,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 973,
											"end": 1000,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 973,
											"end": 1000,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 973,
											"end": 1000,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10159,
											"end": 10570,
											"name": "tag",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 10159,
											"end": 10570,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10159,
											"end": 10570,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 10159,
											"end": 10570,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 10159,
											"end": 10570,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 10159,
											"end": 10570,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "87"
										},
										{
											"begin": 10159,
											"end": 10570,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10159,
											"end": 10570,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10159,
											"end": 10570,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 10159,
											"end": 10570,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 10159,
											"end": 10570,
											"name": "tag",
											"source": 14,
											"value": "87"
										},
										{
											"begin": 10159,
											"end": 10570,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10159,
											"end": 10570,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10159,
											"end": 10570,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "88"
										},
										{
											"begin": 10159,
											"end": 10570,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "89"
										},
										{
											"begin": 10159,
											"end": 10570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10159,
											"end": 10570,
											"name": "tag",
											"source": 14,
											"value": "88"
										},
										{
											"begin": 10159,
											"end": 10570,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10159,
											"end": 10570,
											"name": "STOP",
											"source": 14
										},
										{
											"begin": 4355,
											"end": 4451,
											"name": "tag",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 4355,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4355,
											"end": 4451,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 4355,
											"end": 4451,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4355,
											"end": 4451,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4355,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "90"
										},
										{
											"begin": 4355,
											"end": 4451,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4355,
											"end": 4451,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4355,
											"end": 4451,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4355,
											"end": 4451,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4355,
											"end": 4451,
											"name": "tag",
											"source": 14,
											"value": "90"
										},
										{
											"begin": 4355,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4355,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "56"
										},
										{
											"begin": 4355,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "92"
										},
										{
											"begin": 4355,
											"end": 4451,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 4355,
											"end": 4451,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 4355,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "93"
										},
										{
											"begin": 4355,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4355,
											"end": 4451,
											"name": "tag",
											"source": 14,
											"value": "92"
										},
										{
											"begin": 4355,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4355,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "94"
										},
										{
											"begin": 4355,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1359,
											"end": 1378,
											"name": "tag",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 1359,
											"end": 1378,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1359,
											"end": 1378,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 1359,
											"end": 1378,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1359,
											"end": 1378,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1359,
											"end": 1378,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "96"
										},
										{
											"begin": 1359,
											"end": 1378,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1359,
											"end": 1378,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1359,
											"end": 1378,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1359,
											"end": 1378,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1359,
											"end": 1378,
											"name": "tag",
											"source": 14,
											"value": "96"
										},
										{
											"begin": 1359,
											"end": 1378,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1359,
											"end": 1378,
											"name": "PUSH",
											"source": 14,
											"value": "B"
										},
										{
											"begin": 1359,
											"end": 1378,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1359,
											"end": 1378,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "97"
										},
										{
											"begin": 1359,
											"end": 1378,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1359,
											"end": 1378,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1359,
											"end": 1378,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1359,
											"end": 1378,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1359,
											"end": 1378,
											"name": "tag",
											"source": 14,
											"value": "97"
										},
										{
											"begin": 1359,
											"end": 1378,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1359,
											"end": 1378,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1359,
											"end": 1378,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2037,
											"end": 2069,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2037,
											"end": 2069,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2037,
											"end": 2069,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2019,
											"end": 2070,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2019,
											"end": 2070,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2007,
											"end": 2009,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1992,
											"end": 2010,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1359,
											"end": 1378,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 1873,
											"end": 2076,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1384,
											"end": 1403,
											"name": "tag",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 1384,
											"end": 1403,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1384,
											"end": 1403,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 1384,
											"end": 1403,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1384,
											"end": 1403,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1384,
											"end": 1403,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "101"
										},
										{
											"begin": 1384,
											"end": 1403,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1384,
											"end": 1403,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1384,
											"end": 1403,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1384,
											"end": 1403,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1384,
											"end": 1403,
											"name": "tag",
											"source": 14,
											"value": "101"
										},
										{
											"begin": 1384,
											"end": 1403,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1384,
											"end": 1403,
											"name": "PUSH",
											"source": 14,
											"value": "C"
										},
										{
											"begin": 1384,
											"end": 1403,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1384,
											"end": 1403,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "97"
										},
										{
											"begin": 1384,
											"end": 1403,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1384,
											"end": 1403,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1384,
											"end": 1403,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1384,
											"end": 1403,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1327,
											"end": 1353,
											"name": "tag",
											"source": 14,
											"value": "13"
										},
										{
											"begin": 1327,
											"end": 1353,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1327,
											"end": 1353,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 1327,
											"end": 1353,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1327,
											"end": 1353,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1327,
											"end": 1353,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "105"
										},
										{
											"begin": 1327,
											"end": 1353,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1327,
											"end": 1353,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1327,
											"end": 1353,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1327,
											"end": 1353,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1327,
											"end": 1353,
											"name": "tag",
											"source": 14,
											"value": "105"
										},
										{
											"begin": 1327,
											"end": 1353,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1327,
											"end": 1353,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "97"
										},
										{
											"begin": 1327,
											"end": 1353,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "107"
										},
										{
											"begin": 1327,
											"end": 1353,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 1327,
											"end": 1353,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1327,
											"end": 1353,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "93"
										},
										{
											"begin": 1327,
											"end": 1353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1327,
											"end": 1353,
											"name": "tag",
											"source": 14,
											"value": "107"
										},
										{
											"begin": 1327,
											"end": 1353,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1327,
											"end": 1353,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "108"
										},
										{
											"begin": 1327,
											"end": 1353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1262,
											"end": 1292,
											"name": "tag",
											"source": 14,
											"value": "14"
										},
										{
											"begin": 1262,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1262,
											"end": 1292,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 1262,
											"end": 1292,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1262,
											"end": 1292,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1262,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "110"
										},
										{
											"begin": 1262,
											"end": 1292,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1262,
											"end": 1292,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1262,
											"end": 1292,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1262,
											"end": 1292,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1262,
											"end": 1292,
											"name": "tag",
											"source": 14,
											"value": "110"
										},
										{
											"begin": 1262,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1262,
											"end": 1292,
											"name": "PUSH",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 1262,
											"end": 1292,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1262,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "63"
										},
										{
											"begin": 1262,
											"end": 1292,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1262,
											"end": 1292,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 1262,
											"end": 1292,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1262,
											"end": 1292,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 1262,
											"end": 1292,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 1262,
											"end": 1292,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1262,
											"end": 1292,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1262,
											"end": 1292,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 4161,
											"end": 4375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 4161,
											"end": 4375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 3708,
											"end": 3842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3338,
											"end": 3467,
											"name": "tag",
											"source": 14,
											"value": "17"
										},
										{
											"begin": 3338,
											"end": 3467,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3338,
											"end": 3467,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 3338,
											"end": 3467,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3338,
											"end": 3467,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3338,
											"end": 3467,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "123"
										},
										{
											"begin": 3338,
											"end": 3467,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3338,
											"end": 3467,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3338,
											"end": 3467,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3338,
											"end": 3467,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3338,
											"end": 3467,
											"name": "tag",
											"source": 14,
											"value": "123"
										},
										{
											"begin": 3338,
											"end": 3467,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3338,
											"end": 3467,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3338,
											"end": 3467,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "88"
										},
										{
											"begin": 3338,
											"end": 3467,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "125"
										},
										{
											"begin": 3338,
											"end": 3467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1109,
											"end": 1139,
											"name": "tag",
											"source": 14,
											"value": "18"
										},
										{
											"begin": 1109,
											"end": 1139,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1109,
											"end": 1139,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 1109,
											"end": 1139,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1109,
											"end": 1139,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1109,
											"end": 1139,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "126"
										},
										{
											"begin": 1109,
											"end": 1139,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1109,
											"end": 1139,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1109,
											"end": 1139,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1109,
											"end": 1139,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1109,
											"end": 1139,
											"name": "tag",
											"source": 14,
											"value": "126"
										},
										{
											"begin": 1109,
											"end": 1139,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1109,
											"end": 1139,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1109,
											"end": 1139,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "56"
										},
										{
											"begin": 1109,
											"end": 1139,
											"name": "PUSH",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 1109,
											"end": 1139,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1109,
											"end": 1139,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1109,
											"end": 1139,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4659,
											"end": 5367,
											"name": "tag",
											"source": 14,
											"value": "19"
										},
										{
											"begin": 4659,
											"end": 5367,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4659,
											"end": 5367,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 4659,
											"end": 5367,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4659,
											"end": 5367,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4659,
											"end": 5367,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "130"
										},
										{
											"begin": 4659,
											"end": 5367,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4659,
											"end": 5367,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4659,
											"end": 5367,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4659,
											"end": 5367,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4659,
											"end": 5367,
											"name": "tag",
											"source": 14,
											"value": "130"
										},
										{
											"begin": 4659,
											"end": 5367,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4659,
											"end": 5367,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "88"
										},
										{
											"begin": 4659,
											"end": 5367,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "132"
										},
										{
											"begin": 4659,
											"end": 5367,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 4659,
											"end": 5367,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 4659,
											"end": 5367,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "133"
										},
										{
											"begin": 4659,
											"end": 5367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4659,
											"end": 5367,
											"name": "tag",
											"source": 14,
											"value": "132"
										},
										{
											"begin": 4659,
											"end": 5367,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4659,
											"end": 5367,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "134"
										},
										{
											"begin": 4659,
											"end": 5367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1069,
											"end": 1103,
											"name": "tag",
											"source": 14,
											"value": "21"
										},
										{
											"begin": 1069,
											"end": 1103,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1069,
											"end": 1103,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 1069,
											"end": 1103,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1069,
											"end": 1103,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1069,
											"end": 1103,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "138"
										},
										{
											"begin": 1069,
											"end": 1103,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1069,
											"end": 1103,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1069,
											"end": 1103,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1069,
											"end": 1103,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1069,
											"end": 1103,
											"name": "tag",
											"source": 14,
											"value": "138"
										},
										{
											"begin": 1069,
											"end": 1103,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1069,
											"end": 1103,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1069,
											"end": 1103,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "56"
										},
										{
											"begin": 1069,
											"end": 1103,
											"name": "PUSH",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 1069,
											"end": 1103,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1069,
											"end": 1103,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1069,
											"end": 1103,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3473,
											"end": 3595,
											"name": "tag",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 3473,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3473,
											"end": 3595,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 3473,
											"end": 3595,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3473,
											"end": 3595,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3473,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "142"
										},
										{
											"begin": 3473,
											"end": 3595,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3473,
											"end": 3595,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3473,
											"end": 3595,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3473,
											"end": 3595,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3473,
											"end": 3595,
											"name": "tag",
											"source": 14,
											"value": "142"
										},
										{
											"begin": 3473,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3473,
											"end": 3595,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3473,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "88"
										},
										{
											"begin": 3473,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "144"
										},
										{
											"begin": 3473,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12677,
											"end": 14723,
											"name": "tag",
											"source": 14,
											"value": "23"
										},
										{
											"begin": 12677,
											"end": 14723,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12677,
											"end": 14723,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 12677,
											"end": 14723,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 12677,
											"end": 14723,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 12677,
											"end": 14723,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "145"
										},
										{
											"begin": 12677,
											"end": 14723,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12677,
											"end": 14723,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12677,
											"end": 14723,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 12677,
											"end": 14723,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 12677,
											"end": 14723,
											"name": "tag",
											"source": 14,
											"value": "145"
										},
										{
											"begin": 12677,
											"end": 14723,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12677,
											"end": 14723,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12677,
											"end": 14723,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "88"
										},
										{
											"begin": 12677,
											"end": 14723,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "147"
										},
										{
											"begin": 12677,
											"end": 14723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11362,
											"end": 12671,
											"name": "tag",
											"source": 14,
											"value": "25"
										},
										{
											"begin": 11362,
											"end": 12671,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11362,
											"end": 12671,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 11362,
											"end": 12671,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11362,
											"end": 12671,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11362,
											"end": 12671,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "152"
										},
										{
											"begin": 11362,
											"end": 12671,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11362,
											"end": 12671,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11362,
											"end": 12671,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11362,
											"end": 12671,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 11362,
											"end": 12671,
											"name": "tag",
											"source": 14,
											"value": "152"
										},
										{
											"begin": 11362,
											"end": 12671,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11362,
											"end": 12671,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11362,
											"end": 12671,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "88"
										},
										{
											"begin": 11362,
											"end": 12671,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "154"
										},
										{
											"begin": 11362,
											"end": 12671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15389,
											"end": 15506,
											"name": "tag",
											"source": 14,
											"value": "26"
										},
										{
											"begin": 15389,
											"end": 15506,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15389,
											"end": 15506,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 15389,
											"end": 15506,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 15389,
											"end": 15506,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 15389,
											"end": 15506,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "155"
										},
										{
											"begin": 15389,
											"end": 15506,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 15389,
											"end": 15506,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15389,
											"end": 15506,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 15389,
											"end": 15506,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 15389,
											"end": 15506,
											"name": "tag",
											"source": 14,
											"value": "155"
										},
										{
											"begin": 15389,
											"end": 15506,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15486,
											"end": 15498,
											"name": "PUSH",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 15486,
											"end": 15498,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 15463,
											"end": 15482,
											"name": "PUSH",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 15463,
											"end": 15482,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 15463,
											"end": 15498,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 15389,
											"end": 15506,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "63"
										},
										{
											"begin": 15389,
											"end": 15506,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7730,
											"end": 10153,
											"name": "tag",
											"source": 14,
											"value": "27"
										},
										{
											"begin": 7730,
											"end": 10153,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7730,
											"end": 10153,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "88"
										},
										{
											"begin": 7730,
											"end": 10153,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "160"
										},
										{
											"begin": 7730,
											"end": 10153,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 7730,
											"end": 10153,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 7730,
											"end": 10153,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "58"
										},
										{
											"begin": 7730,
											"end": 10153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7730,
											"end": 10153,
											"name": "tag",
											"source": 14,
											"value": "160"
										},
										{
											"begin": 7730,
											"end": 10153,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7730,
											"end": 10153,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "161"
										},
										{
											"begin": 7730,
											"end": 10153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15512,
											"end": 15663,
											"name": "tag",
											"source": 14,
											"value": "28"
										},
										{
											"begin": 15512,
											"end": 15663,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15512,
											"end": 15663,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 15512,
											"end": 15663,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 15512,
											"end": 15663,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 15512,
											"end": 15663,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "162"
										},
										{
											"begin": 15512,
											"end": 15663,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 15512,
											"end": 15663,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15512,
											"end": 15663,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 15512,
											"end": 15663,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 15512,
											"end": 15663,
											"name": "tag",
											"source": 14,
											"value": "162"
										},
										{
											"begin": 15512,
											"end": 15663,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15610,
											"end": 15619,
											"name": "PUSH",
											"source": 14,
											"value": "A"
										},
										{
											"begin": 15610,
											"end": 15626,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 15512,
											"end": 15663,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "56"
										},
										{
											"begin": 15512,
											"end": 15663,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4557,
											"end": 4653,
											"name": "tag",
											"source": 14,
											"value": "29"
										},
										{
											"begin": 4557,
											"end": 4653,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4557,
											"end": 4653,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 4557,
											"end": 4653,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4557,
											"end": 4653,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4557,
											"end": 4653,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "166"
										},
										{
											"begin": 4557,
											"end": 4653,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4557,
											"end": 4653,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4557,
											"end": 4653,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4557,
											"end": 4653,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4557,
											"end": 4653,
											"name": "tag",
											"source": 14,
											"value": "166"
										},
										{
											"begin": 4557,
											"end": 4653,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4557,
											"end": 4653,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "56"
										},
										{
											"begin": 4557,
											"end": 4653,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "168"
										},
										{
											"begin": 4557,
											"end": 4653,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 4557,
											"end": 4653,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 4557,
											"end": 4653,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "93"
										},
										{
											"begin": 4557,
											"end": 4653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4557,
											"end": 4653,
											"name": "tag",
											"source": 14,
											"value": "168"
										},
										{
											"begin": 4557,
											"end": 4653,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4557,
											"end": 4653,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "169"
										},
										{
											"begin": 4557,
											"end": 4653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4349,
											"name": "tag",
											"source": 14,
											"value": "30"
										},
										{
											"begin": 4253,
											"end": 4349,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4349,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4349,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4349,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4349,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "171"
										},
										{
											"begin": 4253,
											"end": 4349,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4349,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4253,
											"end": 4349,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4349,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4349,
											"name": "tag",
											"source": 14,
											"value": "171"
										},
										{
											"begin": 4253,
											"end": 4349,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4253,
											"end": 4349,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "56"
										},
										{
											"begin": 4253,
											"end": 4349,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "173"
										},
										{
											"begin": 4253,
											"end": 4349,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4349,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 4253,
											"end": 4349,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "93"
										},
										{
											"begin": 4253,
											"end": 4349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4349,
											"name": "tag",
											"source": 14,
											"value": "173"
										},
										{
											"begin": 4253,
											"end": 4349,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4349,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "174"
										},
										{
											"begin": 4253,
											"end": 4349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1039,
											"end": 1063,
											"name": "tag",
											"source": 14,
											"value": "31"
										},
										{
											"begin": 1039,
											"end": 1063,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1039,
											"end": 1063,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 1039,
											"end": 1063,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1039,
											"end": 1063,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1039,
											"end": 1063,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "176"
										},
										{
											"begin": 1039,
											"end": 1063,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1039,
											"end": 1063,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1039,
											"end": 1063,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1039,
											"end": 1063,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1039,
											"end": 1063,
											"name": "tag",
											"source": 14,
											"value": "176"
										},
										{
											"begin": 1039,
											"end": 1063,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1039,
											"end": 1063,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1039,
											"end": 1063,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "56"
										},
										{
											"begin": 1039,
											"end": 1063,
											"name": "PUSH",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 1039,
											"end": 1063,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1039,
											"end": 1063,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1039,
											"end": 1063,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "352E302E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 1819,
											"end": 1877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4456,
											"end": 4552,
											"name": "tag",
											"source": 14,
											"value": "33"
										},
										{
											"begin": 4456,
											"end": 4552,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4456,
											"end": 4552,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 4456,
											"end": 4552,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4456,
											"end": 4552,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4456,
											"end": 4552,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "185"
										},
										{
											"begin": 4456,
											"end": 4552,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4456,
											"end": 4552,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4456,
											"end": 4552,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4456,
											"end": 4552,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4456,
											"end": 4552,
											"name": "tag",
											"source": 14,
											"value": "185"
										},
										{
											"begin": 4456,
											"end": 4552,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4456,
											"end": 4552,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "56"
										},
										{
											"begin": 4456,
											"end": 4552,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "187"
										},
										{
											"begin": 4456,
											"end": 4552,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 4456,
											"end": 4552,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 4456,
											"end": 4552,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "93"
										},
										{
											"begin": 4456,
											"end": 4552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4456,
											"end": 4552,
											"name": "tag",
											"source": 14,
											"value": "187"
										},
										{
											"begin": 4456,
											"end": 4552,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4456,
											"end": 4552,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "188"
										},
										{
											"begin": 4456,
											"end": 4552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "tag",
											"source": 14,
											"value": "34"
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "190"
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "tag",
											"source": 14,
											"value": "190"
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "191"
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "192"
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "93"
										},
										{
											"begin": 1426,
											"end": 1463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "tag",
											"source": 14,
											"value": "192"
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "PUSH",
											"source": 14,
											"value": "D"
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "tag",
											"source": 14,
											"value": "191"
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4995,
											"end": 5020,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 4995,
											"end": 5020,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 4995,
											"end": 5020,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5051,
											"end": 5053,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5036,
											"end": 5054,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 5036,
											"end": 5054,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5029,
											"end": 5063,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 5029,
											"end": 5063,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5029,
											"end": 5063,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 5029,
											"end": 5063,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5079,
											"end": 5097,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5079,
											"end": 5097,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5079,
											"end": 5097,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5072,
											"end": 5106,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5072,
											"end": 5106,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5072,
											"end": 5106,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5072,
											"end": 5106,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5137,
											"end": 5139,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 5122,
											"end": 5140,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5122,
											"end": 5140,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5115,
											"end": 5149,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5193,
											"end": 5207,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5186,
											"end": 5208,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5180,
											"end": 5183,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 5165,
											"end": 5184,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5165,
											"end": 5184,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5158,
											"end": 5209,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4982,
											"end": 4985,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 4967,
											"end": 4986,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 4742,
											"end": 5215,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1298,
											"end": 1319,
											"name": "tag",
											"source": 14,
											"value": "35"
										},
										{
											"begin": 1298,
											"end": 1319,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1298,
											"end": 1319,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 1298,
											"end": 1319,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1298,
											"end": 1319,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1298,
											"end": 1319,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "196"
										},
										{
											"begin": 1298,
											"end": 1319,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1298,
											"end": 1319,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1298,
											"end": 1319,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1298,
											"end": 1319,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1298,
											"end": 1319,
											"name": "tag",
											"source": 14,
											"value": "196"
										},
										{
											"begin": 1298,
											"end": 1319,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1298,
											"end": 1319,
											"name": "PUSH",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 1298,
											"end": 1319,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1298,
											"end": 1319,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "63"
										},
										{
											"begin": 1298,
											"end": 1319,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1298,
											"end": 1319,
											"name": "PUSH",
											"source": 14,
											"value": "10000"
										},
										{
											"begin": 1298,
											"end": 1319,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1298,
											"end": 1319,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 1298,
											"end": 1319,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 1298,
											"end": 1319,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1298,
											"end": 1319,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1298,
											"end": 1319,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1006,
											"end": 1033,
											"name": "tag",
											"source": 14,
											"value": "36"
										},
										{
											"begin": 1006,
											"end": 1033,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1006,
											"end": 1033,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 1006,
											"end": 1033,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1006,
											"end": 1033,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1006,
											"end": 1033,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "200"
										},
										{
											"begin": 1006,
											"end": 1033,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1006,
											"end": 1033,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1006,
											"end": 1033,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1006,
											"end": 1033,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1006,
											"end": 1033,
											"name": "tag",
											"source": 14,
											"value": "200"
										},
										{
											"begin": 1006,
											"end": 1033,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1006,
											"end": 1033,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1006,
											"end": 1033,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "56"
										},
										{
											"begin": 1006,
											"end": 1033,
											"name": "PUSH",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 1006,
											"end": 1033,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1006,
											"end": 1033,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1006,
											"end": 1033,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15036,
											"end": 15260,
											"name": "tag",
											"source": 14,
											"value": "37"
										},
										{
											"begin": 15036,
											"end": 15260,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15036,
											"end": 15260,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 15036,
											"end": 15260,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 15036,
											"end": 15260,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 15036,
											"end": 15260,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "204"
										},
										{
											"begin": 15036,
											"end": 15260,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 15036,
											"end": 15260,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15036,
											"end": 15260,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 15036,
											"end": 15260,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 15036,
											"end": 15260,
											"name": "tag",
											"source": 14,
											"value": "204"
										},
										{
											"begin": 15036,
											"end": 15260,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15036,
											"end": 15260,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "205"
										},
										{
											"begin": 15036,
											"end": 15260,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "206"
										},
										{
											"begin": 15036,
											"end": 15260,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 15036,
											"end": 15260,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 15036,
											"end": 15260,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "93"
										},
										{
											"begin": 15036,
											"end": 15260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15036,
											"end": 15260,
											"name": "tag",
											"source": 14,
											"value": "206"
										},
										{
											"begin": 15036,
											"end": 15260,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15196,
											"end": 15205,
											"name": "PUSH",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 15196,
											"end": 15205,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 15119,
											"end": 15137,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15190,
											"end": 15206,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15190,
											"end": 15206,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15190,
											"end": 15206,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15190,
											"end": 15195,
											"name": "PUSH",
											"source": 14,
											"value": "D"
										},
										{
											"begin": 15190,
											"end": 15206,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 15190,
											"end": 15206,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15190,
											"end": 15206,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15190,
											"end": 15206,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15190,
											"end": 15206,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 15190,
											"end": 15206,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15190,
											"end": 15206,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15190,
											"end": 15206,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15190,
											"end": 15206,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 15171,
											"end": 15206,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15171,
											"end": 15206,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 15171,
											"end": 15206,
											"name": "PUSH",
											"source": 14,
											"value": "A0"
										},
										{
											"begin": 15171,
											"end": 15206,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15171,
											"end": 15206,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15171,
											"end": 15206,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 15171,
											"end": 15206,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15171,
											"end": 15206,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15171,
											"end": 15206,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 15171,
											"end": 15206,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 15171,
											"end": 15206,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15171,
											"end": 15206,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15171,
											"end": 15206,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 15171,
											"end": 15206,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 15171,
											"end": 15206,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15171,
											"end": 15206,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 15171,
											"end": 15206,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 15171,
											"end": 15206,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15171,
											"end": 15206,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15171,
											"end": 15206,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 15171,
											"end": 15206,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15171,
											"end": 15206,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15171,
											"end": 15206,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 15171,
											"end": 15206,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 15171,
											"end": 15206,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15171,
											"end": 15206,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 15171,
											"end": 15206,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 15171,
											"end": 15206,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15171,
											"end": 15206,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15171,
											"end": 15206,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 15171,
											"end": 15206,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15171,
											"end": 15206,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 15171,
											"end": 15206,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15171,
											"end": 15206,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 15171,
											"end": 15206,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15171,
											"end": 15206,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15171,
											"end": 15206,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 15171,
											"end": 15206,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 15171,
											"end": 15206,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15171,
											"end": 15206,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15171,
											"end": 15206,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15171,
											"end": 15206,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 15171,
											"end": 15206,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15171,
											"end": 15206,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15171,
											"end": 15206,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15171,
											"end": 15206,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 15171,
											"end": 15206,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 15171,
											"end": 15206,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 15171,
											"end": 15206,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 15171,
											"end": 15206,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 15171,
											"end": 15206,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 15171,
											"end": 15206,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15171,
											"end": 15206,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15171,
											"end": 15206,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15171,
											"end": 15206,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15171,
											"end": 15206,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15171,
											"end": 15206,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15036,
											"end": 15260,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15036,
											"end": 15260,
											"name": "tag",
											"source": 14,
											"value": "205"
										},
										{
											"begin": 15036,
											"end": 15260,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15036,
											"end": 15260,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 15036,
											"end": 15260,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 15036,
											"end": 15260,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5394,
											"end": 5419,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5394,
											"end": 5419,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5394,
											"end": 5419,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5450,
											"end": 5452,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5435,
											"end": 5453,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5435,
											"end": 5453,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5428,
											"end": 5462,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5428,
											"end": 5462,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5428,
											"end": 5462,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5428,
											"end": 5462,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5367,
											"end": 5385,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15036,
											"end": 15260,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 5220,
											"end": 5468,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1469,
											"end": 1522,
											"name": "tag",
											"source": 14,
											"value": "38"
										},
										{
											"begin": 1469,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1469,
											"end": 1522,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 1469,
											"end": 1522,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1469,
											"end": 1522,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1469,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "210"
										},
										{
											"begin": 1469,
											"end": 1522,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1469,
											"end": 1522,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1469,
											"end": 1522,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1469,
											"end": 1522,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1469,
											"end": 1522,
											"name": "tag",
											"source": 14,
											"value": "210"
										},
										{
											"begin": 1469,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1469,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "56"
										},
										{
											"begin": 1469,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "212"
										},
										{
											"begin": 1469,
											"end": 1522,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 1469,
											"end": 1522,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1469,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "213"
										},
										{
											"begin": 1469,
											"end": 1522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1469,
											"end": 1522,
											"name": "tag",
											"source": 14,
											"value": "212"
										},
										{
											"begin": 1469,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1469,
											"end": 1522,
											"name": "PUSH",
											"source": 14,
											"value": "E"
										},
										{
											"begin": 1469,
											"end": 1522,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1469,
											"end": 1522,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1469,
											"end": 1522,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1469,
											"end": 1522,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1469,
											"end": 1522,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1469,
											"end": 1522,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1469,
											"end": 1522,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1469,
											"end": 1522,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1469,
											"end": 1522,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 1469,
											"end": 1522,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1469,
											"end": 1522,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1469,
											"end": 1522,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1229,
											"end": 1255,
											"name": "tag",
											"source": 14,
											"value": "39"
										},
										{
											"begin": 1229,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1229,
											"end": 1255,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 1229,
											"end": 1255,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1229,
											"end": 1255,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1229,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "216"
										},
										{
											"begin": 1229,
											"end": 1255,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1229,
											"end": 1255,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1229,
											"end": 1255,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1229,
											"end": 1255,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1229,
											"end": 1255,
											"name": "tag",
											"source": 14,
											"value": "216"
										},
										{
											"begin": 1229,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1229,
											"end": 1255,
											"name": "PUSH",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 1229,
											"end": 1255,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1229,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "63"
										},
										{
											"begin": 1229,
											"end": 1255,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1229,
											"end": 1255,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 1229,
											"end": 1255,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1229,
											"end": 1255,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1229,
											"end": 1255,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1528,
											"end": 1585,
											"name": "tag",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1528,
											"end": 1585,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1528,
											"end": 1585,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 1528,
											"end": 1585,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1528,
											"end": 1585,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1528,
											"end": 1585,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "220"
										},
										{
											"begin": 1528,
											"end": 1585,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1528,
											"end": 1585,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1528,
											"end": 1585,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1528,
											"end": 1585,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1528,
											"end": 1585,
											"name": "tag",
											"source": 14,
											"value": "220"
										},
										{
											"begin": 1528,
											"end": 1585,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1528,
											"end": 1585,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "56"
										},
										{
											"begin": 1528,
											"end": 1585,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "222"
										},
										{
											"begin": 1528,
											"end": 1585,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 1528,
											"end": 1585,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1528,
											"end": 1585,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "213"
										},
										{
											"begin": 1528,
											"end": 1585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1528,
											"end": 1585,
											"name": "tag",
											"source": 14,
											"value": "222"
										},
										{
											"begin": 1528,
											"end": 1585,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1528,
											"end": 1585,
											"name": "PUSH",
											"source": 14,
											"value": "F"
										},
										{
											"begin": 1528,
											"end": 1585,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1528,
											"end": 1585,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1528,
											"end": 1585,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1528,
											"end": 1585,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1528,
											"end": 1585,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1528,
											"end": 1585,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1528,
											"end": 1585,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1528,
											"end": 1585,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1528,
											"end": 1585,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 1528,
											"end": 1585,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1528,
											"end": 1585,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1528,
											"end": 1585,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 948,
											"end": 967,
											"name": "tag",
											"source": 14,
											"value": "42"
										},
										{
											"begin": 948,
											"end": 967,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 948,
											"end": 967,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 948,
											"end": 967,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 948,
											"end": 967,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 948,
											"end": 967,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "229"
										},
										{
											"begin": 948,
											"end": 967,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 948,
											"end": 967,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 948,
											"end": 967,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 948,
											"end": 967,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 948,
											"end": 967,
											"name": "tag",
											"source": 14,
											"value": "229"
										},
										{
											"begin": 948,
											"end": 967,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 948,
											"end": 967,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 948,
											"end": 967,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 948,
											"end": 967,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "97"
										},
										{
											"begin": 948,
											"end": 967,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 948,
											"end": 967,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 948,
											"end": 967,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 948,
											"end": 967,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2459,
											"end": 3139,
											"name": "tag",
											"source": 14,
											"value": "43"
										},
										{
											"begin": 2459,
											"end": 3139,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2459,
											"end": 3139,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 2459,
											"end": 3139,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2459,
											"end": 3139,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2459,
											"end": 3139,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "234"
										},
										{
											"begin": 2459,
											"end": 3139,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2459,
											"end": 3139,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2459,
											"end": 3139,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2459,
											"end": 3139,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2459,
											"end": 3139,
											"name": "tag",
											"source": 14,
											"value": "234"
										},
										{
											"begin": 2459,
											"end": 3139,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2459,
											"end": 3139,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "88"
										},
										{
											"begin": 2459,
											"end": 3139,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "236"
										},
										{
											"begin": 2459,
											"end": 3139,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 2459,
											"end": 3139,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 2459,
											"end": 3139,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "237"
										},
										{
											"begin": 2459,
											"end": 3139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2459,
											"end": 3139,
											"name": "tag",
											"source": 14,
											"value": "236"
										},
										{
											"begin": 2459,
											"end": 3139,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2459,
											"end": 3139,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "238"
										},
										{
											"begin": 2459,
											"end": 3139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5373,
											"end": 6605,
											"name": "tag",
											"source": 14,
											"value": "59"
										},
										{
											"begin": 5373,
											"end": 6605,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5498,
											"end": 5505,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5530,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5533,
											"end": 5585,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "240"
										},
										{
											"begin": 5555,
											"end": 5583,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "173"
										},
										{
											"begin": 5569,
											"end": 5582,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 5555,
											"end": 5568,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "71"
										},
										{
											"begin": 5555,
											"end": 5583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5533,
											"end": 5585,
											"name": "tag",
											"source": 14,
											"value": "240"
										},
										{
											"begin": 5533,
											"end": 5585,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5517,
											"end": 5585,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5517,
											"end": 5585,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5604,
											"end": 5609,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5613,
											"end": 5614,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5604,
											"end": 5614,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 5596,
											"end": 5637,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "242"
										},
										{
											"begin": 5596,
											"end": 5637,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5596,
											"end": 5637,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5596,
											"end": 5637,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5596,
											"end": 5637,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5596,
											"end": 5637,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7367,
											"end": 7369,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5596,
											"end": 5637,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 5596,
											"end": 5637,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5596,
											"end": 5637,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7349,
											"end": 7370,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7406,
											"end": 7408,
											"name": "PUSH",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 7386,
											"end": 7404,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 7386,
											"end": 7404,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7386,
											"end": 7404,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7379,
											"end": 7409,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "125B9D985B1A59081C1C9A58D94819995959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7425,
											"end": 7443,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 7425,
											"end": 7443,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7425,
											"end": 7443,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7418,
											"end": 7466,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7483,
											"end": 7501,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 7483,
											"end": 7501,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5596,
											"end": 5637,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "53"
										},
										{
											"begin": 7165,
											"end": 7507,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5596,
											"end": 5637,
											"name": "tag",
											"source": 14,
											"value": "242"
										},
										{
											"begin": 5596,
											"end": 5637,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5647,
											"end": 5668,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5671,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "245"
										},
										{
											"begin": 14896,
											"end": 14905,
											"name": "PUSH",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 14896,
											"end": 14905,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 14896,
											"end": 14905,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14821,
											"end": 14912,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5671,
											"end": 5689,
											"name": "tag",
											"source": 14,
											"value": "245"
										},
										{
											"begin": 5671,
											"end": 5689,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5699,
											"end": 5716,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5719,
											"end": 5739,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5719,
											"end": 5739,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5719,
											"end": 5739,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5719,
											"end": 5724,
											"name": "PUSH",
											"source": 14,
											"value": "D"
										},
										{
											"begin": 5719,
											"end": 5739,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5719,
											"end": 5739,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5719,
											"end": 5739,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5719,
											"end": 5739,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5719,
											"end": 5739,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 5776,
											"end": 5794,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 5776,
											"end": 5794,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5776,
											"end": 5794,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5776,
											"end": 5794,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 5647,
											"end": 5689,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5647,
											"end": 5689,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5719,
											"end": 5739,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5776,
											"end": 5794,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5699,
											"end": 5716,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5878,
											"end": 5891,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 5878,
											"end": 5912,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 5878,
											"end": 5912,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5878,
											"end": 5912,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 5878,
											"end": 5912,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5878,
											"end": 5912,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "250"
										},
										{
											"begin": 5878,
											"end": 5912,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5878,
											"end": 5912,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "250"
										},
										{
											"begin": 5878,
											"end": 5912,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "248"
										},
										{
											"begin": 5878,
											"end": 5912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5878,
											"end": 5912,
											"name": "tag",
											"source": 14,
											"value": "250"
										},
										{
											"begin": 5878,
											"end": 5912,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5878,
											"end": 5912,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 5874,
											"end": 6472,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "251"
										},
										{
											"begin": 5874,
											"end": 6472,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5965,
											"end": 6013,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "252"
										},
										{
											"begin": 5982,
											"end": 6012,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "168"
										},
										{
											"begin": 5999,
											"end": 6012,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 5990,
											"end": 5995,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 5982,
											"end": 6012,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "254"
										},
										{
											"begin": 5982,
											"end": 6012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5965,
											"end": 6013,
											"name": "tag",
											"source": 14,
											"value": "252"
										},
										{
											"begin": 5965,
											"end": 6013,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5928,
											"end": 6013,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5928,
											"end": 6013,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5874,
											"end": 6472,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "273"
										},
										{
											"begin": 5874,
											"end": 6472,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5874,
											"end": 6472,
											"name": "tag",
											"source": 14,
											"value": "251"
										},
										{
											"begin": 5874,
											"end": 6472,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6064,
											"end": 6082,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 6047,
											"end": 6060,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 6047,
											"end": 6082,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 6047,
											"end": 6082,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6047,
											"end": 6082,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 6047,
											"end": 6082,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 6047,
											"end": 6082,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "259"
										},
										{
											"begin": 6047,
											"end": 6082,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6047,
											"end": 6082,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "259"
										},
										{
											"begin": 6047,
											"end": 6082,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "248"
										},
										{
											"begin": 6047,
											"end": 6082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6047,
											"end": 6082,
											"name": "tag",
											"source": 14,
											"value": "259"
										},
										{
											"begin": 6047,
											"end": 6082,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6047,
											"end": 6082,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 6047,
											"end": 6133,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6047,
											"end": 6133,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "260"
										},
										{
											"begin": 6047,
											"end": 6133,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6115,
											"end": 6133,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 6098,
											"end": 6111,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 6098,
											"end": 6133,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 6098,
											"end": 6133,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6098,
											"end": 6133,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 6098,
											"end": 6133,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 6098,
											"end": 6133,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "264"
										},
										{
											"begin": 6098,
											"end": 6133,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6098,
											"end": 6133,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "264"
										},
										{
											"begin": 6098,
											"end": 6133,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "248"
										},
										{
											"begin": 6098,
											"end": 6133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6098,
											"end": 6133,
											"name": "tag",
											"source": 14,
											"value": "264"
										},
										{
											"begin": 6098,
											"end": 6133,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6098,
											"end": 6133,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 6047,
											"end": 6133,
											"name": "tag",
											"source": 14,
											"value": "260"
										},
										{
											"begin": 6047,
											"end": 6133,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6030,
											"end": 6472,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 6030,
											"end": 6472,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "265"
										},
										{
											"begin": 6030,
											"end": 6472,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6187,
											"end": 6188,
											"name": "PUSH",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 6158,
											"end": 6184,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6267,
											"end": 6290,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "266"
										},
										{
											"begin": 6187,
											"end": 6188,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6267,
											"end": 6269,
											"name": "PUSH",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 6267,
											"end": 6290,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "267"
										},
										{
											"begin": 6267,
											"end": 6290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6267,
											"end": 6290,
											"name": "tag",
											"source": 14,
											"value": "266"
										},
										{
											"begin": 6267,
											"end": 6290,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6262,
											"end": 6291,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "268"
										},
										{
											"begin": 6262,
											"end": 6291,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6262,
											"end": 6264,
											"name": "PUSH",
											"source": 14,
											"value": "A"
										},
										{
											"begin": 6262,
											"end": 6291,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "269"
										},
										{
											"begin": 6262,
											"end": 6291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6262,
											"end": 6291,
											"name": "tag",
											"source": 14,
											"value": "268"
										},
										{
											"begin": 6262,
											"end": 6291,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6229,
											"end": 6292,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "270"
										},
										{
											"begin": 6229,
											"end": 6292,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6229,
											"end": 6242,
											"name": "DUP11",
											"source": 14
										},
										{
											"begin": 6229,
											"end": 6292,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "254"
										},
										{
											"begin": 6229,
											"end": 6292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6229,
											"end": 6292,
											"name": "tag",
											"source": 14,
											"value": "270"
										},
										{
											"begin": 6229,
											"end": 6292,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6202,
											"end": 6292,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6343,
											"end": 6394,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "271"
										},
										{
											"begin": 6360,
											"end": 6393,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "168"
										},
										{
											"begin": 6202,
											"end": 6292,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6368,
											"end": 6373,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 6360,
											"end": 6393,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "254"
										},
										{
											"begin": 6360,
											"end": 6393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6343,
											"end": 6394,
											"name": "tag",
											"source": 14,
											"value": "271"
										},
										{
											"begin": 6343,
											"end": 6394,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6306,
											"end": 6394,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6306,
											"end": 6394,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6144,
											"end": 6405,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6144,
											"end": 6405,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6030,
											"end": 6472,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "273"
										},
										{
											"begin": 6030,
											"end": 6472,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6030,
											"end": 6472,
											"name": "tag",
											"source": 14,
											"value": "265"
										},
										{
											"begin": 6030,
											"end": 6472,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6425,
											"end": 6461,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 6425,
											"end": 6461,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6425,
											"end": 6461,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6425,
											"end": 6461,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9707,
											"end": 9709,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6425,
											"end": 6461,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 6425,
											"end": 6461,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6425,
											"end": 6461,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9689,
											"end": 9710,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9746,
											"end": 9748,
											"name": "PUSH",
											"source": 15,
											"value": "1A"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9719,
											"end": 9749,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9785,
											"end": 9813,
											"name": "PUSH",
											"source": 15,
											"value": "556E737570706F72746564207061796D656E74206D6574686F64000000000000"
										},
										{
											"begin": 9765,
											"end": 9783,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 9765,
											"end": 9783,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9765,
											"end": 9783,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9758,
											"end": 9814,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9831,
											"end": 9849,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 9831,
											"end": 9849,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6425,
											"end": 6461,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "53"
										},
										{
											"begin": 9505,
											"end": 9855,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6030,
											"end": 6472,
											"name": "tag",
											"source": 14,
											"value": "273"
										},
										{
											"begin": 6030,
											"end": 6472,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6482,
											"end": 6501,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6555,
											"end": 6570,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6504,
											"end": 6540,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "276"
										},
										{
											"begin": 6521,
											"end": 6539,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6504,
											"end": 6520,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "94"
										},
										{
											"begin": 6504,
											"end": 6540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6504,
											"end": 6540,
											"name": "tag",
											"source": 14,
											"value": "276"
										},
										{
											"begin": 6504,
											"end": 6540,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6504,
											"end": 6570,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "277"
										},
										{
											"begin": 6504,
											"end": 6570,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6504,
											"end": 6570,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6504,
											"end": 6570,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "278"
										},
										{
											"begin": 6504,
											"end": 6570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6504,
											"end": 6570,
											"name": "tag",
											"source": 14,
											"value": "277"
										},
										{
											"begin": 6504,
											"end": 6570,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6482,
											"end": 6570,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5373,
											"end": 6605,
											"name": "tag",
											"source": 14,
											"value": "239"
										},
										{
											"begin": 5373,
											"end": 6605,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5373,
											"end": 6605,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5373,
											"end": 6605,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5373,
											"end": 6605,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5373,
											"end": 6605,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5373,
											"end": 6605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3601,
											"end": 4247,
											"name": "tag",
											"source": 14,
											"value": "71"
										},
										{
											"begin": 3601,
											"end": 4247,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3698,
											"end": 3704,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3698,
											"end": 3704,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3724,
											"end": 3737,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3724,
											"end": 3758,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 3724,
											"end": 3758,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3724,
											"end": 3758,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 3724,
											"end": 3758,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3724,
											"end": 3758,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "284"
										},
										{
											"begin": 3724,
											"end": 3758,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3724,
											"end": 3758,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "284"
										},
										{
											"begin": 3724,
											"end": 3758,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "248"
										},
										{
											"begin": 3724,
											"end": 3758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3724,
											"end": 3758,
											"name": "tag",
											"source": 14,
											"value": "284"
										},
										{
											"begin": 3724,
											"end": 3758,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3724,
											"end": 3758,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3720,
											"end": 4241,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "285"
										},
										{
											"begin": 3720,
											"end": 4241,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3777,
											"end": 3789,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3799,
											"end": 3811,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3799,
											"end": 3811,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3799,
											"end": 3811,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3799,
											"end": 3811,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3799,
											"end": 3811,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3799,
											"end": 3811,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 3799,
											"end": 3811,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 3799,
											"end": 3811,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3799,
											"end": 3811,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3799,
											"end": 3811,
											"name": "AND",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3799,
											"end": 3827,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3799,
											"end": 3827,
											"name": "PUSH",
											"source": 14,
											"value": "FEAF968C"
										},
										{
											"begin": 3799,
											"end": 3829,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3799,
											"end": 3829,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3799,
											"end": 3829,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3799,
											"end": 3829,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3799,
											"end": 3829,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3799,
											"end": 3829,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 3799,
											"end": 3829,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 3799,
											"end": 3829,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3799,
											"end": 3829,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3799,
											"end": 3829,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3799,
											"end": 3829,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3799,
											"end": 3829,
											"name": "PUSH",
											"source": 14,
											"value": "A0"
										},
										{
											"begin": 3799,
											"end": 3829,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3799,
											"end": 3829,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3799,
											"end": 3829,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3799,
											"end": 3829,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3799,
											"end": 3829,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3799,
											"end": 3829,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3799,
											"end": 3829,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 3799,
											"end": 3829,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 3799,
											"end": 3829,
											"name": "STATICCALL",
											"source": 14
										},
										{
											"begin": 3799,
											"end": 3829,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3799,
											"end": 3829,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3799,
											"end": 3829,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3799,
											"end": 3829,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "287"
										},
										{
											"begin": 3799,
											"end": 3829,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3799,
											"end": 3829,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 3799,
											"end": 3829,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3799,
											"end": 3829,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3799,
											"end": 3829,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 3799,
											"end": 3829,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 3799,
											"end": 3829,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3799,
											"end": 3829,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3799,
											"end": 3829,
											"name": "tag",
											"source": 14,
											"value": "287"
										},
										{
											"begin": 3799,
											"end": 3829,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3799,
											"end": 3829,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3799,
											"end": 3829,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3799,
											"end": 3829,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3799,
											"end": 3829,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3799,
											"end": 3829,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3799,
											"end": 3829,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3799,
											"end": 3829,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 3799,
											"end": 3829,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 3799,
											"end": 3829,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 3799,
											"end": 3829,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 3799,
											"end": 3829,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3799,
											"end": 3829,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3799,
											"end": 3829,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3799,
											"end": 3829,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3799,
											"end": 3829,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3799,
											"end": 3829,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3799,
											"end": 3829,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3799,
											"end": 3829,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3799,
											"end": 3829,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3799,
											"end": 3829,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3799,
											"end": 3829,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3799,
											"end": 3829,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3799,
											"end": 3829,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "288"
										},
										{
											"begin": 3799,
											"end": 3829,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3799,
											"end": 3829,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3799,
											"end": 3829,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "289"
										},
										{
											"begin": 3799,
											"end": 3829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3799,
											"end": 3829,
											"name": "tag",
											"source": 14,
											"value": "288"
										},
										{
											"begin": 3799,
											"end": 3829,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3774,
											"end": 3829,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3774,
											"end": 3829,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 3601,
											"end": 4247,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3601,
											"end": 4247,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3720,
											"end": 4241,
											"name": "tag",
											"source": 14,
											"value": "285"
										},
										{
											"begin": 3720,
											"end": 4241,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3893,
											"end": 3911,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 3876,
											"end": 3889,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3876,
											"end": 3911,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 3876,
											"end": 3911,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3876,
											"end": 3911,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 3876,
											"end": 3911,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3876,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "294"
										},
										{
											"begin": 3876,
											"end": 3911,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3876,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "294"
										},
										{
											"begin": 3876,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "248"
										},
										{
											"begin": 3876,
											"end": 3911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3876,
											"end": 3911,
											"name": "tag",
											"source": 14,
											"value": "294"
										},
										{
											"begin": 3876,
											"end": 3911,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3876,
											"end": 3911,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3872,
											"end": 4241,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "295"
										},
										{
											"begin": 3872,
											"end": 4241,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3952,
											"end": 3965,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3965,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3952,
											"end": 3983,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3952,
											"end": 3983,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3952,
											"end": 3983,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3FABE5A3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3952,
											"end": 3983,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3952,
											"end": 3983,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3952,
											"end": 3983,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3952,
											"end": 3983,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3930,
											"end": 3942,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3930,
											"end": 3942,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3952,
											"end": 3965,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3952,
											"end": 3965,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3952,
											"end": 3981,
											"name": "PUSH",
											"source": 14,
											"value": "FEAF968C"
										},
										{
											"begin": 3952,
											"end": 3981,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3952,
											"end": 3983,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3952,
											"end": 3983,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3952,
											"end": 3983,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3952,
											"end": 3983,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3952,
											"end": 3983,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3952,
											"end": 3983,
											"name": "PUSH",
											"source": 14,
											"value": "A0"
										},
										{
											"begin": 3952,
											"end": 3983,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3952,
											"end": 3983,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3952,
											"end": 3983,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3952,
											"end": 3983,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3952,
											"end": 3983,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3952,
											"end": 3983,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3952,
											"end": 3983,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3952,
											"end": 3983,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3952,
											"end": 3965,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 3952,
											"end": 3983,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 3952,
											"end": 3983,
											"name": "STATICCALL",
											"source": 14
										},
										{
											"begin": 3952,
											"end": 3983,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3952,
											"end": 3983,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3952,
											"end": 3983,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3952,
											"end": 3983,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "287"
										},
										{
											"begin": 3952,
											"end": 3983,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3952,
											"end": 3983,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 3952,
											"end": 3983,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3983,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3952,
											"end": 3983,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 3952,
											"end": 3983,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 3952,
											"end": 3983,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3983,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3872,
											"end": 4241,
											"name": "tag",
											"source": 14,
											"value": "295"
										},
										{
											"begin": 3872,
											"end": 4241,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4047,
											"end": 4065,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 4030,
											"end": 4043,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4030,
											"end": 4065,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 4030,
											"end": 4065,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4030,
											"end": 4065,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 4030,
											"end": 4065,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4030,
											"end": 4065,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "303"
										},
										{
											"begin": 4030,
											"end": 4065,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4030,
											"end": 4065,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "303"
										},
										{
											"begin": 4030,
											"end": 4065,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "248"
										},
										{
											"begin": 4030,
											"end": 4065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4030,
											"end": 4065,
											"name": "tag",
											"source": 14,
											"value": "303"
										},
										{
											"begin": 4030,
											"end": 4065,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4030,
											"end": 4065,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4026,
											"end": 4241,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "265"
										},
										{
											"begin": 4026,
											"end": 4241,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4106,
											"end": 4119,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 4106,
											"end": 4119,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3FABE5A3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4106,
											"end": 4119,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4106,
											"end": 4119,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4106,
											"end": 4135,
											"name": "PUSH",
											"source": 14,
											"value": "FEAF968C"
										},
										{
											"begin": 4106,
											"end": 4135,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "PUSH",
											"source": 14,
											"value": "A0"
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4106,
											"end": 4119,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "STATICCALL",
											"source": 14
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "287"
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4026,
											"end": 4241,
											"name": "tag",
											"source": 14,
											"value": "308"
										},
										{
											"begin": 4026,
											"end": 4241,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3601,
											"end": 4247,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3601,
											"end": 4247,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3601,
											"end": 4247,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3601,
											"end": 4247,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6611,
											"end": 7724,
											"name": "tag",
											"source": 14,
											"value": "77"
										},
										{
											"begin": 6611,
											"end": 7724,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6738,
											"end": 6745,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6765,
											"end": 6776,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6780,
											"end": 6781,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6765,
											"end": 6781,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 6757,
											"end": 6809,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "311"
										},
										{
											"begin": 6757,
											"end": 6809,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6757,
											"end": 6809,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 6757,
											"end": 6809,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6757,
											"end": 6809,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6757,
											"end": 6809,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11044,
											"end": 11046,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6757,
											"end": 6809,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 6757,
											"end": 6809,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6757,
											"end": 6809,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11026,
											"end": 11047,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11083,
											"end": 11085,
											"name": "PUSH",
											"source": 15,
											"value": "17"
										},
										{
											"begin": 11063,
											"end": 11081,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 11063,
											"end": 11081,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11063,
											"end": 11081,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11056,
											"end": 11086,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11122,
											"end": 11147,
											"name": "PUSH",
											"source": 15,
											"value": "416D6F756E74206D75737420626520706F736974697665000000000000000000"
										},
										{
											"begin": 11102,
											"end": 11120,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 11102,
											"end": 11120,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11102,
											"end": 11120,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11095,
											"end": 11148,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11165,
											"end": 11183,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 11165,
											"end": 11183,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6757,
											"end": 6809,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "53"
										},
										{
											"begin": 10842,
											"end": 11189,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6757,
											"end": 6809,
											"name": "tag",
											"source": 14,
											"value": "311"
										},
										{
											"begin": 6757,
											"end": 6809,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6820,
											"end": 6833,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6836,
											"end": 6888,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "314"
										},
										{
											"begin": 6858,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "173"
										},
										{
											"begin": 6872,
											"end": 6885,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 6858,
											"end": 6871,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "71"
										},
										{
											"begin": 6858,
											"end": 6886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6836,
											"end": 6888,
											"name": "tag",
											"source": 14,
											"value": "314"
										},
										{
											"begin": 6836,
											"end": 6888,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6820,
											"end": 6888,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6820,
											"end": 6888,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6907,
											"end": 6912,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6916,
											"end": 6917,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6907,
											"end": 6917,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 6899,
											"end": 6940,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "316"
										},
										{
											"begin": 6899,
											"end": 6940,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6899,
											"end": 6940,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 6899,
											"end": 6940,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6899,
											"end": 6940,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6899,
											"end": 6940,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7367,
											"end": 7369,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6899,
											"end": 6940,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 6899,
											"end": 6940,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6899,
											"end": 6940,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7349,
											"end": 7370,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7406,
											"end": 7408,
											"name": "PUSH",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 7386,
											"end": 7404,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 7386,
											"end": 7404,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7386,
											"end": 7404,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7379,
											"end": 7409,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "125B9D985B1A59081C1C9A58D94819995959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7425,
											"end": 7443,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 7425,
											"end": 7443,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7425,
											"end": 7443,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7418,
											"end": 7466,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7483,
											"end": 7501,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 7483,
											"end": 7501,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6899,
											"end": 6940,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "53"
										},
										{
											"begin": 7165,
											"end": 7507,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6899,
											"end": 6940,
											"name": "tag",
											"source": 14,
											"value": "316"
										},
										{
											"begin": 6899,
											"end": 6940,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6951,
											"end": 6972,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6975,
											"end": 6993,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "318"
										},
										{
											"begin": 14896,
											"end": 14905,
											"name": "PUSH",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 14896,
											"end": 14905,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 14896,
											"end": 14905,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14821,
											"end": 14912,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6975,
											"end": 6993,
											"name": "tag",
											"source": 14,
											"value": "318"
										},
										{
											"begin": 6975,
											"end": 6993,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6951,
											"end": 6993,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6951,
											"end": 6993,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7011,
											"end": 7024,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7028,
											"end": 7029,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7011,
											"end": 7029,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 7003,
											"end": 7048,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "319"
										},
										{
											"begin": 7003,
											"end": 7048,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7003,
											"end": 7048,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 7003,
											"end": 7048,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7003,
											"end": 7048,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7003,
											"end": 7048,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11396,
											"end": 11398,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7003,
											"end": 7048,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 7003,
											"end": 7048,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7003,
											"end": 7048,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11378,
											"end": 11399,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11435,
											"end": 11437,
											"name": "PUSH",
											"source": 15,
											"value": "E"
										},
										{
											"begin": 11415,
											"end": 11433,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 11415,
											"end": 11433,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11415,
											"end": 11433,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11408,
											"end": 11438,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F206163746976652073616C65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "90"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11454,
											"end": 11472,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 11454,
											"end": 11472,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11454,
											"end": 11472,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11447,
											"end": 11491,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11508,
											"end": 11526,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 11508,
											"end": 11526,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7003,
											"end": 7048,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "53"
										},
										{
											"begin": 11194,
											"end": 11532,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7003,
											"end": 7048,
											"name": "tag",
											"source": 14,
											"value": "319"
										},
										{
											"begin": 7003,
											"end": 7048,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7058,
											"end": 7075,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7078,
											"end": 7098,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7078,
											"end": 7098,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7078,
											"end": 7098,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7078,
											"end": 7083,
											"name": "PUSH",
											"source": 14,
											"value": "D"
										},
										{
											"begin": 7078,
											"end": 7098,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7078,
											"end": 7098,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7078,
											"end": 7098,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 7078,
											"end": 7098,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7078,
											"end": 7098,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 7134,
											"end": 7152,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 7134,
											"end": 7152,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7134,
											"end": 7152,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7134,
											"end": 7152,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 7078,
											"end": 7098,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7078,
											"end": 7098,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7191,
											"end": 7238,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "322"
										},
										{
											"begin": 7208,
											"end": 7237,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "168"
										},
										{
											"begin": 7134,
											"end": 7152,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7208,
											"end": 7219,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 7208,
											"end": 7237,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "254"
										},
										{
											"begin": 7208,
											"end": 7237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7191,
											"end": 7238,
											"name": "tag",
											"source": 14,
											"value": "322"
										},
										{
											"begin": 7191,
											"end": 7238,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7163,
											"end": 7238,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7249,
											"end": 7270,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7249,
											"end": 7270,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 7284,
											"end": 7318,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 7284,
											"end": 7318,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7284,
											"end": 7318,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 7284,
											"end": 7318,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7284,
											"end": 7318,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "327"
										},
										{
											"begin": 7284,
											"end": 7318,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7284,
											"end": 7318,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "327"
										},
										{
											"begin": 7284,
											"end": 7318,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "248"
										},
										{
											"begin": 7284,
											"end": 7318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7284,
											"end": 7318,
											"name": "tag",
											"source": 14,
											"value": "327"
										},
										{
											"begin": 7284,
											"end": 7318,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7284,
											"end": 7318,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 7280,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "328"
										},
										{
											"begin": 7280,
											"end": 7687,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7396,
											"end": 7401,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 7350,
											"end": 7385,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 7367,
											"end": 7384,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7350,
											"end": 7366,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "94"
										},
										{
											"begin": 7350,
											"end": 7385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7350,
											"end": 7385,
											"name": "tag",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 7350,
											"end": 7385,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7350,
											"end": 7402,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 7350,
											"end": 7402,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7350,
											"end": 7402,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7350,
											"end": 7402,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "278"
										},
										{
											"begin": 7350,
											"end": 7402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7350,
											"end": 7402,
											"name": "tag",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 7350,
											"end": 7402,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7334,
											"end": 7402,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7334,
											"end": 7402,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7280,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "344"
										},
										{
											"begin": 7280,
											"end": 7687,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7280,
											"end": 7687,
											"name": "tag",
											"source": 14,
											"value": "328"
										},
										{
											"begin": 7280,
											"end": 7687,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7453,
											"end": 7471,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 7436,
											"end": 7449,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 7436,
											"end": 7471,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 7436,
											"end": 7471,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7436,
											"end": 7471,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 7436,
											"end": 7471,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7436,
											"end": 7471,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "335"
										},
										{
											"begin": 7436,
											"end": 7471,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7436,
											"end": 7471,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "335"
										},
										{
											"begin": 7436,
											"end": 7471,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "248"
										},
										{
											"begin": 7436,
											"end": 7471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7436,
											"end": 7471,
											"name": "tag",
											"source": 14,
											"value": "335"
										},
										{
											"begin": 7436,
											"end": 7471,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7436,
											"end": 7471,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 7436,
											"end": 7522,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7436,
											"end": 7522,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "336"
										},
										{
											"begin": 7436,
											"end": 7522,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7504,
											"end": 7522,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 7487,
											"end": 7500,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 7487,
											"end": 7522,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 7487,
											"end": 7522,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7487,
											"end": 7522,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 7487,
											"end": 7522,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7487,
											"end": 7522,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "340"
										},
										{
											"begin": 7487,
											"end": 7522,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7487,
											"end": 7522,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "340"
										},
										{
											"begin": 7487,
											"end": 7522,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "248"
										},
										{
											"begin": 7487,
											"end": 7522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7487,
											"end": 7522,
											"name": "tag",
											"source": 14,
											"value": "340"
										},
										{
											"begin": 7487,
											"end": 7522,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7487,
											"end": 7522,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 7436,
											"end": 7522,
											"name": "tag",
											"source": 14,
											"value": "336"
										},
										{
											"begin": 7436,
											"end": 7522,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7419,
											"end": 7687,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7419,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "265"
										},
										{
											"begin": 7419,
											"end": 7687,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7603,
											"end": 7608,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 7564,
											"end": 7591,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 7564,
											"end": 7581,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7585,
											"end": 7590,
											"name": "PUSH",
											"source": 14,
											"value": "F4240"
										},
										{
											"begin": 7564,
											"end": 7591,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "254"
										},
										{
											"begin": 7564,
											"end": 7591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7419,
											"end": 7687,
											"name": "tag",
											"source": 14,
											"value": "344"
										},
										{
											"begin": 7419,
											"end": 7687,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7704,
											"end": 7717,
											"name": "SWAP9",
											"source": 14
										},
										{
											"begin": 6611,
											"end": 7724,
											"name": "SWAP8",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6611,
											"end": 7724,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10159,
											"end": 10570,
											"name": "tag",
											"source": 14,
											"value": "89"
										},
										{
											"begin": 10159,
											"end": 10570,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3395,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "348"
										},
										{
											"begin": 3395,
											"end": 3414,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "349"
										},
										{
											"begin": 3395,
											"end": 3416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3395,
											"end": 3416,
											"name": "tag",
											"source": 5,
											"value": "348"
										},
										{
											"begin": 3395,
											"end": 3416,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2334,
											"end": 2347,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 2334,
											"end": 2345,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2347,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 2334,
											"end": 2347,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3191,
											"end": 3205,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 3191,
											"end": 3205,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3191,
											"end": 3205,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 3191,
											"end": 3205,
											"modifierDepth": 2,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3190,
											"end": 3205,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3182,
											"end": 3231,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "354"
										},
										{
											"begin": 3182,
											"end": 3231,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3182,
											"end": 3231,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3182,
											"end": 3231,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3182,
											"end": 3231,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3182,
											"end": 3231,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3182,
											"end": 3231,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3182,
											"end": 3231,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3182,
											"end": 3231,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "53"
										},
										{
											"begin": 3182,
											"end": 3231,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3182,
											"end": 3231,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "356"
										},
										{
											"begin": 3182,
											"end": 3231,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3182,
											"end": 3231,
											"modifierDepth": 2,
											"name": "tag",
											"source": 14,
											"value": "354"
										},
										{
											"begin": 3182,
											"end": 3231,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3293,
											"end": 3302,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 3293,
											"end": 3302,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3293,
											"end": 3302,
											"name": "PUSH",
											"source": 14,
											"value": "10000"
										},
										{
											"begin": 3293,
											"end": 3302,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3293,
											"end": 3302,
											"modifierDepth": 3,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 3293,
											"end": 3302,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 3293,
											"end": 3302,
											"modifierDepth": 3,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3292,
											"end": 3302,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3284,
											"end": 3314,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "358"
										},
										{
											"begin": 3284,
											"end": 3314,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3284,
											"end": 3314,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3284,
											"end": 3314,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3284,
											"end": 3314,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3284,
											"end": 3314,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3284,
											"end": 3314,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3284,
											"end": 3314,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3284,
											"end": 3314,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "53"
										},
										{
											"begin": 3284,
											"end": 3314,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3284,
											"end": 3314,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "360"
										},
										{
											"begin": 3284,
											"end": 3314,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3284,
											"end": 3314,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "358"
										},
										{
											"begin": 3284,
											"end": 3314,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10334,
											"end": 10346,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 10334,
											"end": 10346,
											"modifierDepth": 4,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 10311,
											"end": 10330,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 10311,
											"end": 10330,
											"modifierDepth": 4,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 10311,
											"end": 10346,
											"modifierDepth": 4,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 10311,
											"end": 10346,
											"modifierDepth": 4,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 10290,
											"end": 10392,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "362"
										},
										{
											"begin": 10290,
											"end": 10392,
											"modifierDepth": 4,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10290,
											"end": 10392,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 10290,
											"end": 10392,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10290,
											"end": 10392,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10290,
											"end": 10392,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12424,
											"end": 12426,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 10290,
											"end": 10392,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 10290,
											"end": 10392,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10290,
											"end": 10392,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12406,
											"end": 12427,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12463,
											"end": 12465,
											"name": "PUSH",
											"source": 15,
											"value": "14"
										},
										{
											"begin": 12443,
											"end": 12461,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 12443,
											"end": 12461,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12443,
											"end": 12461,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12436,
											"end": 12466,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14DBD99D0810D85C081393DD0814995858DA1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12482,
											"end": 12500,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 12482,
											"end": 12500,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12482,
											"end": 12500,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12475,
											"end": 12525,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12542,
											"end": 12560,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 12542,
											"end": 12560,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10290,
											"end": 10392,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "53"
										},
										{
											"begin": 12222,
											"end": 12566,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10290,
											"end": 10392,
											"modifierDepth": 4,
											"name": "tag",
											"source": 14,
											"value": "362"
										},
										{
											"begin": 10290,
											"end": 10392,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10410,
											"end": 10428,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 10410,
											"end": 10428,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 10410,
											"end": 10428,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 10410,
											"end": 10428,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10410,
											"end": 10428,
											"modifierDepth": 4,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 10410,
											"end": 10428,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 10410,
											"end": 10428,
											"modifierDepth": 4,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 10402,
											"end": 10454,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "365"
										},
										{
											"begin": 10402,
											"end": 10454,
											"modifierDepth": 4,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10402,
											"end": 10454,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 10402,
											"end": 10454,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10402,
											"end": 10454,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10402,
											"end": 10454,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12773,
											"end": 12775,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 10402,
											"end": 10454,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 10402,
											"end": 10454,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10402,
											"end": 10454,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12755,
											"end": 12776,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12812,
											"end": 12814,
											"name": "PUSH",
											"source": 15,
											"value": "15"
										},
										{
											"begin": 12792,
											"end": 12810,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 12792,
											"end": 12810,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12792,
											"end": 12810,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12785,
											"end": 12815,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "105A5C991C9BDC081B9BDD0818DBDB5C1B195D1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12831,
											"end": 12849,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 12831,
											"end": 12849,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12831,
											"end": 12849,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12824,
											"end": 12875,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12892,
											"end": 12910,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 12892,
											"end": 12910,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10402,
											"end": 10454,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "53"
										},
										{
											"begin": 12571,
											"end": 12916,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10402,
											"end": 10454,
											"modifierDepth": 4,
											"name": "tag",
											"source": 14,
											"value": "365"
										},
										{
											"begin": 10402,
											"end": 10454,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10465,
											"end": 10479,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 10465,
											"end": 10486,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 10465,
											"end": 10486,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10465,
											"end": 10486,
											"modifierDepth": 4,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 10482,
											"end": 10486,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 10465,
											"end": 10486,
											"modifierDepth": 4,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 10465,
											"end": 10486,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10465,
											"end": 10486,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 10496,
											"end": 10519,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "368"
										},
										{
											"begin": 10496,
											"end": 10517,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "369"
										},
										{
											"begin": 10496,
											"end": 10519,
											"jumpType": "[in]",
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10496,
											"end": 10519,
											"modifierDepth": 4,
											"name": "tag",
											"source": 14,
											"value": "368"
										},
										{
											"begin": 10496,
											"end": 10519,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10547,
											"end": 10562,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 10547,
											"end": 10562,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 10534,
											"end": 10563,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 10534,
											"end": 10563,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 10534,
											"end": 10563,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "9C4B134DA32AAB35252391880A9F2A3C13A760D7817AE8823F2B301D3522045A"
										},
										{
											"begin": 10534,
											"end": 10563,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10534,
											"end": 10563,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10534,
											"end": 10563,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10534,
											"end": 10563,
											"modifierDepth": 4,
											"name": "LOG2",
											"source": 14
										},
										{
											"begin": 3437,
											"end": 3457,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "370"
										},
										{
											"begin": 1949,
											"end": 1950,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "C8669CF8EAF883002B9F48E28846A8D408C9B58EA6613BACE374265E43C9BC43"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4113,
											"end": 4136,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3860,
											"end": 4143,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3437,
											"end": 3457,
											"name": "tag",
											"source": 5,
											"value": "370"
										},
										{
											"begin": 3437,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10159,
											"end": 10570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4355,
											"end": 4451,
											"name": "tag",
											"source": 14,
											"value": "94"
										},
										{
											"begin": 4355,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4411,
											"end": 4415,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4434,
											"end": 4444,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "239"
										},
										{
											"begin": 4434,
											"end": 4437,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4440,
											"end": 4444,
											"name": "PUSH",
											"source": 14,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 4434,
											"end": 4444,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "254"
										},
										{
											"begin": 4434,
											"end": 4444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1327,
											"end": 1353,
											"name": "tag",
											"source": 14,
											"value": "108"
										},
										{
											"begin": 1327,
											"end": 1353,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1327,
											"end": 1353,
											"name": "PUSH",
											"source": 14,
											"value": "A"
										},
										{
											"begin": 1327,
											"end": 1353,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1327,
											"end": 1353,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1327,
											"end": 1353,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1327,
											"end": 1353,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1327,
											"end": 1353,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 1327,
											"end": 1353,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "374"
										},
										{
											"begin": 1327,
											"end": 1353,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1327,
											"end": 1353,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1327,
											"end": 1353,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1327,
											"end": 1353,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1327,
											"end": 1353,
											"name": "tag",
											"source": 14,
											"value": "374"
										},
										{
											"begin": 1327,
											"end": 1353,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1327,
											"end": 1353,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1327,
											"end": 1353,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1327,
											"end": 1353,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1327,
											"end": 1353,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1327,
											"end": 1353,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1327,
											"end": 1353,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1327,
											"end": 1353,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1327,
											"end": 1353,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 1327,
											"end": 1353,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1327,
											"end": 1353,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1327,
											"end": 1353,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1327,
											"end": 1353,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1327,
											"end": 1353,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1327,
											"end": 1353,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2655,
											"end": 2668,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "377"
										},
										{
											"begin": 2655,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "378"
										},
										{
											"begin": 2655,
											"end": 2668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2655,
											"end": 2668,
											"name": "tag",
											"source": 3,
											"value": "377"
										},
										{
											"begin": 2655,
											"end": 2668,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4312,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "380"
										},
										{
											"begin": 4294,
											"end": 4311,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "381"
										},
										{
											"begin": 4276,
											"end": 4312,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4312,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "380"
										},
										{
											"begin": 4276,
											"end": 4312,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4322,
											"end": 4368,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "382"
										},
										{
											"begin": 4344,
											"end": 4361,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4363,
											"end": 4367,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4322,
											"end": 4343,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "383"
										},
										{
											"begin": 4322,
											"end": 4368,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4322,
											"end": 4368,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "382"
										},
										{
											"begin": 4322,
											"end": 4368,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4161,
											"end": 4375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3777,
											"end": 3784,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "385"
										},
										{
											"begin": 2926,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "386"
										},
										{
											"begin": 2926,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2926,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "385"
										},
										{
											"begin": 2926,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3708,
											"end": 3842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3338,
											"end": 3467,
											"name": "tag",
											"source": 14,
											"value": "125"
										},
										{
											"begin": 3338,
											"end": 3467,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "389"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 1,
											"value": "389"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3293,
											"end": 3302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 3293,
											"end": 3302,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3293,
											"end": 3302,
											"name": "PUSH",
											"source": 14,
											"value": "10000"
										},
										{
											"begin": 3293,
											"end": 3302,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3293,
											"end": 3302,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 3293,
											"end": 3302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 3293,
											"end": 3302,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3292,
											"end": 3302,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3284,
											"end": 3314,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "391"
										},
										{
											"begin": 3284,
											"end": 3314,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3284,
											"end": 3314,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3284,
											"end": 3314,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3284,
											"end": 3314,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3284,
											"end": 3314,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3284,
											"end": 3314,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3284,
											"end": 3314,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3284,
											"end": 3314,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "53"
										},
										{
											"begin": 3284,
											"end": 3314,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3284,
											"end": 3314,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "360"
										},
										{
											"begin": 3284,
											"end": 3314,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3284,
											"end": 3314,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "391"
										},
										{
											"begin": 3284,
											"end": 3314,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3444,
											"end": 3453,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 3444,
											"end": 3460,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3444,
											"end": 3460,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF0000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3444,
											"end": 3460,
											"modifierDepth": 2,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3444,
											"end": 3460,
											"name": "PUSH",
											"source": 14,
											"value": "10000"
										},
										{
											"begin": 3444,
											"end": 3460,
											"modifierDepth": 2,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 3444,
											"end": 3460,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3444,
											"end": 3460,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 3338,
											"end": 3467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4659,
											"end": 5367,
											"name": "tag",
											"source": 14,
											"value": "134"
										},
										{
											"begin": 4659,
											"end": 5367,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3395,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "395"
										},
										{
											"begin": 3395,
											"end": 3414,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "349"
										},
										{
											"begin": 3395,
											"end": 3416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3395,
											"end": 3416,
											"name": "tag",
											"source": 5,
											"value": "395"
										},
										{
											"begin": 3395,
											"end": 3416,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2334,
											"end": 2347,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "397"
										},
										{
											"begin": 2334,
											"end": 2345,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2347,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "397"
										},
										{
											"begin": 2334,
											"end": 2347,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3191,
											"end": 3205,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 3191,
											"end": 3205,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3191,
											"end": 3205,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 3191,
											"end": 3205,
											"modifierDepth": 2,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3190,
											"end": 3205,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3182,
											"end": 3231,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "399"
										},
										{
											"begin": 3182,
											"end": 3231,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3182,
											"end": 3231,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3182,
											"end": 3231,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3182,
											"end": 3231,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3182,
											"end": 3231,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3182,
											"end": 3231,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3182,
											"end": 3231,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3182,
											"end": 3231,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "53"
										},
										{
											"begin": 3182,
											"end": 3231,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3182,
											"end": 3231,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "356"
										},
										{
											"begin": 3182,
											"end": 3231,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3182,
											"end": 3231,
											"modifierDepth": 2,
											"name": "tag",
											"source": 14,
											"value": "399"
										},
										{
											"begin": 3182,
											"end": 3231,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3293,
											"end": 3302,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 3293,
											"end": 3302,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3293,
											"end": 3302,
											"name": "PUSH",
											"source": 14,
											"value": "10000"
										},
										{
											"begin": 3293,
											"end": 3302,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3293,
											"end": 3302,
											"modifierDepth": 3,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 3293,
											"end": 3302,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 3293,
											"end": 3302,
											"modifierDepth": 3,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3292,
											"end": 3302,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3284,
											"end": 3314,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "402"
										},
										{
											"begin": 3284,
											"end": 3314,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3284,
											"end": 3314,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3284,
											"end": 3314,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3284,
											"end": 3314,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3284,
											"end": 3314,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3284,
											"end": 3314,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3284,
											"end": 3314,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3284,
											"end": 3314,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "53"
										},
										{
											"begin": 3284,
											"end": 3314,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3284,
											"end": 3314,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "360"
										},
										{
											"begin": 3284,
											"end": 3314,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3284,
											"end": 3314,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "402"
										},
										{
											"begin": 3284,
											"end": 3314,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4870,
											"end": 4885,
											"modifierDepth": 4,
											"name": "TIMESTAMP",
											"source": 14
										},
										{
											"begin": 4857,
											"end": 4867,
											"modifierDepth": 4,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4857,
											"end": 4885,
											"modifierDepth": 4,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 4857,
											"end": 4910,
											"modifierDepth": 4,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4857,
											"end": 4910,
											"modifierDepth": 4,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4857,
											"end": 4910,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "405"
										},
										{
											"begin": 4857,
											"end": 4910,
											"modifierDepth": 4,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4857,
											"end": 4910,
											"modifierDepth": 4,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4900,
											"end": 4910,
											"modifierDepth": 4,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4889,
											"end": 4897,
											"modifierDepth": 4,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4889,
											"end": 4910,
											"modifierDepth": 4,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 4857,
											"end": 4910,
											"modifierDepth": 4,
											"name": "tag",
											"source": 14,
											"value": "405"
										},
										{
											"begin": 4857,
											"end": 4910,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4857,
											"end": 4954,
											"modifierDepth": 4,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4857,
											"end": 4954,
											"modifierDepth": 4,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4857,
											"end": 4954,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "406"
										},
										{
											"begin": 4857,
											"end": 4954,
											"modifierDepth": 4,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15005,
											"end": 15014,
											"name": "PUSH",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 15005,
											"end": 15014,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 14973,
											"end": 14980,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14999,
											"end": 15015,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14999,
											"end": 15015,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14999,
											"end": 15015,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14999,
											"end": 15004,
											"name": "PUSH",
											"source": 14,
											"value": "D"
										},
										{
											"begin": 14999,
											"end": 15015,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 14999,
											"end": 15015,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14999,
											"end": 15015,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 14999,
											"end": 15015,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14999,
											"end": 15015,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 14999,
											"end": 15023,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 14999,
											"end": 15023,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14999,
											"end": 15023,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 4914,
											"end": 4929,
											"modifierDepth": 4,
											"name": "TIMESTAMP",
											"source": 14
										},
										{
											"begin": 4914,
											"end": 4954,
											"modifierDepth": 4,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 4857,
											"end": 4954,
											"modifierDepth": 4,
											"name": "tag",
											"source": 14,
											"value": "406"
										},
										{
											"begin": 4857,
											"end": 4954,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4837,
											"end": 5004,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "409"
										},
										{
											"begin": 4837,
											"end": 5004,
											"modifierDepth": 4,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4837,
											"end": 5004,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4837,
											"end": 5004,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4837,
											"end": 5004,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4837,
											"end": 5004,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13123,
											"end": 13125,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4837,
											"end": 5004,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 4837,
											"end": 5004,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4837,
											"end": 5004,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13105,
											"end": 13126,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13162,
											"end": 13164,
											"name": "PUSH",
											"source": 15,
											"value": "18"
										},
										{
											"begin": 13142,
											"end": 13160,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 13142,
											"end": 13160,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13142,
											"end": 13160,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13135,
											"end": 13165,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13201,
											"end": 13227,
											"name": "PUSH",
											"source": 15,
											"value": "496E76616C69642073746172742074696D652072616E67650000000000000000"
										},
										{
											"begin": 13181,
											"end": 13199,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 13181,
											"end": 13199,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13181,
											"end": 13199,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13174,
											"end": 13228,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13245,
											"end": 13263,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 13245,
											"end": 13263,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4837,
											"end": 5004,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "53"
										},
										{
											"begin": 12921,
											"end": 13269,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4837,
											"end": 5004,
											"modifierDepth": 4,
											"name": "tag",
											"source": 14,
											"value": "409"
										},
										{
											"begin": 4837,
											"end": 5004,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5026,
											"end": 5035,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 5026,
											"end": 5035,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 5026,
											"end": 5038,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "412"
										},
										{
											"begin": 5026,
											"end": 5038,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5037,
											"end": 5038,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 5026,
											"end": 5038,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "413"
										},
										{
											"begin": 5026,
											"end": 5038,
											"jumpType": "[in]",
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5026,
											"end": 5038,
											"modifierDepth": 4,
											"name": "tag",
											"source": 14,
											"value": "412"
										},
										{
											"begin": 5026,
											"end": 5038,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5014,
											"end": 5023,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 5014,
											"end": 5038,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5014,
											"end": 5038,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5014,
											"end": 5038,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 5048,
											"end": 5065,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5068,
											"end": 5084,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5068,
											"end": 5084,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5068,
											"end": 5084,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5068,
											"end": 5073,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "D"
										},
										{
											"begin": 5068,
											"end": 5084,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5068,
											"end": 5084,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5068,
											"end": 5084,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5068,
											"end": 5084,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5068,
											"end": 5084,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5068,
											"end": 5084,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5068,
											"end": 5084,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5068,
											"end": 5084,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 5098,
											"end": 5125,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 5098,
											"end": 5125,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5098,
											"end": 5125,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 5139,
											"end": 5151,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 5139,
											"end": 5151,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5139,
											"end": 5151,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5139,
											"end": 5162,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 5139,
											"end": 5162,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5139,
											"end": 5162,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 5176,
											"end": 5194,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 5176,
											"end": 5194,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5176,
											"end": 5194,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5176,
											"end": 5211,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 5176,
											"end": 5211,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5176,
											"end": 5211,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 5225,
											"end": 5240,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 5225,
											"end": 5240,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5225,
											"end": 5240,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5225,
											"end": 5244,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 5225,
											"end": 5244,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5225,
											"end": 5244,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 5225,
											"end": 5244,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 5258,
											"end": 5274,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 5258,
											"end": 5274,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5258,
											"end": 5274,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5258,
											"end": 5282,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5258,
											"end": 5282,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5258,
											"end": 5282,
											"modifierDepth": 4,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 5258,
											"end": 5282,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5258,
											"end": 5282,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 5312,
											"end": 5321,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5312,
											"end": 5321,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 5297,
											"end": 5360,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5297,
											"end": 5360,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 13606,
											"end": 13631,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 13606,
											"end": 13631,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13606,
											"end": 13631,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13647,
											"end": 13665,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 13647,
											"end": 13665,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13647,
											"end": 13665,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13640,
											"end": 13674,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 13640,
											"end": 13674,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13640,
											"end": 13674,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13690,
											"end": 13708,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 13690,
											"end": 13708,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13690,
											"end": 13708,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13683,
											"end": 13717,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 13683,
											"end": 13717,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13683,
											"end": 13717,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5297,
											"end": 5360,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "63B43FA153147ADE1DE28ED76841CDBC34E510ED94DD1FF5A88E278B0B1AD9BA"
										},
										{
											"begin": 5297,
											"end": 5360,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13594,
											"end": 13596,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 13579,
											"end": 13597,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5297,
											"end": 5360,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5297,
											"end": 5360,
											"modifierDepth": 4,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5297,
											"end": 5360,
											"modifierDepth": 4,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5297,
											"end": 5360,
											"modifierDepth": 4,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5297,
											"end": 5360,
											"modifierDepth": 4,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 5297,
											"end": 5360,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5297,
											"end": 5360,
											"modifierDepth": 4,
											"name": "LOG2",
											"source": 14
										},
										{
											"begin": 4827,
											"end": 5367,
											"modifierDepth": 4,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3437,
											"end": 3457,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "416"
										},
										{
											"begin": 1949,
											"end": 1950,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "C8669CF8EAF883002B9F48E28846A8D408C9B58EA6613BACE374265E43C9BC43"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4113,
											"end": 4136,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3860,
											"end": 4143,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3437,
											"end": 3457,
											"name": "tag",
											"source": 5,
											"value": "416"
										},
										{
											"begin": 3437,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4659,
											"end": 5367,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4659,
											"end": 5367,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4659,
											"end": 5367,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4659,
											"end": 5367,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "418"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 1,
											"value": "418"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 3246,
											"end": 3247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3219,
											"end": 3237,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "421"
										},
										{
											"begin": 3219,
											"end": 3249,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3595,
											"name": "tag",
											"source": 14,
											"value": "144"
										},
										{
											"begin": 3473,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "423"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 1,
											"value": "423"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3530,
											"end": 3539,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 3530,
											"end": 3539,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3530,
											"end": 3539,
											"name": "PUSH",
											"source": 14,
											"value": "10000"
										},
										{
											"begin": 3530,
											"end": 3539,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3530,
											"end": 3539,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 3530,
											"end": 3539,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 3530,
											"end": 3539,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3522,
											"end": 3561,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "425"
										},
										{
											"begin": 3522,
											"end": 3561,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3522,
											"end": 3561,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3522,
											"end": 3561,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3522,
											"end": 3561,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3522,
											"end": 3561,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13930,
											"end": 13932,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3522,
											"end": 3561,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3522,
											"end": 3561,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3522,
											"end": 3561,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13912,
											"end": 13933,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13969,
											"end": 13971,
											"name": "PUSH",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 13949,
											"end": 13967,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 13949,
											"end": 13967,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13949,
											"end": 13967,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13942,
											"end": 13972,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "105B1C9958591E48155B919C99595E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13988,
											"end": 14006,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 13988,
											"end": 14006,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13988,
											"end": 14006,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13981,
											"end": 14028,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14045,
											"end": 14063,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 14045,
											"end": 14063,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3522,
											"end": 3561,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "53"
										},
										{
											"begin": 13728,
											"end": 14069,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3522,
											"end": 3561,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "425"
										},
										{
											"begin": 3522,
											"end": 3561,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3571,
											"end": 3580,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 3571,
											"end": 3588,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3571,
											"end": 3588,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF0000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3571,
											"end": 3588,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3571,
											"end": 3588,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3571,
											"end": 3588,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 3473,
											"end": 3595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12677,
											"end": 14723,
											"name": "tag",
											"source": 14,
											"value": "147"
										},
										{
											"begin": 12677,
											"end": 14723,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3395,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "429"
										},
										{
											"begin": 3395,
											"end": 3414,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "349"
										},
										{
											"begin": 3395,
											"end": 3416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3395,
											"end": 3416,
											"name": "tag",
											"source": 5,
											"value": "429"
										},
										{
											"begin": 3395,
											"end": 3416,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2334,
											"end": 2347,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 2334,
											"end": 2345,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2347,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 2334,
											"end": 2347,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3191,
											"end": 3205,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 3191,
											"end": 3205,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3191,
											"end": 3205,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 3191,
											"end": 3205,
											"modifierDepth": 2,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3190,
											"end": 3205,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3182,
											"end": 3231,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "433"
										},
										{
											"begin": 3182,
											"end": 3231,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3182,
											"end": 3231,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3182,
											"end": 3231,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3182,
											"end": 3231,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3182,
											"end": 3231,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3182,
											"end": 3231,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3182,
											"end": 3231,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3182,
											"end": 3231,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "53"
										},
										{
											"begin": 3182,
											"end": 3231,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3182,
											"end": 3231,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "356"
										},
										{
											"begin": 3182,
											"end": 3231,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3182,
											"end": 3231,
											"modifierDepth": 2,
											"name": "tag",
											"source": 14,
											"value": "433"
										},
										{
											"begin": 3182,
											"end": 3231,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15005,
											"end": 15014,
											"name": "PUSH",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 15005,
											"end": 15014,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 14973,
											"end": 14980,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14999,
											"end": 15015,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14999,
											"end": 15015,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14999,
											"end": 15015,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14999,
											"end": 15004,
											"name": "PUSH",
											"source": 14,
											"value": "D"
										},
										{
											"begin": 14999,
											"end": 15015,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 14999,
											"end": 15015,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14999,
											"end": 15015,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 14999,
											"end": 15015,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14999,
											"end": 15015,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 14999,
											"end": 15023,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 14999,
											"end": 15023,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14999,
											"end": 15023,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 12769,
											"end": 12784,
											"modifierDepth": 3,
											"name": "TIMESTAMP",
											"source": 14
										},
										{
											"begin": 12769,
											"end": 12809,
											"modifierDepth": 3,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 12761,
											"end": 12826,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "437"
										},
										{
											"begin": 12761,
											"end": 12826,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12761,
											"end": 12826,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 12761,
											"end": 12826,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12761,
											"end": 12826,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12761,
											"end": 12826,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14276,
											"end": 14278,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 12761,
											"end": 12826,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 12761,
											"end": 12826,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12761,
											"end": 12826,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14258,
											"end": 14279,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14315,
											"end": 14317,
											"name": "PUSH",
											"source": 15,
											"value": "C"
										},
										{
											"begin": 14295,
											"end": 14313,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 14295,
											"end": 14313,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14295,
											"end": 14313,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14288,
											"end": 14318,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "53616C65206F6E676F696E67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14334,
											"end": 14352,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 14334,
											"end": 14352,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14334,
											"end": 14352,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14327,
											"end": 14369,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14386,
											"end": 14404,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 14386,
											"end": 14404,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12761,
											"end": 12826,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "53"
										},
										{
											"begin": 14074,
											"end": 14410,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12761,
											"end": 12826,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "437"
										},
										{
											"begin": 12761,
											"end": 12826,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12866,
											"end": 12878,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 12866,
											"end": 12878,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 12844,
											"end": 12863,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 12844,
											"end": 12863,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 12844,
											"end": 12878,
											"modifierDepth": 3,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 12836,
											"end": 12899,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "440"
										},
										{
											"begin": 12836,
											"end": 12899,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12836,
											"end": 12899,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 12836,
											"end": 12899,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12836,
											"end": 12899,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12836,
											"end": 12899,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14617,
											"end": 14619,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 12836,
											"end": 12899,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 12836,
											"end": 12899,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12836,
											"end": 12899,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14599,
											"end": 14620,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14656,
											"end": 14658,
											"name": "PUSH",
											"source": 15,
											"value": "10"
										},
										{
											"begin": 14636,
											"end": 14654,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 14636,
											"end": 14654,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14636,
											"end": 14654,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14629,
											"end": 14659,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14DBD99D0818D85C081C995858DA1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14675,
											"end": 14693,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 14675,
											"end": 14693,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14675,
											"end": 14693,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14668,
											"end": 14714,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14731,
											"end": 14749,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 14731,
											"end": 14749,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12836,
											"end": 12899,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "53"
										},
										{
											"begin": 14415,
											"end": 14755,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12836,
											"end": 12899,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "440"
										},
										{
											"begin": 12836,
											"end": 12899,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12935,
											"end": 12944,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "A"
										},
										{
											"begin": 12935,
											"end": 12951,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 12935,
											"end": 12951,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 12935,
											"end": 12951,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12910,
											"end": 12932,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12910,
											"end": 12932,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13001,
											"end": 13020,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13001,
											"end": 13020,
											"modifierDepth": 3,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 12997,
											"end": 13138,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 12997,
											"end": 13138,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "443"
										},
										{
											"begin": 12997,
											"end": 13138,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13056,
											"end": 13075,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "444"
										},
										{
											"begin": 13073,
											"end": 13075,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "B"
										},
										{
											"begin": 13056,
											"end": 13070,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13056,
											"end": 13075,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "267"
										},
										{
											"begin": 13056,
											"end": 13075,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13056,
											"end": 13075,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "444"
										},
										{
											"begin": 13056,
											"end": 13075,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13036,
											"end": 13075,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13036,
											"end": 13075,
											"modifierDepth": 3,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12997,
											"end": 13138,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "445"
										},
										{
											"begin": 12997,
											"end": 13138,
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12997,
											"end": 13138,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "443"
										},
										{
											"begin": 12997,
											"end": 13138,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13126,
											"end": 13127,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12997,
											"end": 13138,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "445"
										},
										{
											"begin": 12997,
											"end": 13138,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13153,
											"end": 13162,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13165,
											"end": 13183,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "449"
										},
										{
											"begin": 13182,
											"end": 13183,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 13165,
											"end": 13179,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 13165,
											"end": 13183,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "267"
										},
										{
											"begin": 13165,
											"end": 13183,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13165,
											"end": 13183,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "449"
										},
										{
											"begin": 13165,
											"end": 13183,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13153,
											"end": 13183,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13153,
											"end": 13183,
											"modifierDepth": 3,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13148,
											"end": 14635,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "446"
										},
										{
											"begin": 13148,
											"end": 14635,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13190,
											"end": 13207,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13185,
											"end": 13186,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13185,
											"end": 13207,
											"modifierDepth": 3,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 13148,
											"end": 14635,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "447"
										},
										{
											"begin": 13148,
											"end": 14635,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13228,
											"end": 13244,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13247,
											"end": 13256,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "A"
										},
										{
											"begin": 13257,
											"end": 13258,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13247,
											"end": 13259,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13247,
											"end": 13259,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 13247,
											"end": 13259,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13247,
											"end": 13259,
											"modifierDepth": 3,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 13247,
											"end": 13259,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "451"
										},
										{
											"begin": 13247,
											"end": 13259,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13247,
											"end": 13259,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "451"
										},
										{
											"begin": 13247,
											"end": 13259,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "452"
										},
										{
											"begin": 13247,
											"end": 13259,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13247,
											"end": 13259,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "451"
										},
										{
											"begin": 13247,
											"end": 13259,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13247,
											"end": 13259,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13247,
											"end": 13259,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13247,
											"end": 13259,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13247,
											"end": 13259,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13247,
											"end": 13259,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 13247,
											"end": 13259,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13247,
											"end": 13259,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 13247,
											"end": 13259,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13247,
											"end": 13259,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13247,
											"end": 13259,
											"modifierDepth": 3,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 13247,
											"end": 13259,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13273,
											"end": 14525,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "454"
										},
										{
											"begin": 13273,
											"end": 14525,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13295,
											"end": 13296,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 13291,
											"end": 13292,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13291,
											"end": 13296,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 13291,
											"end": 13296,
											"modifierDepth": 3,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 13291,
											"end": 13296,
											"modifierDepth": 3,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 13273,
											"end": 14525,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 13273,
											"end": 14525,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "455"
										},
										{
											"begin": 13273,
											"end": 14525,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13321,
											"end": 13348,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13365,
											"end": 13366,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13351,
											"end": 13367,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 13351,
											"end": 13367,
											"modifierDepth": 3,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 13351,
											"end": 13367,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 13351,
											"end": 13367,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13351,
											"end": 13367,
											"modifierDepth": 3,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 13351,
											"end": 13367,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 13351,
											"end": 13367,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "458"
										},
										{
											"begin": 13351,
											"end": 13367,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13351,
											"end": 13367,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "458"
										},
										{
											"begin": 13351,
											"end": 13367,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "248"
										},
										{
											"begin": 13351,
											"end": 13367,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13351,
											"end": 13367,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "458"
										},
										{
											"begin": 13351,
											"end": 13367,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13402,
											"end": 13428,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 13402,
											"end": 13428,
											"modifierDepth": 3,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 13385,
											"end": 13399,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13402,
											"end": 13428,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13402,
											"end": 13428,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13402,
											"end": 13428,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13402,
											"end": 13418,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 13402,
											"end": 13428,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 13402,
											"end": 13428,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13402,
											"end": 13428,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 13402,
											"end": 13428,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13402,
											"end": 13428,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 13321,
											"end": 13367,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13321,
											"end": 13367,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13385,
											"end": 13399,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13385,
											"end": 13399,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13321,
											"end": 13367,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13402,
											"end": 13443,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 13402,
											"end": 13443,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13402,
											"end": 13443,
											"modifierDepth": 3,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 13402,
											"end": 13443,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 13402,
											"end": 13443,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "460"
										},
										{
											"begin": 13402,
											"end": 13443,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13402,
											"end": 13443,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "460"
										},
										{
											"begin": 13402,
											"end": 13443,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "248"
										},
										{
											"begin": 13402,
											"end": 13443,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13402,
											"end": 13443,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "460"
										},
										{
											"begin": 13402,
											"end": 13443,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13402,
											"end": 13443,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 13402,
											"end": 13443,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13402,
											"end": 13443,
											"modifierDepth": 3,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 13402,
											"end": 13443,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 13402,
											"end": 13443,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "462"
										},
										{
											"begin": 13402,
											"end": 13443,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13402,
											"end": 13443,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "462"
										},
										{
											"begin": 13402,
											"end": 13443,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "248"
										},
										{
											"begin": 13402,
											"end": 13443,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13402,
											"end": 13443,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "462"
										},
										{
											"begin": 13402,
											"end": 13443,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13402,
											"end": 13443,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13402,
											"end": 13443,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13402,
											"end": 13443,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 13402,
											"end": 13443,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13402,
											"end": 13443,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13402,
											"end": 13443,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13402,
											"end": 13443,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13402,
											"end": 13443,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 13402,
											"end": 13443,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13402,
											"end": 13443,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13402,
											"end": 13443,
											"modifierDepth": 3,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 13402,
											"end": 13443,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 13385,
											"end": 13443,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13385,
											"end": 13443,
											"modifierDepth": 3,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13475,
											"end": 13476,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13466,
											"end": 13472,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13466,
											"end": 13476,
											"modifierDepth": 3,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 13462,
											"end": 14494,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 13462,
											"end": 14494,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "463"
										},
										{
											"begin": 13462,
											"end": 14494,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13500,
											"end": 13526,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 13500,
											"end": 13526,
											"modifierDepth": 3,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 13544,
											"end": 13545,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13500,
											"end": 13526,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13500,
											"end": 13526,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13500,
											"end": 13526,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13500,
											"end": 13516,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 13500,
											"end": 13526,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 13500,
											"end": 13526,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13500,
											"end": 13526,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 13500,
											"end": 13526,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13500,
											"end": 13526,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 13544,
											"end": 13545,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13527,
											"end": 13540,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 13500,
											"end": 13541,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 13500,
											"end": 13541,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13500,
											"end": 13541,
											"modifierDepth": 3,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 13500,
											"end": 13541,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 13500,
											"end": 13541,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "465"
										},
										{
											"begin": 13500,
											"end": 13541,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13500,
											"end": 13541,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "465"
										},
										{
											"begin": 13500,
											"end": 13541,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "248"
										},
										{
											"begin": 13500,
											"end": 13541,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13500,
											"end": 13541,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "465"
										},
										{
											"begin": 13500,
											"end": 13541,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13500,
											"end": 13541,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 13500,
											"end": 13541,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13500,
											"end": 13541,
											"modifierDepth": 3,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 13500,
											"end": 13541,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 13500,
											"end": 13541,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "467"
										},
										{
											"begin": 13500,
											"end": 13541,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13500,
											"end": 13541,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "467"
										},
										{
											"begin": 13500,
											"end": 13541,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "248"
										},
										{
											"begin": 13500,
											"end": 13541,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13500,
											"end": 13541,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "467"
										},
										{
											"begin": 13500,
											"end": 13541,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13500,
											"end": 13541,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13500,
											"end": 13541,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13500,
											"end": 13541,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 13500,
											"end": 13541,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13500,
											"end": 13541,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13500,
											"end": 13541,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13500,
											"end": 13541,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13500,
											"end": 13541,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13500,
											"end": 13541,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13500,
											"end": 13541,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 13500,
											"end": 13541,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 13500,
											"end": 13541,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13500,
											"end": 13541,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13500,
											"end": 13541,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 13500,
											"end": 13545,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13500,
											"end": 13545,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13500,
											"end": 13545,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13500,
											"end": 13545,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 13571,
											"end": 13584,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13571,
											"end": 13605,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 13571,
											"end": 13605,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13571,
											"end": 13605,
											"modifierDepth": 3,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 13571,
											"end": 13605,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 13571,
											"end": 13605,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "471"
										},
										{
											"begin": 13571,
											"end": 13605,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13571,
											"end": 13605,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "471"
										},
										{
											"begin": 13571,
											"end": 13605,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "248"
										},
										{
											"begin": 13571,
											"end": 13605,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13571,
											"end": 13605,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "471"
										},
										{
											"begin": 13571,
											"end": 13605,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13571,
											"end": 13605,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 13567,
											"end": 14380,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "472"
										},
										{
											"begin": 13567,
											"end": 14380,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13634,
											"end": 13643,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13657,
											"end": 13665,
											"modifierDepth": 3,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13649,
											"end": 13671,
											"modifierDepth": 3,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 13679,
											"end": 13685,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13649,
											"end": 13744,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 13649,
											"end": 13744,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 13649,
											"end": 13744,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13649,
											"end": 13744,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 13649,
											"end": 13744,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 13649,
											"end": 13744,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 13649,
											"end": 13744,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13649,
											"end": 13744,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 13649,
											"end": 13744,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13649,
											"end": 13744,
											"modifierDepth": 3,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 13649,
											"end": 13744,
											"modifierDepth": 3,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 13649,
											"end": 13744,
											"modifierDepth": 3,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 13649,
											"end": 13744,
											"modifierDepth": 3,
											"name": "CALL",
											"source": 14
										},
										{
											"begin": 13649,
											"end": 13744,
											"modifierDepth": 3,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 13649,
											"end": 13744,
											"modifierDepth": 3,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13649,
											"end": 13744,
											"modifierDepth": 3,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13649,
											"end": 13744,
											"modifierDepth": 3,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13649,
											"end": 13744,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 13649,
											"end": 13744,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 13649,
											"end": 13744,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13649,
											"end": 13744,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13649,
											"end": 13744,
											"modifierDepth": 3,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 13649,
											"end": 13744,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "477"
										},
										{
											"begin": 13649,
											"end": 13744,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13649,
											"end": 13744,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 13649,
											"end": 13744,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 13649,
											"end": 13744,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13649,
											"end": 13744,
											"modifierDepth": 3,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13649,
											"end": 13744,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 13649,
											"end": 13744,
											"modifierDepth": 3,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 13649,
											"end": 13744,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "3F"
										},
										{
											"begin": 13649,
											"end": 13744,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 13649,
											"end": 13744,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13649,
											"end": 13744,
											"modifierDepth": 3,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 13649,
											"end": 13744,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13649,
											"end": 13744,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13649,
											"end": 13744,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 13649,
											"end": 13744,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13649,
											"end": 13744,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 13649,
											"end": 13744,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13649,
											"end": 13744,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13649,
											"end": 13744,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 13649,
											"end": 13744,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13649,
											"end": 13744,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 13649,
											"end": 13744,
											"modifierDepth": 3,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 13649,
											"end": 13744,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13649,
											"end": 13744,
											"modifierDepth": 3,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 13649,
											"end": 13744,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "476"
										},
										{
											"begin": 13649,
											"end": 13744,
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13649,
											"end": 13744,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "477"
										},
										{
											"begin": 13649,
											"end": 13744,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13649,
											"end": 13744,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 13649,
											"end": 13744,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13649,
											"end": 13744,
											"modifierDepth": 3,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13649,
											"end": 13744,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "476"
										},
										{
											"begin": 13649,
											"end": 13744,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13649,
											"end": 13744,
											"modifierDepth": 3,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13633,
											"end": 13744,
											"modifierDepth": 3,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13633,
											"end": 13744,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13633,
											"end": 13744,
											"modifierDepth": 3,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13778,
											"end": 13782,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 13770,
											"end": 13804,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "478"
										},
										{
											"begin": 13770,
											"end": 13804,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13770,
											"end": 13804,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 13770,
											"end": 13804,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13770,
											"end": 13804,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13770,
											"end": 13804,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15304,
											"end": 15306,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 13770,
											"end": 13804,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 13770,
											"end": 13804,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13770,
											"end": 13804,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15286,
											"end": 15307,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15343,
											"end": 15345,
											"name": "PUSH",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 15323,
											"end": 15341,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 15323,
											"end": 15341,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15323,
											"end": 15341,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15316,
											"end": 15346,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "109390881C99599D5B990819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15362,
											"end": 15380,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 15362,
											"end": 15380,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15362,
											"end": 15380,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15355,
											"end": 15402,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15419,
											"end": 15437,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 15419,
											"end": 15437,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13770,
											"end": 13804,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "53"
										},
										{
											"begin": 15102,
											"end": 15443,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13770,
											"end": 13804,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "478"
										},
										{
											"begin": 13770,
											"end": 13804,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13607,
											"end": 13827,
											"modifierDepth": 3,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13567,
											"end": 14380,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "491"
										},
										{
											"begin": 13567,
											"end": 14380,
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13567,
											"end": 14380,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "472"
										},
										{
											"begin": 13567,
											"end": 14380,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13879,
											"end": 13897,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 13862,
											"end": 13875,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13862,
											"end": 13897,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 13862,
											"end": 13897,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13862,
											"end": 13897,
											"modifierDepth": 3,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 13862,
											"end": 13897,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 13862,
											"end": 13897,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "485"
										},
										{
											"begin": 13862,
											"end": 13897,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13862,
											"end": 13897,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "485"
										},
										{
											"begin": 13862,
											"end": 13897,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "248"
										},
										{
											"begin": 13862,
											"end": 13897,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13862,
											"end": 13897,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "485"
										},
										{
											"begin": 13862,
											"end": 13897,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13862,
											"end": 13897,
											"modifierDepth": 3,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 13862,
											"end": 13960,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 13862,
											"end": 13960,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "486"
										},
										{
											"begin": 13862,
											"end": 13960,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13942,
											"end": 13960,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 13925,
											"end": 13938,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13925,
											"end": 13960,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 13925,
											"end": 13960,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13925,
											"end": 13960,
											"modifierDepth": 3,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 13925,
											"end": 13960,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 13925,
											"end": 13960,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "490"
										},
										{
											"begin": 13925,
											"end": 13960,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13925,
											"end": 13960,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "490"
										},
										{
											"begin": 13925,
											"end": 13960,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "248"
										},
										{
											"begin": 13925,
											"end": 13960,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13925,
											"end": 13960,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "490"
										},
										{
											"begin": 13925,
											"end": 13960,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13925,
											"end": 13960,
											"modifierDepth": 3,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 13862,
											"end": 13960,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "486"
										},
										{
											"begin": 13862,
											"end": 13960,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13833,
											"end": 14380,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 13833,
											"end": 14380,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "491"
										},
										{
											"begin": 13833,
											"end": 14380,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 14009,
											"end": 14026,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14046,
											"end": 14064,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 14029,
											"end": 14042,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14029,
											"end": 14064,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 14029,
											"end": 14064,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14029,
											"end": 14064,
											"modifierDepth": 3,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 14029,
											"end": 14064,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 14029,
											"end": 14064,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "495"
										},
										{
											"begin": 14029,
											"end": 14064,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 14029,
											"end": 14064,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "495"
										},
										{
											"begin": 14029,
											"end": 14064,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "248"
										},
										{
											"begin": 14029,
											"end": 14064,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14029,
											"end": 14064,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "495"
										},
										{
											"begin": 14029,
											"end": 14064,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14029,
											"end": 14064,
											"modifierDepth": 3,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 14029,
											"end": 14150,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "496"
										},
										{
											"begin": 14029,
											"end": 14150,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 14145,
											"end": 14149,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "C"
										},
										{
											"begin": 14145,
											"end": 14149,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14145,
											"end": 14149,
											"modifierDepth": 3,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 14029,
											"end": 14150,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "497"
										},
										{
											"begin": 14029,
											"end": 14150,
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14029,
											"end": 14150,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "496"
										},
										{
											"begin": 14029,
											"end": 14150,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14102,
											"end": 14106,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "B"
										},
										{
											"begin": 14102,
											"end": 14106,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14102,
											"end": 14106,
											"modifierDepth": 3,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 14029,
											"end": 14150,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "497"
										},
										{
											"begin": 14029,
											"end": 14150,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14213,
											"end": 14250,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 14213,
											"end": 14250,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14213,
											"end": 14250,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14213,
											"end": 14250,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15640,
											"end": 15672,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 15640,
											"end": 15672,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15640,
											"end": 15672,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 14213,
											"end": 14250,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 14213,
											"end": 14250,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14213,
											"end": 14250,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15622,
											"end": 15673,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15689,
											"end": 15707,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 15689,
											"end": 15707,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15689,
											"end": 15707,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15682,
											"end": 15716,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 15682,
											"end": 15716,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15682,
											"end": 15716,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14009,
											"end": 14150,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14009,
											"end": 14150,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14213,
											"end": 14232,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14213,
											"end": 14232,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14213,
											"end": 14232,
											"modifierDepth": 3,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 14213,
											"end": 14232,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14213,
											"end": 14232,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "A9059CBB"
										},
										{
											"begin": 14213,
											"end": 14232,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15595,
											"end": 15613,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 15595,
											"end": 15613,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14213,
											"end": 14250,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 14213,
											"end": 14250,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 14213,
											"end": 14250,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 14213,
											"end": 14250,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 14213,
											"end": 14250,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14213,
											"end": 14250,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 14213,
											"end": 14250,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14213,
											"end": 14250,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14213,
											"end": 14250,
											"modifierDepth": 3,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 14213,
											"end": 14250,
											"modifierDepth": 3,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 14213,
											"end": 14250,
											"modifierDepth": 3,
											"name": "CALL",
											"source": 14
										},
										{
											"begin": 14213,
											"end": 14250,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 14213,
											"end": 14250,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 14213,
											"end": 14250,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 14213,
											"end": 14250,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "501"
										},
										{
											"begin": 14213,
											"end": 14250,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 14213,
											"end": 14250,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 14213,
											"end": 14250,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14213,
											"end": 14250,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 14213,
											"end": 14250,
											"modifierDepth": 3,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 14213,
											"end": 14250,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 14213,
											"end": 14250,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14213,
											"end": 14250,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 14213,
											"end": 14250,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "501"
										},
										{
											"begin": 14213,
											"end": 14250,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14213,
											"end": 14250,
											"modifierDepth": 3,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14213,
											"end": 14250,
											"modifierDepth": 3,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14213,
											"end": 14250,
											"modifierDepth": 3,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14213,
											"end": 14250,
											"modifierDepth": 3,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14213,
											"end": 14250,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 14213,
											"end": 14250,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 14213,
											"end": 14250,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 14213,
											"end": 14250,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 14213,
											"end": 14250,
											"modifierDepth": 3,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 14213,
											"end": 14250,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 14213,
											"end": 14250,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14213,
											"end": 14250,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14213,
											"end": 14250,
											"modifierDepth": 3,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 14213,
											"end": 14250,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14213,
											"end": 14250,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14213,
											"end": 14250,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 14213,
											"end": 14250,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 14213,
											"end": 14250,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14213,
											"end": 14250,
											"modifierDepth": 3,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14213,
											"end": 14250,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14213,
											"end": 14250,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14213,
											"end": 14250,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14213,
											"end": 14250,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "502"
										},
										{
											"begin": 14213,
											"end": 14250,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14213,
											"end": 14250,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14213,
											"end": 14250,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "503"
										},
										{
											"begin": 14213,
											"end": 14250,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14213,
											"end": 14250,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "502"
										},
										{
											"begin": 14213,
											"end": 14250,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14176,
											"end": 14332,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "504"
										},
										{
											"begin": 14176,
											"end": 14332,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 14176,
											"end": 14332,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 14176,
											"end": 14332,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14176,
											"end": 14332,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14176,
											"end": 14332,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 16211,
											"end": 16213,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 14176,
											"end": 14332,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 14176,
											"end": 14332,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14176,
											"end": 14332,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16193,
											"end": 16214,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 16250,
											"end": 16252,
											"name": "PUSH",
											"source": 15,
											"value": "18"
										},
										{
											"begin": 16230,
											"end": 16248,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 16230,
											"end": 16248,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16230,
											"end": 16248,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16223,
											"end": 16253,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 16289,
											"end": 16315,
											"name": "PUSH",
											"source": 15,
											"value": "537461626C65636F696E20726566756E64206661696C65640000000000000000"
										},
										{
											"begin": 16269,
											"end": 16287,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 16269,
											"end": 16287,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16269,
											"end": 16287,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16262,
											"end": 16316,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 16333,
											"end": 16351,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 16333,
											"end": 16351,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14176,
											"end": 14332,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "53"
										},
										{
											"begin": 16009,
											"end": 16357,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14176,
											"end": 14332,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "504"
										},
										{
											"begin": 14176,
											"end": 14332,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13983,
											"end": 14380,
											"modifierDepth": 3,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13833,
											"end": 14380,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "491"
										},
										{
											"begin": 13833,
											"end": 14380,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14443,
											"end": 14451,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14427,
											"end": 14475,
											"modifierDepth": 3,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 14427,
											"end": 14475,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "3829AB241648D7348F97E4F77D36451330F2276EA8EEB3428E462012F9699E7"
										},
										{
											"begin": 14453,
											"end": 14459,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14461,
											"end": 14474,
											"modifierDepth": 3,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 14427,
											"end": 14475,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 14427,
											"end": 14475,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 14427,
											"end": 14475,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "507"
										},
										{
											"begin": 14427,
											"end": 14475,
											"modifierDepth": 3,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 14427,
											"end": 14475,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14427,
											"end": 14475,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14427,
											"end": 14475,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "508"
										},
										{
											"begin": 14427,
											"end": 14475,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14427,
											"end": 14475,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "507"
										},
										{
											"begin": 14427,
											"end": 14475,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14427,
											"end": 14475,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 14427,
											"end": 14475,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 14427,
											"end": 14475,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 14427,
											"end": 14475,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14427,
											"end": 14475,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 14427,
											"end": 14475,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14427,
											"end": 14475,
											"modifierDepth": 3,
											"name": "LOG2",
											"source": 14
										},
										{
											"begin": 13462,
											"end": 14494,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "463"
										},
										{
											"begin": 13462,
											"end": 14494,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13298,
											"end": 13301,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 13298,
											"end": 13301,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13273,
											"end": 14525,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "454"
										},
										{
											"begin": 13273,
											"end": 14525,
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13273,
											"end": 14525,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "455"
										},
										{
											"begin": 13273,
											"end": 14525,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13273,
											"end": 14525,
											"modifierDepth": 3,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14538,
											"end": 14547,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "A"
										},
										{
											"begin": 14538,
											"end": 14553,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 14538,
											"end": 14553,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 14538,
											"end": 14553,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 14538,
											"end": 14553,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "510"
										},
										{
											"begin": 14538,
											"end": 14553,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 14538,
											"end": 14553,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "510"
										},
										{
											"begin": 14538,
											"end": 14553,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "511"
										},
										{
											"begin": 14538,
											"end": 14553,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14538,
											"end": 14553,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "510"
										},
										{
											"begin": 14538,
											"end": 14553,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14538,
											"end": 14553,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14538,
											"end": 14553,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14538,
											"end": 14553,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14538,
											"end": 14553,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14538,
											"end": 14553,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 14538,
											"end": 14553,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14538,
											"end": 14553,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 14538,
											"end": 14553,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14538,
											"end": 14553,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14538,
											"end": 14553,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14538,
											"end": 14553,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14538,
											"end": 14553,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14538,
											"end": 14553,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 14538,
											"end": 14553,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14538,
											"end": 14553,
											"modifierDepth": 3,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 14538,
											"end": 14553,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14538,
											"end": 14553,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 14538,
											"end": 14553,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14538,
											"end": 14553,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14538,
											"end": 14553,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14538,
											"end": 14553,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14538,
											"end": 14553,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14538,
											"end": 14553,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 14571,
											"end": 14577,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14571,
											"end": 14577,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14571,
											"end": 14577,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 14567,
											"end": 14625,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "513"
										},
										{
											"begin": 14567,
											"end": 14625,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 14601,
											"end": 14606,
											"modifierDepth": 3,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14601,
											"end": 14606,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "447"
										},
										{
											"begin": 14601,
											"end": 14606,
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14567,
											"end": 14625,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "513"
										},
										{
											"begin": 14567,
											"end": 14625,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13209,
											"end": 13212,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 13209,
											"end": 13212,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "514"
										},
										{
											"begin": 13209,
											"end": 13212,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13209,
											"end": 13212,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "515"
										},
										{
											"begin": 13209,
											"end": 13212,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13209,
											"end": 13212,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "514"
										},
										{
											"begin": 13209,
											"end": 13212,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13209,
											"end": 13212,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13209,
											"end": 13212,
											"modifierDepth": 3,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13209,
											"end": 13212,
											"modifierDepth": 3,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13148,
											"end": 14635,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "446"
										},
										{
											"begin": 13148,
											"end": 14635,
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13148,
											"end": 14635,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "447"
										},
										{
											"begin": 13148,
											"end": 14635,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14648,
											"end": 14657,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "A"
										},
										{
											"begin": 14648,
											"end": 14664,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 14668,
											"end": 14669,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14648,
											"end": 14669,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 14644,
											"end": 14717,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "516"
										},
										{
											"begin": 14644,
											"end": 14717,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 14685,
											"end": 14699,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 14685,
											"end": 14706,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 14685,
											"end": 14706,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14685,
											"end": 14706,
											"modifierDepth": 3,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 14702,
											"end": 14706,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 14685,
											"end": 14706,
											"modifierDepth": 3,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 14685,
											"end": 14706,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14685,
											"end": 14706,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 14644,
											"end": 14717,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "516"
										},
										{
											"begin": 14644,
											"end": 14717,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12751,
											"end": 14723,
											"modifierDepth": 3,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12751,
											"end": 14723,
											"modifierDepth": 3,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3437,
											"end": 3457,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "370"
										},
										{
											"begin": 1949,
											"end": 1950,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "C8669CF8EAF883002B9F48E28846A8D408C9B58EA6613BACE374265E43C9BC43"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4113,
											"end": 4136,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3860,
											"end": 4143,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"source": 1,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11362,
											"end": 12671,
											"name": "tag",
											"source": 14,
											"value": "154"
										},
										{
											"begin": 11362,
											"end": 12671,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3395,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "522"
										},
										{
											"begin": 3395,
											"end": 3414,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "349"
										},
										{
											"begin": 3395,
											"end": 3416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3395,
											"end": 3416,
											"name": "tag",
											"source": 5,
											"value": "522"
										},
										{
											"begin": 3395,
											"end": 3416,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2334,
											"end": 2347,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "524"
										},
										{
											"begin": 2334,
											"end": 2345,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2347,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "524"
										},
										{
											"begin": 2334,
											"end": 2347,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3191,
											"end": 3205,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 3191,
											"end": 3205,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3191,
											"end": 3205,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 3191,
											"end": 3205,
											"modifierDepth": 2,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3190,
											"end": 3205,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3182,
											"end": 3231,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "526"
										},
										{
											"begin": 3182,
											"end": 3231,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3182,
											"end": 3231,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3182,
											"end": 3231,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3182,
											"end": 3231,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3182,
											"end": 3231,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3182,
											"end": 3231,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3182,
											"end": 3231,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3182,
											"end": 3231,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "53"
										},
										{
											"begin": 3182,
											"end": 3231,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3182,
											"end": 3231,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "356"
										},
										{
											"begin": 3182,
											"end": 3231,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3182,
											"end": 3231,
											"modifierDepth": 2,
											"name": "tag",
											"source": 14,
											"value": "526"
										},
										{
											"begin": 3182,
											"end": 3231,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3293,
											"end": 3302,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 3293,
											"end": 3302,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3293,
											"end": 3302,
											"name": "PUSH",
											"source": 14,
											"value": "10000"
										},
										{
											"begin": 3293,
											"end": 3302,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3293,
											"end": 3302,
											"modifierDepth": 3,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 3293,
											"end": 3302,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 3293,
											"end": 3302,
											"modifierDepth": 3,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3292,
											"end": 3302,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3284,
											"end": 3314,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "529"
										},
										{
											"begin": 3284,
											"end": 3314,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3284,
											"end": 3314,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3284,
											"end": 3314,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3284,
											"end": 3314,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3284,
											"end": 3314,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3284,
											"end": 3314,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3284,
											"end": 3314,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3284,
											"end": 3314,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "53"
										},
										{
											"begin": 3284,
											"end": 3314,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3284,
											"end": 3314,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "360"
										},
										{
											"begin": 3284,
											"end": 3314,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3284,
											"end": 3314,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "529"
										},
										{
											"begin": 3284,
											"end": 3314,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11506,
											"end": 11524,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 11506,
											"end": 11524,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 11506,
											"end": 11524,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 11506,
											"end": 11524,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11506,
											"end": 11524,
											"modifierDepth": 4,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 11506,
											"end": 11524,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 11506,
											"end": 11524,
											"modifierDepth": 4,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 11505,
											"end": 11524,
											"modifierDepth": 4,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11497,
											"end": 11554,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "532"
										},
										{
											"begin": 11497,
											"end": 11554,
											"modifierDepth": 4,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11497,
											"end": 11554,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 11497,
											"end": 11554,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11497,
											"end": 11554,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11497,
											"end": 11554,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 17375,
											"end": 17377,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 11497,
											"end": 11554,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 11497,
											"end": 11554,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11497,
											"end": 11554,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17357,
											"end": 17378,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 17414,
											"end": 17416,
											"name": "PUSH",
											"source": 15,
											"value": "19"
										},
										{
											"begin": 17394,
											"end": 17412,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 17394,
											"end": 17412,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17394,
											"end": 17412,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17387,
											"end": 17417,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 17453,
											"end": 17480,
											"name": "PUSH",
											"source": 15,
											"value": "41697264726F7020616C726561647920636F6D706C6574656400000000000000"
										},
										{
											"begin": 17433,
											"end": 17451,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 17433,
											"end": 17451,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17433,
											"end": 17451,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17426,
											"end": 17481,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 17498,
											"end": 17516,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 17498,
											"end": 17516,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11497,
											"end": 11554,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "53"
										},
										{
											"begin": 17173,
											"end": 17522,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11497,
											"end": 11554,
											"modifierDepth": 4,
											"name": "tag",
											"source": 14,
											"value": "532"
										},
										{
											"begin": 11497,
											"end": 11554,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11616,
											"end": 11631,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 11616,
											"end": 11631,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 11585,
											"end": 11590,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 11585,
											"end": 11590,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 11585,
											"end": 11612,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 11585,
											"end": 11612,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11585,
											"end": 11612,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11585,
											"end": 11612,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11601,
											"end": 11611,
											"modifierDepth": 4,
											"name": "CALLER",
											"source": 14
										},
										{
											"begin": 11585,
											"end": 11612,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 11585,
											"end": 11612,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11585,
											"end": 11612,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2019,
											"end": 2070,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11585,
											"end": 11590,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11585,
											"end": 11590,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11585,
											"end": 11590,
											"modifierDepth": 4,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 11585,
											"end": 11590,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11585,
											"end": 11600,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "70A08231"
										},
										{
											"begin": 11585,
											"end": 11600,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1992,
											"end": 2010,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 1992,
											"end": 2010,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11585,
											"end": 11612,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11585,
											"end": 11612,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 11585,
											"end": 11612,
											"modifierDepth": 4,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 11585,
											"end": 11612,
											"modifierDepth": 4,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11585,
											"end": 11612,
											"modifierDepth": 4,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11585,
											"end": 11612,
											"modifierDepth": 4,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 11585,
											"end": 11612,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11585,
											"end": 11612,
											"modifierDepth": 4,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 11585,
											"end": 11612,
											"modifierDepth": 4,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 11585,
											"end": 11612,
											"modifierDepth": 4,
											"name": "STATICCALL",
											"source": 14
										},
										{
											"begin": 11585,
											"end": 11612,
											"modifierDepth": 4,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11585,
											"end": 11612,
											"modifierDepth": 4,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11585,
											"end": 11612,
											"modifierDepth": 4,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11585,
											"end": 11612,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "537"
										},
										{
											"begin": 11585,
											"end": 11612,
											"modifierDepth": 4,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11585,
											"end": 11612,
											"modifierDepth": 4,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 11585,
											"end": 11612,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11585,
											"end": 11612,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11585,
											"end": 11612,
											"modifierDepth": 4,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 11585,
											"end": 11612,
											"modifierDepth": 4,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 11585,
											"end": 11612,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11585,
											"end": 11612,
											"modifierDepth": 4,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 11585,
											"end": 11612,
											"modifierDepth": 4,
											"name": "tag",
											"source": 14,
											"value": "537"
										},
										{
											"begin": 11585,
											"end": 11612,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11585,
											"end": 11612,
											"modifierDepth": 4,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11585,
											"end": 11612,
											"modifierDepth": 4,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11585,
											"end": 11612,
											"modifierDepth": 4,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11585,
											"end": 11612,
											"modifierDepth": 4,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11585,
											"end": 11612,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 11585,
											"end": 11612,
											"modifierDepth": 4,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 11585,
											"end": 11612,
											"modifierDepth": 4,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 11585,
											"end": 11612,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 11585,
											"end": 11612,
											"modifierDepth": 4,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 11585,
											"end": 11612,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 11585,
											"end": 11612,
											"modifierDepth": 4,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11585,
											"end": 11612,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11585,
											"end": 11612,
											"modifierDepth": 4,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 11585,
											"end": 11612,
											"modifierDepth": 4,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11585,
											"end": 11612,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11585,
											"end": 11612,
											"modifierDepth": 4,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11585,
											"end": 11612,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 11585,
											"end": 11612,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11585,
											"end": 11612,
											"modifierDepth": 4,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11585,
											"end": 11612,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11585,
											"end": 11612,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11585,
											"end": 11612,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11585,
											"end": 11612,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "538"
										},
										{
											"begin": 11585,
											"end": 11612,
											"modifierDepth": 4,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11585,
											"end": 11612,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11585,
											"end": 11612,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "539"
										},
										{
											"begin": 11585,
											"end": 11612,
											"jumpType": "[in]",
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11585,
											"end": 11612,
											"modifierDepth": 4,
											"name": "tag",
											"source": 14,
											"value": "538"
										},
										{
											"begin": 11585,
											"end": 11612,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11585,
											"end": 11631,
											"modifierDepth": 4,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 11585,
											"end": 11631,
											"modifierDepth": 4,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11564,
											"end": 11675,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "540"
										},
										{
											"begin": 11564,
											"end": 11675,
											"modifierDepth": 4,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11564,
											"end": 11675,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 11564,
											"end": 11675,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11564,
											"end": 11675,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11564,
											"end": 11675,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 17964,
											"end": 17966,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 11564,
											"end": 11675,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 11564,
											"end": 11675,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11564,
											"end": 11675,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17946,
											"end": 17967,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 18003,
											"end": 18005,
											"name": "PUSH",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 17983,
											"end": 18001,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 17983,
											"end": 18001,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17983,
											"end": 18001,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17976,
											"end": 18006,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E73756666696369656E742046756E6473"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18022,
											"end": 18040,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 18022,
											"end": 18040,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18022,
											"end": 18040,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 18015,
											"end": 18063,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 18080,
											"end": 18098,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 18080,
											"end": 18098,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11564,
											"end": 11675,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "53"
										},
										{
											"begin": 17762,
											"end": 18104,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11564,
											"end": 11675,
											"modifierDepth": 4,
											"name": "tag",
											"source": 14,
											"value": "540"
										},
										{
											"begin": 11564,
											"end": 11675,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15005,
											"end": 15014,
											"name": "PUSH",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 15005,
											"end": 15014,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 14973,
											"end": 14980,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14999,
											"end": 15015,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14999,
											"end": 15015,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14999,
											"end": 15015,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14999,
											"end": 15004,
											"name": "PUSH",
											"source": 14,
											"value": "D"
										},
										{
											"begin": 14999,
											"end": 15015,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 14999,
											"end": 15015,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14999,
											"end": 15015,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 14999,
											"end": 15015,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14999,
											"end": 15015,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 14999,
											"end": 15023,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 14999,
											"end": 15023,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14999,
											"end": 15023,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 11693,
											"end": 11708,
											"modifierDepth": 4,
											"name": "TIMESTAMP",
											"source": 14
										},
										{
											"begin": 11693,
											"end": 11733,
											"modifierDepth": 4,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 11685,
											"end": 11750,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "544"
										},
										{
											"begin": 11685,
											"end": 11750,
											"modifierDepth": 4,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11685,
											"end": 11750,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 11685,
											"end": 11750,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11685,
											"end": 11750,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11685,
											"end": 11750,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14276,
											"end": 14278,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 11685,
											"end": 11750,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 11685,
											"end": 11750,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11685,
											"end": 11750,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14258,
											"end": 14279,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14315,
											"end": 14317,
											"name": "PUSH",
											"source": 15,
											"value": "C"
										},
										{
											"begin": 14295,
											"end": 14313,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 14295,
											"end": 14313,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14295,
											"end": 14313,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14288,
											"end": 14318,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "53616C65206F6E676F696E67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14334,
											"end": 14352,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 14334,
											"end": 14352,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14334,
											"end": 14352,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14327,
											"end": 14369,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14386,
											"end": 14404,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 14386,
											"end": 14404,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11685,
											"end": 11750,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "53"
										},
										{
											"begin": 14074,
											"end": 14410,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11685,
											"end": 11750,
											"modifierDepth": 4,
											"name": "tag",
											"source": 14,
											"value": "544"
										},
										{
											"begin": 11685,
											"end": 11750,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11786,
											"end": 11795,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "A"
										},
										{
											"begin": 11786,
											"end": 11802,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11786,
											"end": 11802,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 11786,
											"end": 11802,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11761,
											"end": 11783,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11761,
											"end": 11783,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11852,
											"end": 11871,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11852,
											"end": 11871,
											"modifierDepth": 4,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 11848,
											"end": 11989,
											"modifierDepth": 4,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11848,
											"end": 11989,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "546"
										},
										{
											"begin": 11848,
											"end": 11989,
											"modifierDepth": 4,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11907,
											"end": 11926,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "547"
										},
										{
											"begin": 11924,
											"end": 11926,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "B"
										},
										{
											"begin": 11907,
											"end": 11921,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11907,
											"end": 11926,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "267"
										},
										{
											"begin": 11907,
											"end": 11926,
											"jumpType": "[in]",
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11907,
											"end": 11926,
											"modifierDepth": 4,
											"name": "tag",
											"source": 14,
											"value": "547"
										},
										{
											"begin": 11907,
											"end": 11926,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11887,
											"end": 11926,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11887,
											"end": 11926,
											"modifierDepth": 4,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11848,
											"end": 11989,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "548"
										},
										{
											"begin": 11848,
											"end": 11989,
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11848,
											"end": 11989,
											"modifierDepth": 4,
											"name": "tag",
											"source": 14,
											"value": "546"
										},
										{
											"begin": 11848,
											"end": 11989,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11977,
											"end": 11978,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11848,
											"end": 11989,
											"modifierDepth": 4,
											"name": "tag",
											"source": 14,
											"value": "548"
										},
										{
											"begin": 11848,
											"end": 11989,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12003,
											"end": 12012,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12015,
											"end": 12033,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "552"
										},
										{
											"begin": 12032,
											"end": 12033,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 12015,
											"end": 12029,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 12015,
											"end": 12033,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "267"
										},
										{
											"begin": 12015,
											"end": 12033,
											"jumpType": "[in]",
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12015,
											"end": 12033,
											"modifierDepth": 4,
											"name": "tag",
											"source": 14,
											"value": "552"
										},
										{
											"begin": 12015,
											"end": 12033,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12003,
											"end": 12033,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12003,
											"end": 12033,
											"modifierDepth": 4,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11998,
											"end": 12579,
											"modifierDepth": 4,
											"name": "tag",
											"source": 14,
											"value": "549"
										},
										{
											"begin": 11998,
											"end": 12579,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12040,
											"end": 12057,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12035,
											"end": 12036,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12035,
											"end": 12057,
											"modifierDepth": 4,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 11998,
											"end": 12579,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "550"
										},
										{
											"begin": 11998,
											"end": 12579,
											"modifierDepth": 4,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12078,
											"end": 12094,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12097,
											"end": 12106,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "A"
										},
										{
											"begin": 12107,
											"end": 12108,
											"modifierDepth": 4,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12097,
											"end": 12109,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12097,
											"end": 12109,
											"modifierDepth": 4,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 12097,
											"end": 12109,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12097,
											"end": 12109,
											"modifierDepth": 4,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 12097,
											"end": 12109,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "554"
										},
										{
											"begin": 12097,
											"end": 12109,
											"modifierDepth": 4,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12097,
											"end": 12109,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "554"
										},
										{
											"begin": 12097,
											"end": 12109,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "452"
										},
										{
											"begin": 12097,
											"end": 12109,
											"jumpType": "[in]",
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12097,
											"end": 12109,
											"modifierDepth": 4,
											"name": "tag",
											"source": 14,
											"value": "554"
										},
										{
											"begin": 12097,
											"end": 12109,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12097,
											"end": 12109,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12097,
											"end": 12109,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12097,
											"end": 12109,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12097,
											"end": 12109,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12097,
											"end": 12109,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12097,
											"end": 12109,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 12097,
											"end": 12109,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12097,
											"end": 12109,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 12097,
											"end": 12109,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12097,
											"end": 12109,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12097,
											"end": 12109,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12097,
											"end": 12109,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12097,
											"end": 12109,
											"modifierDepth": 4,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 12146,
											"end": 12178,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 12146,
											"end": 12178,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12146,
											"end": 12178,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12146,
											"end": 12168,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "F"
										},
										{
											"begin": 12146,
											"end": 12178,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12146,
											"end": 12178,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12146,
											"end": 12178,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12146,
											"end": 12178,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 12146,
											"end": 12178,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12146,
											"end": 12178,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12146,
											"end": 12178,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 12146,
											"end": 12178,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 12097,
											"end": 12109,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12097,
											"end": 12109,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12197,
											"end": 12213,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 12197,
											"end": 12213,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 12193,
											"end": 12506,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "556"
										},
										{
											"begin": 12193,
											"end": 12506,
											"modifierDepth": 4,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12246,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 12241,
											"end": 12246,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12241,
											"end": 12246,
											"modifierDepth": 4,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12259,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "23B872DD"
										},
										{
											"begin": 12281,
											"end": 12288,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "557"
										},
										{
											"begin": 12281,
											"end": 12286,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "150"
										},
										{
											"begin": 12281,
											"end": 12288,
											"jumpType": "[in]",
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12281,
											"end": 12288,
											"modifierDepth": 4,
											"name": "tag",
											"source": 14,
											"value": "557"
										},
										{
											"begin": 12281,
											"end": 12288,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12370,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 12241,
											"end": 12370,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12241,
											"end": 12370,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 12241,
											"end": 12370,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12370,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12370,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12370,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12370,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12370,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18329,
											"end": 18361,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 18329,
											"end": 18361,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18329,
											"end": 18361,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 12241,
											"end": 12370,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 12241,
											"end": 12370,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12370,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18311,
											"end": 18362,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 18398,
											"end": 18430,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 18398,
											"end": 18430,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 18398,
											"end": 18430,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 18378,
											"end": 18396,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 18378,
											"end": 18396,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18378,
											"end": 18396,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 18371,
											"end": 18431,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 18447,
											"end": 18465,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 18447,
											"end": 18465,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 18447,
											"end": 18465,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 18440,
											"end": 18474,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 18440,
											"end": 18474,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 18440,
											"end": 18474,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 18284,
											"end": 18302,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 18284,
											"end": 18302,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12241,
											"end": 12370,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12241,
											"end": 12370,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 12241,
											"end": 12370,
											"modifierDepth": 4,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12370,
											"modifierDepth": 4,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12370,
											"modifierDepth": 4,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12370,
											"modifierDepth": 4,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12370,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12370,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12241,
											"end": 12370,
											"modifierDepth": 4,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12370,
											"modifierDepth": 4,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12370,
											"modifierDepth": 4,
											"name": "CALL",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12370,
											"modifierDepth": 4,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12370,
											"modifierDepth": 4,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12370,
											"modifierDepth": 4,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12370,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "561"
										},
										{
											"begin": 12241,
											"end": 12370,
											"modifierDepth": 4,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12370,
											"modifierDepth": 4,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12370,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12241,
											"end": 12370,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12370,
											"modifierDepth": 4,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12370,
											"modifierDepth": 4,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12370,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12241,
											"end": 12370,
											"modifierDepth": 4,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12370,
											"modifierDepth": 4,
											"name": "tag",
											"source": 14,
											"value": "561"
										},
										{
											"begin": 12241,
											"end": 12370,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12370,
											"modifierDepth": 4,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12370,
											"modifierDepth": 4,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12370,
											"modifierDepth": 4,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12370,
											"modifierDepth": 4,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12370,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 12241,
											"end": 12370,
											"modifierDepth": 4,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12370,
											"modifierDepth": 4,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12370,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 12241,
											"end": 12370,
											"modifierDepth": 4,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12370,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 12241,
											"end": 12370,
											"modifierDepth": 4,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12370,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12370,
											"modifierDepth": 4,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12370,
											"modifierDepth": 4,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12370,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12370,
											"modifierDepth": 4,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12370,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 12241,
											"end": 12370,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12370,
											"modifierDepth": 4,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12370,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12370,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12370,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12370,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "562"
										},
										{
											"begin": 12241,
											"end": 12370,
											"modifierDepth": 4,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12370,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12370,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "503"
										},
										{
											"begin": 12241,
											"end": 12370,
											"jumpType": "[in]",
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12370,
											"modifierDepth": 4,
											"name": "tag",
											"source": 14,
											"value": "562"
										},
										{
											"begin": 12241,
											"end": 12370,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12233,
											"end": 12396,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "563"
										},
										{
											"begin": 12233,
											"end": 12396,
											"modifierDepth": 4,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12233,
											"end": 12396,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 12233,
											"end": 12396,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12233,
											"end": 12396,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12233,
											"end": 12396,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 18687,
											"end": 18689,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 12233,
											"end": 12396,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 12233,
											"end": 12396,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12233,
											"end": 12396,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18669,
											"end": 18690,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 18726,
											"end": 18728,
											"name": "PUSH",
											"source": 15,
											"value": "15"
										},
										{
											"begin": 18706,
											"end": 18724,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 18706,
											"end": 18724,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18706,
											"end": 18724,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 18699,
											"end": 18729,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "151BDAD95B881D1C985B9CD9995C8819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18745,
											"end": 18763,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 18745,
											"end": 18763,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18745,
											"end": 18763,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 18738,
											"end": 18789,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 18806,
											"end": 18824,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 18806,
											"end": 18824,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12233,
											"end": 12396,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "53"
										},
										{
											"begin": 18485,
											"end": 18830,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12233,
											"end": 12396,
											"modifierDepth": 4,
											"name": "tag",
											"source": 14,
											"value": "563"
										},
										{
											"begin": 12233,
											"end": 12396,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12414,
											"end": 12423,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "A"
										},
										{
											"begin": 12414,
											"end": 12429,
											"modifierDepth": 4,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 12414,
											"end": 12429,
											"modifierDepth": 4,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 12414,
											"end": 12429,
											"modifierDepth": 4,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 12414,
											"end": 12429,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "567"
										},
										{
											"begin": 12414,
											"end": 12429,
											"modifierDepth": 4,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12414,
											"end": 12429,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "567"
										},
										{
											"begin": 12414,
											"end": 12429,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "511"
										},
										{
											"begin": 12414,
											"end": 12429,
											"jumpType": "[in]",
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12414,
											"end": 12429,
											"modifierDepth": 4,
											"name": "tag",
											"source": 14,
											"value": "567"
										},
										{
											"begin": 12414,
											"end": 12429,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12414,
											"end": 12429,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12414,
											"end": 12429,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12414,
											"end": 12429,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12414,
											"end": 12429,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12414,
											"end": 12429,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12414,
											"end": 12429,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12414,
											"end": 12429,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 12414,
											"end": 12429,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12414,
											"end": 12429,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12414,
											"end": 12429,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12414,
											"end": 12429,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12414,
											"end": 12429,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12414,
											"end": 12429,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 12414,
											"end": 12429,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12414,
											"end": 12429,
											"modifierDepth": 4,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 12414,
											"end": 12429,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12414,
											"end": 12429,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 12414,
											"end": 12429,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12414,
											"end": 12429,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12414,
											"end": 12429,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 12452,
											"end": 12491,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 12452,
											"end": 12491,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12452,
											"end": 12491,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12452,
											"end": 12491,
											"modifierDepth": 4,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 12452,
											"end": 12491,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12452,
											"end": 12491,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "9BDCD0CC5503FB9A8DD7311D9617E33108C4B7C8948CC544B16C1FD63C6F475B"
										},
										{
											"begin": 12452,
											"end": 12491,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12452,
											"end": 12491,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "569"
										},
										{
											"begin": 12452,
											"end": 12491,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12478,
											"end": 12490,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1014,
											"end": 1039,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1014,
											"end": 1039,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1002,
											"end": 1004,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 987,
											"end": 1005,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 987,
											"end": 1005,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 868,
											"end": 1045,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12452,
											"end": 12491,
											"modifierDepth": 4,
											"name": "tag",
											"source": 14,
											"value": "569"
										},
										{
											"begin": 12452,
											"end": 12491,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12452,
											"end": 12491,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 12452,
											"end": 12491,
											"modifierDepth": 4,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 12452,
											"end": 12491,
											"modifierDepth": 4,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 12452,
											"end": 12491,
											"modifierDepth": 4,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12452,
											"end": 12491,
											"modifierDepth": 4,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 12452,
											"end": 12491,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12452,
											"end": 12491,
											"modifierDepth": 4,
											"name": "LOG2",
											"source": 14
										},
										{
											"begin": 12193,
											"end": 12506,
											"modifierDepth": 4,
											"name": "tag",
											"source": 14,
											"value": "556"
										},
										{
											"begin": 12193,
											"end": 12506,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12523,
											"end": 12524,
											"modifierDepth": 4,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12528,
											"end": 12529,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12523,
											"end": 12529,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 12519,
											"end": 12569,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "570"
										},
										{
											"begin": 12519,
											"end": 12569,
											"modifierDepth": 4,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12549,
											"end": 12554,
											"modifierDepth": 4,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12549,
											"end": 12554,
											"modifierDepth": 4,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12549,
											"end": 12554,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "550"
										},
										{
											"begin": 12549,
											"end": 12554,
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12519,
											"end": 12569,
											"modifierDepth": 4,
											"name": "tag",
											"source": 14,
											"value": "570"
										},
										{
											"begin": 12519,
											"end": 12569,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12064,
											"end": 12579,
											"modifierDepth": 4,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12064,
											"end": 12579,
											"modifierDepth": 4,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12059,
											"end": 12062,
											"modifierDepth": 4,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 12059,
											"end": 12062,
											"modifierDepth": 4,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 12059,
											"end": 12062,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "571"
										},
										{
											"begin": 12059,
											"end": 12062,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12059,
											"end": 12062,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "515"
										},
										{
											"begin": 12059,
											"end": 12062,
											"jumpType": "[in]",
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12059,
											"end": 12062,
											"modifierDepth": 4,
											"name": "tag",
											"source": 14,
											"value": "571"
										},
										{
											"begin": 12059,
											"end": 12062,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12059,
											"end": 12062,
											"modifierDepth": 4,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12059,
											"end": 12062,
											"modifierDepth": 4,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12059,
											"end": 12062,
											"modifierDepth": 4,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11998,
											"end": 12579,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "549"
										},
										{
											"begin": 11998,
											"end": 12579,
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11998,
											"end": 12579,
											"modifierDepth": 4,
											"name": "tag",
											"source": 14,
											"value": "550"
										},
										{
											"begin": 11998,
											"end": 12579,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12592,
											"end": 12601,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "A"
										},
										{
											"begin": 12592,
											"end": 12608,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 12612,
											"end": 12613,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12592,
											"end": 12613,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 12588,
											"end": 12665,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "516"
										},
										{
											"begin": 12588,
											"end": 12665,
											"modifierDepth": 4,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12629,
											"end": 12647,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 12629,
											"end": 12654,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 12629,
											"end": 12654,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12629,
											"end": 12654,
											"modifierDepth": 4,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 12629,
											"end": 12654,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 12629,
											"end": 12654,
											"modifierDepth": 4,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 12629,
											"end": 12654,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12629,
											"end": 12654,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 11487,
											"end": 12671,
											"modifierDepth": 4,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11487,
											"end": 12671,
											"modifierDepth": 4,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3437,
											"end": 3457,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "370"
										},
										{
											"begin": 1949,
											"end": 1950,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "C8669CF8EAF883002B9F48E28846A8D408C9B58EA6613BACE374265E43C9BC43"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4113,
											"end": 4136,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3860,
											"end": 4143,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7730,
											"end": 10153,
											"name": "tag",
											"source": 14,
											"value": "161"
										},
										{
											"begin": 7730,
											"end": 10153,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3395,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "576"
										},
										{
											"begin": 3395,
											"end": 3414,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "349"
										},
										{
											"begin": 3395,
											"end": 3416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3395,
											"end": 3416,
											"name": "tag",
											"source": 5,
											"value": "576"
										},
										{
											"begin": 3395,
											"end": 3416,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3191,
											"end": 3205,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 3191,
											"end": 3205,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3191,
											"end": 3205,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 3191,
											"end": 3205,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3190,
											"end": 3205,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3182,
											"end": 3231,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "578"
										},
										{
											"begin": 3182,
											"end": 3231,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3182,
											"end": 3231,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3182,
											"end": 3231,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3182,
											"end": 3231,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3182,
											"end": 3231,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3182,
											"end": 3231,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3182,
											"end": 3231,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3182,
											"end": 3231,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "53"
										},
										{
											"begin": 3182,
											"end": 3231,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3182,
											"end": 3231,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "356"
										},
										{
											"begin": 3182,
											"end": 3231,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3182,
											"end": 3231,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "578"
										},
										{
											"begin": 3182,
											"end": 3231,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3293,
											"end": 3302,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 3293,
											"end": 3302,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3293,
											"end": 3302,
											"name": "PUSH",
											"source": 14,
											"value": "10000"
										},
										{
											"begin": 3293,
											"end": 3302,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3293,
											"end": 3302,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 3293,
											"end": 3302,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 3293,
											"end": 3302,
											"modifierDepth": 2,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3292,
											"end": 3302,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3284,
											"end": 3314,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "581"
										},
										{
											"begin": 3284,
											"end": 3314,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3284,
											"end": 3314,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3284,
											"end": 3314,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3284,
											"end": 3314,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3284,
											"end": 3314,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3284,
											"end": 3314,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3284,
											"end": 3314,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3284,
											"end": 3314,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "53"
										},
										{
											"begin": 3284,
											"end": 3314,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3284,
											"end": 3314,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "360"
										},
										{
											"begin": 3284,
											"end": 3314,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3284,
											"end": 3314,
											"modifierDepth": 2,
											"name": "tag",
											"source": 14,
											"value": "581"
										},
										{
											"begin": 3284,
											"end": 3314,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7940,
											"end": 7947,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "584"
										},
										{
											"begin": 7940,
											"end": 7945,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "150"
										},
										{
											"begin": 7940,
											"end": 7947,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7940,
											"end": 7947,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "584"
										},
										{
											"begin": 7940,
											"end": 7947,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7926,
											"end": 7947,
											"modifierDepth": 3,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 7926,
											"end": 7936,
											"modifierDepth": 3,
											"name": "CALLER",
											"source": 14
										},
										{
											"begin": 7926,
											"end": 7947,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 7918,
											"end": 7975,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "585"
										},
										{
											"begin": 7918,
											"end": 7975,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7918,
											"end": 7975,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 7918,
											"end": 7975,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7918,
											"end": 7975,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7918,
											"end": 7975,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 19037,
											"end": 19039,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7918,
											"end": 7975,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 7918,
											"end": 7975,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7918,
											"end": 7975,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19019,
											"end": 19040,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 19076,
											"end": 19078,
											"name": "PUSH",
											"source": 15,
											"value": "17"
										},
										{
											"begin": 19056,
											"end": 19074,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 19056,
											"end": 19074,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 19056,
											"end": 19074,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 19049,
											"end": 19079,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 19115,
											"end": 19140,
											"name": "PUSH",
											"source": 15,
											"value": "4F776E65722063616E6E6F742062757920746F6B656E73000000000000000000"
										},
										{
											"begin": 19095,
											"end": 19113,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 19095,
											"end": 19113,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 19095,
											"end": 19113,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 19088,
											"end": 19141,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 19158,
											"end": 19176,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 19158,
											"end": 19176,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7918,
											"end": 7975,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "53"
										},
										{
											"begin": 18835,
											"end": 19182,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7918,
											"end": 7975,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "585"
										},
										{
											"begin": 7918,
											"end": 7975,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7993,
											"end": 8002,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 7993,
											"end": 8002,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 8006,
											"end": 8007,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7993,
											"end": 8007,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 7985,
											"end": 8019,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "588"
										},
										{
											"begin": 7985,
											"end": 8019,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7985,
											"end": 8019,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 7985,
											"end": 8019,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7985,
											"end": 8019,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7985,
											"end": 8019,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 19389,
											"end": 19391,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7985,
											"end": 8019,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 7985,
											"end": 8019,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7985,
											"end": 8019,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19371,
											"end": 19392,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 19428,
											"end": 19429,
											"name": "PUSH",
											"source": 15,
											"value": "7"
										},
										{
											"begin": 19408,
											"end": 19426,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 19408,
											"end": 19426,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 19408,
											"end": 19426,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 19401,
											"end": 19430,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F2073616C65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19446,
											"end": 19464,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 19446,
											"end": 19464,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 19446,
											"end": 19464,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 19439,
											"end": 19476,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 19493,
											"end": 19511,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 19493,
											"end": 19511,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7985,
											"end": 8019,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "53"
										},
										{
											"begin": 19187,
											"end": 19517,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7985,
											"end": 8019,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "588"
										},
										{
											"begin": 7985,
											"end": 8019,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8044,
											"end": 8053,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 8044,
											"end": 8053,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 8038,
											"end": 8054,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8038,
											"end": 8054,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8038,
											"end": 8054,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8038,
											"end": 8054,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8038,
											"end": 8043,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "D"
										},
										{
											"begin": 8038,
											"end": 8054,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8038,
											"end": 8054,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8038,
											"end": 8054,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 8038,
											"end": 8054,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8038,
											"end": 8054,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 8038,
											"end": 8066,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 8038,
											"end": 8066,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8038,
											"end": 8066,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 8038,
											"end": 8066,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 8038,
											"end": 8066,
											"modifierDepth": 3,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 8037,
											"end": 8066,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 8029,
											"end": 8093,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "591"
										},
										{
											"begin": 8029,
											"end": 8093,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8029,
											"end": 8093,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 8029,
											"end": 8093,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8029,
											"end": 8093,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8029,
											"end": 8093,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 19724,
											"end": 19726,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8029,
											"end": 8093,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 8029,
											"end": 8093,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8029,
											"end": 8093,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19706,
											"end": 19727,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 19763,
											"end": 19765,
											"name": "PUSH",
											"source": 15,
											"value": "16"
										},
										{
											"begin": 19743,
											"end": 19761,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 19743,
											"end": 19761,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 19743,
											"end": 19761,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 19736,
											"end": 19766,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14D85B1948185B1C9958591E48199A5B985B1A5E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "52"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19782,
											"end": 19800,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 19782,
											"end": 19800,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 19782,
											"end": 19800,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 19775,
											"end": 19827,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 19844,
											"end": 19862,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 19844,
											"end": 19862,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8029,
											"end": 8093,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "53"
										},
										{
											"begin": 19522,
											"end": 19868,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8029,
											"end": 8093,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "591"
										},
										{
											"begin": 8029,
											"end": 8093,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8103,
											"end": 8122,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8103,
											"end": 8122,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 8136,
											"end": 8149,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8136,
											"end": 8170,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 8136,
											"end": 8170,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8136,
											"end": 8170,
											"modifierDepth": 3,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 8136,
											"end": 8170,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 8136,
											"end": 8170,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "597"
										},
										{
											"begin": 8136,
											"end": 8170,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8136,
											"end": 8170,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "597"
										},
										{
											"begin": 8136,
											"end": 8170,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "248"
										},
										{
											"begin": 8136,
											"end": 8170,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8136,
											"end": 8170,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "597"
										},
										{
											"begin": 8136,
											"end": 8170,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8136,
											"end": 8170,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 8132,
											"end": 9110,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "598"
										},
										{
											"begin": 8132,
											"end": 9110,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8194,
											"end": 8203,
											"modifierDepth": 3,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 8207,
											"end": 8208,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8194,
											"end": 8208,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 8186,
											"end": 8236,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "599"
										},
										{
											"begin": 8186,
											"end": 8236,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8186,
											"end": 8236,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 8186,
											"end": 8236,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8186,
											"end": 8236,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8186,
											"end": 8236,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 20075,
											"end": 20077,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8186,
											"end": 8236,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 8186,
											"end": 8236,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8186,
											"end": 8236,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 20057,
											"end": 20078,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 20114,
											"end": 20116,
											"name": "PUSH",
											"source": 15,
											"value": "17"
										},
										{
											"begin": 20094,
											"end": 20112,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 20094,
											"end": 20112,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 20094,
											"end": 20112,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 20087,
											"end": 20117,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 20153,
											"end": 20178,
											"name": "PUSH",
											"source": 15,
											"value": "53656E6420612076616C696420424E4220616D6F756E74000000000000000000"
										},
										{
											"begin": 20133,
											"end": 20151,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 20133,
											"end": 20151,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 20133,
											"end": 20151,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 20126,
											"end": 20179,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 20196,
											"end": 20214,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 20196,
											"end": 20214,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8186,
											"end": 8236,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "53"
										},
										{
											"begin": 19873,
											"end": 20220,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8186,
											"end": 8236,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "599"
										},
										{
											"begin": 8186,
											"end": 8236,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8264,
											"end": 8310,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "602"
										},
										{
											"begin": 8285,
											"end": 8298,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8300,
											"end": 8309,
											"modifierDepth": 3,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 8264,
											"end": 8284,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "59"
										},
										{
											"begin": 8264,
											"end": 8310,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8264,
											"end": 8310,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "602"
										},
										{
											"begin": 8264,
											"end": 8310,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8341,
											"end": 8351,
											"modifierDepth": 3,
											"name": "CALLER",
											"source": 14
										},
										{
											"begin": 8324,
											"end": 8352,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8324,
											"end": 8352,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8324,
											"end": 8352,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8324,
											"end": 8352,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8324,
											"end": 8340,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 8324,
											"end": 8352,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8324,
											"end": 8352,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8324,
											"end": 8352,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 8324,
											"end": 8352,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8324,
											"end": 8352,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 8250,
											"end": 8310,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8250,
											"end": 8310,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8371,
											"end": 8380,
											"modifierDepth": 3,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 8371,
											"end": 8380,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8324,
											"end": 8352,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8353,
											"end": 8366,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 8324,
											"end": 8367,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 8324,
											"end": 8367,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8324,
											"end": 8367,
											"modifierDepth": 3,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 8324,
											"end": 8367,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 8324,
											"end": 8367,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "604"
										},
										{
											"begin": 8324,
											"end": 8367,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8324,
											"end": 8367,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "604"
										},
										{
											"begin": 8324,
											"end": 8367,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "248"
										},
										{
											"begin": 8324,
											"end": 8367,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8324,
											"end": 8367,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "604"
										},
										{
											"begin": 8324,
											"end": 8367,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8324,
											"end": 8367,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 8324,
											"end": 8367,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8324,
											"end": 8367,
											"modifierDepth": 3,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 8324,
											"end": 8367,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 8324,
											"end": 8367,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "606"
										},
										{
											"begin": 8324,
											"end": 8367,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8324,
											"end": 8367,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "606"
										},
										{
											"begin": 8324,
											"end": 8367,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "248"
										},
										{
											"begin": 8324,
											"end": 8367,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8324,
											"end": 8367,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "606"
										},
										{
											"begin": 8324,
											"end": 8367,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8324,
											"end": 8367,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8324,
											"end": 8367,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8324,
											"end": 8367,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8324,
											"end": 8367,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8324,
											"end": 8367,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8324,
											"end": 8367,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8324,
											"end": 8367,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8324,
											"end": 8367,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8324,
											"end": 8367,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8324,
											"end": 8367,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8324,
											"end": 8367,
											"modifierDepth": 3,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 8324,
											"end": 8367,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8324,
											"end": 8380,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8324,
											"end": 8380,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8324,
											"end": 8380,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 8324,
											"end": 8380,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "607"
										},
										{
											"begin": 8324,
											"end": 8380,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8324,
											"end": 8380,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8324,
											"end": 8380,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "413"
										},
										{
											"begin": 8324,
											"end": 8380,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8324,
											"end": 8380,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "607"
										},
										{
											"begin": 8324,
											"end": 8380,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8324,
											"end": 8380,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8324,
											"end": 8380,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8324,
											"end": 8380,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8132,
											"end": 9110,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "618"
										},
										{
											"begin": 8132,
											"end": 9110,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8132,
											"end": 9110,
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8132,
											"end": 9110,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "598"
										},
										{
											"begin": 8132,
											"end": 9110,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8431,
											"end": 8449,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 8414,
											"end": 8427,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8414,
											"end": 8449,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 8414,
											"end": 8449,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8414,
											"end": 8449,
											"modifierDepth": 3,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 8414,
											"end": 8449,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 8414,
											"end": 8449,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "612"
										},
										{
											"begin": 8414,
											"end": 8449,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8414,
											"end": 8449,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "612"
										},
										{
											"begin": 8414,
											"end": 8449,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "248"
										},
										{
											"begin": 8414,
											"end": 8449,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8414,
											"end": 8449,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "612"
										},
										{
											"begin": 8414,
											"end": 8449,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8414,
											"end": 8449,
											"modifierDepth": 3,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 8414,
											"end": 8500,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 8414,
											"end": 8500,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "613"
										},
										{
											"begin": 8414,
											"end": 8500,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8482,
											"end": 8500,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 8465,
											"end": 8478,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8465,
											"end": 8500,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 8465,
											"end": 8500,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8465,
											"end": 8500,
											"modifierDepth": 3,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 8465,
											"end": 8500,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 8465,
											"end": 8500,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "617"
										},
										{
											"begin": 8465,
											"end": 8500,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8465,
											"end": 8500,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "617"
										},
										{
											"begin": 8465,
											"end": 8500,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "248"
										},
										{
											"begin": 8465,
											"end": 8500,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8465,
											"end": 8500,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "617"
										},
										{
											"begin": 8465,
											"end": 8500,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8465,
											"end": 8500,
											"modifierDepth": 3,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 8414,
											"end": 8500,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "613"
										},
										{
											"begin": 8414,
											"end": 8500,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8397,
											"end": 9110,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 8397,
											"end": 9110,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "618"
										},
										{
											"begin": 8397,
											"end": 9110,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8533,
											"end": 8546,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8550,
											"end": 8551,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8533,
											"end": 8551,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 8525,
											"end": 8574,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "619"
										},
										{
											"begin": 8525,
											"end": 8574,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8525,
											"end": 8574,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 8525,
											"end": 8574,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8525,
											"end": 8574,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8525,
											"end": 8574,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 20427,
											"end": 20429,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8525,
											"end": 8574,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 8525,
											"end": 8574,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8525,
											"end": 8574,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 20409,
											"end": 20430,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 20466,
											"end": 20468,
											"name": "PUSH",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 20446,
											"end": 20464,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 20446,
											"end": 20464,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 20446,
											"end": 20464,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 20439,
											"end": 20469,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "115B9D195C881D985B1A5908185B5BDD5B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20485,
											"end": 20503,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 20485,
											"end": 20503,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 20485,
											"end": 20503,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 20478,
											"end": 20526,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 20543,
											"end": 20561,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 20543,
											"end": 20561,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8525,
											"end": 8574,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "53"
										},
										{
											"begin": 20225,
											"end": 20567,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8525,
											"end": 8574,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "619"
										},
										{
											"begin": 8525,
											"end": 8574,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8588,
											"end": 8605,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8625,
											"end": 8643,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 8608,
											"end": 8621,
											"modifierDepth": 3,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8608,
											"end": 8643,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 8608,
											"end": 8643,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8608,
											"end": 8643,
											"modifierDepth": 3,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 8608,
											"end": 8643,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 8608,
											"end": 8643,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "625"
										},
										{
											"begin": 8608,
											"end": 8643,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8608,
											"end": 8643,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "625"
										},
										{
											"begin": 8608,
											"end": 8643,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "248"
										},
										{
											"begin": 8608,
											"end": 8643,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8608,
											"end": 8643,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "625"
										},
										{
											"begin": 8608,
											"end": 8643,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8608,
											"end": 8643,
											"modifierDepth": 3,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 8608,
											"end": 8705,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "626"
										},
										{
											"begin": 8608,
											"end": 8705,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8700,
											"end": 8704,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "C"
										},
										{
											"begin": 8700,
											"end": 8704,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8700,
											"end": 8704,
											"modifierDepth": 3,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 8608,
											"end": 8705,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "627"
										},
										{
											"begin": 8608,
											"end": 8705,
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8608,
											"end": 8705,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "626"
										},
										{
											"begin": 8608,
											"end": 8705,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8669,
											"end": 8673,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "B"
										},
										{
											"begin": 8669,
											"end": 8673,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8669,
											"end": 8673,
											"modifierDepth": 3,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 8608,
											"end": 8705,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "627"
										},
										{
											"begin": 8608,
											"end": 8705,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8744,
											"end": 8887,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 8744,
											"end": 8887,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8744,
											"end": 8887,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8744,
											"end": 8887,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8789,
											"end": 8799,
											"modifierDepth": 3,
											"name": "CALLER",
											"source": 14
										},
										{
											"begin": 8744,
											"end": 8887,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 8744,
											"end": 8887,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8744,
											"end": 8887,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18311,
											"end": 18362,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8829,
											"end": 8833,
											"modifierDepth": 3,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 18378,
											"end": 18396,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 18378,
											"end": 18396,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18378,
											"end": 18396,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 18371,
											"end": 18431,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 18447,
											"end": 18465,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 18447,
											"end": 18465,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 18447,
											"end": 18465,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 18440,
											"end": 18474,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 18440,
											"end": 18474,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 18440,
											"end": 18474,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8588,
											"end": 8705,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8588,
											"end": 8705,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8744,
											"end": 8767,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8744,
											"end": 8767,
											"modifierDepth": 3,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 8744,
											"end": 8767,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8744,
											"end": 8767,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "23B872DD"
										},
										{
											"begin": 8744,
											"end": 8767,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18284,
											"end": 18302,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 18284,
											"end": 18302,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8744,
											"end": 8887,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8744,
											"end": 8887,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 8744,
											"end": 8887,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 8744,
											"end": 8887,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 8744,
											"end": 8887,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8744,
											"end": 8887,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 8744,
											"end": 8887,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8744,
											"end": 8887,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8744,
											"end": 8887,
											"modifierDepth": 3,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 8744,
											"end": 8887,
											"modifierDepth": 3,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 8744,
											"end": 8887,
											"modifierDepth": 3,
											"name": "CALL",
											"source": 14
										},
										{
											"begin": 8744,
											"end": 8887,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 8744,
											"end": 8887,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 8744,
											"end": 8887,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 8744,
											"end": 8887,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "630"
										},
										{
											"begin": 8744,
											"end": 8887,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8744,
											"end": 8887,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 8744,
											"end": 8887,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8744,
											"end": 8887,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 8744,
											"end": 8887,
											"modifierDepth": 3,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 8744,
											"end": 8887,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 8744,
											"end": 8887,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8744,
											"end": 8887,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 8744,
											"end": 8887,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "630"
										},
										{
											"begin": 8744,
											"end": 8887,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8744,
											"end": 8887,
											"modifierDepth": 3,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8744,
											"end": 8887,
											"modifierDepth": 3,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8744,
											"end": 8887,
											"modifierDepth": 3,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8744,
											"end": 8887,
											"modifierDepth": 3,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8744,
											"end": 8887,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 8744,
											"end": 8887,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 8744,
											"end": 8887,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 8744,
											"end": 8887,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 8744,
											"end": 8887,
											"modifierDepth": 3,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 8744,
											"end": 8887,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 8744,
											"end": 8887,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8744,
											"end": 8887,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8744,
											"end": 8887,
											"modifierDepth": 3,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 8744,
											"end": 8887,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8744,
											"end": 8887,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8744,
											"end": 8887,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 8744,
											"end": 8887,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 8744,
											"end": 8887,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8744,
											"end": 8887,
											"modifierDepth": 3,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8744,
											"end": 8887,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8744,
											"end": 8887,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8744,
											"end": 8887,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8744,
											"end": 8887,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "631"
										},
										{
											"begin": 8744,
											"end": 8887,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8744,
											"end": 8887,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8744,
											"end": 8887,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "503"
										},
										{
											"begin": 8744,
											"end": 8887,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8744,
											"end": 8887,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "631"
										},
										{
											"begin": 8744,
											"end": 8887,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8719,
											"end": 8947,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "632"
										},
										{
											"begin": 8719,
											"end": 8947,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8719,
											"end": 8947,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 8719,
											"end": 8947,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8719,
											"end": 8947,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8719,
											"end": 8947,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 20774,
											"end": 20776,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8719,
											"end": 8947,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 8719,
											"end": 8947,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8719,
											"end": 8947,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 20756,
											"end": 20777,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 20813,
											"end": 20815,
											"name": "PUSH",
											"source": 15,
											"value": "1A"
										},
										{
											"begin": 20793,
											"end": 20811,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 20793,
											"end": 20811,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 20793,
											"end": 20811,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 20786,
											"end": 20816,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 20852,
											"end": 20880,
											"name": "PUSH",
											"source": 15,
											"value": "537461626C65636F696E207472616E73666572206661696C6564000000000000"
										},
										{
											"begin": 20832,
											"end": 20850,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 20832,
											"end": 20850,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 20832,
											"end": 20850,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 20825,
											"end": 20881,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 20898,
											"end": 20916,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 20898,
											"end": 20916,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8719,
											"end": 8947,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "53"
										},
										{
											"begin": 20572,
											"end": 20922,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8719,
											"end": 8947,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "632"
										},
										{
											"begin": 8719,
											"end": 8947,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8975,
											"end": 9025,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "635"
										},
										{
											"begin": 8996,
											"end": 9009,
											"modifierDepth": 3,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9011,
											"end": 9024,
											"modifierDepth": 3,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8975,
											"end": 8995,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "59"
										},
										{
											"begin": 8975,
											"end": 9025,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8975,
											"end": 9025,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "635"
										},
										{
											"begin": 8975,
											"end": 9025,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9056,
											"end": 9066,
											"modifierDepth": 3,
											"name": "CALLER",
											"source": 14
										},
										{
											"begin": 9039,
											"end": 9067,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9039,
											"end": 9067,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9039,
											"end": 9067,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9039,
											"end": 9067,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9039,
											"end": 9055,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 9039,
											"end": 9067,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9039,
											"end": 9067,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9039,
											"end": 9067,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 9039,
											"end": 9067,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9039,
											"end": 9067,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 8961,
											"end": 9025,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8961,
											"end": 9025,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9086,
											"end": 9099,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9086,
											"end": 9099,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9039,
											"end": 9067,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9068,
											"end": 9081,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 9039,
											"end": 9082,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 9039,
											"end": 9082,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9039,
											"end": 9082,
											"modifierDepth": 3,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 9039,
											"end": 9082,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 9039,
											"end": 9082,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "637"
										},
										{
											"begin": 9039,
											"end": 9082,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 9039,
											"end": 9082,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "637"
										},
										{
											"begin": 9039,
											"end": 9082,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "248"
										},
										{
											"begin": 9039,
											"end": 9082,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9039,
											"end": 9082,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "637"
										},
										{
											"begin": 9039,
											"end": 9082,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9039,
											"end": 9082,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 9039,
											"end": 9082,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9039,
											"end": 9082,
											"modifierDepth": 3,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 9039,
											"end": 9082,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 9039,
											"end": 9082,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "639"
										},
										{
											"begin": 9039,
											"end": 9082,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 9039,
											"end": 9082,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "639"
										},
										{
											"begin": 9039,
											"end": 9082,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "248"
										},
										{
											"begin": 9039,
											"end": 9082,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9039,
											"end": 9082,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "639"
										},
										{
											"begin": 9039,
											"end": 9082,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9039,
											"end": 9082,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9039,
											"end": 9082,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9039,
											"end": 9082,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9039,
											"end": 9082,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9039,
											"end": 9082,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9039,
											"end": 9082,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9039,
											"end": 9082,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9039,
											"end": 9082,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9039,
											"end": 9082,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9039,
											"end": 9082,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9039,
											"end": 9082,
											"modifierDepth": 3,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 9039,
											"end": 9082,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9039,
											"end": 9099,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9039,
											"end": 9099,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9039,
											"end": 9099,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 9039,
											"end": 9099,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "640"
										},
										{
											"begin": 9039,
											"end": 9099,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9039,
											"end": 9099,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9039,
											"end": 9099,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "413"
										},
										{
											"begin": 9039,
											"end": 9099,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9039,
											"end": 9099,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "640"
										},
										{
											"begin": 9039,
											"end": 9099,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9039,
											"end": 9099,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9039,
											"end": 9099,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9039,
											"end": 9099,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8397,
											"end": 9110,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "618"
										},
										{
											"begin": 8397,
											"end": 9110,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9137,
											"end": 9148,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 9152,
											"end": 9153,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9137,
											"end": 9153,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 9129,
											"end": 9178,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "641"
										},
										{
											"begin": 9129,
											"end": 9178,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 9129,
											"end": 9178,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 9129,
											"end": 9178,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9129,
											"end": 9178,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9129,
											"end": 9178,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 21129,
											"end": 21131,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 9129,
											"end": 9178,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 9129,
											"end": 9178,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9129,
											"end": 9178,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 21111,
											"end": 21132,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 21168,
											"end": 21170,
											"name": "PUSH",
											"source": 15,
											"value": "14"
										},
										{
											"begin": 21148,
											"end": 21166,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 21148,
											"end": 21166,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 21148,
											"end": 21166,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 21141,
											"end": 21171,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "125B9D985B1A59081D1BDAD95B88185B5BDD5B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21187,
											"end": 21205,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 21187,
											"end": 21205,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 21187,
											"end": 21205,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 21180,
											"end": 21230,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 21247,
											"end": 21265,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 21247,
											"end": 21265,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9129,
											"end": 9178,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "53"
										},
										{
											"begin": 20927,
											"end": 21271,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9129,
											"end": 9178,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "641"
										},
										{
											"begin": 9129,
											"end": 9178,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9246,
											"end": 9255,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 9246,
											"end": 9255,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 9188,
											"end": 9210,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9240,
											"end": 9256,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9240,
											"end": 9256,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9240,
											"end": 9256,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9240,
											"end": 9245,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "D"
										},
										{
											"begin": 9240,
											"end": 9256,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9240,
											"end": 9256,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9240,
											"end": 9256,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 9240,
											"end": 9256,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9240,
											"end": 9256,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 9240,
											"end": 9270,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 9240,
											"end": 9270,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9240,
											"end": 9270,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1219,
											"end": 1223,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1219,
											"end": 1223,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9214,
											"end": 9270,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "644"
										},
										{
											"begin": 9214,
											"end": 9270,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9214,
											"end": 9225,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9214,
											"end": 9270,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "254"
										},
										{
											"begin": 9214,
											"end": 9270,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9214,
											"end": 9270,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "644"
										},
										{
											"begin": 9214,
											"end": 9270,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9213,
											"end": 9286,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "645"
										},
										{
											"begin": 9213,
											"end": 9286,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9213,
											"end": 9286,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9213,
											"end": 9286,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "278"
										},
										{
											"begin": 9213,
											"end": 9286,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9213,
											"end": 9286,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "645"
										},
										{
											"begin": 9213,
											"end": 9286,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9188,
											"end": 9286,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9188,
											"end": 9286,
											"modifierDepth": 3,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9357,
											"end": 9369,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 9357,
											"end": 9369,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 9339,
											"end": 9353,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9317,
											"end": 9336,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 9317,
											"end": 9336,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 9317,
											"end": 9353,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "646"
										},
										{
											"begin": 9317,
											"end": 9353,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9317,
											"end": 9353,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9317,
											"end": 9353,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "413"
										},
										{
											"begin": 9317,
											"end": 9353,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9317,
											"end": 9353,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "646"
										},
										{
											"begin": 9317,
											"end": 9353,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9317,
											"end": 9369,
											"modifierDepth": 3,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 9317,
											"end": 9369,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 9296,
											"end": 9411,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "647"
										},
										{
											"begin": 9296,
											"end": 9411,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 9296,
											"end": 9411,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 9296,
											"end": 9411,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9296,
											"end": 9411,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9296,
											"end": 9411,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 21478,
											"end": 21480,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 9296,
											"end": 9411,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 9296,
											"end": 9411,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9296,
											"end": 9411,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 21460,
											"end": 21481,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 21517,
											"end": 21519,
											"name": "PUSH",
											"source": 15,
											"value": "10"
										},
										{
											"begin": 21497,
											"end": 21515,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 21497,
											"end": 21515,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 21497,
											"end": 21515,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 21490,
											"end": 21520,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "12185C990818D85C081C995858DA1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21536,
											"end": 21554,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 21536,
											"end": 21554,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 21536,
											"end": 21554,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 21529,
											"end": 21575,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 21592,
											"end": 21610,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 21592,
											"end": 21610,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9296,
											"end": 9411,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "53"
										},
										{
											"begin": 21276,
											"end": 21616,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9296,
											"end": 9411,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "647"
										},
										{
											"begin": 9296,
											"end": 9411,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9472,
											"end": 9482,
											"modifierDepth": 3,
											"name": "CALLER",
											"source": 14
										},
										{
											"begin": 9453,
											"end": 9483,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9453,
											"end": 9483,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9453,
											"end": 9483,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9453,
											"end": 9483,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9453,
											"end": 9471,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "E"
										},
										{
											"begin": 9453,
											"end": 9483,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9453,
											"end": 9483,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9453,
											"end": 9483,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 9453,
											"end": 9483,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9453,
											"end": 9483,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 9453,
											"end": 9483,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 9453,
											"end": 9499,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "650"
										},
										{
											"begin": 9453,
											"end": 9499,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9485,
											"end": 9499,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9485,
											"end": 9499,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9453,
											"end": 9499,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "413"
										},
										{
											"begin": 9453,
											"end": 9499,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9453,
											"end": 9499,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "650"
										},
										{
											"begin": 9453,
											"end": 9499,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9440,
											"end": 9450,
											"modifierDepth": 3,
											"name": "CALLER",
											"source": 14
										},
										{
											"begin": 9421,
											"end": 9451,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9421,
											"end": 9451,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9421,
											"end": 9451,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9421,
											"end": 9451,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9421,
											"end": 9439,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "E"
										},
										{
											"begin": 9421,
											"end": 9451,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9421,
											"end": 9451,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9421,
											"end": 9451,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 9421,
											"end": 9451,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9421,
											"end": 9451,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 9421,
											"end": 9499,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 9531,
											"end": 9550,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 9531,
											"end": 9550,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 9531,
											"end": 9566,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "651"
										},
										{
											"begin": 9531,
											"end": 9566,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9552,
											"end": 9566,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9552,
											"end": 9566,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9531,
											"end": 9566,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "413"
										},
										{
											"begin": 9531,
											"end": 9566,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9531,
											"end": 9566,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "651"
										},
										{
											"begin": 9531,
											"end": 9566,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9509,
											"end": 9528,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 9509,
											"end": 9566,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 9582,
											"end": 9591,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 9582,
											"end": 9591,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 9576,
											"end": 9592,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9576,
											"end": 9592,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9576,
											"end": 9592,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9576,
											"end": 9592,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9576,
											"end": 9581,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "D"
										},
										{
											"begin": 9576,
											"end": 9592,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9576,
											"end": 9592,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9576,
											"end": 9592,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 9576,
											"end": 9592,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9576,
											"end": 9592,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 9576,
											"end": 9603,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 9576,
											"end": 9603,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9576,
											"end": 9618,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 9576,
											"end": 9618,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 9607,
											"end": 9618,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9607,
											"end": 9618,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9576,
											"end": 9592,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9576,
											"end": 9618,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "652"
										},
										{
											"begin": 9576,
											"end": 9618,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9607,
											"end": 9618,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9607,
											"end": 9618,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9576,
											"end": 9618,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "413"
										},
										{
											"begin": 9576,
											"end": 9618,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9576,
											"end": 9618,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "652"
										},
										{
											"begin": 9576,
											"end": 9618,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9576,
											"end": 9618,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9576,
											"end": 9618,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9576,
											"end": 9618,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9646,
											"end": 9661,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 9646,
											"end": 9661,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 9646,
											"end": 9674,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "653"
										},
										{
											"begin": 9646,
											"end": 9674,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9663,
											"end": 9674,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 9663,
											"end": 9674,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9646,
											"end": 9674,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "413"
										},
										{
											"begin": 9646,
											"end": 9674,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9646,
											"end": 9674,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "653"
										},
										{
											"begin": 9646,
											"end": 9674,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9628,
											"end": 9643,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 9628,
											"end": 9674,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 9712,
											"end": 9722,
											"modifierDepth": 3,
											"name": "CALLER",
											"source": 14
										},
										{
											"begin": 9689,
											"end": 9723,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9689,
											"end": 9723,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9689,
											"end": 9723,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9689,
											"end": 9723,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9689,
											"end": 9711,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "F"
										},
										{
											"begin": 9689,
											"end": 9723,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9689,
											"end": 9723,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9689,
											"end": 9723,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 9689,
											"end": 9723,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9689,
											"end": 9723,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 9689,
											"end": 9723,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 9689,
											"end": 9728,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9689,
											"end": 9728,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 9685,
											"end": 9781,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "654"
										},
										{
											"begin": 9685,
											"end": 9781,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 9744,
											"end": 9753,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "A"
										},
										{
											"begin": 9744,
											"end": 9770,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 9744,
											"end": 9770,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 9744,
											"end": 9770,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 9744,
											"end": 9770,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9744,
											"end": 9770,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9744,
											"end": 9770,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9744,
											"end": 9770,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9744,
											"end": 9770,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9744,
											"end": 9770,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9744,
											"end": 9770,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9744,
											"end": 9770,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9744,
											"end": 9770,
											"name": "PUSH",
											"source": 14,
											"value": "C65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8"
										},
										{
											"begin": 9744,
											"end": 9770,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9744,
											"end": 9770,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 9744,
											"end": 9770,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9744,
											"end": 9770,
											"modifierDepth": 3,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 9759,
											"end": 9769,
											"modifierDepth": 3,
											"name": "CALLER",
											"source": 14
										},
										{
											"begin": 9744,
											"end": 9770,
											"modifierDepth": 3,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 9744,
											"end": 9770,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9744,
											"end": 9770,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 9685,
											"end": 9781,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "654"
										},
										{
											"begin": 9685,
											"end": 9781,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9849,
											"end": 9859,
											"modifierDepth": 3,
											"name": "CALLER",
											"source": 14
										},
										{
											"begin": 9826,
											"end": 9860,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9826,
											"end": 9860,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9826,
											"end": 9860,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9826,
											"end": 9860,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9826,
											"end": 9848,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "F"
										},
										{
											"begin": 9826,
											"end": 9860,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9826,
											"end": 9860,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9826,
											"end": 9860,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 9826,
											"end": 9860,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9826,
											"end": 9860,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 9826,
											"end": 9860,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 9826,
											"end": 9873,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "656"
										},
										{
											"begin": 9826,
											"end": 9873,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9862,
											"end": 9873,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 9862,
											"end": 9873,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9826,
											"end": 9873,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "413"
										},
										{
											"begin": 9826,
											"end": 9873,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9826,
											"end": 9873,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "656"
										},
										{
											"begin": 9826,
											"end": 9873,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9813,
											"end": 9823,
											"modifierDepth": 3,
											"name": "CALLER",
											"source": 14
										},
										{
											"begin": 9790,
											"end": 9824,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9790,
											"end": 9824,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9790,
											"end": 9824,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9790,
											"end": 9824,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9790,
											"end": 9812,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "F"
										},
										{
											"begin": 9790,
											"end": 9824,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9790,
											"end": 9824,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9790,
											"end": 9824,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9790,
											"end": 9824,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9790,
											"end": 9824,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 9790,
											"end": 9824,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 9790,
											"end": 9824,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 9790,
											"end": 9824,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 9790,
											"end": 9873,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 9790,
											"end": 9873,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9790,
											"end": 9873,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 9790,
											"end": 9873,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 9883,
											"end": 9907,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 9883,
											"end": 9919,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9883,
											"end": 9919,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9883,
											"end": 9919,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 9883,
											"end": 9935,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 9883,
											"end": 9935,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 9922,
											"end": 9935,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 9922,
											"end": 9935,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9883,
											"end": 9919,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9883,
											"end": 9935,
											"modifierDepth": 3,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 9883,
											"end": 9935,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 9922,
											"end": 9935,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 9883,
											"end": 9935,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 9883,
											"end": 9935,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9883,
											"end": 9935,
											"modifierDepth": 3,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 9883,
											"end": 9935,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 9883,
											"end": 9935,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "658"
										},
										{
											"begin": 9883,
											"end": 9935,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 9883,
											"end": 9935,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "658"
										},
										{
											"begin": 9883,
											"end": 9935,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "248"
										},
										{
											"begin": 9883,
											"end": 9935,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9883,
											"end": 9935,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "658"
										},
										{
											"begin": 9883,
											"end": 9935,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9883,
											"end": 9935,
											"modifierDepth": 3,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 9883,
											"end": 9935,
											"modifierDepth": 3,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 9883,
											"end": 9935,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9883,
											"end": 9935,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10004,
											"end": 10013,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 10004,
											"end": 10013,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 10052,
											"end": 10068,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10052,
											"end": 10068,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10052,
											"end": 10068,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10052,
											"end": 10068,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10052,
											"end": 10057,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "D"
										},
										{
											"begin": 10052,
											"end": 10068,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10052,
											"end": 10068,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10052,
											"end": 10068,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 10052,
											"end": 10068,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10052,
											"end": 10068,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10052,
											"end": 10068,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10052,
											"end": 10068,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 10052,
											"end": 10082,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 10052,
											"end": 10082,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10052,
											"end": 10082,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 9951,
											"end": 10146,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9951,
											"end": 10146,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 9980,
											"end": 9990,
											"modifierDepth": 3,
											"name": "CALLER",
											"source": 14
										},
										{
											"begin": 9980,
											"end": 9990,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9951,
											"end": 10146,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "DBCEF474A632721725D49E3F35D9DEFE0257100B01D1E4B4B135B14D6FE296E8"
										},
										{
											"begin": 9951,
											"end": 10146,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9951,
											"end": 10146,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "659"
										},
										{
											"begin": 9951,
											"end": 10146,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10027,
											"end": 10038,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 10027,
											"end": 10038,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10096,
											"end": 10109,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 10096,
											"end": 10109,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10123,
											"end": 10136,
											"name": "DUP12",
											"source": 14
										},
										{
											"begin": 10123,
											"end": 10136,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9951,
											"end": 10146,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "660"
										},
										{
											"begin": 9951,
											"end": 10146,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9951,
											"end": 10146,
											"modifierDepth": 3,
											"name": "tag",
											"source": 14,
											"value": "659"
										},
										{
											"begin": 9951,
											"end": 10146,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9951,
											"end": 10146,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 9951,
											"end": 10146,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 9951,
											"end": 10146,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 9951,
											"end": 10146,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9951,
											"end": 10146,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 9951,
											"end": 10146,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9951,
											"end": 10146,
											"modifierDepth": 3,
											"name": "LOG3",
											"source": 14
										},
										{
											"begin": 7908,
											"end": 10153,
											"modifierDepth": 3,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7908,
											"end": 10153,
											"modifierDepth": 3,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3437,
											"end": 3457,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "382"
										},
										{
											"begin": 1949,
											"end": 1950,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "C8669CF8EAF883002B9F48E28846A8D408C9B58EA6613BACE374265E43C9BC43"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4113,
											"end": 4136,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3860,
											"end": 4143,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4557,
											"end": 4653,
											"name": "tag",
											"source": 14,
											"value": "169"
										},
										{
											"begin": 4557,
											"end": 4653,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4613,
											"end": 4617,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4636,
											"end": 4646,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "239"
										},
										{
											"begin": 4642,
											"end": 4646,
											"name": "PUSH",
											"source": 14,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 4636,
											"end": 4639,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4636,
											"end": 4646,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "278"
										},
										{
											"begin": 4636,
											"end": 4646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4349,
											"name": "tag",
											"source": 14,
											"value": "174"
										},
										{
											"begin": 4253,
											"end": 4349,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4309,
											"end": 4313,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4332,
											"end": 4342,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "239"
										},
										{
											"begin": 4332,
											"end": 4335,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4338,
											"end": 4342,
											"name": "PUSH",
											"source": 14,
											"value": "2540BE400"
										},
										{
											"begin": 4332,
											"end": 4342,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "254"
										},
										{
											"begin": 4332,
											"end": 4342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4456,
											"end": 4552,
											"name": "tag",
											"source": 14,
											"value": "188"
										},
										{
											"begin": 4456,
											"end": 4552,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4512,
											"end": 4516,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4535,
											"end": 4545,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "239"
										},
										{
											"begin": 4541,
											"end": 4545,
											"name": "PUSH",
											"source": 14,
											"value": "2540BE400"
										},
										{
											"begin": 4535,
											"end": 4538,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4535,
											"end": 4545,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "278"
										},
										{
											"begin": 4535,
											"end": 4545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "671"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 1,
											"value": "671"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3489,
											"end": 3511,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "673"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3534,
											"end": 3565,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3565,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3562,
											"end": 3563,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3534,
											"end": 3565,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2019,
											"end": 2070,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1992,
											"end": 2010,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 1992,
											"end": 2010,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1873,
											"end": 2076,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "673"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "675"
										},
										{
											"begin": 3604,
											"end": 3612,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3585,
											"end": 3603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "421"
										},
										{
											"begin": 3585,
											"end": 3613,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "675"
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2459,
											"end": 3139,
											"name": "tag",
											"source": 14,
											"value": "238"
										},
										{
											"begin": 2459,
											"end": 3139,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "PUSH",
											"source": 2,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4188,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "679"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4746,
											"end": 4760,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "tag",
											"source": 2,
											"value": "679"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4787,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4790,
											"end": 4801,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4805,
											"end": 4806,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "680"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4818,
											"end": 4822,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 4810,
											"end": 4840,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "tag",
											"source": 2,
											"value": "680"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4856,
											"end": 4868,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4855,
											"end": 4868,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "681"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4873,
											"end": 4885,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4872,
											"end": 4885,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "tag",
											"source": 2,
											"value": "681"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "682"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F92EE8A9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "tag",
											"source": 2,
											"value": "682"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4968,
											"end": 4969,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "683"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "tag",
											"source": 2,
											"value": "683"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2740,
											"end": 2766,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "685"
										},
										{
											"begin": 2755,
											"end": 2765,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 14
										},
										{
											"begin": 2740,
											"end": 2754,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "686"
										},
										{
											"begin": 2740,
											"end": 2766,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2740,
											"end": 2766,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "685"
										},
										{
											"begin": 2740,
											"end": 2766,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2776,
											"end": 2800,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "687"
										},
										{
											"begin": 2776,
											"end": 2798,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "688"
										},
										{
											"begin": 2776,
											"end": 2800,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2776,
											"end": 2800,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "687"
										},
										{
											"begin": 2776,
											"end": 2800,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2819,
											"end": 2825,
											"modifierDepth": 1,
											"name": "DUP13",
											"source": 14
										},
										{
											"begin": 2811,
											"end": 2816,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 2811,
											"end": 2816,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2811,
											"end": 2825,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 2811,
											"end": 2825,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 2811,
											"end": 2825,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2811,
											"end": 2825,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2811,
											"end": 2825,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2811,
											"end": 2825,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 2811,
											"end": 2825,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 2811,
											"end": 2825,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2811,
											"end": 2825,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2811,
											"end": 2825,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2811,
											"end": 2825,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2811,
											"end": 2825,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 2811,
											"end": 2825,
											"modifierDepth": 1,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 2811,
											"end": 2825,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2811,
											"end": 2825,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 2811,
											"end": 2825,
											"modifierDepth": 1,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2850,
											"end": 2863,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 2835,
											"end": 2847,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 2835,
											"end": 2863,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2835,
											"end": 2863,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2835,
											"end": 2863,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 2835,
											"end": 2863,
											"modifierDepth": 1,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2888,
											"end": 2901,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 2873,
											"end": 2885,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 2873,
											"end": 2901,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2873,
											"end": 2901,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2873,
											"end": 2901,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 2873,
											"end": 2901,
											"modifierDepth": 1,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2918,
											"end": 2923,
											"modifierDepth": 1,
											"name": "DUP12",
											"source": 14
										},
										{
											"begin": 2911,
											"end": 2915,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "B"
										},
										{
											"begin": 2911,
											"end": 2915,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2911,
											"end": 2923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 2911,
											"end": 2923,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 2911,
											"end": 2923,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2911,
											"end": 2923,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2911,
											"end": 2923,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2911,
											"end": 2923,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 2911,
											"end": 2923,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 2911,
											"end": 2923,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2911,
											"end": 2923,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2911,
											"end": 2923,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2911,
											"end": 2923,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2911,
											"end": 2923,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 2911,
											"end": 2923,
											"modifierDepth": 1,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 2911,
											"end": 2923,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2911,
											"end": 2923,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 2911,
											"end": 2923,
											"modifierDepth": 1,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2940,
											"end": 2945,
											"modifierDepth": 1,
											"name": "DUP11",
											"source": 14
										},
										{
											"begin": 2933,
											"end": 2937,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "C"
										},
										{
											"begin": 2933,
											"end": 2937,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2933,
											"end": 2945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 2933,
											"end": 2945,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 2933,
											"end": 2945,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2933,
											"end": 2945,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2933,
											"end": 2945,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2933,
											"end": 2945,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 2933,
											"end": 2945,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 2933,
											"end": 2945,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2933,
											"end": 2945,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2933,
											"end": 2945,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2933,
											"end": 2945,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2933,
											"end": 2945,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 2933,
											"end": 2945,
											"modifierDepth": 1,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 2933,
											"end": 2945,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2933,
											"end": 2945,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 2933,
											"end": 2945,
											"modifierDepth": 1,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2992,
											"end": 3005,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 2955,
											"end": 2967,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2955,
											"end": 2967,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2955,
											"end": 3006,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 2955,
											"end": 3006,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 2955,
											"end": 3006,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2955,
											"end": 3006,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2955,
											"end": 3006,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2955,
											"end": 3006,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 2955,
											"end": 3006,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 2955,
											"end": 3006,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2955,
											"end": 3006,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2955,
											"end": 3006,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2955,
											"end": 3006,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2955,
											"end": 3006,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 2955,
											"end": 3006,
											"modifierDepth": 1,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 2955,
											"end": 3006,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2955,
											"end": 3006,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 2955,
											"end": 3006,
											"modifierDepth": 1,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3054,
											"end": 3068,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 3016,
											"end": 3029,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 3016,
											"end": 3029,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3016,
											"end": 3069,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 3016,
											"end": 3069,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 3016,
											"end": 3069,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3016,
											"end": 3069,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3016,
											"end": 3069,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3016,
											"end": 3069,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 3016,
											"end": 3069,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 3016,
											"end": 3069,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3016,
											"end": 3069,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3016,
											"end": 3069,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3016,
											"end": 3069,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3016,
											"end": 3069,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 3016,
											"end": 3069,
											"modifierDepth": 1,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 3016,
											"end": 3069,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3016,
											"end": 3069,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 3016,
											"end": 3069,
											"modifierDepth": 1,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3117,
											"end": 3131,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3079,
											"end": 3092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 3079,
											"end": 3092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3079,
											"end": 3132,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 3079,
											"end": 3132,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 3079,
											"end": 3132,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3079,
											"end": 3132,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3079,
											"end": 3132,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3079,
											"end": 3132,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 3079,
											"end": 3132,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 3079,
											"end": 3132,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3079,
											"end": 3132,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3079,
											"end": 3132,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3079,
											"end": 3132,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3079,
											"end": 3132,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 3079,
											"end": 3132,
											"modifierDepth": 1,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 3079,
											"end": 3132,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3079,
											"end": 3132,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 3079,
											"end": 3132,
											"modifierDepth": 1,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5070,
											"end": 5084,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "689"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 22209,
											"end": 22259,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 22209,
											"end": 22259,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 2,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 22197,
											"end": 22199,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 22182,
											"end": 22200,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "tag",
											"source": 2,
											"value": "689"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2459,
											"end": 3139,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2459,
											"end": 3139,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2459,
											"end": 3139,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2459,
											"end": 3139,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2459,
											"end": 3139,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2459,
											"end": 3139,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2459,
											"end": 3139,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2459,
											"end": 3139,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2459,
											"end": 3139,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3470,
											"end": 3854,
											"name": "tag",
											"source": 5,
											"value": "349"
										},
										{
											"begin": 3470,
											"end": 3854,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "C8669CF8EAF883002B9F48E28846A8D408C9B58EA6613BACE374265E43C9BC43"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3670,
											"end": 3679,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3670,
											"end": 3679,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3670,
											"end": 3690,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3666,
											"end": 3754,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "695"
										},
										{
											"begin": 3666,
											"end": 3754,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3EE5AEB5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3666,
											"end": 3754,
											"name": "tag",
											"source": 5,
											"value": "695"
										},
										{
											"begin": 3666,
											"end": 3754,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1991,
											"end": 1992,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 3828,
											"end": 3847,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3828,
											"end": 3847,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3470,
											"end": 3854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "tag",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "699"
										},
										{
											"begin": 2717,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 2717,
											"end": 2724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "tag",
											"source": 1,
											"value": "699"
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2019,
											"end": 2070,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1992,
											"end": 2010,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 1992,
											"end": 2010,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1873,
											"end": 2076,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10576,
											"end": 11356,
											"name": "tag",
											"source": 14,
											"value": "369"
										},
										{
											"begin": 10576,
											"end": 11356,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10649,
											"end": 10653,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 10688,
											"end": 10700,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 10688,
											"end": 10700,
											"name": "BALANCE",
											"source": 14
										},
										{
											"begin": 10714,
											"end": 10732,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 10714,
											"end": 10732,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 10710,
											"end": 10874,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "704"
										},
										{
											"begin": 10710,
											"end": 10874,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10749,
											"end": 10761,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10775,
											"end": 10782,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "705"
										},
										{
											"begin": 10775,
											"end": 10780,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "150"
										},
										{
											"begin": 10775,
											"end": 10782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10775,
											"end": 10782,
											"name": "tag",
											"source": 14,
											"value": "705"
										},
										{
											"begin": 10775,
											"end": 10782,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10767,
											"end": 10788,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 10796,
											"end": 10809,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10767,
											"end": 10814,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 10767,
											"end": 10814,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 10767,
											"end": 10814,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10767,
											"end": 10814,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 10767,
											"end": 10814,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 10767,
											"end": 10814,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 10767,
											"end": 10814,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10767,
											"end": 10814,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 10767,
											"end": 10814,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10767,
											"end": 10814,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 10767,
											"end": 10814,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 10767,
											"end": 10814,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 10767,
											"end": 10814,
											"name": "CALL",
											"source": 14
										},
										{
											"begin": 10767,
											"end": 10814,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10767,
											"end": 10814,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10767,
											"end": 10814,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10767,
											"end": 10814,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10767,
											"end": 10814,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 10767,
											"end": 10814,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 10767,
											"end": 10814,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10767,
											"end": 10814,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10767,
											"end": 10814,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 10767,
											"end": 10814,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "709"
										},
										{
											"begin": 10767,
											"end": 10814,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10767,
											"end": 10814,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 10767,
											"end": 10814,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 10767,
											"end": 10814,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10767,
											"end": 10814,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10767,
											"end": 10814,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 10767,
											"end": 10814,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 10767,
											"end": 10814,
											"name": "PUSH",
											"source": 14,
											"value": "3F"
										},
										{
											"begin": 10767,
											"end": 10814,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 10767,
											"end": 10814,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10767,
											"end": 10814,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 10767,
											"end": 10814,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10767,
											"end": 10814,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10767,
											"end": 10814,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 10767,
											"end": 10814,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10767,
											"end": 10814,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 10767,
											"end": 10814,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10767,
											"end": 10814,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10767,
											"end": 10814,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 10767,
											"end": 10814,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10767,
											"end": 10814,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10767,
											"end": 10814,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 10767,
											"end": 10814,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10767,
											"end": 10814,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 10767,
											"end": 10814,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "708"
										},
										{
											"begin": 10767,
											"end": 10814,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10767,
											"end": 10814,
											"name": "tag",
											"source": 14,
											"value": "709"
										},
										{
											"begin": 10767,
											"end": 10814,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10767,
											"end": 10814,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 10767,
											"end": 10814,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10767,
											"end": 10814,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10767,
											"end": 10814,
											"name": "tag",
											"source": 14,
											"value": "708"
										},
										{
											"begin": 10767,
											"end": 10814,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10767,
											"end": 10814,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10748,
											"end": 10814,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10748,
											"end": 10814,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10748,
											"end": 10814,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10836,
											"end": 10843,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 10828,
											"end": 10863,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "710"
										},
										{
											"begin": 10828,
											"end": 10863,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10828,
											"end": 10863,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 10828,
											"end": 10863,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10828,
											"end": 10863,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10828,
											"end": 10863,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 22472,
											"end": 22474,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 10828,
											"end": 10863,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 10828,
											"end": 10863,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10828,
											"end": 10863,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 22454,
											"end": 22475,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 22511,
											"end": 22513,
											"name": "PUSH",
											"source": 15,
											"value": "F"
										},
										{
											"begin": 22491,
											"end": 22509,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 22491,
											"end": 22509,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 22491,
											"end": 22509,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 22484,
											"end": 22514,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "151C985B9CD9995C8819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22530,
											"end": 22548,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 22530,
											"end": 22548,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 22530,
											"end": 22548,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 22523,
											"end": 22568,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 22585,
											"end": 22603,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 22585,
											"end": 22603,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10828,
											"end": 10863,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "53"
										},
										{
											"begin": 22270,
											"end": 22609,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10828,
											"end": 10863,
											"name": "tag",
											"source": 14,
											"value": "710"
										},
										{
											"begin": 10828,
											"end": 10863,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10734,
											"end": 10874,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10710,
											"end": 10874,
											"name": "tag",
											"source": 14,
											"value": "704"
										},
										{
											"begin": 10710,
											"end": 10874,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10912,
											"end": 10916,
											"name": "PUSH",
											"source": 14,
											"value": "B"
										},
										{
											"begin": 10912,
											"end": 10916,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 10905,
											"end": 10933,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 10905,
											"end": 10933,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10905,
											"end": 10933,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10905,
											"end": 10933,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2037,
											"end": 2069,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2037,
											"end": 2069,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2037,
											"end": 2069,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 10905,
											"end": 10933,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 10905,
											"end": 10933,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10905,
											"end": 10933,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2019,
											"end": 2070,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10883,
											"end": 10902,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10883,
											"end": 10902,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10912,
											"end": 10916,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 10912,
											"end": 10916,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10905,
											"end": 10927,
											"name": "PUSH",
											"source": 14,
											"value": "70A08231"
										},
										{
											"begin": 10905,
											"end": 10927,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1992,
											"end": 2010,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 1992,
											"end": 2010,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10905,
											"end": 10933,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10905,
											"end": 10933,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 10905,
											"end": 10933,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 10905,
											"end": 10933,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 10905,
											"end": 10933,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10905,
											"end": 10933,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 10905,
											"end": 10933,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10905,
											"end": 10933,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 10905,
											"end": 10933,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 10905,
											"end": 10933,
											"name": "STATICCALL",
											"source": 14
										},
										{
											"begin": 10905,
											"end": 10933,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 10905,
											"end": 10933,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 10905,
											"end": 10933,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 10905,
											"end": 10933,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "715"
										},
										{
											"begin": 10905,
											"end": 10933,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10905,
											"end": 10933,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 10905,
											"end": 10933,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10905,
											"end": 10933,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 10905,
											"end": 10933,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 10905,
											"end": 10933,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 10905,
											"end": 10933,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10905,
											"end": 10933,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 10905,
											"end": 10933,
											"name": "tag",
											"source": 14,
											"value": "715"
										},
										{
											"begin": 10905,
											"end": 10933,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10905,
											"end": 10933,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10905,
											"end": 10933,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10905,
											"end": 10933,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10905,
											"end": 10933,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10905,
											"end": 10933,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 10905,
											"end": 10933,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 10905,
											"end": 10933,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 10905,
											"end": 10933,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 10905,
											"end": 10933,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 10905,
											"end": 10933,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 10905,
											"end": 10933,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10905,
											"end": 10933,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10905,
											"end": 10933,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 10905,
											"end": 10933,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10905,
											"end": 10933,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10905,
											"end": 10933,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 10905,
											"end": 10933,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 10905,
											"end": 10933,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10905,
											"end": 10933,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10905,
											"end": 10933,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10905,
											"end": 10933,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10905,
											"end": 10933,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10905,
											"end": 10933,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "716"
										},
										{
											"begin": 10905,
											"end": 10933,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10905,
											"end": 10933,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10905,
											"end": 10933,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "539"
										},
										{
											"begin": 10905,
											"end": 10933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10905,
											"end": 10933,
											"name": "tag",
											"source": 14,
											"value": "716"
										},
										{
											"begin": 10905,
											"end": 10933,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10883,
											"end": 10933,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10947,
											"end": 10963,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 10947,
											"end": 10963,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 10943,
											"end": 11112,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "723"
										},
										{
											"begin": 10943,
											"end": 11112,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11011,
											"end": 11015,
											"name": "PUSH",
											"source": 14,
											"value": "B"
										},
										{
											"begin": 11011,
											"end": 11015,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11011,
											"end": 11015,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 11004,
											"end": 11025,
											"name": "PUSH",
											"source": 14,
											"value": "A9059CBB"
										},
										{
											"begin": 11026,
											"end": 11033,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "718"
										},
										{
											"begin": 11026,
											"end": 11031,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "150"
										},
										{
											"begin": 11026,
											"end": 11033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11026,
											"end": 11033,
											"name": "tag",
											"source": 14,
											"value": "718"
										},
										{
											"begin": 11026,
											"end": 11033,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11004,
											"end": 11047,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 11004,
											"end": 11047,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11004,
											"end": 11047,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 11004,
											"end": 11047,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 11004,
											"end": 11047,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11004,
											"end": 11047,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 11004,
											"end": 11047,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 11004,
											"end": 11047,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11004,
											"end": 11047,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15640,
											"end": 15672,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15640,
											"end": 15672,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 15640,
											"end": 15672,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 11004,
											"end": 11047,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 11004,
											"end": 11047,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11004,
											"end": 11047,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15622,
											"end": 15673,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15689,
											"end": 15707,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 15689,
											"end": 15707,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15689,
											"end": 15707,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15682,
											"end": 15716,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 15682,
											"end": 15716,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15682,
											"end": 15716,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15595,
											"end": 15613,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 15595,
											"end": 15613,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11004,
											"end": 11047,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11004,
											"end": 11047,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 11004,
											"end": 11047,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 11004,
											"end": 11047,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11004,
											"end": 11047,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11004,
											"end": 11047,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 11004,
											"end": 11047,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11004,
											"end": 11047,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11004,
											"end": 11047,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 11004,
											"end": 11047,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 11004,
											"end": 11047,
											"name": "CALL",
											"source": 14
										},
										{
											"begin": 11004,
											"end": 11047,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11004,
											"end": 11047,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11004,
											"end": 11047,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11004,
											"end": 11047,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "721"
										},
										{
											"begin": 11004,
											"end": 11047,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11004,
											"end": 11047,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 11004,
											"end": 11047,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11004,
											"end": 11047,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11004,
											"end": 11047,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 11004,
											"end": 11047,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 11004,
											"end": 11047,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11004,
											"end": 11047,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 11004,
											"end": 11047,
											"name": "tag",
											"source": 14,
											"value": "721"
										},
										{
											"begin": 11004,
											"end": 11047,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11004,
											"end": 11047,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11004,
											"end": 11047,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11004,
											"end": 11047,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11004,
											"end": 11047,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11004,
											"end": 11047,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 11004,
											"end": 11047,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 11004,
											"end": 11047,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 11004,
											"end": 11047,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 11004,
											"end": 11047,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 11004,
											"end": 11047,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 11004,
											"end": 11047,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11004,
											"end": 11047,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11004,
											"end": 11047,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 11004,
											"end": 11047,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11004,
											"end": 11047,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11004,
											"end": 11047,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11004,
											"end": 11047,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 11004,
											"end": 11047,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11004,
											"end": 11047,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11004,
											"end": 11047,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11004,
											"end": 11047,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11004,
											"end": 11047,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11004,
											"end": 11047,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "722"
										},
										{
											"begin": 11004,
											"end": 11047,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11004,
											"end": 11047,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11004,
											"end": 11047,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "503"
										},
										{
											"begin": 11004,
											"end": 11047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11004,
											"end": 11047,
											"name": "tag",
											"source": 14,
											"value": "722"
										},
										{
											"begin": 11004,
											"end": 11047,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10979,
											"end": 11101,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "723"
										},
										{
											"begin": 10979,
											"end": 11101,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10979,
											"end": 11101,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 10979,
											"end": 11101,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10979,
											"end": 11101,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10979,
											"end": 11101,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 22816,
											"end": 22818,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 10979,
											"end": 11101,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 10979,
											"end": 11101,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10979,
											"end": 11101,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 22798,
											"end": 22819,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 22855,
											"end": 22857,
											"name": "PUSH",
											"source": 15,
											"value": "14"
										},
										{
											"begin": 22835,
											"end": 22853,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 22835,
											"end": 22853,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 22835,
											"end": 22853,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 22828,
											"end": 22858,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1554D115081D1C985B9CD9995C8819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22874,
											"end": 22892,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 22874,
											"end": 22892,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 22874,
											"end": 22892,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 22867,
											"end": 22917,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 22934,
											"end": 22952,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 22934,
											"end": 22952,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10979,
											"end": 11101,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "53"
										},
										{
											"begin": 22614,
											"end": 22958,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10979,
											"end": 11101,
											"name": "tag",
											"source": 14,
											"value": "723"
										},
										{
											"begin": 10979,
											"end": 11101,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11150,
											"end": 11154,
											"name": "PUSH",
											"source": 14,
											"value": "C"
										},
										{
											"begin": 11150,
											"end": 11154,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 11143,
											"end": 11171,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 11143,
											"end": 11171,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11143,
											"end": 11171,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11143,
											"end": 11171,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2037,
											"end": 2069,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2037,
											"end": 2069,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2037,
											"end": 2069,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 11143,
											"end": 11171,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 11143,
											"end": 11171,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11143,
											"end": 11171,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2019,
											"end": 2070,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11121,
											"end": 11140,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11121,
											"end": 11140,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 11150,
											"end": 11154,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 11150,
											"end": 11154,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11143,
											"end": 11165,
											"name": "PUSH",
											"source": 14,
											"value": "70A08231"
										},
										{
											"begin": 11143,
											"end": 11165,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1992,
											"end": 2010,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 1992,
											"end": 2010,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11143,
											"end": 11171,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11143,
											"end": 11171,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 11143,
											"end": 11171,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 11143,
											"end": 11171,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11143,
											"end": 11171,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11143,
											"end": 11171,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 11143,
											"end": 11171,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11143,
											"end": 11171,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 11143,
											"end": 11171,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 11143,
											"end": 11171,
											"name": "STATICCALL",
											"source": 14
										},
										{
											"begin": 11143,
											"end": 11171,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11143,
											"end": 11171,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11143,
											"end": 11171,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11143,
											"end": 11171,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "728"
										},
										{
											"begin": 11143,
											"end": 11171,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11143,
											"end": 11171,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 11143,
											"end": 11171,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11143,
											"end": 11171,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11143,
											"end": 11171,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 11143,
											"end": 11171,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 11143,
											"end": 11171,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11143,
											"end": 11171,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 11143,
											"end": 11171,
											"name": "tag",
											"source": 14,
											"value": "728"
										},
										{
											"begin": 11143,
											"end": 11171,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11143,
											"end": 11171,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11143,
											"end": 11171,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11143,
											"end": 11171,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11143,
											"end": 11171,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11143,
											"end": 11171,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 11143,
											"end": 11171,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 11143,
											"end": 11171,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 11143,
											"end": 11171,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 11143,
											"end": 11171,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 11143,
											"end": 11171,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 11143,
											"end": 11171,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11143,
											"end": 11171,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11143,
											"end": 11171,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 11143,
											"end": 11171,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11143,
											"end": 11171,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11143,
											"end": 11171,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11143,
											"end": 11171,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 11143,
											"end": 11171,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11143,
											"end": 11171,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11143,
											"end": 11171,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11143,
											"end": 11171,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11143,
											"end": 11171,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11143,
											"end": 11171,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "729"
										},
										{
											"begin": 11143,
											"end": 11171,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11143,
											"end": 11171,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11143,
											"end": 11171,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "539"
										},
										{
											"begin": 11143,
											"end": 11171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11143,
											"end": 11171,
											"name": "tag",
											"source": 14,
											"value": "729"
										},
										{
											"begin": 11143,
											"end": 11171,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11121,
											"end": 11171,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11185,
											"end": 11201,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11185,
											"end": 11201,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11181,
											"end": 11350,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "736"
										},
										{
											"begin": 11181,
											"end": 11350,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11249,
											"end": 11253,
											"name": "PUSH",
											"source": 14,
											"value": "C"
										},
										{
											"begin": 11249,
											"end": 11253,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11249,
											"end": 11253,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 11242,
											"end": 11263,
											"name": "PUSH",
											"source": 14,
											"value": "A9059CBB"
										},
										{
											"begin": 11264,
											"end": 11271,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "731"
										},
										{
											"begin": 11264,
											"end": 11269,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "150"
										},
										{
											"begin": 11264,
											"end": 11271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11264,
											"end": 11271,
											"name": "tag",
											"source": 14,
											"value": "731"
										},
										{
											"begin": 11264,
											"end": 11271,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11242,
											"end": 11285,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 11242,
											"end": 11285,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11242,
											"end": 11285,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 11242,
											"end": 11285,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 11242,
											"end": 11285,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11242,
											"end": 11285,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 11242,
											"end": 11285,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 11242,
											"end": 11285,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11242,
											"end": 11285,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15640,
											"end": 15672,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15640,
											"end": 15672,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 15640,
											"end": 15672,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 11242,
											"end": 11285,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 11242,
											"end": 11285,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11242,
											"end": 11285,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15622,
											"end": 15673,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15689,
											"end": 15707,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 15689,
											"end": 15707,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15689,
											"end": 15707,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15682,
											"end": 15716,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 15682,
											"end": 15716,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15682,
											"end": 15716,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15595,
											"end": 15613,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 15595,
											"end": 15613,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11242,
											"end": 11285,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11242,
											"end": 11285,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 11242,
											"end": 11285,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 11242,
											"end": 11285,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11242,
											"end": 11285,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11242,
											"end": 11285,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 11242,
											"end": 11285,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11242,
											"end": 11285,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11242,
											"end": 11285,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 11242,
											"end": 11285,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 11242,
											"end": 11285,
											"name": "CALL",
											"source": 14
										},
										{
											"begin": 11242,
											"end": 11285,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11242,
											"end": 11285,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11242,
											"end": 11285,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11242,
											"end": 11285,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "734"
										},
										{
											"begin": 11242,
											"end": 11285,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11242,
											"end": 11285,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 11242,
											"end": 11285,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11242,
											"end": 11285,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11242,
											"end": 11285,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 11242,
											"end": 11285,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 11242,
											"end": 11285,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11242,
											"end": 11285,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 11242,
											"end": 11285,
											"name": "tag",
											"source": 14,
											"value": "734"
										},
										{
											"begin": 11242,
											"end": 11285,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11242,
											"end": 11285,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11242,
											"end": 11285,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11242,
											"end": 11285,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11242,
											"end": 11285,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11242,
											"end": 11285,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 11242,
											"end": 11285,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 11242,
											"end": 11285,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 11242,
											"end": 11285,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 11242,
											"end": 11285,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 11242,
											"end": 11285,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 11242,
											"end": 11285,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11242,
											"end": 11285,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11242,
											"end": 11285,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 11242,
											"end": 11285,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11242,
											"end": 11285,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11242,
											"end": 11285,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11242,
											"end": 11285,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 11242,
											"end": 11285,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11242,
											"end": 11285,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11242,
											"end": 11285,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11242,
											"end": 11285,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11242,
											"end": 11285,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11242,
											"end": 11285,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "735"
										},
										{
											"begin": 11242,
											"end": 11285,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11242,
											"end": 11285,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11242,
											"end": 11285,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "503"
										},
										{
											"begin": 11242,
											"end": 11285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11242,
											"end": 11285,
											"name": "tag",
											"source": 14,
											"value": "735"
										},
										{
											"begin": 11242,
											"end": 11285,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11217,
											"end": 11339,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "736"
										},
										{
											"begin": 11217,
											"end": 11339,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11217,
											"end": 11339,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 11217,
											"end": 11339,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11217,
											"end": 11339,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11217,
											"end": 11339,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 23165,
											"end": 23167,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 11217,
											"end": 11339,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 11217,
											"end": 11339,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11217,
											"end": 11339,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 23147,
											"end": 23168,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 23204,
											"end": 23206,
											"name": "PUSH",
											"source": 15,
											"value": "14"
										},
										{
											"begin": 23184,
											"end": 23202,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 23184,
											"end": 23202,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 23184,
											"end": 23202,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 23177,
											"end": 23207,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1554D110C81D1C985B9CD9995C8819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 23223,
											"end": 23241,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 23223,
											"end": 23241,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 23223,
											"end": 23241,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 23216,
											"end": 23266,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 23283,
											"end": 23301,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 23283,
											"end": 23301,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11217,
											"end": 11339,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "53"
										},
										{
											"begin": 22963,
											"end": 23307,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11217,
											"end": 11339,
											"name": "tag",
											"source": 14,
											"value": "736"
										},
										{
											"begin": 11217,
											"end": 11339,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10616,
											"end": 11356,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10616,
											"end": 11356,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10616,
											"end": 11356,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10616,
											"end": 11356,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10576,
											"end": 11356,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4603,
											"end": 4915,
											"name": "tag",
											"source": 3,
											"value": "378"
										},
										{
											"begin": 4603,
											"end": 4915,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4683,
											"end": 4687,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4692,
											"end": 4698,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "514"
										},
										{
											"begin": 4675,
											"end": 4698,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4675,
											"end": 4698,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 4675,
											"end": 4698,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4675,
											"end": 4795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "742"
										},
										{
											"begin": 4675,
											"end": 4795,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4675,
											"end": 4795,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4789,
											"end": 4795,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "514"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4753,
											"end": 4795,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4753,
											"end": 4785,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "743"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1441,
											"end": 1579,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4753,
											"end": 4785,
											"name": "tag",
											"source": 3,
											"value": "743"
										},
										{
											"begin": 4753,
											"end": 4785,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4753,
											"end": 4795,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4753,
											"end": 4795,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 4753,
											"end": 4795,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4675,
											"end": 4795,
											"name": "tag",
											"source": 3,
											"value": "742"
										},
										{
											"begin": 4675,
											"end": 4795,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4658,
											"end": 4909,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4658,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "370"
										},
										{
											"begin": 4658,
											"end": 4909,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "703E46DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 15668,
											"end": 15752,
											"name": "tag",
											"source": 14,
											"value": "381"
										},
										{
											"begin": 15668,
											"end": 15752,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "675"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6057,
											"end": 6595,
											"name": "tag",
											"source": 3,
											"value": "383"
										},
										{
											"begin": 6057,
											"end": 6595,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6174,
											"end": 6191,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6156,
											"end": 6206,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6206,
											"name": "PUSH",
											"source": 3,
											"value": "52D1902D"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "750"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "751"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "539"
										},
										{
											"begin": 6156,
											"end": 6208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "tag",
											"source": 3,
											"value": "751"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "tag",
											"source": 3,
											"value": "750"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6152,
											"end": 6589,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "753"
										},
										{
											"begin": 6152,
											"end": 6589,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4C9C8CE3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2037,
											"end": 2069,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2037,
											"end": 2069,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2019,
											"end": 2070,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1992,
											"end": 2010,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 1992,
											"end": 2010,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 1873,
											"end": 2076,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6152,
											"end": 6589,
											"name": "tag",
											"source": 3,
											"value": "753"
										},
										{
											"begin": 6152,
											"end": 6589,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 6250,
											"end": 6290,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6250,
											"end": 6290,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 6246,
											"end": 6366,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "759"
										},
										{
											"begin": 6246,
											"end": 6366,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2A875269"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1014,
											"end": 1039,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1014,
											"end": 1039,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1014,
											"end": 1039,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 987,
											"end": 1005,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 987,
											"end": 1005,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 868,
											"end": 1045,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6246,
											"end": 6366,
											"name": "tag",
											"source": 3,
											"value": "759"
										},
										{
											"begin": 6246,
											"end": 6366,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6379,
											"end": 6433,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "416"
										},
										{
											"begin": 6409,
											"end": 6426,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6428,
											"end": 6432,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6379,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "762"
										},
										{
											"begin": 6379,
											"end": 6433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5032,
											"end": 5245,
											"name": "tag",
											"source": 3,
											"value": "386"
										},
										{
											"begin": 5032,
											"end": 5245,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5106,
											"end": 5110,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5115,
											"end": 5121,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "514"
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5094,
											"end": 5239,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "370"
										},
										{
											"begin": 5094,
											"end": 5239,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "703E46DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "tag",
											"source": 1,
											"value": "421"
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"source": 1,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3847,
											"end": 3871,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3847,
											"end": 3871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3774,
											"end": 4022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "tag",
											"source": 1,
											"value": "686"
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "771"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "772"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 2,
											"value": "771"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "675"
										},
										{
											"begin": 1954,
											"end": 1966,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 1953,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "775"
										},
										{
											"begin": 1929,
											"end": 1967,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3037,
											"name": "tag",
											"source": 3,
											"value": "688"
										},
										{
											"begin": 2970,
											"end": 3037,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "370"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "772"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2264,
											"end": 2608,
											"name": "tag",
											"source": 8,
											"value": "762"
										},
										{
											"begin": 2264,
											"end": 2608,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2355,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "785"
										},
										{
											"begin": 2374,
											"end": 2391,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2355,
											"end": 2373,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "786"
										},
										{
											"begin": 2355,
											"end": 2392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2355,
											"end": 2392,
											"name": "tag",
											"source": 8,
											"value": "785"
										},
										{
											"begin": 2355,
											"end": 2392,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "PUSH",
											"source": 8,
											"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 2458,
											"end": 2469,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2458,
											"end": 2469,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2458,
											"end": 2473,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "787"
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2489,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 2518,
											"end": 2535,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2537,
											"end": 2541,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2489,
											"end": 2517,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "789"
										},
										{
											"begin": 2489,
											"end": 2542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "tag",
											"source": 8,
											"value": "787"
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 2573,
											"end": 2589,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "792"
										},
										{
											"begin": 2573,
											"end": 2591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "tag",
											"source": 2,
											"value": "772"
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "PUSH",
											"source": 2,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "370"
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1AFCD79F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "tag",
											"source": 1,
											"value": "775"
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "671"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "772"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1952,
											"name": "tag",
											"source": 8,
											"value": "786"
										},
										{
											"begin": 1671,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1765,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1748,
											"end": 1777,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1777,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 1781,
											"end": 1782,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1748,
											"end": 1782,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "805"
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4C9C8CE3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2037,
											"end": 2069,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2037,
											"end": 2069,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2019,
											"end": 2070,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1992,
											"end": 2010,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 1992,
											"end": 2010,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 1873,
											"end": 2076,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "tag",
											"source": 8,
											"value": "805"
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "AND",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1671,
											"end": 1952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3900,
											"end": 4153,
											"name": "tag",
											"source": 11,
											"value": "789"
										},
										{
											"begin": 3900,
											"end": 4153,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3983,
											"end": 3995,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4022,
											"end": 4045,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4055,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4049,
											"end": 4068,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4069,
											"end": 4073,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "809"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "810"
										},
										{
											"begin": 4049,
											"end": 4074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "tag",
											"source": 11,
											"value": "809"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DELEGATECALL",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "813"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 11,
											"value": "3F"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "812"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "tag",
											"source": 11,
											"value": "813"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "tag",
											"source": 11,
											"value": "812"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4007,
											"end": 4074,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4007,
											"end": 4074,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4007,
											"end": 4074,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4007,
											"end": 4074,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4091,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "814"
										},
										{
											"begin": 4118,
											"end": 4124,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4126,
											"end": 4133,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4135,
											"end": 4145,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4091,
											"end": 4117,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "815"
										},
										{
											"begin": 4091,
											"end": 4146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4091,
											"end": 4146,
											"name": "tag",
											"source": 11,
											"value": "814"
										},
										{
											"begin": 4091,
											"end": 4146,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4084,
											"end": 4146,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 3900,
											"end": 4153,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3900,
											"end": 4153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6113,
											"end": 6235,
											"name": "tag",
											"source": 8,
											"value": "792"
										},
										{
											"begin": 6113,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6163,
											"end": 6172,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 6163,
											"end": 6176,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6159,
											"end": 6229,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 6159,
											"end": 6229,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B398979F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "tag",
											"source": 11,
											"value": "815"
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4565,
											"end": 4577,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 4594,
											"end": 4601,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "821"
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4617,
											"end": 4636,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "822"
										},
										{
											"begin": 4625,
											"end": 4635,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4617,
											"end": 4624,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "823"
										},
										{
											"begin": 4617,
											"end": 4636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4617,
											"end": 4636,
											"name": "tag",
											"source": 11,
											"value": "822"
										},
										{
											"begin": 4617,
											"end": 4636,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "824"
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "tag",
											"source": 11,
											"value": "821"
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4841,
											"end": 4858,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4841,
											"end": 4858,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4841,
											"end": 4863,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4841,
											"end": 4890,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4841,
											"end": 4890,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4841,
											"end": 4890,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "825"
										},
										{
											"begin": 4841,
											"end": 4890,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4867,
											"end": 4885,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4867,
											"end": 4885,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4867,
											"end": 4885,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 4867,
											"end": 4890,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4841,
											"end": 4890,
											"name": "tag",
											"source": 11,
											"value": "825"
										},
										{
											"begin": 4841,
											"end": 4890,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4837,
											"end": 4956,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4837,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "826"
										},
										{
											"begin": 4837,
											"end": 4956,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9996B315"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2037,
											"end": 2069,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2037,
											"end": 2069,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2019,
											"end": 2070,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1992,
											"end": 2010,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 1992,
											"end": 2010,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 1873,
											"end": 2076,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4837,
											"end": 4956,
											"name": "tag",
											"source": 11,
											"value": "826"
										},
										{
											"begin": 4837,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4976,
											"end": 4986,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "tag",
											"source": 11,
											"value": "824"
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4421,
											"end": 5003,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5543,
											"end": 6030,
											"name": "tag",
											"source": 11,
											"value": "823"
										},
										{
											"begin": 5543,
											"end": 6030,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5674,
											"end": 5691,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5674,
											"end": 5691,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5674,
											"end": 5695,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5670,
											"end": 6024,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "829"
										},
										{
											"begin": 5670,
											"end": 6024,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5871,
											"end": 5881,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5865,
											"end": 5882,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5927,
											"end": 5942,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5914,
											"end": 5924,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5910,
											"end": 5912,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5906,
											"end": 5925,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5899,
											"end": 5943,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5670,
											"end": 6024,
											"name": "tag",
											"source": 11,
											"value": "829"
										},
										{
											"begin": 5670,
											"end": 6024,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D6BDA275"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 375,
											"end": 529,
											"name": "tag",
											"source": 15,
											"value": "831"
										},
										{
											"begin": 375,
											"end": 529,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 454,
											"end": 474,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 454,
											"end": 474,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 503,
											"end": 504,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 493,
											"end": 505,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 493,
											"end": 505,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 483,
											"end": 523,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "308"
										},
										{
											"begin": 483,
											"end": 523,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 519,
											"end": 520,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 517,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 509,
											"end": 521,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 534,
											"end": 863,
											"name": "tag",
											"source": 15,
											"value": "58"
										},
										{
											"begin": 534,
											"end": 863,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 620,
											"end": 626,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 634,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 681,
											"end": 683,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 669,
											"end": 678,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 660,
											"end": 667,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 656,
											"end": 679,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 652,
											"end": 684,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 649,
											"end": 701,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 649,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "845"
										},
										{
											"begin": 649,
											"end": 701,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 697,
											"end": 698,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 694,
											"end": 695,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 687,
											"end": 699,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 649,
											"end": 701,
											"name": "tag",
											"source": 15,
											"value": "845"
										},
										{
											"begin": 649,
											"end": 701,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 720,
											"end": 760,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "846"
										},
										{
											"begin": 750,
											"end": 759,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 720,
											"end": 760,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "831"
										},
										{
											"begin": 720,
											"end": 760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 720,
											"end": 760,
											"name": "tag",
											"source": 15,
											"value": "846"
										},
										{
											"begin": 720,
											"end": 760,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 710,
											"end": 760,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 829,
											"end": 831,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 814,
											"end": 832,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 814,
											"end": 832,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 814,
											"end": 832,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 814,
											"end": 832,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 801,
											"end": 833,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 801,
											"end": 833,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 534,
											"end": 863,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1242,
											"end": 1457,
											"name": "tag",
											"source": 15,
											"value": "70"
										},
										{
											"begin": 1242,
											"end": 1457,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1319,
											"end": 1325,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1372,
											"end": 1374,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1360,
											"end": 1369,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1351,
											"end": 1358,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1347,
											"end": 1370,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1343,
											"end": 1375,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 1340,
											"end": 1392,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1340,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "850"
										},
										{
											"begin": 1340,
											"end": 1392,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1388,
											"end": 1389,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1385,
											"end": 1386,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1378,
											"end": 1390,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1340,
											"end": 1392,
											"name": "tag",
											"source": 15,
											"value": "850"
										},
										{
											"begin": 1340,
											"end": 1392,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1411,
											"end": 1451,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "824"
										},
										{
											"begin": 1441,
											"end": 1450,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1411,
											"end": 1451,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "831"
										},
										{
											"begin": 1411,
											"end": 1451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1642,
											"end": 1868,
											"name": "tag",
											"source": 15,
											"value": "93"
										},
										{
											"begin": 1642,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1701,
											"end": 1707,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1754,
											"end": 1756,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1742,
											"end": 1751,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1733,
											"end": 1740,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1729,
											"end": 1752,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1725,
											"end": 1757,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 1722,
											"end": 1774,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1722,
											"end": 1774,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "854"
										},
										{
											"begin": 1722,
											"end": 1774,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1770,
											"end": 1771,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1768,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1760,
											"end": 1772,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1722,
											"end": 1774,
											"name": "tag",
											"source": 15,
											"value": "854"
										},
										{
											"begin": 1722,
											"end": 1774,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1815,
											"end": 1838,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 1815,
											"end": 1838,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1642,
											"end": 1868,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1642,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2081,
											"end": 2212,
											"name": "tag",
											"source": 15,
											"value": "832"
										},
										{
											"begin": 2081,
											"end": 2212,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2156,
											"end": 2187,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2156,
											"end": 2187,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2146,
											"end": 2188,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2146,
											"end": 2188,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 2136,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "675"
										},
										{
											"begin": 2136,
											"end": 2206,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2202,
											"end": 2203,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2199,
											"end": 2200,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2192,
											"end": 2204,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2217,
											"end": 2344,
											"name": "tag",
											"source": 15,
											"value": "833"
										},
										{
											"begin": 2217,
											"end": 2344,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2278,
											"end": 2288,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 2273,
											"end": 2276,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 2269,
											"end": 2289,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 2266,
											"end": 2267,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2259,
											"end": 2290,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2309,
											"end": 2313,
											"name": "PUSH",
											"source": 15,
											"value": "41"
										},
										{
											"begin": 2306,
											"end": 2307,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 2299,
											"end": 2314,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2333,
											"end": 2337,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 2330,
											"end": 2331,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2323,
											"end": 2338,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2349,
											"end": 3428,
											"name": "tag",
											"source": 15,
											"value": "116"
										},
										{
											"begin": 2349,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2434,
											"end": 2440,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2487,
											"end": 2489,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2475,
											"end": 2484,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2466,
											"end": 2473,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2462,
											"end": 2485,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2458,
											"end": 2490,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 2455,
											"end": 2507,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2455,
											"end": 2507,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "860"
										},
										{
											"begin": 2455,
											"end": 2507,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2503,
											"end": 2504,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2500,
											"end": 2501,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2493,
											"end": 2505,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2455,
											"end": 2507,
											"name": "tag",
											"source": 15,
											"value": "860"
										},
										{
											"begin": 2455,
											"end": 2507,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2542,
											"end": 2551,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2529,
											"end": 2552,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 2561,
											"end": 2592,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "861"
										},
										{
											"begin": 2586,
											"end": 2591,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2561,
											"end": 2592,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "832"
										},
										{
											"begin": 2561,
											"end": 2592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2561,
											"end": 2592,
											"name": "tag",
											"source": 15,
											"value": "861"
										},
										{
											"begin": 2561,
											"end": 2592,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2611,
											"end": 2616,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2667,
											"end": 2669,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2652,
											"end": 2670,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2652,
											"end": 2670,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2639,
											"end": 2671,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 2694,
											"end": 2712,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2683,
											"end": 2713,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2683,
											"end": 2713,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 2680,
											"end": 2730,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2680,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "862"
										},
										{
											"begin": 2680,
											"end": 2730,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2726,
											"end": 2727,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2723,
											"end": 2724,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2716,
											"end": 2728,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2680,
											"end": 2730,
											"name": "tag",
											"source": 15,
											"value": "862"
										},
										{
											"begin": 2680,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2749,
											"end": 2771,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2749,
											"end": 2771,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2802,
											"end": 2806,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 2794,
											"end": 2807,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2794,
											"end": 2807,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2790,
											"end": 2817,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 2780,
											"end": 2835,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "863"
										},
										{
											"begin": 2780,
											"end": 2835,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2831,
											"end": 2832,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2828,
											"end": 2829,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2821,
											"end": 2833,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2780,
											"end": 2835,
											"name": "tag",
											"source": 15,
											"value": "863"
										},
										{
											"begin": 2780,
											"end": 2835,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2871,
											"end": 2873,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2858,
											"end": 2874,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 2897,
											"end": 2915,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2889,
											"end": 2895,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2886,
											"end": 2916,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 2883,
											"end": 2939,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2883,
											"end": 2939,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "865"
										},
										{
											"begin": 2883,
											"end": 2939,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2919,
											"end": 2937,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "865"
										},
										{
											"begin": 2919,
											"end": 2937,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "833"
										},
										{
											"begin": 2919,
											"end": 2937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2919,
											"end": 2937,
											"name": "tag",
											"source": 15,
											"value": "865"
										},
										{
											"begin": 2919,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2968,
											"end": 2970,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2962,
											"end": 2971,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 3060,
											"end": 3062,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 3022,
											"end": 3039,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3022,
											"end": 3039,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3018,
											"end": 3049,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3018,
											"end": 3049,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3018,
											"end": 3049,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3051,
											"end": 3053,
											"name": "PUSH",
											"source": 15,
											"value": "3F"
										},
										{
											"begin": 3014,
											"end": 3054,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3010,
											"end": 3064,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2998,
											"end": 3065,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2998,
											"end": 3065,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3080,
											"end": 3114,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3080,
											"end": 3114,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 3116,
											"end": 3138,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3116,
											"end": 3138,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3116,
											"end": 3138,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 3077,
											"end": 3139,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 3074,
											"end": 3162,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3074,
											"end": 3162,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "867"
										},
										{
											"begin": 3074,
											"end": 3162,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3142,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "867"
										},
										{
											"begin": 3142,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "833"
										},
										{
											"begin": 3142,
											"end": 3160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3142,
											"end": 3160,
											"name": "tag",
											"source": 15,
											"value": "867"
										},
										{
											"begin": 3142,
											"end": 3160,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3178,
											"end": 3180,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3171,
											"end": 3193,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3202,
											"end": 3224,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3202,
											"end": 3224,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3202,
											"end": 3224,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3243,
											"end": 3258,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3243,
											"end": 3258,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3243,
											"end": 3258,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3260,
											"end": 3262,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3239,
											"end": 3263,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3236,
											"end": 3273,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 3233,
											"end": 3290,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3233,
											"end": 3290,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "868"
										},
										{
											"begin": 3233,
											"end": 3290,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3286,
											"end": 3287,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3283,
											"end": 3284,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3276,
											"end": 3288,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3233,
											"end": 3290,
											"name": "tag",
											"source": 15,
											"value": "868"
										},
										{
											"begin": 3233,
											"end": 3290,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3342,
											"end": 3348,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3337,
											"end": 3339,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3333,
											"end": 3335,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3329,
											"end": 3340,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3324,
											"end": 3326,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3316,
											"end": 3322,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3312,
											"end": 3327,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3299,
											"end": 3349,
											"name": "CALLDATACOPY",
											"source": 15
										},
										{
											"begin": 3395,
											"end": 3396,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3392,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3381,
											"end": 3387,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3373,
											"end": 3379,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3369,
											"end": 3388,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3365,
											"end": 3393,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3358,
											"end": 3397,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3416,
											"end": 3422,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3406,
											"end": 3422,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 3406,
											"end": 3422,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3406,
											"end": 3422,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3406,
											"end": 3422,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3406,
											"end": 3422,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2349,
											"end": 3428,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2349,
											"end": 3428,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2349,
											"end": 3428,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2349,
											"end": 3428,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2349,
											"end": 3428,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2349,
											"end": 3428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3615,
											"end": 4081,
											"name": "tag",
											"source": 15,
											"value": "133"
										},
										{
											"begin": 3615,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3692,
											"end": 3698,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3700,
											"end": 3706,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3708,
											"end": 3714,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3761,
											"end": 3763,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 3749,
											"end": 3758,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3740,
											"end": 3747,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 3736,
											"end": 3759,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 3732,
											"end": 3764,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 3729,
											"end": 3781,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3729,
											"end": 3781,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "871"
										},
										{
											"begin": 3729,
											"end": 3781,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3777,
											"end": 3778,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3774,
											"end": 3775,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3767,
											"end": 3779,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3729,
											"end": 3781,
											"name": "tag",
											"source": 15,
											"value": "871"
										},
										{
											"begin": 3729,
											"end": 3781,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3822,
											"end": 3845,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3822,
											"end": 3845,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 3822,
											"end": 3845,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 3942,
											"end": 3944,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3927,
											"end": 3945,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3927,
											"end": 3945,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3914,
											"end": 3946,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 3914,
											"end": 3946,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4045,
											"end": 4047,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4030,
											"end": 4048,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4030,
											"end": 4048,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4030,
											"end": 4048,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4017,
											"end": 4049,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 4017,
											"end": 4049,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3615,
											"end": 4081,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3615,
											"end": 4081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4086,
											"end": 4336,
											"name": "tag",
											"source": 15,
											"value": "834"
										},
										{
											"begin": 4086,
											"end": 4336,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4171,
											"end": 4172,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4181,
											"end": 4294,
											"name": "tag",
											"source": 15,
											"value": "873"
										},
										{
											"begin": 4181,
											"end": 4294,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4195,
											"end": 4201,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4192,
											"end": 4193,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4189,
											"end": 4202,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 4181,
											"end": 4294,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4181,
											"end": 4294,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "875"
										},
										{
											"begin": 4181,
											"end": 4294,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4271,
											"end": 4282,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4271,
											"end": 4282,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4271,
											"end": 4282,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4265,
											"end": 4283,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 4252,
											"end": 4263,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4252,
											"end": 4263,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4252,
											"end": 4263,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4245,
											"end": 4284,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4217,
											"end": 4219,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4210,
											"end": 4220,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4181,
											"end": 4294,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "873"
										},
										{
											"begin": 4181,
											"end": 4294,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4181,
											"end": 4294,
											"name": "tag",
											"source": 15,
											"value": "875"
										},
										{
											"begin": 4181,
											"end": 4294,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4328,
											"end": 4329,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4310,
											"end": 4326,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4310,
											"end": 4326,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4303,
											"end": 4330,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4086,
											"end": 4336,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4341,
											"end": 4737,
											"name": "tag",
											"source": 15,
											"value": "184"
										},
										{
											"begin": 4341,
											"end": 4737,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4490,
											"end": 4492,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4479,
											"end": 4488,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4472,
											"end": 4493,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4453,
											"end": 4457,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4522,
											"end": 4528,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4516,
											"end": 4529,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 4565,
											"end": 4571,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4560,
											"end": 4562,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4549,
											"end": 4558,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4545,
											"end": 4563,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4538,
											"end": 4572,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4581,
											"end": 4660,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "877"
										},
										{
											"begin": 4653,
											"end": 4659,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4648,
											"end": 4650,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4637,
											"end": 4646,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4633,
											"end": 4651,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4628,
											"end": 4630,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4620,
											"end": 4626,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 4616,
											"end": 4631,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4581,
											"end": 4660,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "834"
										},
										{
											"begin": 4581,
											"end": 4660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4581,
											"end": 4660,
											"name": "tag",
											"source": 15,
											"value": "877"
										},
										{
											"begin": 4581,
											"end": 4660,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4721,
											"end": 4723,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 4700,
											"end": 4715,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4696,
											"end": 4725,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4681,
											"end": 4726,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4681,
											"end": 4726,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4681,
											"end": 4726,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4681,
											"end": 4726,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4728,
											"end": 4730,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4677,
											"end": 4731,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4677,
											"end": 4731,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4341,
											"end": 4737,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4341,
											"end": 4737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5473,
											"end": 5720,
											"name": "tag",
											"source": 15,
											"value": "213"
										},
										{
											"begin": 5473,
											"end": 5720,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5532,
											"end": 5538,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5585,
											"end": 5587,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5573,
											"end": 5582,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5564,
											"end": 5571,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5560,
											"end": 5583,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 5556,
											"end": 5588,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 5553,
											"end": 5605,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5553,
											"end": 5605,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "881"
										},
										{
											"begin": 5553,
											"end": 5605,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5601,
											"end": 5602,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5598,
											"end": 5599,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5591,
											"end": 5603,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 5553,
											"end": 5605,
											"name": "tag",
											"source": 15,
											"value": "881"
										},
										{
											"begin": 5553,
											"end": 5605,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5640,
											"end": 5649,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5627,
											"end": 5650,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 5659,
											"end": 5690,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "824"
										},
										{
											"begin": 5684,
											"end": 5689,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5659,
											"end": 5690,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "832"
										},
										{
											"begin": 5659,
											"end": 5690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5948,
											"end": 7160,
											"name": "tag",
											"source": 15,
											"value": "237"
										},
										{
											"begin": 5948,
											"end": 7160,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6085,
											"end": 6091,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6093,
											"end": 6099,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6101,
											"end": 6107,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6109,
											"end": 6115,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6117,
											"end": 6123,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6125,
											"end": 6131,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6133,
											"end": 6139,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6141,
											"end": 6147,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6194,
											"end": 6197,
											"name": "PUSH",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 6182,
											"end": 6191,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 6173,
											"end": 6180,
											"name": "DUP12",
											"source": 15
										},
										{
											"begin": 6169,
											"end": 6192,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 6165,
											"end": 6198,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 6162,
											"end": 6215,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6162,
											"end": 6215,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "885"
										},
										{
											"begin": 6162,
											"end": 6215,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6211,
											"end": 6212,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6208,
											"end": 6209,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6201,
											"end": 6213,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 6162,
											"end": 6215,
											"name": "tag",
											"source": 15,
											"value": "885"
										},
										{
											"begin": 6162,
											"end": 6215,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6250,
											"end": 6259,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 6237,
											"end": 6260,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 6269,
											"end": 6300,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "886"
										},
										{
											"begin": 6294,
											"end": 6299,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6269,
											"end": 6300,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "832"
										},
										{
											"begin": 6269,
											"end": 6300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6269,
											"end": 6300,
											"name": "tag",
											"source": 15,
											"value": "886"
										},
										{
											"begin": 6269,
											"end": 6300,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6319,
											"end": 6324,
											"name": "SWAP8",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6376,
											"end": 6378,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6361,
											"end": 6379,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 6361,
											"end": 6379,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6348,
											"end": 6380,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 6389,
											"end": 6422,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "887"
										},
										{
											"begin": 6348,
											"end": 6380,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6389,
											"end": 6422,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "832"
										},
										{
											"begin": 6389,
											"end": 6422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6389,
											"end": 6422,
											"name": "tag",
											"source": 15,
											"value": "887"
										},
										{
											"begin": 6389,
											"end": 6422,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6441,
											"end": 6448,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6500,
											"end": 6502,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 6485,
											"end": 6503,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 6485,
											"end": 6503,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6472,
											"end": 6504,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 6513,
											"end": 6546,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "888"
										},
										{
											"begin": 6472,
											"end": 6504,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6513,
											"end": 6546,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "832"
										},
										{
											"begin": 6513,
											"end": 6546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6513,
											"end": 6546,
											"name": "tag",
											"source": 15,
											"value": "888"
										},
										{
											"begin": 6513,
											"end": 6546,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6565,
											"end": 6572,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6645,
											"end": 6647,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 6630,
											"end": 6648,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 6630,
											"end": 6648,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6617,
											"end": 6649,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 6617,
											"end": 6649,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 6733,
											"end": 6752,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 6733,
											"end": 6752,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6720,
											"end": 6753,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 6720,
											"end": 6753,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6831,
											"end": 6834,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 6816,
											"end": 6835,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 6816,
											"end": 6835,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6803,
											"end": 6836,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 6845,
											"end": 6878,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "889"
										},
										{
											"begin": 6803,
											"end": 6836,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6845,
											"end": 6878,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "832"
										},
										{
											"begin": 6845,
											"end": 6878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6845,
											"end": 6878,
											"name": "tag",
											"source": 15,
											"value": "889"
										},
										{
											"begin": 6845,
											"end": 6878,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6897,
											"end": 6904,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6956,
											"end": 6959,
											"name": "PUSH",
											"source": 15,
											"value": "C0"
										},
										{
											"begin": 6941,
											"end": 6960,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 6941,
											"end": 6960,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6928,
											"end": 6961,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 6970,
											"end": 7003,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "890"
										},
										{
											"begin": 6928,
											"end": 6961,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6970,
											"end": 7003,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "832"
										},
										{
											"begin": 6970,
											"end": 7003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6970,
											"end": 7003,
											"name": "tag",
											"source": 15,
											"value": "890"
										},
										{
											"begin": 6970,
											"end": 7003,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7022,
											"end": 7029,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7081,
											"end": 7084,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 7066,
											"end": 7085,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 7066,
											"end": 7085,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7053,
											"end": 7086,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 7095,
											"end": 7128,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "891"
										},
										{
											"begin": 7053,
											"end": 7086,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7095,
											"end": 7128,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "832"
										},
										{
											"begin": 7095,
											"end": 7128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7095,
											"end": 7128,
											"name": "tag",
											"source": 15,
											"value": "891"
										},
										{
											"begin": 7095,
											"end": 7128,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7147,
											"end": 7154,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7137,
											"end": 7154,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7137,
											"end": 7154,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7137,
											"end": 7154,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5948,
											"end": 7160,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5948,
											"end": 7160,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 5948,
											"end": 7160,
											"name": "SWAP9",
											"source": 15
										},
										{
											"begin": 5948,
											"end": 7160,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5948,
											"end": 7160,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5948,
											"end": 7160,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 5948,
											"end": 7160,
											"name": "SWAP9",
											"source": 15
										},
										{
											"begin": 5948,
											"end": 7160,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5948,
											"end": 7160,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 5948,
											"end": 7160,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": 5948,
											"end": 7160,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5948,
											"end": 7160,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7512,
											"end": 7639,
											"name": "tag",
											"source": 15,
											"value": "248"
										},
										{
											"begin": 7512,
											"end": 7639,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7573,
											"end": 7583,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 7568,
											"end": 7571,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 7564,
											"end": 7584,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 7561,
											"end": 7562,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7554,
											"end": 7585,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7604,
											"end": 7608,
											"name": "PUSH",
											"source": 15,
											"value": "21"
										},
										{
											"begin": 7601,
											"end": 7602,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 7594,
											"end": 7609,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7628,
											"end": 7632,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 7625,
											"end": 7626,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7618,
											"end": 7633,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 7644,
											"end": 7771,
											"name": "tag",
											"source": 15,
											"value": "835"
										},
										{
											"begin": 7644,
											"end": 7771,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7705,
											"end": 7715,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 7700,
											"end": 7703,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 7696,
											"end": 7716,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 7693,
											"end": 7694,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7686,
											"end": 7717,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7736,
											"end": 7740,
											"name": "PUSH",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 7733,
											"end": 7734,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 7726,
											"end": 7741,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7760,
											"end": 7764,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 7757,
											"end": 7758,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7750,
											"end": 7765,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 7776,
											"end": 7944,
											"name": "tag",
											"source": 15,
											"value": "254"
										},
										{
											"begin": 7776,
											"end": 7944,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7849,
											"end": 7858,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7849,
											"end": 7858,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7849,
											"end": 7858,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 7880,
											"end": 7889,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7880,
											"end": 7889,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 7897,
											"end": 7912,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7897,
											"end": 7912,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7897,
											"end": 7912,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 7891,
											"end": 7913,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 7891,
											"end": 7913,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 7877,
											"end": 7914,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 7867,
											"end": 7938,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "239"
										},
										{
											"begin": 7867,
											"end": 7938,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7918,
											"end": 7936,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "239"
										},
										{
											"begin": 7918,
											"end": 7936,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "835"
										},
										{
											"begin": 7918,
											"end": 7936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7949,
											"end": 8077,
											"name": "tag",
											"source": 15,
											"value": "267"
										},
										{
											"begin": 7949,
											"end": 8077,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8016,
											"end": 8025,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8016,
											"end": 8025,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8016,
											"end": 8025,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 8037,
											"end": 8048,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8037,
											"end": 8048,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8037,
											"end": 8048,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 8034,
											"end": 8071,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8034,
											"end": 8071,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "239"
										},
										{
											"begin": 8034,
											"end": 8071,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8051,
											"end": 8069,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "239"
										},
										{
											"begin": 8051,
											"end": 8069,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "835"
										},
										{
											"begin": 8051,
											"end": 8069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8082,
											"end": 8457,
											"name": "tag",
											"source": 15,
											"value": "836"
										},
										{
											"begin": 8082,
											"end": 8457,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8170,
											"end": 8171,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 8188,
											"end": 8193,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8202,
											"end": 8451,
											"name": "tag",
											"source": 15,
											"value": "902"
										},
										{
											"begin": 8202,
											"end": 8451,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8223,
											"end": 8224,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 8213,
											"end": 8221,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8210,
											"end": 8225,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 8202,
											"end": 8451,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8202,
											"end": 8451,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "904"
										},
										{
											"begin": 8202,
											"end": 8451,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8273,
											"end": 8277,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8268,
											"end": 8271,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 8264,
											"end": 8278,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 8258,
											"end": 8262,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8255,
											"end": 8279,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 8252,
											"end": 8302,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8252,
											"end": 8302,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "906"
										},
										{
											"begin": 8252,
											"end": 8302,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8282,
											"end": 8300,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "906"
										},
										{
											"begin": 8282,
											"end": 8300,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "835"
										},
										{
											"begin": 8282,
											"end": 8300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8282,
											"end": 8300,
											"name": "tag",
											"source": 15,
											"value": "906"
										},
										{
											"begin": 8282,
											"end": 8300,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8332,
											"end": 8333,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 8322,
											"end": 8330,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8318,
											"end": 8334,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 8315,
											"end": 8364,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8315,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "907"
										},
										{
											"begin": 8315,
											"end": 8364,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8346,
											"end": 8362,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8346,
											"end": 8362,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8346,
											"end": 8362,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 8346,
											"end": 8362,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8315,
											"end": 8364,
											"name": "tag",
											"source": 15,
											"value": "907"
										},
										{
											"begin": 8315,
											"end": 8364,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8429,
											"end": 8430,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 8425,
											"end": 8441,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 8425,
											"end": 8441,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8425,
											"end": 8441,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 8425,
											"end": 8441,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 8425,
											"end": 8441,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 8385,
											"end": 8400,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8385,
											"end": 8400,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 8202,
											"end": 8451,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "902"
										},
										{
											"begin": 8202,
											"end": 8451,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8202,
											"end": 8451,
											"name": "tag",
											"source": 15,
											"value": "904"
										},
										{
											"begin": 8202,
											"end": 8451,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8082,
											"end": 8457,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 8082,
											"end": 8457,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8082,
											"end": 8457,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 8082,
											"end": 8457,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8082,
											"end": 8457,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8082,
											"end": 8457,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8082,
											"end": 8457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8462,
											"end": 9364,
											"name": "tag",
											"source": 15,
											"value": "837"
										},
										{
											"begin": 8462,
											"end": 9364,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8511,
											"end": 8516,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8541,
											"end": 8549,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8531,
											"end": 8611,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "909"
										},
										{
											"begin": 8531,
											"end": 8611,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8582,
											"end": 8583,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 8596,
											"end": 8601,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "239"
										},
										{
											"begin": 8596,
											"end": 8601,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8531,
											"end": 8611,
											"name": "tag",
											"source": 15,
											"value": "909"
										},
										{
											"begin": 8531,
											"end": 8611,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8630,
											"end": 8634,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8620,
											"end": 8696,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "910"
										},
										{
											"begin": 8620,
											"end": 8696,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8667,
											"end": 8668,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8681,
											"end": 8686,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "239"
										},
										{
											"begin": 8681,
											"end": 8686,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8620,
											"end": 8696,
											"name": "tag",
											"source": 15,
											"value": "910"
										},
										{
											"begin": 8620,
											"end": 8696,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8712,
											"end": 8716,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8730,
											"end": 8731,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 8725,
											"end": 8784,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8725,
											"end": 8784,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 8725,
											"end": 8784,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "912"
										},
										{
											"begin": 8725,
											"end": 8784,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8798,
											"end": 8799,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 8793,
											"end": 8967,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8793,
											"end": 8967,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 8793,
											"end": 8967,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "913"
										},
										{
											"begin": 8793,
											"end": 8967,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8705,
											"end": 8967,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "911"
										},
										{
											"begin": 8705,
											"end": 8967,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8725,
											"end": 8784,
											"name": "tag",
											"source": 15,
											"value": "912"
										},
										{
											"begin": 8725,
											"end": 8784,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8755,
											"end": 8756,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 8746,
											"end": 8756,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8746,
											"end": 8756,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8769,
											"end": 8774,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8769,
											"end": 8774,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "239"
										},
										{
											"begin": 8769,
											"end": 8774,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8793,
											"end": 8967,
											"name": "tag",
											"source": 15,
											"value": "913"
										},
										{
											"begin": 8793,
											"end": 8967,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8830,
											"end": 8833,
											"name": "PUSH",
											"source": 15,
											"value": "FF"
										},
										{
											"begin": 8820,
											"end": 8828,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8817,
											"end": 8834,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 8814,
											"end": 8857,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8814,
											"end": 8857,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "915"
										},
										{
											"begin": 8814,
											"end": 8857,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8837,
											"end": 8855,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "915"
										},
										{
											"begin": 8837,
											"end": 8855,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "835"
										},
										{
											"begin": 8837,
											"end": 8855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8837,
											"end": 8855,
											"name": "tag",
											"source": 15,
											"value": "915"
										},
										{
											"begin": 8837,
											"end": 8855,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8893,
											"end": 8894,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 8879,
											"end": 8895,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8879,
											"end": 8895,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 8952,
											"end": 8957,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "239"
										},
										{
											"begin": 8952,
											"end": 8957,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8705,
											"end": 8967,
											"name": "tag",
											"source": 15,
											"value": "911"
										},
										{
											"begin": 8705,
											"end": 8967,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8705,
											"end": 8967,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9051,
											"end": 9053,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 9041,
											"end": 9049,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 9038,
											"end": 9054,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 9032,
											"end": 9035,
											"name": "PUSH",
											"source": 15,
											"value": "133"
										},
										{
											"begin": 9026,
											"end": 9030,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 9023,
											"end": 9036,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 9019,
											"end": 9055,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 9013,
											"end": 9015,
											"name": "PUSH",
											"source": 15,
											"value": "4E"
										},
										{
											"begin": 9003,
											"end": 9011,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 9000,
											"end": 9016,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 8995,
											"end": 8997,
											"name": "PUSH",
											"source": 15,
											"value": "B"
										},
										{
											"begin": 8989,
											"end": 8993,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8986,
											"end": 8998,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 8982,
											"end": 9017,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 8979,
											"end": 9056,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 8976,
											"end": 9179,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8976,
											"end": 9179,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "916"
										},
										{
											"begin": 8976,
											"end": 9179,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9088,
											"end": 9107,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9088,
											"end": 9107,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9088,
											"end": 9107,
											"name": "EXP",
											"source": 15
										},
										{
											"begin": 9164,
											"end": 9169,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "239"
										},
										{
											"begin": 9164,
											"end": 9169,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8976,
											"end": 9179,
											"name": "tag",
											"source": 15,
											"value": "916"
										},
										{
											"begin": 8976,
											"end": 9179,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9211,
											"end": 9253,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "917"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9236,
											"end": 9244,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 9230,
											"end": 9234,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 9211,
											"end": 9253,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "836"
										},
										{
											"begin": 9211,
											"end": 9253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9211,
											"end": 9253,
											"name": "tag",
											"source": 15,
											"value": "917"
										},
										{
											"begin": 9211,
											"end": 9253,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9289,
											"end": 9295,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 9285,
											"end": 9286,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9281,
											"end": 9287,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 9277,
											"end": 9296,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 9268,
											"end": 9275,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9265,
											"end": 9297,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 9262,
											"end": 9320,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 9262,
											"end": 9320,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "919"
										},
										{
											"begin": 9262,
											"end": 9320,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 9300,
											"end": 9318,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "919"
										},
										{
											"begin": 9300,
											"end": 9318,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "835"
										},
										{
											"begin": 9300,
											"end": 9318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9300,
											"end": 9318,
											"name": "tag",
											"source": 15,
											"value": "919"
										},
										{
											"begin": 9300,
											"end": 9318,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9338,
											"end": 9358,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 9338,
											"end": 9358,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 8462,
											"end": 9364,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8462,
											"end": 9364,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9369,
											"end": 9500,
											"name": "tag",
											"source": 15,
											"value": "269"
										},
										{
											"begin": 9369,
											"end": 9500,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9429,
											"end": 9434,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9458,
											"end": 9494,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "824"
										},
										{
											"begin": 9485,
											"end": 9493,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 9479,
											"end": 9483,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 9458,
											"end": 9494,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "837"
										},
										{
											"begin": 9458,
											"end": 9494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9860,
											"end": 10077,
											"name": "tag",
											"source": 15,
											"value": "278"
										},
										{
											"begin": 9860,
											"end": 10077,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9900,
											"end": 9901,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9926,
											"end": 9927,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9916,
											"end": 10048,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "924"
										},
										{
											"begin": 9916,
											"end": 10048,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 9970,
											"end": 9980,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 9965,
											"end": 9968,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 9961,
											"end": 9981,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 9958,
											"end": 9959,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9951,
											"end": 9982,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10005,
											"end": 10009,
											"name": "PUSH",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 10002,
											"end": 10003,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 9995,
											"end": 10010,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10033,
											"end": 10037,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 10030,
											"end": 10031,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10023,
											"end": 10038,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 9916,
											"end": 10048,
											"name": "tag",
											"source": 15,
											"value": "924"
										},
										{
											"begin": 9916,
											"end": 10048,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10062,
											"end": 10071,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 10062,
											"end": 10071,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9860,
											"end": 10077,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10082,
											"end": 10261,
											"name": "tag",
											"source": 15,
											"value": "838"
										},
										{
											"begin": 10082,
											"end": 10261,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10160,
											"end": 10173,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 10160,
											"end": 10173,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 10213,
											"end": 10235,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10202,
											"end": 10236,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10202,
											"end": 10236,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 10192,
											"end": 10237,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10192,
											"end": 10237,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 10182,
											"end": 10255,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "308"
										},
										{
											"begin": 10182,
											"end": 10255,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10251,
											"end": 10252,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10248,
											"end": 10249,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 10241,
											"end": 10253,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 10266,
											"end": 10837,
											"name": "tag",
											"source": 15,
											"value": "289"
										},
										{
											"begin": 10266,
											"end": 10837,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10369,
											"end": 10375,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10377,
											"end": 10383,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 10385,
											"end": 10391,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10393,
											"end": 10399,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 10401,
											"end": 10407,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10454,
											"end": 10457,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 10442,
											"end": 10451,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 10433,
											"end": 10440,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 10429,
											"end": 10452,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 10425,
											"end": 10458,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 10422,
											"end": 10475,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 10422,
											"end": 10475,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "928"
										},
										{
											"begin": 10422,
											"end": 10475,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10471,
											"end": 10472,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10468,
											"end": 10469,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 10461,
											"end": 10473,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 10422,
											"end": 10475,
											"name": "tag",
											"source": 15,
											"value": "928"
										},
										{
											"begin": 10422,
											"end": 10475,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10494,
											"end": 10533,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "929"
										},
										{
											"begin": 10523,
											"end": 10532,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 10494,
											"end": 10533,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "838"
										},
										{
											"begin": 10494,
											"end": 10533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10494,
											"end": 10533,
											"name": "tag",
											"source": 15,
											"value": "929"
										},
										{
											"begin": 10494,
											"end": 10533,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10573,
											"end": 10575,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 10558,
											"end": 10576,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 10558,
											"end": 10576,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10552,
											"end": 10577,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 10639,
											"end": 10641,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 10624,
											"end": 10642,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 10624,
											"end": 10642,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10618,
											"end": 10643,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 10733,
											"end": 10735,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 10718,
											"end": 10736,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 10718,
											"end": 10736,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10712,
											"end": 10737,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 10484,
											"end": 10533,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 10484,
											"end": 10533,
											"name": "SWAP8",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10552,
											"end": 10577,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10552,
											"end": 10577,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10618,
											"end": 10643,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10712,
											"end": 10737,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10782,
											"end": 10831,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "930"
										},
										{
											"begin": 10826,
											"end": 10829,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 10811,
											"end": 10830,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 10811,
											"end": 10830,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10782,
											"end": 10831,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "838"
										},
										{
											"begin": 10782,
											"end": 10831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10782,
											"end": 10831,
											"name": "tag",
											"source": 15,
											"value": "930"
										},
										{
											"begin": 10782,
											"end": 10831,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10772,
											"end": 10831,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10772,
											"end": 10831,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10266,
											"end": 10837,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 10266,
											"end": 10837,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 10266,
											"end": 10837,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10266,
											"end": 10837,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 10266,
											"end": 10837,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 10266,
											"end": 10837,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10266,
											"end": 10837,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 10266,
											"end": 10837,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10266,
											"end": 10837,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11537,
											"end": 11882,
											"name": "tag",
											"source": 15,
											"value": "356"
										},
										{
											"begin": 11537,
											"end": 11882,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11739,
											"end": 11741,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 11721,
											"end": 11742,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 11721,
											"end": 11742,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11721,
											"end": 11742,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11778,
											"end": 11780,
											"name": "PUSH",
											"source": 15,
											"value": "15"
										},
										{
											"begin": 11758,
											"end": 11776,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11758,
											"end": 11776,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11758,
											"end": 11776,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11751,
											"end": 11781,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1250D3C8185B1C9958591E48199A5B985B1A5E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11812,
											"end": 11814,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 11797,
											"end": 11815,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11797,
											"end": 11815,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11790,
											"end": 11841,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11873,
											"end": 11875,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 11858,
											"end": 11876,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11858,
											"end": 11876,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11537,
											"end": 11882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11887,
											"end": 12217,
											"name": "tag",
											"source": 15,
											"value": "360"
										},
										{
											"begin": 11887,
											"end": 12217,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12089,
											"end": 12091,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 12071,
											"end": 12092,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 12071,
											"end": 12092,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12071,
											"end": 12092,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12128,
											"end": 12129,
											"name": "PUSH",
											"source": 15,
											"value": "7"
										},
										{
											"begin": 12108,
											"end": 12126,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12108,
											"end": 12126,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12108,
											"end": 12126,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12101,
											"end": 12130,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "199C99595E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12161,
											"end": 12163,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 12146,
											"end": 12164,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12146,
											"end": 12164,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12139,
											"end": 12176,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12208,
											"end": 12210,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 12193,
											"end": 12211,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12193,
											"end": 12211,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11887,
											"end": 12217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13274,
											"end": 13399,
											"name": "tag",
											"source": 15,
											"value": "413"
										},
										{
											"begin": 13274,
											"end": 13399,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13339,
											"end": 13348,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 13339,
											"end": 13348,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13339,
											"end": 13348,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13360,
											"end": 13370,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 13360,
											"end": 13370,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13360,
											"end": 13370,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 13357,
											"end": 13393,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 13357,
											"end": 13393,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "239"
										},
										{
											"begin": 13357,
											"end": 13393,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 13373,
											"end": 13391,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "239"
										},
										{
											"begin": 13373,
											"end": 13391,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "835"
										},
										{
											"begin": 13373,
											"end": 13391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14760,
											"end": 14887,
											"name": "tag",
											"source": 15,
											"value": "452"
										},
										{
											"begin": 14760,
											"end": 14887,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14821,
											"end": 14831,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 14816,
											"end": 14819,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 14812,
											"end": 14832,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 14809,
											"end": 14810,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14802,
											"end": 14833,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14852,
											"end": 14856,
											"name": "PUSH",
											"source": 15,
											"value": "32"
										},
										{
											"begin": 14849,
											"end": 14850,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 14842,
											"end": 14857,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14876,
											"end": 14880,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 14873,
											"end": 14874,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14866,
											"end": 14881,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 15727,
											"end": 16004,
											"name": "tag",
											"source": 15,
											"value": "503"
										},
										{
											"begin": 15727,
											"end": 16004,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15794,
											"end": 15800,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15847,
											"end": 15849,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 15835,
											"end": 15844,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15826,
											"end": 15833,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 15822,
											"end": 15845,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 15818,
											"end": 15850,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 15815,
											"end": 15867,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 15815,
											"end": 15867,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "950"
										},
										{
											"begin": 15815,
											"end": 15867,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 15863,
											"end": 15864,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15860,
											"end": 15861,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 15853,
											"end": 15865,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 15815,
											"end": 15867,
											"name": "tag",
											"source": 15,
											"value": "950"
										},
										{
											"begin": 15815,
											"end": 15867,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15895,
											"end": 15904,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15889,
											"end": 15905,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 15948,
											"end": 15953,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 15941,
											"end": 15954,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 15934,
											"end": 15955,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 15927,
											"end": 15932,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15924,
											"end": 15956,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 15914,
											"end": 15974,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "824"
										},
										{
											"begin": 15914,
											"end": 15974,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 15970,
											"end": 15971,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15967,
											"end": 15968,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 15960,
											"end": 15972,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 16362,
											"end": 16603,
											"name": "tag",
											"source": 15,
											"value": "839"
										},
										{
											"begin": 16362,
											"end": 16603,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16447,
											"end": 16448,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 16440,
											"end": 16445,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16437,
											"end": 16449,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 16427,
											"end": 16570,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "954"
										},
										{
											"begin": 16427,
											"end": 16570,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 16492,
											"end": 16502,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 16487,
											"end": 16490,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 16483,
											"end": 16503,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 16480,
											"end": 16481,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16473,
											"end": 16504,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 16527,
											"end": 16531,
											"name": "PUSH",
											"source": 15,
											"value": "21"
										},
										{
											"begin": 16524,
											"end": 16525,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 16517,
											"end": 16532,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 16555,
											"end": 16559,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 16552,
											"end": 16553,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16545,
											"end": 16560,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 16427,
											"end": 16570,
											"name": "tag",
											"source": 15,
											"value": "954"
										},
										{
											"begin": 16427,
											"end": 16570,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16579,
											"end": 16597,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 16579,
											"end": 16597,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 16362,
											"end": 16603,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16608,
											"end": 16895,
											"name": "tag",
											"source": 15,
											"value": "508"
										},
										{
											"begin": 16608,
											"end": 16895,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16798,
											"end": 16823,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16798,
											"end": 16823,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16798,
											"end": 16823,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 16786,
											"end": 16788,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 16771,
											"end": 16789,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16771,
											"end": 16789,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16832,
											"end": 16889,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "824"
										},
										{
											"begin": 16885,
											"end": 16887,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 16870,
											"end": 16888,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 16870,
											"end": 16888,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16862,
											"end": 16868,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 16832,
											"end": 16889,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "839"
										},
										{
											"begin": 16832,
											"end": 16889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16900,
											"end": 17027,
											"name": "tag",
											"source": 15,
											"value": "511"
										},
										{
											"begin": 16900,
											"end": 17027,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16961,
											"end": 16971,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 16956,
											"end": 16959,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 16952,
											"end": 16972,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 16949,
											"end": 16950,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16942,
											"end": 16973,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 16992,
											"end": 16996,
											"name": "PUSH",
											"source": 15,
											"value": "31"
										},
										{
											"begin": 16989,
											"end": 16990,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 16982,
											"end": 16997,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 17016,
											"end": 17020,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 17013,
											"end": 17014,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17006,
											"end": 17021,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 17032,
											"end": 17168,
											"name": "tag",
											"source": 15,
											"value": "515"
										},
										{
											"begin": 17032,
											"end": 17168,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17071,
											"end": 17074,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17099,
											"end": 17104,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 17089,
											"end": 17128,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "960"
										},
										{
											"begin": 17089,
											"end": 17128,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 17108,
											"end": 17126,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "960"
										},
										{
											"begin": 17108,
											"end": 17126,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "835"
										},
										{
											"begin": 17108,
											"end": 17126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17108,
											"end": 17126,
											"name": "tag",
											"source": 15,
											"value": "960"
										},
										{
											"begin": 17108,
											"end": 17126,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 17144,
											"end": 17162,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17144,
											"end": 17162,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 17032,
											"end": 17168,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17527,
											"end": 17757,
											"name": "tag",
											"source": 15,
											"value": "539"
										},
										{
											"begin": 17527,
											"end": 17757,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17597,
											"end": 17603,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17650,
											"end": 17652,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 17638,
											"end": 17647,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17629,
											"end": 17636,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 17625,
											"end": 17648,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 17621,
											"end": 17653,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 17618,
											"end": 17670,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 17618,
											"end": 17670,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "963"
										},
										{
											"begin": 17618,
											"end": 17670,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 17666,
											"end": 17667,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17663,
											"end": 17664,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 17656,
											"end": 17668,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 17618,
											"end": 17670,
											"name": "tag",
											"source": 15,
											"value": "963"
										},
										{
											"begin": 17618,
											"end": 17670,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17711,
											"end": 17727,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 17711,
											"end": 17727,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 17527,
											"end": 17757,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17527,
											"end": 17757,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21621,
											"end": 22051,
											"name": "tag",
											"source": 15,
											"value": "660"
										},
										{
											"begin": 21621,
											"end": 22051,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21868,
											"end": 21893,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 21868,
											"end": 21893,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 21868,
											"end": 21893,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 21924,
											"end": 21926,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 21909,
											"end": 21927,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 21909,
											"end": 21927,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 21902,
											"end": 21936,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 21902,
											"end": 21936,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 21902,
											"end": 21936,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 21967,
											"end": 21969,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 21952,
											"end": 21970,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 21952,
											"end": 21970,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 21945,
											"end": 21979,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 21945,
											"end": 21979,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 21945,
											"end": 21979,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 21855,
											"end": 21858,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 21840,
											"end": 21859,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 21840,
											"end": 21859,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 21988,
											"end": 22045,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "814"
										},
										{
											"begin": 22041,
											"end": 22043,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 22026,
											"end": 22044,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 22026,
											"end": 22044,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 22018,
											"end": 22024,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 21988,
											"end": 22045,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "839"
										},
										{
											"begin": 21988,
											"end": 22045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23501,
											"end": 23788,
											"name": "tag",
											"source": 15,
											"value": "810"
										},
										{
											"begin": 23501,
											"end": 23788,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23630,
											"end": 23633,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 23668,
											"end": 23674,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 23662,
											"end": 23675,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 23684,
											"end": 23750,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "984"
										},
										{
											"begin": 23743,
											"end": 23749,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 23738,
											"end": 23741,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 23731,
											"end": 23735,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 23723,
											"end": 23729,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 23719,
											"end": 23736,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 23684,
											"end": 23750,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "834"
										},
										{
											"begin": 23684,
											"end": 23750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23684,
											"end": 23750,
											"name": "tag",
											"source": 15,
											"value": "984"
										},
										{
											"begin": 23684,
											"end": 23750,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23766,
											"end": 23782,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 23766,
											"end": 23782,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 23766,
											"end": 23782,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 23766,
											"end": 23782,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 23766,
											"end": 23782,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 23501,
											"end": 23788,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 23501,
											"end": 23788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										}
									],
									".data": {
										"75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D": "360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc",
										"C8669CF8EAF883002B9F48E28846A8D408C9B58EA6613BACE374265E43C9BC43": "9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00"
									}
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"ICO/ICOProxy.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"_getPriceFeed(uint8)": "115afc3a",
							"airdropTokens()": "91152c5c",
							"buyTokens(uint8,uint256)": "940c333e",
							"calculatePaymentAmount(uint8,uint256)": "117d260f",
							"calculateTokenAmount(uint8,uint256)": "05834e67",
							"contributionsInUSD(address)": "c81ffdea",
							"createSale(uint256,uint256,uint256)": "6c1909ed",
							"finalizeICO()": "23cc75a8",
							"freeze()": "62a5af3b",
							"getCurrentSaleId()": "212ea247",
							"getHardCapReached()": "91d8730a",
							"getInvestorCount()": "960524e3",
							"getSaleStartEndTime(uint256)": "c211e1f9",
							"getSoftCapReached()": "06e4d36f",
							"hardCapInUSD()": "c1560a14",
							"initialize(address,address,address,uint256,uint256,address,address,address)": "fd663da2",
							"initiateRefund()": "7fb12001",
							"investors(uint256)": "3feb5f2b",
							"isFreezed()": "b9469e1a",
							"isICOFinalized()": "d1f3b23e",
							"isTokensAirdropped()": "4dee1dc3",
							"owner()": "8da5cb5b",
							"precision_div_10(uint256)": "b3fdafb9",
							"precision_div_18(uint256)": "9fa8adb8",
							"precision_mul_10(uint256)": "a1c4b5a2",
							"precision_mul_18(uint256)": "2593198d",
							"proxiableUUID()": "52d1902d",
							"renounceOwnership()": "715018a6",
							"saleCount()": "a1e89aec",
							"sales(uint256)": "b5f522f7",
							"softCapInUSD()": "2151206e",
							"token()": "fc0c546a",
							"tokensBoughtByInvestor(address)": "e8e87389",
							"totalFundsRaisedUSD()": "721bc38b",
							"totalTokensSold()": "63b20117",
							"transferOwnership(address)": "f2fde38b",
							"unFreeze()": "7cf12b90",
							"upgradeToAndCall(address,bytes)": "4f1ef286",
							"usdc()": "3e413bee",
							"usdt()": "2f48ab7d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"totalTokensSold\",\"type\":\"uint256\"}],\"name\":\"ICOFinalized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"saleId\",\"type\":\"uint256\"}],\"name\":\"ImmediateFinalization\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"saleId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenPriceUSD\",\"type\":\"uint256\"}],\"name\":\"NewSaleCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum ICO.PaymentMethod\",\"name\":\"paymentMethod\",\"type\":\"uint8\"}],\"name\":\"RefundInitiated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"airdroppedAmount\",\"type\":\"uint256\"}],\"name\":\"TokenAirdropped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"saleId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenPurchaseAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenPriceUSD\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountPaid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum ICO.PaymentMethod\",\"name\":\"paymentMethod\",\"type\":\"uint8\"}],\"name\":\"TokensPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum ICO.PaymentMethod\",\"name\":\"paymentMethod\",\"type\":\"uint8\"}],\"name\":\"_getPriceFeed\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"airdropTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum ICO.PaymentMethod\",\"name\":\"paymentMethod\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"paymentAmount\",\"type\":\"uint256\"}],\"name\":\"buyTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum ICO.PaymentMethod\",\"name\":\"paymentMethod\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"calculatePaymentAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum ICO.PaymentMethod\",\"name\":\"paymentMethod\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"paymentAmount\",\"type\":\"uint256\"}],\"name\":\"calculateTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"contributionsInUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tokenPriceUSD\",\"type\":\"uint256\"}],\"name\":\"createSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finalizeICO\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"freeze\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentSaleId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHardCapReached\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getInvestorCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"investorCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getSaleStartEndTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSoftCapReached\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hardCapInUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdt\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdc\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_softCapInUSD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_hardCapInUSD\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_priceFeedBNB\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_priceFeedUSDT\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_priceFeedUSDC\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initiateRefund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"investors\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isFreezed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isICOFinalized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isTokensAirdropped\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"precision_div_10\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"precision_div_18\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"precision_mul_10\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"precision_mul_18\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"sales\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenPriceUSD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokensSold\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isFinalized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"softCapInUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokensBoughtByInvestor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalFundsRaisedUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalTokensSold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unFreeze\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdc\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ICO/ICOProxy.sol\":\"ICO\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xf72d3b11f41fccbbdcacd121f994daab8267ccfceb1fb4f247e4ba274c169d27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e46ee40ddc9e2009176ce5d76aa2c046fd68f2ed52d02d77db191365b7c5b2e\",\"dweb:/ipfs/QmZnxgPmCCHosdvbh4J65uTaFYeGtZGzQ1sXRdeh1y68Zr\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x361126a17677994081cd9cb69c3f50cffff6e920d25cb7e428acdb1ae41d1866\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19ae787a7dd001269cd60a394b1a5261b78925a0fc3a6f927beb2986a9aa56cf\",\"dweb:/ipfs/QmYLfXiuKmcRgTDBEDXMMjXU8t6JxsspUmjxYzqWS55oEv\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x911c3346ee26afe188f3b9dc267ef62a7ccf940aba1afa963e3922f0ca3d8a06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04539f4419e44a831807d7203375d2bc6a733da256efd02e51290f5d5015218c\",\"dweb:/ipfs/QmPZ97gsAAgaMRPiE2WJfkzRsudQnW5tPAvMgGj1jcTJtR\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"ICO/ICOProxy.sol\":{\"keccak256\":\"0x6e5b39e4492f76cd624fe90ab40ee52527dd789d8c9271aad0f5b095359904c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11ee13a0499d4eb09cdfd4eea9b8951b490cac28114790c6b6a0bdb7ce1824e0\",\"dweb:/ipfs/QmdBL86V9H2xNkm5qf8afgvTeamQ8qwCCfiuJGZ4yfojEf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1685,
								"contract": "ICO/ICOProxy.sol:ICO",
								"label": "priceFeedBNB",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(AggregatorV3Interface)45"
							},
							{
								"astId": 1688,
								"contract": "ICO/ICOProxy.sol:ICO",
								"label": "priceFeedUSDT",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(AggregatorV3Interface)45"
							},
							{
								"astId": 1691,
								"contract": "ICO/ICOProxy.sol:ICO",
								"label": "priceFeedUSDC",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(AggregatorV3Interface)45"
							},
							{
								"astId": 1709,
								"contract": "ICO/ICOProxy.sol:ICO",
								"label": "token",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(IERC20)1264"
							},
							{
								"astId": 1711,
								"contract": "ICO/ICOProxy.sol:ICO",
								"label": "softCapInUSD",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 1713,
								"contract": "ICO/ICOProxy.sol:ICO",
								"label": "hardCapInUSD",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 1715,
								"contract": "ICO/ICOProxy.sol:ICO",
								"label": "saleCount",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1717,
								"contract": "ICO/ICOProxy.sol:ICO",
								"label": "totalFundsRaisedUSD",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1719,
								"contract": "ICO/ICOProxy.sol:ICO",
								"label": "totalTokensSold",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1727,
								"contract": "ICO/ICOProxy.sol:ICO",
								"label": "isICOFinalized",
								"offset": 0,
								"slot": "9",
								"type": "t_bool"
							},
							{
								"astId": 1729,
								"contract": "ICO/ICOProxy.sol:ICO",
								"label": "isTokensAirdropped",
								"offset": 1,
								"slot": "9",
								"type": "t_bool"
							},
							{
								"astId": 1731,
								"contract": "ICO/ICOProxy.sol:ICO",
								"label": "isFreezed",
								"offset": 2,
								"slot": "9",
								"type": "t_bool"
							},
							{
								"astId": 1734,
								"contract": "ICO/ICOProxy.sol:ICO",
								"label": "investors",
								"offset": 0,
								"slot": "10",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 1736,
								"contract": "ICO/ICOProxy.sol:ICO",
								"label": "usdt",
								"offset": 0,
								"slot": "11",
								"type": "t_address"
							},
							{
								"astId": 1738,
								"contract": "ICO/ICOProxy.sol:ICO",
								"label": "usdc",
								"offset": 0,
								"slot": "12",
								"type": "t_address"
							},
							{
								"astId": 1743,
								"contract": "ICO/ICOProxy.sol:ICO",
								"label": "sales",
								"offset": 0,
								"slot": "13",
								"type": "t_mapping(t_uint256,t_struct(Sale)1702_storage)"
							},
							{
								"astId": 1747,
								"contract": "ICO/ICOProxy.sol:ICO",
								"label": "contributionsInUSD",
								"offset": 0,
								"slot": "14",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1751,
								"contract": "ICO/ICOProxy.sol:ICO",
								"label": "tokensBoughtByInvestor",
								"offset": 0,
								"slot": "15",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1756,
								"contract": "ICO/ICOProxy.sol:ICO",
								"label": "paymentMethodForInvestor",
								"offset": 0,
								"slot": "16",
								"type": "t_mapping(t_address,t_enum(PaymentMethod)1706)"
							},
							{
								"astId": 1763,
								"contract": "ICO/ICOProxy.sol:ICO",
								"label": "investorPayments",
								"offset": 0,
								"slot": "17",
								"type": "t_mapping(t_address,t_mapping(t_enum(PaymentMethod)1706,t_uint256))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(AggregatorV3Interface)45": {
								"encoding": "inplace",
								"label": "contract AggregatorV3Interface",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)1264": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_enum(PaymentMethod)1706": {
								"encoding": "inplace",
								"label": "enum ICO.PaymentMethod",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_enum(PaymentMethod)1706)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => enum ICO.PaymentMethod)",
								"numberOfBytes": "32",
								"value": "t_enum(PaymentMethod)1706"
							},
							"t_mapping(t_address,t_mapping(t_enum(PaymentMethod)1706,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(enum ICO.PaymentMethod => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_enum(PaymentMethod)1706,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_enum(PaymentMethod)1706,t_uint256)": {
								"encoding": "mapping",
								"key": "t_enum(PaymentMethod)1706",
								"label": "mapping(enum ICO.PaymentMethod => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_struct(Sale)1702_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct ICO.Sale)",
								"numberOfBytes": "32",
								"value": "t_struct(Sale)1702_storage"
							},
							"t_struct(Sale)1702_storage": {
								"encoding": "inplace",
								"label": "struct ICO.Sale",
								"members": [
									{
										"astId": 1693,
										"contract": "ICO/ICOProxy.sol:ICO",
										"label": "startTime",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1695,
										"contract": "ICO/ICOProxy.sol:ICO",
										"label": "endTime",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1697,
										"contract": "ICO/ICOProxy.sol:ICO",
										"label": "tokenPriceUSD",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1699,
										"contract": "ICO/ICOProxy.sol:ICO",
										"label": "tokensSold",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1701,
										"contract": "ICO/ICOProxy.sol:ICO",
										"label": "isFinalized",
										"offset": 0,
										"slot": "4",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "160"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							45
						]
					},
					"id": 46,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AggregatorV3Interface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 45,
							"linearizedBaseContracts": [
								45
							],
							"name": "AggregatorV3Interface",
							"nameLocation": "67:21:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "313ce567",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "102:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "110:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "136:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "136:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "135:7:0"
									},
									"scope": 45,
									"src": "93:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7284e416",
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "description",
									"nameLocation": "156:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "167:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "193:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 8,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "193:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "192:15:0"
									},
									"scope": 45,
									"src": "147:61:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "54fd4d50",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nameLocation": "221:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "228:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "254:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "254:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "253:9:0"
									},
									"scope": 45,
									"src": "212:51:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9a6fc8f5",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoundData",
									"nameLocation": "276:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "301:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "294:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 17,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "294:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "288:25:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "344:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "337:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 20,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "337:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "360:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "353:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 22,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "353:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "376:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "368:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "368:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "395:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "387:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "387:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "413:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "406:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 28,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "406:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "336:93:0"
									},
									"scope": 45,
									"src": "267:163:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "feaf968c",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestRoundData",
									"nameLocation": "443:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "458:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "503:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "496:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 33,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "496:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "519:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "512:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 35,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "512:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "535:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "527:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "527:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "554:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "546:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "546:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "572:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "565:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 41,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "565:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "495:93:0"
									},
									"scope": 45,
									"src": "434:155:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 46,
							"src": "57:534:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:560:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							722
						],
						"Initializable": [
							494
						],
						"OwnableUpgradeable": [
							240
						]
					},
					"id": 241,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 47,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 49,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 241,
							"sourceUnit": 723,
							"src": "128:67:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 48,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 722,
										"src": "136:18:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 51,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 241,
							"sourceUnit": 495,
							"src": "196:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 50,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 494,
										"src": "204:13:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 53,
										"name": "Initializable",
										"nameLocations": [
											"789:13:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 494,
										"src": "789:13:1"
									},
									"id": 54,
									"nodeType": "InheritanceSpecifier",
									"src": "789:13:1"
								},
								{
									"baseName": {
										"id": 55,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"804:18:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 722,
										"src": "804:18:1"
									},
									"id": 56,
									"nodeType": "InheritanceSpecifier",
									"src": "804:18:1"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 52,
								"nodeType": "StructuredDocumentation",
								"src": "261:487:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 240,
							"linearizedBaseContracts": [
								240,
								722,
								494
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "767:18:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "OwnableUpgradeable.OwnableStorage",
									"documentation": {
										"id": 57,
										"nodeType": "StructuredDocumentation",
										"src": "829:65:1",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.Ownable"
									},
									"id": 60,
									"members": [
										{
											"constant": false,
											"id": 59,
											"mutability": "mutable",
											"name": "_owner",
											"nameLocation": "939:6:1",
											"nodeType": "VariableDeclaration",
											"scope": 60,
											"src": "931:14:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 58,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "931:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "OwnableStorage",
									"nameLocation": "906:14:1",
									"nodeType": "StructDefinition",
									"scope": 240,
									"src": "899:53:1",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 63,
									"mutability": "constant",
									"name": "OwnableStorageLocation",
									"nameLocation": "1094:22:1",
									"nodeType": "VariableDeclaration",
									"scope": 240,
									"src": "1069:116:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 61,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1069:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030",
										"id": 62,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1119:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1",
											"typeString": "int_const 6517...(69 digits omitted)...7328"
										},
										"value": "0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 70,
										"nodeType": "Block",
										"src": "1270:81:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1289:56:1",
													"nodeType": "YulBlock",
													"src": "1289:56:1",
													"statements": [
														{
															"nativeSrc": "1303:32:1",
															"nodeType": "YulAssignment",
															"src": "1303:32:1",
															"value": {
																"name": "OwnableStorageLocation",
																"nativeSrc": "1313:22:1",
																"nodeType": "YulIdentifier",
																"src": "1313:22:1"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "1303:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1303:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 67,
														"isOffset": false,
														"isSlot": true,
														"src": "1303:6:1",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 63,
														"isOffset": false,
														"isSlot": false,
														"src": "1313:22:1",
														"valueSize": 1
													}
												],
												"id": 69,
												"nodeType": "InlineAssembly",
												"src": "1280:65:1"
											}
										]
									},
									"id": 71,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getOwnableStorage",
									"nameLocation": "1201:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1219:2:1"
									},
									"returnParameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "1267:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "1244:24:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_OwnableStorage_$60_storage_ptr",
													"typeString": "struct OwnableUpgradeable.OwnableStorage"
												},
												"typeName": {
													"id": 66,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 65,
														"name": "OwnableStorage",
														"nameLocations": [
															"1244:14:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 60,
														"src": "1244:14:1"
													},
													"referencedDeclaration": 60,
													"src": "1244:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$60_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:26:1"
									},
									"scope": 240,
									"src": "1192:159:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "1357:85:1",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 76,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "1453:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1488:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "1480:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1479:17:1"
									},
									"src": "1447:50:1"
								},
								{
									"documentation": {
										"id": 77,
										"nodeType": "StructuredDocumentation",
										"src": "1503:82:1",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 81,
									"name": "OwnableInvalidOwner",
									"nameLocation": "1596:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1624:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "1616:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 78,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1616:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1615:15:1"
									},
									"src": "1590:41:1"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 87,
									"name": "OwnershipTransferred",
									"nameLocation": "1643:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1680:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "1664:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1711:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "1695:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1695:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:57:1"
									},
									"src": "1637:84:1"
								},
								{
									"body": {
										"id": 99,
										"nodeType": "Block",
										"src": "1919:55:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 96,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "1954:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 95,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 127,
														"src": "1929:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 97,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1929:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 98,
												"nodeType": "ExpressionStatement",
												"src": "1929:38:1"
											}
										]
									},
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "1727:115:1",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 100,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 93,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 92,
												"name": "onlyInitializing",
												"nameLocations": [
													"1902:16:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 403,
												"src": "1902:16:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1902:16:1"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "1856:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1879:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "1871:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 89,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1871:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1870:22:1"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1919:0:1"
									},
									"scope": 240,
									"src": "1847:127:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 126,
										"nodeType": "Block",
										"src": "2062:153:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 107,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 102,
														"src": "2076:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 110,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 109,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2092:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 108,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2092:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 111,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2092:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2076:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 121,
												"nodeType": "IfStatement",
												"src": "2072:95:1",
												"trueBody": {
													"id": 120,
													"nodeType": "Block",
													"src": "2104:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 116,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2153:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 115,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2145:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 114,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2145:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 117,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2145:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 113,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 81,
																	"src": "2125:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 118,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2125:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 119,
															"nodeType": "RevertStatement",
															"src": "2118:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 123,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 102,
															"src": "2195:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 122,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 239,
														"src": "2176:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2176:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 125,
												"nodeType": "ExpressionStatement",
												"src": "2176:32:1"
											}
										]
									},
									"id": 127,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 105,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 104,
												"name": "onlyInitializing",
												"nameLocations": [
													"2045:16:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 403,
												"src": "2045:16:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2045:16:1"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1989:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "2022:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "2014:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2014:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2013:22:1"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2062:0:1"
									},
									"scope": 240,
									"src": "1980:235:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 134,
										"nodeType": "Block",
										"src": "2324:41:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 130,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 168,
														"src": "2334:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2334:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 132,
												"nodeType": "ExpressionStatement",
												"src": "2334:13:1"
											},
											{
												"id": 133,
												"nodeType": "PlaceholderStatement",
												"src": "2357:1:1"
											}
										]
									},
									"documentation": {
										"id": 128,
										"nodeType": "StructuredDocumentation",
										"src": "2221:77:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 135,
									"name": "onlyOwner",
									"nameLocation": "2312:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2321:2:1"
									},
									"src": "2303:62:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 150,
										"nodeType": "Block",
										"src": "2496:89:1",
										"statements": [
											{
												"assignments": [
													143
												],
												"declarations": [
													{
														"constant": false,
														"id": 143,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2529:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 150,
														"src": "2506:24:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$60_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 142,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 141,
																"name": "OwnableStorage",
																"nameLocations": [
																	"2506:14:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 60,
																"src": "2506:14:1"
															},
															"referencedDeclaration": 60,
															"src": "2506:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$60_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 146,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 144,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 71,
														"src": "2533:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$60_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2533:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$60_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:47:1"
											},
											{
												"expression": {
													"expression": {
														"id": 147,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 143,
														"src": "2570:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$60_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 148,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2572:6:1",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 59,
													"src": "2570:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 140,
												"id": 149,
												"nodeType": "Return",
												"src": "2563:15:1"
											}
										]
									},
									"documentation": {
										"id": 136,
										"nodeType": "StructuredDocumentation",
										"src": "2371:65:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 151,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2450:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2455:2:1"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "2487:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2486:9:1"
									},
									"scope": 240,
									"src": "2441:144:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 167,
										"nodeType": "Block",
										"src": "2703:117:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 155,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "2717:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 156,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2717:7:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 157,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 704,
															"src": "2728:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 158,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2728:12:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2717:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 166,
												"nodeType": "IfStatement",
												"src": "2713:101:1",
												"trueBody": {
													"id": 165,
													"nodeType": "Block",
													"src": "2742:72:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 161,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 704,
																			"src": "2790:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2790:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 160,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 76,
																	"src": "2763:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 163,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2763:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 164,
															"nodeType": "RevertStatement",
															"src": "2756:47:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 152,
										"nodeType": "StructuredDocumentation",
										"src": "2591:62:1",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "2667:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2678:2:1"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2703:0:1"
									},
									"scope": 240,
									"src": "2658:162:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "3209:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 177,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3246:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 176,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3238:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 175,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3238:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 178,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3238:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 174,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 239,
														"src": "3219:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3219:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 180,
												"nodeType": "ExpressionStatement",
												"src": "3219:30:1"
											}
										]
									},
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "2826:324:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 182,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 172,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 171,
												"name": "onlyOwner",
												"nameLocations": [
													"3199:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 135,
												"src": "3199:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "3199:9:1"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "3164:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3181:2:1"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3209:0:1"
									},
									"scope": 240,
									"src": "3155:101:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 209,
										"nodeType": "Block",
										"src": "3475:145:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 190,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 185,
														"src": "3489:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 193,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3509:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 192,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3501:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 191,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3501:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 194,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3501:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3489:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 204,
												"nodeType": "IfStatement",
												"src": "3485:91:1",
												"trueBody": {
													"id": 203,
													"nodeType": "Block",
													"src": "3513:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 199,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3562:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 198,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3554:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 197,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3554:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 200,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3554:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 196,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 81,
																	"src": "3534:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 201,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 202,
															"nodeType": "RevertStatement",
															"src": "3527:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 206,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "3604:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 205,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 239,
														"src": "3585:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3585:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 208,
												"nodeType": "ExpressionStatement",
												"src": "3585:28:1"
											}
										]
									},
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "3262:138:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 210,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 188,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 187,
												"name": "onlyOwner",
												"nameLocations": [
													"3465:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 135,
												"src": "3465:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "3465:9:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "3414:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3440:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "3432:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3432:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3431:18:1"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3475:0:1"
									},
									"scope": 240,
									"src": "3405:215:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "3837:185:1",
										"statements": [
											{
												"assignments": [
													218
												],
												"declarations": [
													{
														"constant": false,
														"id": 218,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3870:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 238,
														"src": "3847:24:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$60_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 217,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 216,
																"name": "OwnableStorage",
																"nameLocations": [
																	"3847:14:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 60,
																"src": "3847:14:1"
															},
															"referencedDeclaration": 60,
															"src": "3847:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$60_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 221,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 219,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 71,
														"src": "3874:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$60_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3874:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$60_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3847:47:1"
											},
											{
												"assignments": [
													223
												],
												"declarations": [
													{
														"constant": false,
														"id": 223,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3912:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 238,
														"src": "3904:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 222,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3904:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 226,
												"initialValue": {
													"expression": {
														"id": 224,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 218,
														"src": "3923:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$60_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 225,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3925:6:1",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 59,
													"src": "3923:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3904:27:1"
											},
											{
												"expression": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 227,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "3941:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$60_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
															}
														},
														"id": 229,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3943:6:1",
														"memberName": "_owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 59,
														"src": "3941:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 230,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 213,
														"src": "3952:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3941:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 232,
												"nodeType": "ExpressionStatement",
												"src": "3941:19:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 234,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 223,
															"src": "3996:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 235,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 213,
															"src": "4006:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 233,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "3975:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3975:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 237,
												"nodeType": "EmitStatement",
												"src": "3970:45:1"
											}
										]
									},
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "3626:143:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3783:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3810:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "3802:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3802:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3801:18:1"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3837:0:1"
									},
									"scope": 240,
									"src": "3774:248:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 241,
							"src": "749:3275:1",
							"usedErrors": [
								76,
								81,
								257,
								260
							],
							"usedEvents": [
								87,
								265
							]
						}
					],
					"src": "102:3923:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							494
						]
					},
					"id": 495,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 242,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 243,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:2",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 494,
							"linearizedBaseContracts": [
								494
							],
							"name": "Initializable",
							"nameLocation": "2367:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 244,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:2",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 251,
									"members": [
										{
											"constant": false,
											"id": 247,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:2",
											"nodeType": "VariableDeclaration",
											"scope": 251,
											"src": "2813:19:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 246,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 250,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:2",
											"nodeType": "VariableDeclaration",
											"scope": 251,
											"src": "2950:18:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 249,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:2",
									"nodeType": "StructDefinition",
									"scope": 494,
									"src": "2685:290:2",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 254,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:2",
									"nodeType": "VariableDeclaration",
									"scope": 494,
									"src": "3098:115:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 252,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 253,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:2",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 257,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:2"
									},
									"src": "3285:30:2"
								},
								{
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:2",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 260,
									"name": "NotInitializing",
									"nameLocation": "3389:15:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:2"
									},
									"src": "3383:24:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:2",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 265,
									"name": "Initialized",
									"nameLocation": "3514:11:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "3526:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 262,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:2"
									},
									"src": "3508:34:2"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "4092:1081:2",
										"statements": [
											{
												"assignments": [
													270
												],
												"declarations": [
													{
														"constant": false,
														"id": 270,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 347,
														"src": "4158:30:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 269,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 268,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 251,
																"src": "4158:20:2"
															},
															"referencedDeclaration": 251,
															"src": "4158:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 273,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 271,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 493,
														"src": "4191:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$251_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:2"
											},
											{
												"assignments": [
													275
												],
												"declarations": [
													{
														"constant": false,
														"id": 275,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:2",
														"nodeType": "VariableDeclaration",
														"scope": 347,
														"src": "4279:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 274,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 279,
												"initialValue": {
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:2",
													"subExpression": {
														"expression": {
															"id": 276,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 270,
															"src": "4302:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 277,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:2",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 250,
														"src": "4302:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:2"
											},
											{
												"assignments": [
													281
												],
												"declarations": [
													{
														"constant": false,
														"id": 281,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 347,
														"src": "4327:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 280,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 284,
												"initialValue": {
													"expression": {
														"id": 282,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 270,
														"src": "4348:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 283,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:2",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 247,
													"src": "4348:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:2"
											},
											{
												"assignments": [
													286
												],
												"declarations": [
													{
														"constant": false,
														"id": 286,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4711:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 347,
														"src": "4706:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 285,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4706:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 289,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 287,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4726:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 288,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4741:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4726:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 290,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 275,
														"src": "4746:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4726:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4706:54:2"
											},
											{
												"assignments": [
													294
												],
												"declarations": [
													{
														"constant": false,
														"id": 294,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4775:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 347,
														"src": "4770:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 293,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4770:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 307,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 297,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 295,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4790:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4805:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4790:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 305,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 300,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4818:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$494",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$494",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4810:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 298,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4810:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 301,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4810:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4824:4:2",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4810:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 303,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4829:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4810:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 304,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4839:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4810:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4790:50:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4770:70:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 309,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4855:13:2",
														"subExpression": {
															"id": 308,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 286,
															"src": "4856:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 311,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4872:13:2",
														"subExpression": {
															"id": 310,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 294,
															"src": "4873:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4855:30:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 317,
												"nodeType": "IfStatement",
												"src": "4851:91:2",
												"trueBody": {
													"id": 316,
													"nodeType": "Block",
													"src": "4887:55:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 313,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 257,
																	"src": "4908:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 314,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4908:23:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 315,
															"nodeType": "RevertStatement",
															"src": "4901:30:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 318,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 270,
															"src": "4951:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 320,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4953:12:2",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 247,
														"src": "4951:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 321,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4968:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4951:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "4951:18:2"
											},
											{
												"condition": {
													"id": 324,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 275,
													"src": "4983:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 332,
												"nodeType": "IfStatement",
												"src": "4979:67:2",
												"trueBody": {
													"id": 331,
													"nodeType": "Block",
													"src": "4999:47:2",
													"statements": [
														{
															"expression": {
																"id": 329,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 325,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 270,
																		"src": "5013:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 327,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5015:13:2",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 250,
																	"src": "5013:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 328,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5031:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5013:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 330,
															"nodeType": "ExpressionStatement",
															"src": "5013:22:2"
														}
													]
												}
											},
											{
												"id": 333,
												"nodeType": "PlaceholderStatement",
												"src": "5055:1:2"
											},
											{
												"condition": {
													"id": 334,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 275,
													"src": "5070:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 346,
												"nodeType": "IfStatement",
												"src": "5066:101:2",
												"trueBody": {
													"id": 345,
													"nodeType": "Block",
													"src": "5086:81:2",
													"statements": [
														{
															"expression": {
																"id": 339,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 335,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 270,
																		"src": "5100:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 337,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5102:13:2",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 250,
																	"src": "5100:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 338,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5118:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5100:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 340,
															"nodeType": "ExpressionStatement",
															"src": "5100:23:2"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 342,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5154:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 341,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 265,
																	"src": "5142:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 343,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5142:14:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 344,
															"nodeType": "EmitStatement",
															"src": "5137:19:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 266,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:2",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 348,
									"name": "initializer",
									"nameLocation": "4078:11:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:2"
									},
									"src": "4069:1104:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 394,
										"nodeType": "Block",
										"src": "6291:392:2",
										"statements": [
											{
												"assignments": [
													355
												],
												"declarations": [
													{
														"constant": false,
														"id": 355,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6386:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 394,
														"src": "6357:30:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 354,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 353,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6357:20:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 251,
																"src": "6357:20:2"
															},
															"referencedDeclaration": 251,
															"src": "6357:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 358,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 356,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 493,
														"src": "6390:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$251_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6357:59:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 359,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "6431:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 360,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6433:13:2",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 250,
														"src": "6431:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 364,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 361,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 355,
																"src": "6450:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 362,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6452:12:2",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 247,
															"src": "6450:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 363,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "6468:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6450:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6431:44:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 370,
												"nodeType": "IfStatement",
												"src": "6427:105:2",
												"trueBody": {
													"id": 369,
													"nodeType": "Block",
													"src": "6477:55:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 366,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 257,
																	"src": "6498:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 367,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6498:23:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 368,
															"nodeType": "RevertStatement",
															"src": "6491:30:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 371,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "6541:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 373,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6543:12:2",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 247,
														"src": "6541:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 374,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "6558:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6541:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 376,
												"nodeType": "ExpressionStatement",
												"src": "6541:24:2"
											},
											{
												"expression": {
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 377,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "6575:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 379,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6577:13:2",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 250,
														"src": "6575:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 380,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6593:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6575:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 382,
												"nodeType": "ExpressionStatement",
												"src": "6575:22:2"
											},
											{
												"id": 383,
												"nodeType": "PlaceholderStatement",
												"src": "6607:1:2"
											},
											{
												"expression": {
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 384,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "6618:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 386,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6620:13:2",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 250,
														"src": "6618:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 387,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6636:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6618:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 389,
												"nodeType": "ExpressionStatement",
												"src": "6618:23:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 391,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "6668:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 390,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 265,
														"src": "6656:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6656:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 393,
												"nodeType": "EmitStatement",
												"src": "6651:25:2"
											}
										]
									},
									"documentation": {
										"id": 349,
										"nodeType": "StructuredDocumentation",
										"src": "5179:1068:2",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 395,
									"name": "reinitializer",
									"nameLocation": "6261:13:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6282:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "6275:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 350,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6275:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6274:16:2"
									},
									"src": "6252:431:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "6921:48:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 398,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 416,
														"src": "6931:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6931:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 400,
												"nodeType": "ExpressionStatement",
												"src": "6931:20:2"
											},
											{
												"id": 401,
												"nodeType": "PlaceholderStatement",
												"src": "6961:1:2"
											}
										]
									},
									"documentation": {
										"id": 396,
										"nodeType": "StructuredDocumentation",
										"src": "6689:199:2",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 403,
									"name": "onlyInitializing",
									"nameLocation": "6902:16:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6918:2:2"
									},
									"src": "6893:76:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "7136:89:2",
										"statements": [
											{
												"condition": {
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7150:18:2",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 407,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 484,
															"src": "7151:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 408,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7151:17:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 414,
												"nodeType": "IfStatement",
												"src": "7146:73:2",
												"trueBody": {
													"id": 413,
													"nodeType": "Block",
													"src": "7170:49:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 410,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 260,
																	"src": "7191:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7191:17:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 412,
															"nodeType": "RevertStatement",
															"src": "7184:24:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "6975:104:2",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7093:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7111:2:2"
									},
									"returnParameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7136:0:2"
									},
									"scope": 494,
									"src": "7084:141:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 461,
										"nodeType": "Block",
										"src": "7760:373:2",
										"statements": [
											{
												"assignments": [
													422
												],
												"declarations": [
													{
														"constant": false,
														"id": 422,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7855:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 461,
														"src": "7826:30:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 421,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 420,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7826:20:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 251,
																"src": "7826:20:2"
															},
															"referencedDeclaration": 251,
															"src": "7826:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 425,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 423,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 493,
														"src": "7859:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$251_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7859:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7826:59:2"
											},
											{
												"condition": {
													"expression": {
														"id": 426,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 422,
														"src": "7900:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 427,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7902:13:2",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 250,
													"src": "7900:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 432,
												"nodeType": "IfStatement",
												"src": "7896:76:2",
												"trueBody": {
													"id": 431,
													"nodeType": "Block",
													"src": "7917:55:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 428,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 257,
																	"src": "7938:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7938:23:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 430,
															"nodeType": "RevertStatement",
															"src": "7931:30:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 433,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 422,
															"src": "7985:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7987:12:2",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 247,
														"src": "7985:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 437,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8008:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 436,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8008:6:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 435,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8003:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8003:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 439,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8016:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8003:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7985:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 460,
												"nodeType": "IfStatement",
												"src": "7981:146:2",
												"trueBody": {
													"id": 459,
													"nodeType": "Block",
													"src": "8021:106:2",
													"statements": [
														{
															"expression": {
																"id": 449,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 441,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 422,
																		"src": "8035:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 443,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8037:12:2",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 247,
																	"src": "8035:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 446,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8057:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 445,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8057:6:2",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 444,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8052:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 447,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8052:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 448,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8065:3:2",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8052:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8035:33:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 450,
															"nodeType": "ExpressionStatement",
															"src": "8035:33:2"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 454,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8104:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 453,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8104:6:2",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 452,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8099:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 455,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8099:12:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 456,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8112:3:2",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8099:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 451,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 265,
																	"src": "8087:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 457,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8087:29:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 458,
															"nodeType": "EmitStatement",
															"src": "8082:34:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "7231:475:2",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 462,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7720:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7740:2:2"
									},
									"returnParameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7760:0:2"
									},
									"scope": 494,
									"src": "7711:422:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 472,
										"nodeType": "Block",
										"src": "8308:63:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 468,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "8325:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$251_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 469,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8325:26:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 470,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8352:12:2",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 247,
													"src": "8325:39:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 467,
												"id": 471,
												"nodeType": "Return",
												"src": "8318:46:2"
											}
										]
									},
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "8139:99:2",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 473,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8252:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8274:2:2"
									},
									"returnParameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "8300:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 465,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8300:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8299:8:2"
									},
									"scope": 494,
									"src": "8243:128:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 483,
										"nodeType": "Block",
										"src": "8543:64:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 479,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "8560:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$251_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 480,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8560:26:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 481,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8587:13:2",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 250,
													"src": "8560:40:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 478,
												"id": 482,
												"nodeType": "Return",
												"src": "8553:47:2"
											}
										]
									},
									"documentation": {
										"id": 474,
										"nodeType": "StructuredDocumentation",
										"src": "8377:105:2",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 484,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8496:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8511:2:2"
									},
									"returnParameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "8537:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 476,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8537:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8536:6:2"
									},
									"scope": 494,
									"src": "8487:120:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 492,
										"nodeType": "Block",
										"src": "8827:80:2",
										"statements": [
											{
												"AST": {
													"nativeSrc": "8846:55:2",
													"nodeType": "YulBlock",
													"src": "8846:55:2",
													"statements": [
														{
															"nativeSrc": "8860:31:2",
															"nodeType": "YulAssignment",
															"src": "8860:31:2",
															"value": {
																"name": "INITIALIZABLE_STORAGE",
																"nativeSrc": "8870:21:2",
																"nodeType": "YulIdentifier",
																"src": "8870:21:2"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "8860:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "8860:6:2"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 489,
														"isOffset": false,
														"isSlot": true,
														"src": "8860:6:2",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 254,
														"isOffset": false,
														"isSlot": false,
														"src": "8870:21:2",
														"valueSize": 1
													}
												],
												"id": 491,
												"nodeType": "InlineAssembly",
												"src": "8837:64:2"
											}
										]
									},
									"documentation": {
										"id": 485,
										"nodeType": "StructuredDocumentation",
										"src": "8613:67:2",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 493,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "8746:24:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8770:2:2"
									},
									"returnParameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "8824:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "8795:30:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 488,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 487,
														"name": "InitializableStorage",
														"nameLocations": [
															"8795:20:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 251,
														"src": "8795:20:2"
													},
													"referencedDeclaration": 251,
													"src": "8795:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8794:32:2"
									},
									"scope": 494,
									"src": "8737:170:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 495,
							"src": "2349:6560:2",
							"usedErrors": [
								257,
								260
							],
							"usedEvents": [
								265
							]
						}
					],
					"src": "113:8797:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
					"exportedSymbols": {
						"ERC1967Utils": [
							1176
						],
						"IERC1822Proxiable": [
							882
						],
						"Initializable": [
							494
						],
						"UUPSUpgradeable": [
							676
						]
					},
					"id": 677,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 496,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"file": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"id": 498,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 677,
							"sourceUnit": 883,
							"src": "141:88:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 497,
										"name": "IERC1822Proxiable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 882,
										"src": "149:17:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"file": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"id": 500,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 677,
							"sourceUnit": 1177,
							"src": "230:84:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 499,
										"name": "ERC1967Utils",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1176,
										"src": "238:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "./Initializable.sol",
							"id": 502,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 677,
							"sourceUnit": 495,
							"src": "315:50:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 501,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 494,
										"src": "323:13:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 504,
										"name": "Initializable",
										"nameLocations": [
											"1023:13:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 494,
										"src": "1023:13:3"
									},
									"id": 505,
									"nodeType": "InheritanceSpecifier",
									"src": "1023:13:3"
								},
								{
									"baseName": {
										"id": 506,
										"name": "IERC1822Proxiable",
										"nameLocations": [
											"1038:17:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 882,
										"src": "1038:17:3"
									},
									"id": 507,
									"nodeType": "InheritanceSpecifier",
									"src": "1038:17:3"
								}
							],
							"canonicalName": "UUPSUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 503,
								"nodeType": "StructuredDocumentation",
								"src": "367:618:3",
								"text": " @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism."
							},
							"fullyImplemented": false,
							"id": 676,
							"linearizedBaseContracts": [
								676,
								882,
								494
							],
							"name": "UUPSUpgradeable",
							"nameLocation": "1004:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "1062:61:3",
										"text": "@custom:oz-upgrades-unsafe-allow state-variable-immutable"
									},
									"id": 514,
									"mutability": "immutable",
									"name": "__self",
									"nameLocation": "1154:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 676,
									"src": "1128:48:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 509,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1128:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 512,
												"name": "this",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967268,
												"src": "1171:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$676",
													"typeString": "contract UUPSUpgradeable"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$676",
													"typeString": "contract UUPSUpgradeable"
												}
											],
											"id": 511,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "1163:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 510,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1163:7:3",
												"typeDescriptions": {}
											}
										},
										"id": 513,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1163:13:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 515,
										"nodeType": "StructuredDocumentation",
										"src": "1183:631:3",
										"text": " @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."
									},
									"functionSelector": "ad3cb1cc",
									"id": 518,
									"mutability": "constant",
									"name": "UPGRADE_INTERFACE_VERSION",
									"nameLocation": "1842:25:3",
									"nodeType": "VariableDeclaration",
									"scope": 676,
									"src": "1819:58:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 516,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1819:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "352e302e30",
										"id": 517,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1870:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c",
											"typeString": "literal_string \"5.0.0\""
										},
										"value": "5.0.0"
									},
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 519,
										"nodeType": "StructuredDocumentation",
										"src": "1884:65:3",
										"text": " @dev The call is from an unauthorized context."
									},
									"errorSelector": "e07c8dba",
									"id": 521,
									"name": "UUPSUnauthorizedCallContext",
									"nameLocation": "1960:27:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1987:2:3"
									},
									"src": "1954:36:3"
								},
								{
									"documentation": {
										"id": 522,
										"nodeType": "StructuredDocumentation",
										"src": "1996:68:3",
										"text": " @dev The storage `slot` is unsupported as a UUID."
									},
									"errorSelector": "aa1d49a4",
									"id": 526,
									"name": "UUPSUnsupportedProxiableUUID",
									"nameLocation": "2075:28:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2112:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "2104:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 523,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2104:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2103:14:3"
									},
									"src": "2069:49:3"
								},
								{
									"body": {
										"id": 533,
										"nodeType": "Block",
										"src": "2645:41:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 529,
														"name": "_checkProxy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 608,
														"src": "2655:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2655:13:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 531,
												"nodeType": "ExpressionStatement",
												"src": "2655:13:3"
											},
											{
												"id": 532,
												"nodeType": "PlaceholderStatement",
												"src": "2678:1:3"
											}
										]
									},
									"documentation": {
										"id": 527,
										"nodeType": "StructuredDocumentation",
										"src": "2124:495:3",
										"text": " @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."
									},
									"id": 534,
									"name": "onlyProxy",
									"nameLocation": "2633:9:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2642:2:3"
									},
									"src": "2624:62:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "2916:48:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 537,
														"name": "_checkNotDelegated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 624,
														"src": "2926:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2926:20:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 539,
												"nodeType": "ExpressionStatement",
												"src": "2926:20:3"
											},
											{
												"id": 540,
												"nodeType": "PlaceholderStatement",
												"src": "2956:1:3"
											}
										]
									},
									"documentation": {
										"id": 535,
										"nodeType": "StructuredDocumentation",
										"src": "2692:195:3",
										"text": " @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."
									},
									"id": 542,
									"name": "notDelegated",
									"nameLocation": "2901:12:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2913:2:3"
									},
									"src": "2892:72:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 547,
										"nodeType": "Block",
										"src": "3030:7:3",
										"statements": []
									},
									"id": 548,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 545,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 544,
												"name": "onlyInitializing",
												"nameLocations": [
													"3013:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 403,
												"src": "3013:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "3013:16:3"
										}
									],
									"name": "__UUPSUpgradeable_init",
									"nameLocation": "2979:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3001:2:3"
									},
									"returnParameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3030:0:3"
									},
									"scope": 676,
									"src": "2970:67:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 553,
										"nodeType": "Block",
										"src": "3113:7:3",
										"statements": []
									},
									"id": 554,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 551,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 550,
												"name": "onlyInitializing",
												"nameLocations": [
													"3096:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 403,
												"src": "3096:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "3096:16:3"
										}
									],
									"name": "__UUPSUpgradeable_init_unchained",
									"nameLocation": "3052:32:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3084:2:3"
									},
									"returnParameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3113:0:3"
									},
									"scope": 676,
									"src": "3043:77:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										881
									],
									"body": {
										"id": 565,
										"nodeType": "Block",
										"src": "3786:56:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 562,
														"name": "ERC1967Utils",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1176,
														"src": "3803:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1176_$",
															"typeString": "type(library ERC1967Utils)"
														}
													},
													"id": 563,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "3816:19:3",
													"memberName": "IMPLEMENTATION_SLOT",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 897,
													"src": "3803:32:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 561,
												"id": 564,
												"nodeType": "Return",
												"src": "3796:39:3"
											}
										]
									},
									"documentation": {
										"id": 555,
										"nodeType": "StructuredDocumentation",
										"src": "3125:578:3",
										"text": " @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
									},
									"functionSelector": "52d1902d",
									"id": 566,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 558,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 557,
												"name": "notDelegated",
												"nameLocations": [
													"3755:12:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 542,
												"src": "3755:12:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "3755:12:3"
										}
									],
									"name": "proxiableUUID",
									"nameLocation": "3717:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3730:2:3"
									},
									"returnParameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "3777:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 559,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3777:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3776:9:3"
									},
									"scope": 676,
									"src": "3708:134:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 585,
										"nodeType": "Block",
										"src": "4266:109:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 577,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 569,
															"src": "4294:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 576,
														"name": "_authorizeUpgrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 630,
														"src": "4276:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4276:36:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 579,
												"nodeType": "ExpressionStatement",
												"src": "4276:36:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 581,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 569,
															"src": "4344:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 582,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 571,
															"src": "4363:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 580,
														"name": "_upgradeToAndCallUUPS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 675,
														"src": "4322:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,bytes memory)"
														}
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4322:46:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 584,
												"nodeType": "ExpressionStatement",
												"src": "4322:46:3"
											}
										]
									},
									"documentation": {
										"id": 567,
										"nodeType": "StructuredDocumentation",
										"src": "3848:308:3",
										"text": " @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"
									},
									"functionSelector": "4f1ef286",
									"id": 586,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 574,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 573,
												"name": "onlyProxy",
												"nameLocations": [
													"4256:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 534,
												"src": "4256:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "4256:9:3"
										}
									],
									"name": "upgradeToAndCall",
									"nameLocation": "4170:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "4195:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 586,
												"src": "4187:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 568,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4187:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4227:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 586,
												"src": "4214:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 570,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4214:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4186:46:3"
									},
									"returnParameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4266:0:3"
									},
									"scope": 676,
									"src": "4161:214:3",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 607,
										"nodeType": "Block",
										"src": "4648:267:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 595,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 592,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4683:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$676",
																		"typeString": "contract UUPSUpgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$676",
																		"typeString": "contract UUPSUpgradeable"
																	}
																],
																"id": 591,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4675:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 590,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4675:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4675:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 594,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 514,
															"src": "4692:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4675:23:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 600,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 596,
																	"name": "ERC1967Utils",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1176,
																	"src": "4753:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1176_$",
																		"typeString": "type(library ERC1967Utils)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4766:17:3",
																"memberName": "getImplementation",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 928,
																"src": "4753:30:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4753:32:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 599,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 514,
															"src": "4789:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4753:42:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4675:120:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 606,
												"nodeType": "IfStatement",
												"src": "4658:251:3",
												"trueBody": {
													"id": 605,
													"nodeType": "Block",
													"src": "4848:61:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 602,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 521,
																	"src": "4869:27:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4869:29:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 604,
															"nodeType": "RevertStatement",
															"src": "4862:36:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 587,
										"nodeType": "StructuredDocumentation",
										"src": "4381:217:3",
										"text": " @dev Reverts if the execution is not performed via delegatecall or the execution\n context is not of a proxy with an ERC-1967 compliant implementation pointing to self.\n See {_onlyProxy}."
									},
									"id": 608,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkProxy",
									"nameLocation": "4612:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4623:2:3"
									},
									"returnParameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4648:0:3"
									},
									"scope": 676,
									"src": "4603:312:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 623,
										"nodeType": "Block",
										"src": "5084:161:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 614,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "5106:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$676",
																	"typeString": "contract UUPSUpgradeable"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$676",
																	"typeString": "contract UUPSUpgradeable"
																}
															],
															"id": 613,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5098:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 612,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5098:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 615,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5098:13:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 616,
														"name": "__self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "5115:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5098:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 622,
												"nodeType": "IfStatement",
												"src": "5094:145:3",
												"trueBody": {
													"id": 621,
													"nodeType": "Block",
													"src": "5123:116:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 618,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 521,
																	"src": "5199:27:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 619,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5199:29:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 620,
															"nodeType": "RevertStatement",
															"src": "5192:36:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 609,
										"nodeType": "StructuredDocumentation",
										"src": "4921:106:3",
										"text": " @dev Reverts if the execution is performed via delegatecall.\n See {notDelegated}."
									},
									"id": 624,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNotDelegated",
									"nameLocation": "5041:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5059:2:3"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5084:0:3"
									},
									"scope": 676,
									"src": "5032:213:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 625,
										"nodeType": "StructuredDocumentation",
										"src": "5251:372:3",
										"text": " @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal onlyOwner {}\n ```"
									},
									"id": 630,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_authorizeUpgrade",
									"nameLocation": "5637:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "5663:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "5655:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 626,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5655:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5654:27:3"
									},
									"returnParameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5698:0:3"
									},
									"scope": 676,
									"src": "5628:71:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 674,
										"nodeType": "Block",
										"src": "6142:453:3",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 663,
															"nodeType": "Block",
															"src": "6232:212:3",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		"id": 649,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 646,
																			"name": "slot",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 644,
																			"src": "6250:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"expression": {
																				"id": 647,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1176,
																				"src": "6258:12:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1176_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 648,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "6271:19:3",
																			"memberName": "IMPLEMENTATION_SLOT",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 897,
																			"src": "6258:32:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"src": "6250:40:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 655,
																	"nodeType": "IfStatement",
																	"src": "6246:120:3",
																	"trueBody": {
																		"id": 654,
																		"nodeType": "Block",
																		"src": "6292:74:3",
																		"statements": [
																			{
																				"errorCall": {
																					"arguments": [
																						{
																							"id": 651,
																							"name": "slot",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 644,
																							"src": "6346:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 650,
																						"name": "UUPSUnsupportedProxiableUUID",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 526,
																						"src": "6317:28:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$_t_error_$",
																							"typeString": "function (bytes32) pure returns (error)"
																						}
																					},
																					"id": 652,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6317:34:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_error",
																						"typeString": "error"
																					}
																				},
																				"id": 653,
																				"nodeType": "RevertStatement",
																				"src": "6310:41:3"
																			}
																		]
																	}
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 659,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 633,
																				"src": "6409:17:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 660,
																				"name": "data",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 635,
																				"src": "6428:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"expression": {
																				"id": 656,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1176,
																				"src": "6379:12:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1176_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 658,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6392:16:3",
																			"memberName": "upgradeToAndCall",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 991,
																			"src": "6379:29:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
																				"typeString": "function (address,bytes memory)"
																			}
																		},
																		"id": 661,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6379:54:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 662,
																	"nodeType": "ExpressionStatement",
																	"src": "6379:54:3"
																}
															]
														},
														"errorName": "",
														"id": 664,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 645,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 644,
																	"mutability": "mutable",
																	"name": "slot",
																	"nameLocation": "6226:4:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 664,
																	"src": "6218:12:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 643,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "6218:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "6217:14:3"
														},
														"src": "6209:235:3"
													},
													{
														"block": {
															"id": 671,
															"nodeType": "Block",
															"src": "6451:138:3",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 668,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 633,
																				"src": "6560:17:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"id": 665,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1176,
																				"src": "6518:12:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1176_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 667,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6531:28:3",
																			"memberName": "ERC1967InvalidImplementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 902,
																			"src": "6518:41:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																				"typeString": "function (address) pure returns (error)"
																			}
																		},
																		"id": 669,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6518:60:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 670,
																	"nodeType": "RevertStatement",
																	"src": "6511:67:3"
																}
															]
														},
														"errorName": "",
														"id": 672,
														"nodeType": "TryCatchClause",
														"src": "6445:144:3"
													}
												],
												"externalCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 639,
																	"name": "newImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 633,
																	"src": "6174:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 638,
																"name": "IERC1822Proxiable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 882,
																"src": "6156:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC1822Proxiable_$882_$",
																	"typeString": "type(contract IERC1822Proxiable)"
																}
															},
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6156:36:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1822Proxiable_$882",
																"typeString": "contract IERC1822Proxiable"
															}
														},
														"id": 641,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6193:13:3",
														"memberName": "proxiableUUID",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 881,
														"src": "6156:50:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
															"typeString": "function () view external returns (bytes32)"
														}
													},
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6156:52:3",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 673,
												"nodeType": "TryStatement",
												"src": "6152:437:3"
											}
										]
									},
									"documentation": {
										"id": 631,
										"nodeType": "StructuredDocumentation",
										"src": "5705:347:3",
										"text": " @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n is expected to be the implementation slot in ERC-1967.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 675,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCallUUPS",
									"nameLocation": "6066:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "6096:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "6088:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6088:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6128:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "6115:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 634,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6115:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6087:46:3"
									},
									"returnParameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6142:0:3"
									},
									"scope": 676,
									"src": "6057:538:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 677,
							"src": "986:5611:3",
							"usedErrors": [
								257,
								260,
								521,
								526,
								902,
								915,
								1274,
								1536
							],
							"usedEvents": [
								265,
								859
							]
						}
					],
					"src": "115:6483:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							722
						],
						"Initializable": [
							494
						]
					},
					"id": 723,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 678,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 680,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 723,
							"sourceUnit": 495,
							"src": "126:63:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 679,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 494,
										"src": "134:13:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 682,
										"name": "Initializable",
										"nameLocations": [
											"728:13:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 494,
										"src": "728:13:4"
									},
									"id": 683,
									"nodeType": "InheritanceSpecifier",
									"src": "728:13:4"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 681,
								"nodeType": "StructuredDocumentation",
								"src": "191:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 722,
							"linearizedBaseContracts": [
								722,
								494
							],
							"name": "ContextUpgradeable",
							"nameLocation": "706:18:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 688,
										"nodeType": "Block",
										"src": "800:7:4",
										"statements": []
									},
									"id": 689,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 686,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 685,
												"name": "onlyInitializing",
												"nameLocations": [
													"783:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 403,
												"src": "783:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "783:16:4"
										}
									],
									"name": "__Context_init",
									"nameLocation": "757:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:2:4"
									},
									"returnParameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "800:0:4"
									},
									"scope": 722,
									"src": "748:59:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 694,
										"nodeType": "Block",
										"src": "875:7:4",
										"statements": []
									},
									"id": 695,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 692,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 691,
												"name": "onlyInitializing",
												"nameLocations": [
													"858:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 403,
												"src": "858:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "858:16:4"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "822:24:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:2:4"
									},
									"returnParameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "875:0:4"
									},
									"scope": 722,
									"src": "813:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 703,
										"nodeType": "Block",
										"src": "949:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 700,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "966:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "970:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "966:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 699,
												"id": 702,
												"nodeType": "Return",
												"src": "959:17:4"
											}
										]
									},
									"id": 704,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "896:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "906:2:4"
									},
									"returnParameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "940:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 697,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:9:4"
									},
									"scope": 722,
									"src": "887:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 712,
										"nodeType": "Block",
										"src": "1056:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 709,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1073:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1077:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1073:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 708,
												"id": 711,
												"nodeType": "Return",
												"src": "1066:15:4"
											}
										]
									},
									"id": 713,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "998:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1006:2:4"
									},
									"returnParameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "1040:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 706,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1040:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:16:4"
									},
									"scope": 722,
									"src": "989:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 720,
										"nodeType": "Block",
										"src": "1166:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 718,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1183:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 717,
												"id": 719,
												"nodeType": "Return",
												"src": "1176:8:4"
											}
										]
									},
									"id": 721,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "1103:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1123:2:4"
									},
									"returnParameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "1157:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:9:4"
									},
									"scope": 722,
									"src": "1094:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 723,
							"src": "688:505:4",
							"usedErrors": [
								257,
								260
							],
							"usedEvents": [
								265
							]
						}
					],
					"src": "101:1093:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol",
					"exportedSymbols": {
						"Initializable": [
							494
						],
						"ReentrancyGuardUpgradeable": [
							851
						]
					},
					"id": 852,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 724,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 726,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 852,
							"sourceUnit": 495,
							"src": "134:63:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 725,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 494,
										"src": "142:13:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 728,
										"name": "Initializable",
										"nameLocations": [
											"1142:13:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 494,
										"src": "1142:13:5"
									},
									"id": 729,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:13:5"
								}
							],
							"canonicalName": "ReentrancyGuardUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 727,
								"nodeType": "StructuredDocumentation",
								"src": "199:894:5",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 851,
							"linearizedBaseContracts": [
								851,
								494
							],
							"name": "ReentrancyGuardUpgradeable",
							"nameLocation": "1112:26:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 732,
									"mutability": "constant",
									"name": "NOT_ENTERED",
									"nameLocation": "1935:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 851,
									"src": "1910:40:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 730,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1910:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 731,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1949:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 735,
									"mutability": "constant",
									"name": "ENTERED",
									"nameLocation": "1981:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 851,
									"src": "1956:36:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 733,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1956:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 734,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1991:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"canonicalName": "ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
									"documentation": {
										"id": 736,
										"nodeType": "StructuredDocumentation",
										"src": "1999:73:5",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.ReentrancyGuard"
									},
									"id": 739,
									"members": [
										{
											"constant": false,
											"id": 738,
											"mutability": "mutable",
											"name": "_status",
											"nameLocation": "2125:7:5",
											"nodeType": "VariableDeclaration",
											"scope": 739,
											"src": "2117:15:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 737,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2117:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ReentrancyGuardStorage",
									"nameLocation": "2084:22:5",
									"nodeType": "StructDefinition",
									"scope": 851,
									"src": "2077:62:5",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 742,
									"mutability": "constant",
									"name": "ReentrancyGuardStorageLocation",
									"nameLocation": "2289:30:5",
									"nodeType": "VariableDeclaration",
									"scope": 851,
									"src": "2264:124:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 740,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2264:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307839623737396231373432326430646639323232333031386233326234643166613436653037313732336436383137653234383664303033626563633535663030",
										"id": 741,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2322:66:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_70319816728846589445362000750570655803700195216363692647688146666176345628416_by_1",
											"typeString": "int_const 7031...(69 digits omitted)...8416"
										},
										"value": "0x9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "2489:89:5",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2508:64:5",
													"nodeType": "YulBlock",
													"src": "2508:64:5",
													"statements": [
														{
															"nativeSrc": "2522:40:5",
															"nodeType": "YulAssignment",
															"src": "2522:40:5",
															"value": {
																"name": "ReentrancyGuardStorageLocation",
																"nativeSrc": "2532:30:5",
																"nodeType": "YulIdentifier",
																"src": "2532:30:5"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "2522:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2522:6:5"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 746,
														"isOffset": false,
														"isSlot": true,
														"src": "2522:6:5",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 742,
														"isOffset": false,
														"isSlot": false,
														"src": "2532:30:5",
														"valueSize": 1
													}
												],
												"id": 748,
												"nodeType": "InlineAssembly",
												"src": "2499:73:5"
											}
										]
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getReentrancyGuardStorage",
									"nameLocation": "2404:26:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2430:2:5"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "2486:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "2455:32:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$739_storage_ptr",
													"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"
												},
												"typeName": {
													"id": 745,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 744,
														"name": "ReentrancyGuardStorage",
														"nameLocations": [
															"2455:22:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 739,
														"src": "2455:22:5"
													},
													"referencedDeclaration": 739,
													"src": "2455:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$739_storage_ptr",
														"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2454:34:5"
									},
									"scope": 851,
									"src": "2395:183:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "2584:52:5",
										"text": " @dev Unauthorized reentrant call."
									},
									"errorSelector": "3ee5aeb5",
									"id": 753,
									"name": "ReentrancyGuardReentrantCall",
									"nameLocation": "2647:28:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2675:2:5"
									},
									"src": "2641:37:5"
								},
								{
									"body": {
										"id": 761,
										"nodeType": "Block",
										"src": "2744:51:5",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 758,
														"name": "__ReentrancyGuard_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 780,
														"src": "2754:32:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2754:34:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 760,
												"nodeType": "ExpressionStatement",
												"src": "2754:34:5"
											}
										]
									},
									"id": 762,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 756,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 755,
												"name": "onlyInitializing",
												"nameLocations": [
													"2727:16:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 403,
												"src": "2727:16:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "2727:16:5"
										}
									],
									"name": "__ReentrancyGuard_init",
									"nameLocation": "2693:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2715:2:5"
									},
									"returnParameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2744:0:5"
									},
									"scope": 851,
									"src": "2684:111:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 779,
										"nodeType": "Block",
										"src": "2871:113:5",
										"statements": [
											{
												"assignments": [
													769
												],
												"declarations": [
													{
														"constant": false,
														"id": 769,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2912:1:5",
														"nodeType": "VariableDeclaration",
														"scope": 779,
														"src": "2881:32:5",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$739_storage_ptr",
															"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"
														},
														"typeName": {
															"id": 768,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 767,
																"name": "ReentrancyGuardStorage",
																"nameLocations": [
																	"2881:22:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 739,
																"src": "2881:22:5"
															},
															"referencedDeclaration": 739,
															"src": "2881:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$739_storage_ptr",
																"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 772,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 770,
														"name": "_getReentrancyGuardStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 750,
														"src": "2916:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$739_storage_ptr_$",
															"typeString": "function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"
														}
													},
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2916:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$739_storage_ptr",
														"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2881:63:5"
											},
											{
												"expression": {
													"id": 777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 773,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 769,
															"src": "2954:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$739_storage_ptr",
																"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"
															}
														},
														"id": 775,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2956:7:5",
														"memberName": "_status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 738,
														"src": "2954:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 776,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 732,
														"src": "2966:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2954:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 778,
												"nodeType": "ExpressionStatement",
												"src": "2954:23:5"
											}
										]
									},
									"id": 780,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 765,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 764,
												"name": "onlyInitializing",
												"nameLocations": [
													"2854:16:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 403,
												"src": "2854:16:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "2854:16:5"
										}
									],
									"name": "__ReentrancyGuard_init_unchained",
									"nameLocation": "2810:32:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2842:2:5"
									},
									"returnParameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2871:0:5"
									},
									"scope": 851,
									"src": "2801:183:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 790,
										"nodeType": "Block",
										"src": "3385:79:5",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 783,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 816,
														"src": "3395:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3395:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 785,
												"nodeType": "ExpressionStatement",
												"src": "3395:21:5"
											},
											{
												"id": 786,
												"nodeType": "PlaceholderStatement",
												"src": "3426:1:5"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 787,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 832,
														"src": "3437:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3437:20:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 789,
												"nodeType": "ExpressionStatement",
												"src": "3437:20:5"
											}
										]
									},
									"documentation": {
										"id": 781,
										"nodeType": "StructuredDocumentation",
										"src": "2990:366:5",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 791,
									"name": "nonReentrant",
									"nameLocation": "3370:12:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3382:2:5"
									},
									"src": "3361:103:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 815,
										"nodeType": "Block",
										"src": "3509:345:5",
										"statements": [
											{
												"assignments": [
													796
												],
												"declarations": [
													{
														"constant": false,
														"id": 796,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3550:1:5",
														"nodeType": "VariableDeclaration",
														"scope": 815,
														"src": "3519:32:5",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$739_storage_ptr",
															"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"
														},
														"typeName": {
															"id": 795,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 794,
																"name": "ReentrancyGuardStorage",
																"nameLocations": [
																	"3519:22:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 739,
																"src": "3519:22:5"
															},
															"referencedDeclaration": 739,
															"src": "3519:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$739_storage_ptr",
																"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 799,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 797,
														"name": "_getReentrancyGuardStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 750,
														"src": "3554:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$739_storage_ptr_$",
															"typeString": "function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"
														}
													},
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3554:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$739_storage_ptr",
														"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3519:63:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 800,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "3670:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$739_storage_ptr",
																"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"
															}
														},
														"id": 801,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3672:7:5",
														"memberName": "_status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 738,
														"src": "3670:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 802,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 735,
														"src": "3683:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3670:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 808,
												"nodeType": "IfStatement",
												"src": "3666:88:5",
												"trueBody": {
													"id": 807,
													"nodeType": "Block",
													"src": "3692:62:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 804,
																	"name": "ReentrancyGuardReentrantCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 753,
																	"src": "3713:28:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 805,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3713:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 806,
															"nodeType": "RevertStatement",
															"src": "3706:37:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 809,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "3828:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$739_storage_ptr",
																"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"
															}
														},
														"id": 811,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3830:7:5",
														"memberName": "_status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 738,
														"src": "3828:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 812,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 735,
														"src": "3840:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3828:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 814,
												"nodeType": "ExpressionStatement",
												"src": "3828:19:5"
											}
										]
									},
									"id": 816,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "3479:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3498:2:5"
									},
									"returnParameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3509:0:5"
									},
									"scope": 851,
									"src": "3470:384:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 831,
										"nodeType": "Block",
										"src": "3898:245:5",
										"statements": [
											{
												"assignments": [
													821
												],
												"declarations": [
													{
														"constant": false,
														"id": 821,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3939:1:5",
														"nodeType": "VariableDeclaration",
														"scope": 831,
														"src": "3908:32:5",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$739_storage_ptr",
															"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"
														},
														"typeName": {
															"id": 820,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 819,
																"name": "ReentrancyGuardStorage",
																"nameLocations": [
																	"3908:22:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 739,
																"src": "3908:22:5"
															},
															"referencedDeclaration": 739,
															"src": "3908:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$739_storage_ptr",
																"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 824,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 822,
														"name": "_getReentrancyGuardStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 750,
														"src": "3943:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$739_storage_ptr_$",
															"typeString": "function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"
														}
													},
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3943:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$739_storage_ptr",
														"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3908:63:5"
											},
											{
												"expression": {
													"id": 829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 825,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 821,
															"src": "4113:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$739_storage_ptr",
																"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"
															}
														},
														"id": 827,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4115:7:5",
														"memberName": "_status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 738,
														"src": "4113:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 828,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 732,
														"src": "4125:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4113:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 830,
												"nodeType": "ExpressionStatement",
												"src": "4113:23:5"
											}
										]
									},
									"id": 832,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "3869:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3887:2:5"
									},
									"returnParameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3898:0:5"
									},
									"scope": 851,
									"src": "3860:283:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 849,
										"nodeType": "Block",
										"src": "4386:117:5",
										"statements": [
											{
												"assignments": [
													840
												],
												"declarations": [
													{
														"constant": false,
														"id": 840,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4427:1:5",
														"nodeType": "VariableDeclaration",
														"scope": 849,
														"src": "4396:32:5",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$739_storage_ptr",
															"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"
														},
														"typeName": {
															"id": 839,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 838,
																"name": "ReentrancyGuardStorage",
																"nameLocations": [
																	"4396:22:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 739,
																"src": "4396:22:5"
															},
															"referencedDeclaration": 739,
															"src": "4396:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$739_storage_ptr",
																"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 843,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 841,
														"name": "_getReentrancyGuardStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 750,
														"src": "4431:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$739_storage_ptr_$",
															"typeString": "function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"
														}
													},
													"id": 842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4431:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$739_storage_ptr",
														"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4396:63:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 844,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 840,
															"src": "4476:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$739_storage_ptr",
																"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"
															}
														},
														"id": 845,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4478:7:5",
														"memberName": "_status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 738,
														"src": "4476:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 846,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 735,
														"src": "4489:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4476:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 837,
												"id": 848,
												"nodeType": "Return",
												"src": "4469:27:5"
											}
										]
									},
									"documentation": {
										"id": 833,
										"nodeType": "StructuredDocumentation",
										"src": "4149:168:5",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 850,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "4331:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4354:2:5"
									},
									"returnParameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "4380:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 835,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4380:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4379:6:5"
									},
									"scope": 851,
									"src": "4322:181:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 852,
							"src": "1094:3411:5",
							"usedErrors": [
								257,
								260,
								753
							],
							"usedEvents": [
								265
							]
						}
					],
					"src": "109:4397:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1967.sol",
					"exportedSymbols": {
						"IERC1967": [
							872
						]
					},
					"id": 873,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 853,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1967",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 854,
								"nodeType": "StructuredDocumentation",
								"src": "133:101:6",
								"text": " @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC."
							},
							"fullyImplemented": true,
							"id": 872,
							"linearizedBaseContracts": [
								872
							],
							"name": "IERC1967",
							"nameLocation": "245:8:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "260:68:6",
										"text": " @dev Emitted when the implementation is upgraded."
									},
									"eventSelector": "bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
									"id": 859,
									"name": "Upgraded",
									"nameLocation": "339:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "364:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "348:30:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "348:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "347:32:6"
									},
									"src": "333:47:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 860,
										"nodeType": "StructuredDocumentation",
										"src": "386:67:6",
										"text": " @dev Emitted when the admin account has changed."
									},
									"eventSelector": "7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f",
									"id": 866,
									"name": "AdminChanged",
									"nameLocation": "464:12:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousAdmin",
												"nameLocation": "485:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "477:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 861,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "477:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 864,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "508:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "500:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 863,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "500:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "476:41:6"
									},
									"src": "458:60:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 867,
										"nodeType": "StructuredDocumentation",
										"src": "524:59:6",
										"text": " @dev Emitted when the beacon is changed."
									},
									"eventSelector": "1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e",
									"id": 871,
									"name": "BeaconUpgraded",
									"nameLocation": "594:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 869,
												"indexed": true,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "625:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "609:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "609:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "608:24:6"
									},
									"src": "588:45:6"
								}
							],
							"scope": 873,
							"src": "235:400:6",
							"usedErrors": [],
							"usedEvents": [
								859,
								866,
								871
							]
						}
					],
					"src": "107:529:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
					"exportedSymbols": {
						"IERC1822Proxiable": [
							882
						]
					},
					"id": 883,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 874,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1822Proxiable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 875,
								"nodeType": "StructuredDocumentation",
								"src": "139:204:7",
								"text": " @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."
							},
							"fullyImplemented": false,
							"id": 882,
							"linearizedBaseContracts": [
								882
							],
							"name": "IERC1822Proxiable",
							"nameLocation": "354:17:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 876,
										"nodeType": "StructuredDocumentation",
										"src": "378:438:7",
										"text": " @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."
									},
									"functionSelector": "52d1902d",
									"id": 881,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "proxiableUUID",
									"nameLocation": "830:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "843:2:7"
									},
									"returnParameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "869:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 878,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "869:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "868:9:7"
									},
									"scope": 882,
									"src": "821:57:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 883,
							"src": "344:536:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "113:768:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
					"exportedSymbols": {
						"Address": [
							1523
						],
						"ERC1967Utils": [
							1176
						],
						"IBeacon": [
							1186
						],
						"IERC1967": [
							872
						],
						"StorageSlot": [
							1669
						]
					},
					"id": 1177,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 884,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".21"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
							"file": "../beacon/IBeacon.sol",
							"id": 886,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1177,
							"sourceUnit": 1187,
							"src": "140:46:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 885,
										"name": "IBeacon",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1186,
										"src": "148:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1967.sol",
							"file": "../../interfaces/IERC1967.sol",
							"id": 888,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1177,
							"sourceUnit": 873,
							"src": "187:55:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 887,
										"name": "IERC1967",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 872,
										"src": "195:8:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 890,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1177,
							"sourceUnit": 1524,
							"src": "243:48:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 889,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1523,
										"src": "251:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
							"file": "../../utils/StorageSlot.sol",
							"id": 892,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1177,
							"sourceUnit": 1670,
							"src": "292:56:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 891,
										"name": "StorageSlot",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1669,
										"src": "300:11:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC1967Utils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 893,
								"nodeType": "StructuredDocumentation",
								"src": "350:145:8",
								"text": " @dev This library provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots."
							},
							"fullyImplemented": true,
							"id": 1176,
							"linearizedBaseContracts": [
								1176
							],
							"name": "ERC1967Utils",
							"nameLocation": "504:12:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 894,
										"nodeType": "StructuredDocumentation",
										"src": "523:170:8",
										"text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
									},
									"id": 897,
									"mutability": "constant",
									"name": "IMPLEMENTATION_SLOT",
									"nameLocation": "789:19:8",
									"nodeType": "VariableDeclaration",
									"scope": 1176,
									"src": "763:114:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 895,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "763:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
										"id": 896,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "811:66:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
											"typeString": "int_const 2444...(69 digits omitted)...5612"
										},
										"value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									},
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 898,
										"nodeType": "StructuredDocumentation",
										"src": "884:69:8",
										"text": " @dev The `implementation` of the proxy is invalid."
									},
									"errorSelector": "4c9c8ce3",
									"id": 902,
									"name": "ERC1967InvalidImplementation",
									"nameLocation": "964:28:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1001:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "993:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 899,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "993:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "992:24:8"
									},
									"src": "958:59:8"
								},
								{
									"documentation": {
										"id": 903,
										"nodeType": "StructuredDocumentation",
										"src": "1023:60:8",
										"text": " @dev The `admin` of the proxy is invalid."
									},
									"errorSelector": "62e77ba2",
									"id": 907,
									"name": "ERC1967InvalidAdmin",
									"nameLocation": "1094:19:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1122:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "1114:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 904,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1114:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1113:15:8"
									},
									"src": "1088:41:8"
								},
								{
									"documentation": {
										"id": 908,
										"nodeType": "StructuredDocumentation",
										"src": "1135:61:8",
										"text": " @dev The `beacon` of the proxy is invalid."
									},
									"errorSelector": "64ced0ec",
									"id": 912,
									"name": "ERC1967InvalidBeacon",
									"nameLocation": "1207:20:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "1236:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "1228:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 909,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1228:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1227:16:8"
									},
									"src": "1201:43:8"
								},
								{
									"documentation": {
										"id": 913,
										"nodeType": "StructuredDocumentation",
										"src": "1250:82:8",
										"text": " @dev An upgrade function sees `msg.value > 0` that may be lost."
									},
									"errorSelector": "b398979f",
									"id": 915,
									"name": "ERC1967NonPayable",
									"nameLocation": "1343:17:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1360:2:8"
									},
									"src": "1337:26:8"
								},
								{
									"body": {
										"id": 927,
										"nodeType": "Block",
										"src": "1502:77:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 923,
																"name": "IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 897,
																"src": "1546:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 921,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1669,
																"src": "1519:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1669_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 922,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1531:14:8",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1580,
															"src": "1519:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1551_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 924,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1519:47:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1551_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 925,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1567:5:8",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1550,
													"src": "1519:53:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 920,
												"id": 926,
												"nodeType": "Return",
												"src": "1512:60:8"
											}
										]
									},
									"documentation": {
										"id": 916,
										"nodeType": "StructuredDocumentation",
										"src": "1369:67:8",
										"text": " @dev Returns the current implementation address."
									},
									"id": 928,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getImplementation",
									"nameLocation": "1450:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1467:2:8"
									},
									"returnParameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "1493:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 918,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1493:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1492:9:8"
									},
									"scope": 1176,
									"src": "1441:138:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 954,
										"nodeType": "Block",
										"src": "1734:218:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 934,
																"name": "newImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 931,
																"src": "1748:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 935,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1766:4:8",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1748:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 936,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1771:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1748:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 937,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1781:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1748:34:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 944,
												"nodeType": "IfStatement",
												"src": "1744:119:8",
												"trueBody": {
													"id": 943,
													"nodeType": "Block",
													"src": "1784:79:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 940,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 931,
																		"src": "1834:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 939,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 902,
																	"src": "1805:28:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 941,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1805:47:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 942,
															"nodeType": "RevertStatement",
															"src": "1798:54:8"
														}
													]
												}
											},
											{
												"expression": {
													"id": 952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 948,
																	"name": "IMPLEMENTATION_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 897,
																	"src": "1899:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 945,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1669,
																	"src": "1872:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1669_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 947,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1884:14:8",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1580,
																"src": "1872:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1551_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 949,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1872:47:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1551_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 950,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1920:5:8",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1550,
														"src": "1872:53:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 951,
														"name": "newImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 931,
														"src": "1928:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1872:73:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 953,
												"nodeType": "ExpressionStatement",
												"src": "1872:73:8"
											}
										]
									},
									"documentation": {
										"id": 929,
										"nodeType": "StructuredDocumentation",
										"src": "1585:81:8",
										"text": " @dev Stores a new address in the ERC-1967 implementation slot."
									},
									"id": 955,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nameLocation": "1680:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "1707:17:8",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "1699:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 930,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1699:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1698:27:8"
									},
									"returnParameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1734:0:8"
									},
									"scope": 1176,
									"src": "1671:281:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 990,
										"nodeType": "Block",
										"src": "2345:263:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 964,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 958,
															"src": "2374:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 963,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 955,
														"src": "2355:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2355:37:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 966,
												"nodeType": "ExpressionStatement",
												"src": "2355:37:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 970,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 958,
															"src": "2425:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 967,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "2407:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$872_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 969,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2416:8:8",
														"memberName": "Upgraded",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 859,
														"src": "2407:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2407:36:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 972,
												"nodeType": "EmitStatement",
												"src": "2402:41:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 973,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 960,
															"src": "2458:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 974,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2463:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2458:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 975,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2472:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2458:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 988,
													"nodeType": "Block",
													"src": "2559:43:8",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 985,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1175,
																	"src": "2573:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 986,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2573:18:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 987,
															"nodeType": "ExpressionStatement",
															"src": "2573:18:8"
														}
													]
												},
												"id": 989,
												"nodeType": "IfStatement",
												"src": "2454:148:8",
												"trueBody": {
													"id": 984,
													"nodeType": "Block",
													"src": "2475:78:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 980,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 958,
																		"src": "2518:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 981,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 960,
																		"src": "2537:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 977,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1523,
																		"src": "2489:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$1523_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 979,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2497:20:8",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1440,
																	"src": "2489:28:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 982,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2489:53:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 983,
															"nodeType": "ExpressionStatement",
															"src": "2489:53:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 956,
										"nodeType": "StructuredDocumentation",
										"src": "1958:301:8",
										"text": " @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 991,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeToAndCall",
									"nameLocation": "2273:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2298:17:8",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "2290:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 957,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2290:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2330:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "2317:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 959,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2317:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2289:46:8"
									},
									"returnParameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2345:0:8"
									},
									"scope": 1176,
									"src": "2264:344:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 992,
										"nodeType": "StructuredDocumentation",
										"src": "2614:145:8",
										"text": " @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
									},
									"id": 995,
									"mutability": "constant",
									"name": "ADMIN_SLOT",
									"nameLocation": "2855:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 1176,
									"src": "2829:105:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 993,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2829:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
										"id": 994,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2868:66:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
											"typeString": "int_const 8195...(69 digits omitted)...7091"
										},
										"value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1007,
										"nodeType": "Block",
										"src": "3339:68:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1003,
																"name": "ADMIN_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 995,
																"src": "3383:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1001,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1669,
																"src": "3356:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1669_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 1002,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3368:14:8",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1580,
															"src": "3356:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1551_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 1004,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3356:38:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1551_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 1005,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3395:5:8",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1550,
													"src": "3356:44:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1000,
												"id": 1006,
												"nodeType": "Return",
												"src": "3349:51:8"
											}
										]
									},
									"documentation": {
										"id": 996,
										"nodeType": "StructuredDocumentation",
										"src": "2941:341:8",
										"text": " @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
									},
									"id": 1008,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAdmin",
									"nameLocation": "3296:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3304:2:8"
									},
									"returnParameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "3330:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 998,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3330:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3329:9:8"
									},
									"scope": 1176,
									"src": "3287:120:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1038,
										"nodeType": "Block",
										"src": "3535:172:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1014,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1011,
														"src": "3549:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1017,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3569:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1016,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3561:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1015,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3561:7:8",
																"typeDescriptions": {}
															}
														},
														"id": 1018,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3561:10:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3549:22:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1028,
												"nodeType": "IfStatement",
												"src": "3545:91:8",
												"trueBody": {
													"id": 1027,
													"nodeType": "Block",
													"src": "3573:63:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1023,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3622:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1022,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3614:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1021,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3614:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1024,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3614:10:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1020,
																	"name": "ERC1967InvalidAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 907,
																	"src": "3594:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1025,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3594:31:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1026,
															"nodeType": "RevertStatement",
															"src": "3587:38:8"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 1032,
																	"name": "ADMIN_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 995,
																	"src": "3672:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1029,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1669,
																	"src": "3645:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1669_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 1031,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3657:14:8",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1580,
																"src": "3645:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1551_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 1033,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3645:38:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1551_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 1034,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3684:5:8",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1550,
														"src": "3645:44:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1035,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1011,
														"src": "3692:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3645:55:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1037,
												"nodeType": "ExpressionStatement",
												"src": "3645:55:8"
											}
										]
									},
									"documentation": {
										"id": 1009,
										"nodeType": "StructuredDocumentation",
										"src": "3413:72:8",
										"text": " @dev Stores a new address in the ERC-1967 admin slot."
									},
									"id": 1039,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAdmin",
									"nameLocation": "3499:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "3517:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "3509:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1010,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3508:18:8"
									},
									"returnParameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3535:0:8"
									},
									"scope": 1176,
									"src": "3490:217:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1057,
										"nodeType": "Block",
										"src": "3875:94:8",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1048,
																"name": "getAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1008,
																"src": "3912:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3912:10:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1050,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1042,
															"src": "3924:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1045,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "3890:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$872_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 1047,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3899:12:8",
														"memberName": "AdminChanged",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 866,
														"src": "3890:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3890:43:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1052,
												"nodeType": "EmitStatement",
												"src": "3885:48:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1054,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1042,
															"src": "3953:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1053,
														"name": "_setAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1039,
														"src": "3943:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3943:19:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1056,
												"nodeType": "ExpressionStatement",
												"src": "3943:19:8"
											}
										]
									},
									"documentation": {
										"id": 1040,
										"nodeType": "StructuredDocumentation",
										"src": "3713:109:8",
										"text": " @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."
									},
									"id": 1058,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "changeAdmin",
									"nameLocation": "3836:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "3856:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1058,
												"src": "3848:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1041,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3848:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3847:18:8"
									},
									"returnParameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3875:0:8"
									},
									"scope": 1176,
									"src": "3827:142:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1059,
										"nodeType": "StructuredDocumentation",
										"src": "3975:201:8",
										"text": " @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
									},
									"id": 1062,
									"mutability": "constant",
									"name": "BEACON_SLOT",
									"nameLocation": "4272:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 1176,
									"src": "4246:106:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1060,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4246:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530",
										"id": 1061,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4286:66:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1",
											"typeString": "int_const 7415...(69 digits omitted)...4704"
										},
										"value": "0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1074,
										"nodeType": "Block",
										"src": "4468:69:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1070,
																"name": "BEACON_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1062,
																"src": "4512:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1068,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1669,
																"src": "4485:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1669_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 1069,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4497:14:8",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1580,
															"src": "4485:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1551_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 1071,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4485:39:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1551_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 1072,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4525:5:8",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1550,
													"src": "4485:45:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1067,
												"id": 1073,
												"nodeType": "Return",
												"src": "4478:52:8"
											}
										]
									},
									"documentation": {
										"id": 1063,
										"nodeType": "StructuredDocumentation",
										"src": "4359:51:8",
										"text": " @dev Returns the current beacon."
									},
									"id": 1075,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBeacon",
									"nameLocation": "4424:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4433:2:8"
									},
									"returnParameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "4459:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1065,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4459:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4458:9:8"
									},
									"scope": 1176,
									"src": "4415:122:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1120,
										"nodeType": "Block",
										"src": "4667:390:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1081,
																"name": "newBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1078,
																"src": "4681:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1082,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4691:4:8",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "4681:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1083,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4696:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4681:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1084,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4706:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4681:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1091,
												"nodeType": "IfStatement",
												"src": "4677:95:8",
												"trueBody": {
													"id": 1090,
													"nodeType": "Block",
													"src": "4709:63:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1087,
																		"name": "newBeacon",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1078,
																		"src": "4751:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1086,
																	"name": "ERC1967InvalidBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 912,
																	"src": "4730:20:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1088,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4730:31:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1089,
															"nodeType": "RevertStatement",
															"src": "4723:38:8"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 1095,
																	"name": "BEACON_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1062,
																	"src": "4809:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1092,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1669,
																	"src": "4782:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1669_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 1094,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4794:14:8",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1580,
																"src": "4782:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1551_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 1096,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4782:39:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1551_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 1097,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4822:5:8",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1550,
														"src": "4782:45:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1098,
														"name": "newBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1078,
														"src": "4830:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4782:57:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1100,
												"nodeType": "ExpressionStatement",
												"src": "4782:57:8"
											},
											{
												"assignments": [
													1102
												],
												"declarations": [
													{
														"constant": false,
														"id": 1102,
														"mutability": "mutable",
														"name": "beaconImplementation",
														"nameLocation": "4858:20:8",
														"nodeType": "VariableDeclaration",
														"scope": 1120,
														"src": "4850:28:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1101,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4850:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1108,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 1104,
																	"name": "newBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1078,
																	"src": "4889:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1103,
																"name": "IBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1186,
																"src": "4881:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBeacon_$1186_$",
																	"typeString": "type(contract IBeacon)"
																}
															},
															"id": 1105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4881:18:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBeacon_$1186",
																"typeString": "contract IBeacon"
															}
														},
														"id": 1106,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4900:14:8",
														"memberName": "implementation",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1185,
														"src": "4881:33:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 1107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4881:35:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4850:66:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1109,
																"name": "beaconImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1102,
																"src": "4930:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4951:4:8",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "4930:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1111,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4956:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4930:32:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1112,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4966:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4930:37:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1119,
												"nodeType": "IfStatement",
												"src": "4926:125:8",
												"trueBody": {
													"id": 1118,
													"nodeType": "Block",
													"src": "4969:82:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1115,
																		"name": "beaconImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1102,
																		"src": "5019:20:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1114,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 902,
																	"src": "4990:28:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1116,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4990:50:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1117,
															"nodeType": "RevertStatement",
															"src": "4983:57:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1076,
										"nodeType": "StructuredDocumentation",
										"src": "4543:72:8",
										"text": " @dev Stores a new beacon in the ERC-1967 beacon slot."
									},
									"id": 1121,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setBeacon",
									"nameLocation": "4629:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "4648:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "4640:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1077,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4640:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4639:19:8"
									},
									"returnParameters": {
										"id": 1080,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4667:0:8"
									},
									"scope": 1176,
									"src": "4620:437:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1160,
										"nodeType": "Block",
										"src": "5661:263:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1130,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1124,
															"src": "5682:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1129,
														"name": "_setBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1121,
														"src": "5671:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5671:21:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1132,
												"nodeType": "ExpressionStatement",
												"src": "5671:21:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1136,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1124,
															"src": "5731:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1133,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "5707:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$872_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 1135,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5716:14:8",
														"memberName": "BeaconUpgraded",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 871,
														"src": "5707:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5707:34:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1138,
												"nodeType": "EmitStatement",
												"src": "5702:39:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1139,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1126,
															"src": "5756:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1140,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5761:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5756:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1141,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5770:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5756:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1158,
													"nodeType": "Block",
													"src": "5875:43:8",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1155,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1175,
																	"src": "5889:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1156,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5889:18:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1157,
															"nodeType": "ExpressionStatement",
															"src": "5889:18:8"
														}
													]
												},
												"id": 1159,
												"nodeType": "IfStatement",
												"src": "5752:166:8",
												"trueBody": {
													"id": 1154,
													"nodeType": "Block",
													"src": "5773:96:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1147,
																						"name": "newBeacon",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1124,
																						"src": "5824:9:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 1146,
																					"name": "IBeacon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1186,
																					"src": "5816:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IBeacon_$1186_$",
																						"typeString": "type(contract IBeacon)"
																					}
																				},
																				"id": 1148,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5816:18:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IBeacon_$1186",
																					"typeString": "contract IBeacon"
																				}
																			},
																			"id": 1149,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5835:14:8",
																			"memberName": "implementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1185,
																			"src": "5816:33:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 1150,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5816:35:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1151,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1126,
																		"src": "5853:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 1143,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1523,
																		"src": "5787:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$1523_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 1145,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5795:20:8",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1440,
																	"src": "5787:28:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 1152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5787:71:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1153,
															"nodeType": "ExpressionStatement",
															"src": "5787:71:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1122,
										"nodeType": "StructuredDocumentation",
										"src": "5063:514:8",
										"text": " @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."
									},
									"id": 1161,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeBeaconToAndCall",
									"nameLocation": "5591:22:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1124,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "5622:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "5614:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5614:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1126,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5646:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "5633:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1125,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5633:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5613:38:8"
									},
									"returnParameters": {
										"id": 1128,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5661:0:8"
									},
									"scope": 1176,
									"src": "5582:342:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1174,
										"nodeType": "Block",
										"src": "6149:86:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1165,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6163:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1166,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6167:5:8",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "6163:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1167,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6175:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6163:13:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1173,
												"nodeType": "IfStatement",
												"src": "6159:70:8",
												"trueBody": {
													"id": 1172,
													"nodeType": "Block",
													"src": "6178:51:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1169,
																	"name": "ERC1967NonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 915,
																	"src": "6199:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1170,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6199:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1171,
															"nodeType": "RevertStatement",
															"src": "6192:26:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1162,
										"nodeType": "StructuredDocumentation",
										"src": "5930:178:8",
										"text": " @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."
									},
									"id": 1175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNonPayable",
									"nameLocation": "6122:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6138:2:8"
									},
									"returnParameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6149:0:8"
									},
									"scope": 1176,
									"src": "6113:122:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1177,
							"src": "496:5741:8",
							"usedErrors": [
								902,
								907,
								912,
								915
							],
							"usedEvents": []
						}
					],
					"src": "114:6124:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
					"exportedSymbols": {
						"IBeacon": [
							1186
						]
					},
					"id": 1187,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1178,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBeacon",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1179,
								"nodeType": "StructuredDocumentation",
								"src": "134:79:9",
								"text": " @dev This is the interface that {BeaconProxy} expects of its beacon."
							},
							"fullyImplemented": false,
							"id": 1186,
							"linearizedBaseContracts": [
								1186
							],
							"name": "IBeacon",
							"nameLocation": "224:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1180,
										"nodeType": "StructuredDocumentation",
										"src": "238:168:9",
										"text": " @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."
									},
									"functionSelector": "5c60da1b",
									"id": 1185,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "420:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "434:2:9"
									},
									"returnParameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "460:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "459:9:9"
									},
									"scope": 1186,
									"src": "411:58:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1187,
							"src": "214:257:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "108:364:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1264
						]
					},
					"id": 1265,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1188,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1189,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:10",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 1264,
							"linearizedBaseContracts": [
								1264
							],
							"name": "IERC20",
							"nameLocation": "214:6:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1190,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:10",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1198,
									"name": "Transfer",
									"nameLocation": "396:8:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1192,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "405:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1194,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "427:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1196,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "447:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:10"
									},
									"src": "390:72:10"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1199,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:10",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1207,
									"name": "Approval",
									"nameLocation": "627:8:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1201,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "636:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1203,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "659:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1205,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "684:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:10"
									},
									"src": "621:78:10"
								},
								{
									"documentation": {
										"id": 1208,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:10",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1213,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:10"
									},
									"returnParameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "821:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:10"
									},
									"scope": 1264,
									"src": "775:55:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1214,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:10",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1221,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "931:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:10"
									},
									"returnParameters": {
										"id": 1220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "971:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:10"
									},
									"scope": 1264,
									"src": "912:68:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1222,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:10",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1231,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "1222:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1226,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "1234:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:10"
									},
									"returnParameters": {
										"id": 1230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1229,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "1267:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1228,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:10"
									},
									"scope": 1264,
									"src": "1204:69:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1232,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:10",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1241,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "1567:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "1582:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:10"
									},
									"returnParameters": {
										"id": 1240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1239,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "1622:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:10"
									},
									"scope": 1264,
									"src": "1548:83:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1242,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:10",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1251,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "2326:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "2343:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:10"
									},
									"returnParameters": {
										"id": 1250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1249,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "2376:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1248,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:10"
									},
									"scope": 1264,
									"src": "2309:73:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1252,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:10",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1263,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "2712:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "2726:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "2738:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:10"
									},
									"returnParameters": {
										"id": 1262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "2771:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1260,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:10"
									},
									"scope": 1264,
									"src": "2690:87:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1265,
							"src": "204:2575:10",
							"usedErrors": [],
							"usedEvents": [
								1198,
								1207
							]
						}
					],
					"src": "106:2674:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1523
						],
						"Errors": [
							1545
						]
					},
					"id": 1524,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1266,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
							"file": "./Errors.sol",
							"id": 1268,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1524,
							"sourceUnit": 1546,
							"src": "127:36:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1267,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1545,
										"src": "135:6:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1269,
								"nodeType": "StructuredDocumentation",
								"src": "165:67:11",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1523,
							"linearizedBaseContracts": [
								1523
							],
							"name": "Address",
							"nameLocation": "241:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1270,
										"nodeType": "StructuredDocumentation",
										"src": "255:75:11",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 1274,
									"name": "AddressEmptyCode",
									"nameLocation": "341:16:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "366:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1274,
												"src": "358:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "357:16:11"
									},
									"src": "335:39:11"
								},
								{
									"body": {
										"id": 1320,
										"nodeType": "Block",
										"src": "1361:278:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1284,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1383:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1523",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1523",
																		"typeString": "library Address"
																	}
																],
																"id": 1283,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1375:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1282,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1375:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1375:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1286,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1389:7:11",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1375:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1287,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1279,
														"src": "1399:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1375:30:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1301,
												"nodeType": "IfStatement",
												"src": "1371:125:11",
												"trueBody": {
													"id": 1300,
													"nodeType": "Block",
													"src": "1407:89:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1294,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1463:4:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$1523",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$1523",
																						"typeString": "library Address"
																					}
																				],
																				"id": 1293,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1455:7:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1292,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1455:7:11",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1295,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1455:13:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1469:7:11",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "1455:21:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1297,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1279,
																		"src": "1478:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1289,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1545,
																		"src": "1428:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1545_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1291,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1435:19:11",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1533,
																	"src": "1428:26:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1298,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1428:57:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1299,
															"nodeType": "RevertStatement",
															"src": "1421:64:11"
														}
													]
												}
											},
											{
												"assignments": [
													1303,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1303,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1512:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 1320,
														"src": "1507:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1302,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1507:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1310,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1308,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1555:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1304,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1277,
																"src": "1525:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1535:4:11",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1525:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1307,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1306,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1279,
																"src": "1547:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1525:29:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1525:33:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1506:52:11"
											},
											{
												"condition": {
													"id": 1312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1572:8:11",
													"subExpression": {
														"id": 1311,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1303,
														"src": "1573:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1319,
												"nodeType": "IfStatement",
												"src": "1568:65:11",
												"trueBody": {
													"id": 1318,
													"nodeType": "Block",
													"src": "1582:51:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1313,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1545,
																		"src": "1603:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1545_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1610:10:11",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1536,
																	"src": "1603:17:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1316,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1603:19:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1317,
															"nodeType": "RevertStatement",
															"src": "1596:26:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1275,
										"nodeType": "StructuredDocumentation",
										"src": "380:905:11",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1321,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1299:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1325:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "1309:25:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1309:15:11",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1279,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1344:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "1336:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1308:43:11"
									},
									"returnParameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1361:0:11"
									},
									"scope": 1523,
									"src": "1290:349:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1337,
										"nodeType": "Block",
										"src": "2573:62:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1332,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1324,
															"src": "2612:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1333,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1326,
															"src": "2620:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1334,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1331,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1388,
														"src": "2590:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 1335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2590:38:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1330,
												"id": 1336,
												"nodeType": "Return",
												"src": "2583:45:11"
											}
										]
									},
									"documentation": {
										"id": 1322,
										"nodeType": "StructuredDocumentation",
										"src": "1645:834:11",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 1338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2493:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2514:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "2506:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2506:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1326,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2535:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "2522:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1325,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2522:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2505:35:11"
									},
									"returnParameters": {
										"id": 1330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1329,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "2559:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1328,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2559:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2558:14:11"
									},
									"scope": 1523,
									"src": "2484:151:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1387,
										"nodeType": "Block",
										"src": "3072:294:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1352,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3094:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1523",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1523",
																		"typeString": "library Address"
																	}
																],
																"id": 1351,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3086:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1350,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3086:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3086:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1354,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3100:7:11",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3086:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1355,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1345,
														"src": "3110:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3086:29:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1369,
												"nodeType": "IfStatement",
												"src": "3082:123:11",
												"trueBody": {
													"id": 1368,
													"nodeType": "Block",
													"src": "3117:88:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1362,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3173:4:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$1523",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$1523",
																						"typeString": "library Address"
																					}
																				],
																				"id": 1361,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3165:7:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1360,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3165:7:11",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1363,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3165:13:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1364,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3179:7:11",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3165:21:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1365,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1345,
																		"src": "3188:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1357,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1545,
																		"src": "3138:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1545_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1359,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3145:19:11",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1533,
																	"src": "3138:26:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1366,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3138:56:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1367,
															"nodeType": "RevertStatement",
															"src": "3131:63:11"
														}
													]
												}
											},
											{
												"assignments": [
													1371,
													1373
												],
												"declarations": [
													{
														"constant": false,
														"id": 1371,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3220:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 1387,
														"src": "3215:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1370,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3215:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1373,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3242:10:11",
														"nodeType": "VariableDeclaration",
														"scope": 1387,
														"src": "3229:23:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1372,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3229:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1380,
												"initialValue": {
													"arguments": [
														{
															"id": 1378,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1343,
															"src": "3282:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1374,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1341,
																"src": "3256:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3263:4:11",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3256:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1377,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1376,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1345,
																"src": "3275:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3256:25:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3256:31:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3214:73:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1382,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1341,
															"src": "3331:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1383,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1371,
															"src": "3339:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1384,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1373,
															"src": "3348:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1381,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1480,
														"src": "3304:26:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3304:55:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1349,
												"id": 1386,
												"nodeType": "Return",
												"src": "3297:62:11"
											}
										]
									},
									"documentation": {
										"id": 1339,
										"nodeType": "StructuredDocumentation",
										"src": "2641:313:11",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 1388,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "2968:21:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2998:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1388,
												"src": "2990:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2990:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1343,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3019:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1388,
												"src": "3006:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1342,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3006:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3033:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1388,
												"src": "3025:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3025:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2989:50:11"
									},
									"returnParameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1388,
												"src": "3058:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1347,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3058:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3057:14:11"
									},
									"scope": 1523,
									"src": "2959:407:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1413,
										"nodeType": "Block",
										"src": "3605:154:11",
										"statements": [
											{
												"assignments": [
													1399,
													1401
												],
												"declarations": [
													{
														"constant": false,
														"id": 1399,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3621:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 1413,
														"src": "3616:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1398,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3616:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1401,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3643:10:11",
														"nodeType": "VariableDeclaration",
														"scope": 1413,
														"src": "3630:23:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1400,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3630:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1406,
												"initialValue": {
													"arguments": [
														{
															"id": 1404,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1393,
															"src": "3675:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1402,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1391,
															"src": "3657:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1403,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3664:10:11",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3657:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3657:23:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3615:65:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1408,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1391,
															"src": "3724:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1409,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1399,
															"src": "3732:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1410,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1401,
															"src": "3741:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1407,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1480,
														"src": "3697:26:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3697:55:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1397,
												"id": 1412,
												"nodeType": "Return",
												"src": "3690:62:11"
											}
										]
									},
									"documentation": {
										"id": 1389,
										"nodeType": "StructuredDocumentation",
										"src": "3372:128:11",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 1414,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3514:18:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3541:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "3533:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1390,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3533:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3562:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "3549:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1392,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3549:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3532:35:11"
									},
									"returnParameters": {
										"id": 1397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1396,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "3591:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1395,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3591:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3590:14:11"
									},
									"scope": 1523,
									"src": "3505:254:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1439,
										"nodeType": "Block",
										"src": "3997:156:11",
										"statements": [
											{
												"assignments": [
													1425,
													1427
												],
												"declarations": [
													{
														"constant": false,
														"id": 1425,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4013:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 1439,
														"src": "4008:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1424,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4008:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1427,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4035:10:11",
														"nodeType": "VariableDeclaration",
														"scope": 1439,
														"src": "4022:23:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1426,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4022:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1432,
												"initialValue": {
													"arguments": [
														{
															"id": 1430,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1419,
															"src": "4069:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1428,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1417,
															"src": "4049:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1429,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4056:12:11",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4049:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4049:25:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4007:67:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1434,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1417,
															"src": "4118:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1435,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1425,
															"src": "4126:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1436,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1427,
															"src": "4135:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1433,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1480,
														"src": "4091:26:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4091:55:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1423,
												"id": 1438,
												"nodeType": "Return",
												"src": "4084:62:11"
											}
										]
									},
									"documentation": {
										"id": 1415,
										"nodeType": "StructuredDocumentation",
										"src": "3765:130:11",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 1440,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "3909:20:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1417,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3938:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1440,
												"src": "3930:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3930:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1419,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3959:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1440,
												"src": "3946:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1418,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3946:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3929:35:11"
									},
									"returnParameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1440,
												"src": "3983:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1421,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3983:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3982:14:11"
									},
									"scope": 1523,
									"src": "3900:253:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1479,
										"nodeType": "Block",
										"src": "4579:424:11",
										"statements": [
											{
												"condition": {
													"id": 1453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4593:8:11",
													"subExpression": {
														"id": 1452,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1445,
														"src": "4594:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1477,
													"nodeType": "Block",
													"src": "4653:344:11",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1468,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1459,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1447,
																			"src": "4841:10:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1460,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4852:6:11",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4841:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1461,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4862:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4841:22:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1467,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 1463,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1443,
																				"src": "4867:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1464,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4874:4:11",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "4867:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1465,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4879:6:11",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4867:18:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1466,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4889:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4867:23:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4841:49:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1474,
															"nodeType": "IfStatement",
															"src": "4837:119:11",
															"trueBody": {
																"id": 1473,
																"nodeType": "Block",
																"src": "4892:64:11",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1470,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1443,
																					"src": "4934:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1469,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1274,
																				"src": "4917:16:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 1471,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4917:24:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1472,
																		"nodeType": "RevertStatement",
																		"src": "4910:31:11"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1475,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1447,
																"src": "4976:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1451,
															"id": 1476,
															"nodeType": "Return",
															"src": "4969:17:11"
														}
													]
												},
												"id": 1478,
												"nodeType": "IfStatement",
												"src": "4589:408:11",
												"trueBody": {
													"id": 1458,
													"nodeType": "Block",
													"src": "4603:44:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1455,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1447,
																		"src": "4625:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1454,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1522,
																	"src": "4617:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1456,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4617:19:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1457,
															"nodeType": "ExpressionStatement",
															"src": "4617:19:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1441,
										"nodeType": "StructuredDocumentation",
										"src": "4159:257:11",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."
									},
									"id": 1480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4430:26:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4474:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1480,
												"src": "4466:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4466:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1445,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4495:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1480,
												"src": "4490:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1444,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4490:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1447,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4525:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1480,
												"src": "4512:23:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1446,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4512:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:85:11"
									},
									"returnParameters": {
										"id": 1451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1480,
												"src": "4565:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1449,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4565:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4564:14:11"
									},
									"scope": 1523,
									"src": "4421:582:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1501,
										"nodeType": "Block",
										"src": "5307:122:11",
										"statements": [
											{
												"condition": {
													"id": 1491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5321:8:11",
													"subExpression": {
														"id": 1490,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1483,
														"src": "5322:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1499,
													"nodeType": "Block",
													"src": "5381:42:11",
													"statements": [
														{
															"expression": {
																"id": 1497,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1485,
																"src": "5402:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1489,
															"id": 1498,
															"nodeType": "Return",
															"src": "5395:17:11"
														}
													]
												},
												"id": 1500,
												"nodeType": "IfStatement",
												"src": "5317:106:11",
												"trueBody": {
													"id": 1496,
													"nodeType": "Block",
													"src": "5331:44:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1493,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1485,
																		"src": "5353:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1492,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1522,
																	"src": "5345:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1494,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5345:19:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1495,
															"nodeType": "ExpressionStatement",
															"src": "5345:19:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1481,
										"nodeType": "StructuredDocumentation",
										"src": "5009:191:11",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."
									},
									"id": 1502,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5214:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1483,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5236:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1502,
												"src": "5231:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1482,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5231:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1485,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5258:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1502,
												"src": "5245:23:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1484,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5245:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5230:39:11"
									},
									"returnParameters": {
										"id": 1489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1488,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1502,
												"src": "5293:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1487,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5293:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5292:14:11"
									},
									"scope": 1523,
									"src": "5205:224:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1521,
										"nodeType": "Block",
										"src": "5598:432:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1508,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1505,
															"src": "5674:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1509,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5685:6:11",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5674:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1510,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5694:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5674:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1519,
													"nodeType": "Block",
													"src": "5973:51:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1514,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1545,
																		"src": "5994:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1545_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1516,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6001:10:11",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1536,
																	"src": "5994:17:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1517,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5994:19:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1518,
															"nodeType": "RevertStatement",
															"src": "5987:26:11"
														}
													]
												},
												"id": 1520,
												"nodeType": "IfStatement",
												"src": "5670:354:11",
												"trueBody": {
													"id": 1513,
													"nodeType": "Block",
													"src": "5697:270:11",
													"statements": [
														{
															"AST": {
																"nativeSrc": "5824:133:11",
																"nodeType": "YulBlock",
																"src": "5824:133:11",
																"statements": [
																	{
																		"nativeSrc": "5842:40:11",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5842:40:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "5871:10:11",
																					"nodeType": "YulIdentifier",
																					"src": "5871:10:11"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "5865:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "5865:5:11"
																			},
																			"nativeSrc": "5865:17:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5865:17:11"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "5846:15:11",
																				"nodeType": "YulTypedName",
																				"src": "5846:15:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5910:2:11",
																							"nodeType": "YulLiteral",
																							"src": "5910:2:11",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "5914:10:11",
																							"nodeType": "YulIdentifier",
																							"src": "5914:10:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5906:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "5906:3:11"
																					},
																					"nativeSrc": "5906:19:11",
																					"nodeType": "YulFunctionCall",
																					"src": "5906:19:11"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "5927:15:11",
																					"nodeType": "YulIdentifier",
																					"src": "5927:15:11"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5899:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "5899:6:11"
																			},
																			"nativeSrc": "5899:44:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5899:44:11"
																		},
																		"nativeSrc": "5899:44:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5899:44:11"
																	}
																]
															},
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 1505,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5871:10:11",
																	"valueSize": 1
																},
																{
																	"declaration": 1505,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5914:10:11",
																	"valueSize": 1
																}
															],
															"flags": [
																"memory-safe"
															],
															"id": 1512,
															"nodeType": "InlineAssembly",
															"src": "5799:158:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1503,
										"nodeType": "StructuredDocumentation",
										"src": "5435:103:11",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."
									},
									"id": 1522,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5552:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1505,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5573:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1522,
												"src": "5560:23:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1504,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5560:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5559:25:11"
									},
									"returnParameters": {
										"id": 1507,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5598:0:11"
									},
									"scope": 1523,
									"src": "5543:487:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1524,
							"src": "233:5799:11",
							"usedErrors": [
								1274
							],
							"usedEvents": []
						}
					],
					"src": "101:5932:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
					"exportedSymbols": {
						"Errors": [
							1545
						]
					},
					"id": 1546,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1525,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Errors",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1526,
								"nodeType": "StructuredDocumentation",
								"src": "126:284:12",
								"text": " @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 1545,
							"linearizedBaseContracts": [
								1545
							],
							"name": "Errors",
							"nameLocation": "419:6:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1527,
										"nodeType": "StructuredDocumentation",
										"src": "432:94:12",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cf479181",
									"id": 1533,
									"name": "InsufficientBalance",
									"nameLocation": "537:19:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1529,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "565:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "557:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1531,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "582:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "574:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:33:12"
									},
									"src": "531:59:12"
								},
								{
									"documentation": {
										"id": 1534,
										"nodeType": "StructuredDocumentation",
										"src": "596:89:12",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "d6bda275",
									"id": 1536,
									"name": "FailedCall",
									"nameLocation": "696:10:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1535,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:12"
									},
									"src": "690:19:12"
								},
								{
									"documentation": {
										"id": 1537,
										"nodeType": "StructuredDocumentation",
										"src": "715:46:12",
										"text": " @dev The deployment failed."
									},
									"errorSelector": "b06ebf3d",
									"id": 1539,
									"name": "FailedDeployment",
									"nameLocation": "772:16:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:12"
									},
									"src": "766:25:12"
								},
								{
									"documentation": {
										"id": 1540,
										"nodeType": "StructuredDocumentation",
										"src": "797:58:12",
										"text": " @dev A necessary precompile is missing."
									},
									"errorSelector": "42b01bce",
									"id": 1544,
									"name": "MissingPrecompile",
									"nameLocation": "866:17:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1542,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1544,
												"src": "884:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1541,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:9:12"
									},
									"src": "860:33:12"
								}
							],
							"scope": 1546,
							"src": "411:484:12",
							"usedErrors": [
								1533,
								1536,
								1539,
								1544
							],
							"usedEvents": []
						}
					],
					"src": "100:796:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							1669
						]
					},
					"id": 1670,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1547,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1548,
								"nodeType": "StructuredDocumentation",
								"src": "219:1187:13",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."
							},
							"fullyImplemented": true,
							"id": 1669,
							"linearizedBaseContracts": [
								1669
							],
							"name": "StorageSlot",
							"nameLocation": "1415:11:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 1551,
									"members": [
										{
											"constant": false,
											"id": 1550,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1470:5:13",
											"nodeType": "VariableDeclaration",
											"scope": 1551,
											"src": "1462:13:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1549,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1462:7:13",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1440:11:13",
									"nodeType": "StructDefinition",
									"scope": 1669,
									"src": "1433:49:13",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 1554,
									"members": [
										{
											"constant": false,
											"id": 1553,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1522:5:13",
											"nodeType": "VariableDeclaration",
											"scope": 1554,
											"src": "1517:10:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1552,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1517:4:13",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1495:11:13",
									"nodeType": "StructDefinition",
									"scope": 1669,
									"src": "1488:46:13",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 1557,
									"members": [
										{
											"constant": false,
											"id": 1556,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1577:5:13",
											"nodeType": "VariableDeclaration",
											"scope": 1557,
											"src": "1569:13:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1555,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1569:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1547:11:13",
									"nodeType": "StructDefinition",
									"scope": 1669,
									"src": "1540:49:13",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 1560,
									"members": [
										{
											"constant": false,
											"id": 1559,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1632:5:13",
											"nodeType": "VariableDeclaration",
											"scope": 1560,
											"src": "1624:13:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1558,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1624:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1602:11:13",
									"nodeType": "StructDefinition",
									"scope": 1669,
									"src": "1595:49:13",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Int256Slot",
									"id": 1563,
									"members": [
										{
											"constant": false,
											"id": 1562,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1685:5:13",
											"nodeType": "VariableDeclaration",
											"scope": 1563,
											"src": "1678:12:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											},
											"typeName": {
												"id": 1561,
												"name": "int256",
												"nodeType": "ElementaryTypeName",
												"src": "1678:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Int256Slot",
									"nameLocation": "1657:10:13",
									"nodeType": "StructDefinition",
									"scope": 1669,
									"src": "1650:47:13",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 1566,
									"members": [
										{
											"constant": false,
											"id": 1565,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1738:5:13",
											"nodeType": "VariableDeclaration",
											"scope": 1566,
											"src": "1731:12:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1564,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1731:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1710:10:13",
									"nodeType": "StructDefinition",
									"scope": 1669,
									"src": "1703:47:13",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 1569,
									"members": [
										{
											"constant": false,
											"id": 1568,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1789:5:13",
											"nodeType": "VariableDeclaration",
											"scope": 1569,
											"src": "1783:11:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1567,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1783:5:13",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1763:9:13",
									"nodeType": "StructDefinition",
									"scope": 1669,
									"src": "1756:45:13",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1579,
										"nodeType": "Block",
										"src": "1983:79:13",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2018:38:13",
													"nodeType": "YulBlock",
													"src": "2018:38:13",
													"statements": [
														{
															"nativeSrc": "2032:14:13",
															"nodeType": "YulAssignment",
															"src": "2032:14:13",
															"value": {
																"name": "slot",
																"nativeSrc": "2042:4:13",
																"nodeType": "YulIdentifier",
																"src": "2042:4:13"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2032:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2032:6:13"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1576,
														"isOffset": false,
														"isSlot": true,
														"src": "2032:6:13",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1572,
														"isOffset": false,
														"isSlot": false,
														"src": "2042:4:13",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1578,
												"nodeType": "InlineAssembly",
												"src": "1993:63:13"
											}
										]
									},
									"documentation": {
										"id": 1570,
										"nodeType": "StructuredDocumentation",
										"src": "1807:87:13",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 1580,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1908:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1572,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1931:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1580,
												"src": "1923:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1571,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1923:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1922:14:13"
									},
									"returnParameters": {
										"id": 1577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1576,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1980:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1580,
												"src": "1960:21:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1551_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1575,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1574,
														"name": "AddressSlot",
														"nameLocations": [
															"1960:11:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1551,
														"src": "1960:11:13"
													},
													"referencedDeclaration": 1551,
													"src": "1960:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1551_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1959:23:13"
									},
									"scope": 1669,
									"src": "1899:163:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1590,
										"nodeType": "Block",
										"src": "2243:79:13",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2278:38:13",
													"nodeType": "YulBlock",
													"src": "2278:38:13",
													"statements": [
														{
															"nativeSrc": "2292:14:13",
															"nodeType": "YulAssignment",
															"src": "2292:14:13",
															"value": {
																"name": "slot",
																"nativeSrc": "2302:4:13",
																"nodeType": "YulIdentifier",
																"src": "2302:4:13"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2292:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2292:6:13"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1587,
														"isOffset": false,
														"isSlot": true,
														"src": "2292:6:13",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1583,
														"isOffset": false,
														"isSlot": false,
														"src": "2302:4:13",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1589,
												"nodeType": "InlineAssembly",
												"src": "2253:63:13"
											}
										]
									},
									"documentation": {
										"id": 1581,
										"nodeType": "StructuredDocumentation",
										"src": "2068:86:13",
										"text": " @dev Returns a `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 1591,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "2168:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1583,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2191:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1591,
												"src": "2183:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1582,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2183:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:14:13"
									},
									"returnParameters": {
										"id": 1588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1587,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2240:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1591,
												"src": "2220:21:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$1554_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 1586,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1585,
														"name": "BooleanSlot",
														"nameLocations": [
															"2220:11:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1554,
														"src": "2220:11:13"
													},
													"referencedDeclaration": 1554,
													"src": "2220:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$1554_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2219:23:13"
									},
									"scope": 1669,
									"src": "2159:163:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1601,
										"nodeType": "Block",
										"src": "2503:79:13",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2538:38:13",
													"nodeType": "YulBlock",
													"src": "2538:38:13",
													"statements": [
														{
															"nativeSrc": "2552:14:13",
															"nodeType": "YulAssignment",
															"src": "2552:14:13",
															"value": {
																"name": "slot",
																"nativeSrc": "2562:4:13",
																"nodeType": "YulIdentifier",
																"src": "2562:4:13"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2552:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2552:6:13"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1598,
														"isOffset": false,
														"isSlot": true,
														"src": "2552:6:13",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1594,
														"isOffset": false,
														"isSlot": false,
														"src": "2562:4:13",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1600,
												"nodeType": "InlineAssembly",
												"src": "2513:63:13"
											}
										]
									},
									"documentation": {
										"id": 1592,
										"nodeType": "StructuredDocumentation",
										"src": "2328:86:13",
										"text": " @dev Returns a `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 1602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2428:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1594,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2451:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "2443:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1593,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2443:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2442:14:13"
									},
									"returnParameters": {
										"id": 1599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1598,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2500:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "2480:21:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1557_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1597,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1596,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2480:11:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1557,
														"src": "2480:11:13"
													},
													"referencedDeclaration": 1557,
													"src": "2480:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1557_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2479:23:13"
									},
									"scope": 1669,
									"src": "2419:163:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1612,
										"nodeType": "Block",
										"src": "2763:79:13",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2798:38:13",
													"nodeType": "YulBlock",
													"src": "2798:38:13",
													"statements": [
														{
															"nativeSrc": "2812:14:13",
															"nodeType": "YulAssignment",
															"src": "2812:14:13",
															"value": {
																"name": "slot",
																"nativeSrc": "2822:4:13",
																"nodeType": "YulIdentifier",
																"src": "2822:4:13"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2812:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2812:6:13"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1609,
														"isOffset": false,
														"isSlot": true,
														"src": "2812:6:13",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1605,
														"isOffset": false,
														"isSlot": false,
														"src": "2822:4:13",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1611,
												"nodeType": "InlineAssembly",
												"src": "2773:63:13"
											}
										]
									},
									"documentation": {
										"id": 1603,
										"nodeType": "StructuredDocumentation",
										"src": "2588:86:13",
										"text": " @dev Returns a `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 1613,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2688:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2711:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1613,
												"src": "2703:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1604,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2702:14:13"
									},
									"returnParameters": {
										"id": 1610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1609,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2760:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1613,
												"src": "2740:21:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1560_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1608,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1607,
														"name": "Uint256Slot",
														"nameLocations": [
															"2740:11:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1560,
														"src": "2740:11:13"
													},
													"referencedDeclaration": 1560,
													"src": "2740:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1560_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2739:23:13"
									},
									"scope": 1669,
									"src": "2679:163:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1623,
										"nodeType": "Block",
										"src": "3020:79:13",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3055:38:13",
													"nodeType": "YulBlock",
													"src": "3055:38:13",
													"statements": [
														{
															"nativeSrc": "3069:14:13",
															"nodeType": "YulAssignment",
															"src": "3069:14:13",
															"value": {
																"name": "slot",
																"nativeSrc": "3079:4:13",
																"nodeType": "YulIdentifier",
																"src": "3079:4:13"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3069:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3069:6:13"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1620,
														"isOffset": false,
														"isSlot": true,
														"src": "3069:6:13",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1616,
														"isOffset": false,
														"isSlot": false,
														"src": "3079:4:13",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1622,
												"nodeType": "InlineAssembly",
												"src": "3030:63:13"
											}
										]
									},
									"documentation": {
										"id": 1614,
										"nodeType": "StructuredDocumentation",
										"src": "2848:85:13",
										"text": " @dev Returns a `Int256Slot` with member `value` located at `slot`."
									},
									"id": 1624,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getInt256Slot",
									"nameLocation": "2947:13:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1616,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2969:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1624,
												"src": "2961:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1615,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2961:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2960:14:13"
									},
									"returnParameters": {
										"id": 1621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1620,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3017:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1624,
												"src": "2998:20:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Int256Slot_$1563_storage_ptr",
													"typeString": "struct StorageSlot.Int256Slot"
												},
												"typeName": {
													"id": 1619,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1618,
														"name": "Int256Slot",
														"nameLocations": [
															"2998:10:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1563,
														"src": "2998:10:13"
													},
													"referencedDeclaration": 1563,
													"src": "2998:10:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Int256Slot_$1563_storage_ptr",
														"typeString": "struct StorageSlot.Int256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2997:22:13"
									},
									"scope": 1669,
									"src": "2938:161:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1634,
										"nodeType": "Block",
										"src": "3277:79:13",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3312:38:13",
													"nodeType": "YulBlock",
													"src": "3312:38:13",
													"statements": [
														{
															"nativeSrc": "3326:14:13",
															"nodeType": "YulAssignment",
															"src": "3326:14:13",
															"value": {
																"name": "slot",
																"nativeSrc": "3336:4:13",
																"nodeType": "YulIdentifier",
																"src": "3336:4:13"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3326:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3326:6:13"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1631,
														"isOffset": false,
														"isSlot": true,
														"src": "3326:6:13",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1627,
														"isOffset": false,
														"isSlot": false,
														"src": "3336:4:13",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1633,
												"nodeType": "InlineAssembly",
												"src": "3287:63:13"
											}
										]
									},
									"documentation": {
										"id": 1625,
										"nodeType": "StructuredDocumentation",
										"src": "3105:85:13",
										"text": " @dev Returns a `StringSlot` with member `value` located at `slot`."
									},
									"id": 1635,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3204:13:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1627,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3226:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1635,
												"src": "3218:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1626,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3218:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3217:14:13"
									},
									"returnParameters": {
										"id": 1632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1631,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3274:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1635,
												"src": "3255:20:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1566_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1630,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1629,
														"name": "StringSlot",
														"nameLocations": [
															"3255:10:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1566,
														"src": "3255:10:13"
													},
													"referencedDeclaration": 1566,
													"src": "3255:10:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1566_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3254:22:13"
									},
									"scope": 1669,
									"src": "3195:161:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1645,
										"nodeType": "Block",
										"src": "3558:85:13",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3593:44:13",
													"nodeType": "YulBlock",
													"src": "3593:44:13",
													"statements": [
														{
															"nativeSrc": "3607:20:13",
															"nodeType": "YulAssignment",
															"src": "3607:20:13",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3617:10:13",
																"nodeType": "YulIdentifier",
																"src": "3617:10:13"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3607:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3607:6:13"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1642,
														"isOffset": false,
														"isSlot": true,
														"src": "3607:6:13",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1638,
														"isOffset": false,
														"isSlot": true,
														"src": "3617:10:13",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1644,
												"nodeType": "InlineAssembly",
												"src": "3568:69:13"
											}
										]
									},
									"documentation": {
										"id": 1636,
										"nodeType": "StructuredDocumentation",
										"src": "3362:101:13",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 1646,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3477:13:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1638,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3506:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "3491:20:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1637,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3491:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3490:22:13"
									},
									"returnParameters": {
										"id": 1643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1642,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3555:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "3536:20:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1566_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1641,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1640,
														"name": "StringSlot",
														"nameLocations": [
															"3536:10:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1566,
														"src": "3536:10:13"
													},
													"referencedDeclaration": 1566,
													"src": "3536:10:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1566_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3535:22:13"
									},
									"scope": 1669,
									"src": "3468:175:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1656,
										"nodeType": "Block",
										"src": "3818:79:13",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3853:38:13",
													"nodeType": "YulBlock",
													"src": "3853:38:13",
													"statements": [
														{
															"nativeSrc": "3867:14:13",
															"nodeType": "YulAssignment",
															"src": "3867:14:13",
															"value": {
																"name": "slot",
																"nativeSrc": "3877:4:13",
																"nodeType": "YulIdentifier",
																"src": "3877:4:13"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3867:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3867:6:13"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1653,
														"isOffset": false,
														"isSlot": true,
														"src": "3867:6:13",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1649,
														"isOffset": false,
														"isSlot": false,
														"src": "3877:4:13",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1655,
												"nodeType": "InlineAssembly",
												"src": "3828:63:13"
											}
										]
									},
									"documentation": {
										"id": 1647,
										"nodeType": "StructuredDocumentation",
										"src": "3649:84:13",
										"text": " @dev Returns a `BytesSlot` with member `value` located at `slot`."
									},
									"id": 1657,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3747:12:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1649,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3768:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1657,
												"src": "3760:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1648,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:14:13"
									},
									"returnParameters": {
										"id": 1654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1653,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3815:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1657,
												"src": "3797:19:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1569_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1652,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1651,
														"name": "BytesSlot",
														"nameLocations": [
															"3797:9:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1569,
														"src": "3797:9:13"
													},
													"referencedDeclaration": 1569,
													"src": "3797:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1569_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:21:13"
									},
									"scope": 1669,
									"src": "3738:159:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1667,
										"nodeType": "Block",
										"src": "4094:85:13",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4129:44:13",
													"nodeType": "YulBlock",
													"src": "4129:44:13",
													"statements": [
														{
															"nativeSrc": "4143:20:13",
															"nodeType": "YulAssignment",
															"src": "4143:20:13",
															"value": {
																"name": "store.slot",
																"nativeSrc": "4153:10:13",
																"nodeType": "YulIdentifier",
																"src": "4153:10:13"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "4143:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4143:6:13"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1664,
														"isOffset": false,
														"isSlot": true,
														"src": "4143:6:13",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1660,
														"isOffset": false,
														"isSlot": true,
														"src": "4153:10:13",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1666,
												"nodeType": "InlineAssembly",
												"src": "4104:69:13"
											}
										]
									},
									"documentation": {
										"id": 1658,
										"nodeType": "StructuredDocumentation",
										"src": "3903:99:13",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 1668,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "4016:12:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1660,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "4043:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1668,
												"src": "4029:19:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1659,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4029:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4028:21:13"
									},
									"returnParameters": {
										"id": 1665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1664,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4091:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1668,
												"src": "4073:19:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1569_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1663,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1662,
														"name": "BytesSlot",
														"nameLocations": [
															"4073:9:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1569,
														"src": "4073:9:13"
													},
													"referencedDeclaration": 1569,
													"src": "4073:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1569_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4072:21:13"
									},
									"scope": 1669,
									"src": "4007:172:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1670,
							"src": "1407:2774:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3989:13"
				},
				"id": 13
			},
			"ICO/ICOProxy.sol": {
				"ast": {
					"absolutePath": "ICO/ICOProxy.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							45
						],
						"ContextUpgradeable": [
							722
						],
						"ERC1967Utils": [
							1176
						],
						"ICO": [
							3147
						],
						"IERC1822Proxiable": [
							882
						],
						"IERC20": [
							1264
						],
						"Initializable": [
							494
						],
						"OwnableUpgradeable": [
							240
						],
						"ReentrancyGuardUpgradeable": [
							851
						],
						"UUPSUpgradeable": [
							676
						]
					},
					"id": 3148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1671,
							"literals": [
								"solidity",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:14"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1672,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3148,
							"sourceUnit": 1265,
							"src": "57:56:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 1673,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3148,
							"sourceUnit": 241,
							"src": "114:75:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"id": 1674,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3148,
							"sourceUnit": 677,
							"src": "190:77:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
							"file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
							"id": 1675,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3148,
							"sourceUnit": 46,
							"src": "268:76:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol",
							"id": 1676,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3148,
							"sourceUnit": 852,
							"src": "345:82:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1677,
										"name": "ReentrancyGuardUpgradeable",
										"nameLocations": [
											"445:26:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 851,
										"src": "445:26:14"
									},
									"id": 1678,
									"nodeType": "InheritanceSpecifier",
									"src": "445:26:14"
								},
								{
									"baseName": {
										"id": 1679,
										"name": "OwnableUpgradeable",
										"nameLocations": [
											"473:18:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 240,
										"src": "473:18:14"
									},
									"id": 1680,
									"nodeType": "InheritanceSpecifier",
									"src": "473:18:14"
								},
								{
									"baseName": {
										"id": 1681,
										"name": "UUPSUpgradeable",
										"nameLocations": [
											"493:15:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 676,
										"src": "493:15:14"
									},
									"id": 1682,
									"nodeType": "InheritanceSpecifier",
									"src": "493:15:14"
								}
							],
							"canonicalName": "ICO",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3147,
							"linearizedBaseContracts": [
								3147,
								676,
								882,
								240,
								722,
								851,
								494
							],
							"name": "ICO",
							"nameLocation": "438:3:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1685,
									"mutability": "mutable",
									"name": "priceFeedBNB",
									"nameLocation": "574:12:14",
									"nodeType": "VariableDeclaration",
									"scope": 3147,
									"src": "544:42:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
										"typeString": "contract AggregatorV3Interface"
									},
									"typeName": {
										"id": 1684,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1683,
											"name": "AggregatorV3Interface",
											"nameLocations": [
												"544:21:14"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 45,
											"src": "544:21:14"
										},
										"referencedDeclaration": 45,
										"src": "544:21:14",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
											"typeString": "contract AggregatorV3Interface"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1688,
									"mutability": "mutable",
									"name": "priceFeedUSDT",
									"nameLocation": "622:13:14",
									"nodeType": "VariableDeclaration",
									"scope": 3147,
									"src": "592:43:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
										"typeString": "contract AggregatorV3Interface"
									},
									"typeName": {
										"id": 1687,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1686,
											"name": "AggregatorV3Interface",
											"nameLocations": [
												"592:21:14"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 45,
											"src": "592:21:14"
										},
										"referencedDeclaration": 45,
										"src": "592:21:14",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
											"typeString": "contract AggregatorV3Interface"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1691,
									"mutability": "mutable",
									"name": "priceFeedUSDC",
									"nameLocation": "671:13:14",
									"nodeType": "VariableDeclaration",
									"scope": 3147,
									"src": "641:43:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
										"typeString": "contract AggregatorV3Interface"
									},
									"typeName": {
										"id": 1690,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1689,
											"name": "AggregatorV3Interface",
											"nameLocations": [
												"641:21:14"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 45,
											"src": "641:21:14"
										},
										"referencedDeclaration": 45,
										"src": "641:21:14",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
											"typeString": "contract AggregatorV3Interface"
										}
									},
									"visibility": "private"
								},
								{
									"canonicalName": "ICO.Sale",
									"id": 1702,
									"members": [
										{
											"constant": false,
											"id": 1693,
											"mutability": "mutable",
											"name": "startTime",
											"nameLocation": "721:9:14",
											"nodeType": "VariableDeclaration",
											"scope": 1702,
											"src": "713:17:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1692,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "713:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1695,
											"mutability": "mutable",
											"name": "endTime",
											"nameLocation": "748:7:14",
											"nodeType": "VariableDeclaration",
											"scope": 1702,
											"src": "740:15:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1694,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "740:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1697,
											"mutability": "mutable",
											"name": "tokenPriceUSD",
											"nameLocation": "773:13:14",
											"nodeType": "VariableDeclaration",
											"scope": 1702,
											"src": "765:21:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1696,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "765:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1699,
											"mutability": "mutable",
											"name": "tokensSold",
											"nameLocation": "804:10:14",
											"nodeType": "VariableDeclaration",
											"scope": 1702,
											"src": "796:18:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1698,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "796:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1701,
											"mutability": "mutable",
											"name": "isFinalized",
											"nameLocation": "829:11:14",
											"nodeType": "VariableDeclaration",
											"scope": 1702,
											"src": "824:16:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1700,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "824:4:14",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Sale",
									"nameLocation": "698:4:14",
									"nodeType": "StructDefinition",
									"scope": 3147,
									"src": "691:156:14",
									"visibility": "public"
								},
								{
									"canonicalName": "ICO.PaymentMethod",
									"id": 1706,
									"members": [
										{
											"id": 1703,
											"name": "BNB",
											"nameLocation": "882:3:14",
											"nodeType": "EnumValue",
											"src": "882:3:14"
										},
										{
											"id": 1704,
											"name": "USDT",
											"nameLocation": "895:4:14",
											"nodeType": "EnumValue",
											"src": "895:4:14"
										},
										{
											"id": 1705,
											"name": "USDC",
											"nameLocation": "909:4:14",
											"nodeType": "EnumValue",
											"src": "909:4:14"
										}
									],
									"name": "PaymentMethod",
									"nameLocation": "858:13:14",
									"nodeType": "EnumDefinition",
									"src": "853:66:14"
								},
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 1709,
									"mutability": "mutable",
									"name": "token",
									"nameLocation": "962:5:14",
									"nodeType": "VariableDeclaration",
									"scope": 3147,
									"src": "948:19:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$1264",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1708,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1707,
											"name": "IERC20",
											"nameLocations": [
												"948:6:14"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1264,
											"src": "948:6:14"
										},
										"referencedDeclaration": 1264,
										"src": "948:6:14",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1264",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2151206e",
									"id": 1711,
									"mutability": "mutable",
									"name": "softCapInUSD",
									"nameLocation": "988:12:14",
									"nodeType": "VariableDeclaration",
									"scope": 3147,
									"src": "973:27:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1710,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "973:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c1560a14",
									"id": 1713,
									"mutability": "mutable",
									"name": "hardCapInUSD",
									"nameLocation": "1021:12:14",
									"nodeType": "VariableDeclaration",
									"scope": 3147,
									"src": "1006:27:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1712,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1006:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a1e89aec",
									"id": 1715,
									"mutability": "mutable",
									"name": "saleCount",
									"nameLocation": "1054:9:14",
									"nodeType": "VariableDeclaration",
									"scope": 3147,
									"src": "1039:24:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1714,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1039:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "721bc38b",
									"id": 1717,
									"mutability": "mutable",
									"name": "totalFundsRaisedUSD",
									"nameLocation": "1084:19:14",
									"nodeType": "VariableDeclaration",
									"scope": 3147,
									"src": "1069:34:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1716,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1069:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "63b20117",
									"id": 1719,
									"mutability": "mutable",
									"name": "totalTokensSold",
									"nameLocation": "1124:15:14",
									"nodeType": "VariableDeclaration",
									"scope": 3147,
									"src": "1109:30:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1718,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1109:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 1722,
									"mutability": "constant",
									"name": "PRECISION_10",
									"nameLocation": "1162:12:14",
									"nodeType": "VariableDeclaration",
									"scope": 3147,
									"src": "1145:36:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1720,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1145:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31653130",
										"id": 1721,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1177:4:14",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000000000_by_1",
											"typeString": "int_const 10000000000"
										},
										"value": "1e10"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1725,
									"mutability": "constant",
									"name": "PRECISION_18",
									"nameLocation": "1204:12:14",
									"nodeType": "VariableDeclaration",
									"scope": 3147,
									"src": "1187:36:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1723,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1187:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31653138",
										"id": 1724,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1219:4:14",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"value": "1e18"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "d1f3b23e",
									"id": 1727,
									"mutability": "mutable",
									"name": "isICOFinalized",
									"nameLocation": "1241:14:14",
									"nodeType": "VariableDeclaration",
									"scope": 3147,
									"src": "1229:26:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1726,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1229:4:14",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4dee1dc3",
									"id": 1729,
									"mutability": "mutable",
									"name": "isTokensAirdropped",
									"nameLocation": "1274:18:14",
									"nodeType": "VariableDeclaration",
									"scope": 3147,
									"src": "1262:30:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1728,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1262:4:14",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b9469e1a",
									"id": 1731,
									"mutability": "mutable",
									"name": "isFreezed",
									"nameLocation": "1310:9:14",
									"nodeType": "VariableDeclaration",
									"scope": 3147,
									"src": "1298:21:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1730,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1298:4:14",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3feb5f2b",
									"id": 1734,
									"mutability": "mutable",
									"name": "investors",
									"nameLocation": "1344:9:14",
									"nodeType": "VariableDeclaration",
									"scope": 3147,
									"src": "1327:26:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 1732,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1327:7:14",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 1733,
										"nodeType": "ArrayTypeName",
										"src": "1327:9:14",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2f48ab7d",
									"id": 1736,
									"mutability": "mutable",
									"name": "usdt",
									"nameLocation": "1374:4:14",
									"nodeType": "VariableDeclaration",
									"scope": 3147,
									"src": "1359:19:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1735,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1359:7:14",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3e413bee",
									"id": 1738,
									"mutability": "mutable",
									"name": "usdc",
									"nameLocation": "1399:4:14",
									"nodeType": "VariableDeclaration",
									"scope": 3147,
									"src": "1384:19:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1737,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1384:7:14",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b5f522f7",
									"id": 1743,
									"mutability": "mutable",
									"name": "sales",
									"nameLocation": "1458:5:14",
									"nodeType": "VariableDeclaration",
									"scope": 3147,
									"src": "1426:37:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Sale_$1702_storage_$",
										"typeString": "mapping(uint256 => struct ICO.Sale)"
									},
									"typeName": {
										"id": 1742,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1739,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1434:7:14",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1426:24:14",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Sale_$1702_storage_$",
											"typeString": "mapping(uint256 => struct ICO.Sale)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1741,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1740,
												"name": "Sale",
												"nameLocations": [
													"1445:4:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1702,
												"src": "1445:4:14"
											},
											"referencedDeclaration": 1702,
											"src": "1445:4:14",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Sale_$1702_storage_ptr",
												"typeString": "struct ICO.Sale"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c81ffdea",
									"id": 1747,
									"mutability": "mutable",
									"name": "contributionsInUSD",
									"nameLocation": "1504:18:14",
									"nodeType": "VariableDeclaration",
									"scope": 3147,
									"src": "1469:53:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1746,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1744,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1477:7:14",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1469:27:14",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1745,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:14",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e8e87389",
									"id": 1751,
									"mutability": "mutable",
									"name": "tokensBoughtByInvestor",
									"nameLocation": "1563:22:14",
									"nodeType": "VariableDeclaration",
									"scope": 3147,
									"src": "1528:57:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1750,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1748,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1536:7:14",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1528:27:14",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1749,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1547:7:14",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1756,
									"mutability": "mutable",
									"name": "paymentMethodForInvestor",
									"nameLocation": "1633:24:14",
									"nodeType": "VariableDeclaration",
									"scope": 3147,
									"src": "1591:66:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_enum$_PaymentMethod_$1706_$",
										"typeString": "mapping(address => enum ICO.PaymentMethod)"
									},
									"typeName": {
										"id": 1755,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1752,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1599:7:14",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1591:33:14",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_enum$_PaymentMethod_$1706_$",
											"typeString": "mapping(address => enum ICO.PaymentMethod)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1754,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1753,
												"name": "PaymentMethod",
												"nameLocations": [
													"1610:13:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1706,
												"src": "1610:13:14"
											},
											"referencedDeclaration": 1706,
											"src": "1610:13:14",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_PaymentMethod_$1706",
												"typeString": "enum ICO.PaymentMethod"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1763,
									"mutability": "mutable",
									"name": "investorPayments",
									"nameLocation": "1724:16:14",
									"nodeType": "VariableDeclaration",
									"scope": 3147,
									"src": "1663:77:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_PaymentMethod_$1706_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(enum ICO.PaymentMethod => uint256))"
									},
									"typeName": {
										"id": 1762,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1757,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1671:7:14",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1663:53:14",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_PaymentMethod_$1706_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(enum ICO.PaymentMethod => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1761,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 1759,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1758,
													"name": "PaymentMethod",
													"nameLocations": [
														"1690:13:14"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1706,
													"src": "1690:13:14"
												},
												"referencedDeclaration": 1706,
												"src": "1690:13:14",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_PaymentMethod_$1706",
													"typeString": "enum ICO.PaymentMethod"
												}
											},
											"nodeType": "Mapping",
											"src": "1682:33:14",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_enum$_PaymentMethod_$1706_$_t_uint256_$",
												"typeString": "mapping(enum ICO.PaymentMethod => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1760,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1707:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "9c4b134da32aab35252391880a9f2a3c13a760d7817ae8823f2b301d3522045a",
									"id": 1767,
									"name": "ICOFinalized",
									"nameLocation": "1767:12:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1765,
												"indexed": true,
												"mutability": "mutable",
												"name": "totalTokensSold",
												"nameLocation": "1796:15:14",
												"nodeType": "VariableDeclaration",
												"scope": 1767,
												"src": "1780:31:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1780:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1779:33:14"
									},
									"src": "1761:52:14"
								},
								{
									"anonymous": false,
									"eventSelector": "7b1c1ad0f3e04c9ef02d69280925520638d1cf076c56c4aa5bb1d0d37a949a3d",
									"id": 1771,
									"name": "ImmediateFinalization",
									"nameLocation": "1824:21:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1769,
												"indexed": true,
												"mutability": "mutable",
												"name": "saleId",
												"nameLocation": "1862:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1771,
												"src": "1846:22:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1846:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1845:24:14"
									},
									"src": "1818:52:14"
								},
								{
									"anonymous": false,
									"eventSelector": "03829ab241648d7348f97e4f77d36451330f2276ea8eeb3428e462012f9699e7",
									"id": 1780,
									"name": "RefundInitiated",
									"nameLocation": "1881:15:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1773,
												"indexed": true,
												"mutability": "mutable",
												"name": "investor",
												"nameLocation": "1922:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "1906:24:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1772,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1906:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1775,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1948:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "1940:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1940:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1778,
												"indexed": false,
												"mutability": "mutable",
												"name": "paymentMethod",
												"nameLocation": "1978:13:14",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "1964:27:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_PaymentMethod_$1706",
													"typeString": "enum ICO.PaymentMethod"
												},
												"typeName": {
													"id": 1777,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1776,
														"name": "PaymentMethod",
														"nameLocations": [
															"1964:13:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1706,
														"src": "1964:13:14"
													},
													"referencedDeclaration": 1706,
													"src": "1964:13:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_PaymentMethod_$1706",
														"typeString": "enum ICO.PaymentMethod"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1896:101:14"
									},
									"src": "1875:123:14"
								},
								{
									"anonymous": false,
									"eventSelector": "9bdcd0cc5503fb9a8dd7311d9617e33108c4b7c8948cc544b16c1fd63c6f475b",
									"id": 1786,
									"name": "TokenAirdropped",
									"nameLocation": "2009:15:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1782,
												"indexed": true,
												"mutability": "mutable",
												"name": "investor",
												"nameLocation": "2041:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 1786,
												"src": "2025:24:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1781,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1784,
												"indexed": false,
												"mutability": "mutable",
												"name": "airdroppedAmount",
												"nameLocation": "2059:16:14",
												"nodeType": "VariableDeclaration",
												"scope": 1786,
												"src": "2051:24:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2051:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:52:14"
									},
									"src": "2003:74:14"
								},
								{
									"anonymous": false,
									"eventSelector": "dbcef474a632721725d49e3f35d9defe0257100b01d1e4b4b135b14d6fe296e8",
									"id": 1801,
									"name": "TokensPurchased",
									"nameLocation": "2088:15:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1788,
												"indexed": true,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "2129:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1801,
												"src": "2113:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1787,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2113:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1790,
												"indexed": true,
												"mutability": "mutable",
												"name": "saleId",
												"nameLocation": "2160:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1801,
												"src": "2144:22:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2144:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1792,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenPurchaseAmount",
												"nameLocation": "2184:19:14",
												"nodeType": "VariableDeclaration",
												"scope": 1801,
												"src": "2176:27:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2176:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1794,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenPriceUSD",
												"nameLocation": "2221:13:14",
												"nodeType": "VariableDeclaration",
												"scope": 1801,
												"src": "2213:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1793,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2213:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1796,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountPaid",
												"nameLocation": "2252:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 1801,
												"src": "2244:18:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2244:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1799,
												"indexed": false,
												"mutability": "mutable",
												"name": "paymentMethod",
												"nameLocation": "2286:13:14",
												"nodeType": "VariableDeclaration",
												"scope": 1801,
												"src": "2272:27:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_PaymentMethod_$1706",
													"typeString": "enum ICO.PaymentMethod"
												},
												"typeName": {
													"id": 1798,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1797,
														"name": "PaymentMethod",
														"nameLocations": [
															"2272:13:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1706,
														"src": "2272:13:14"
													},
													"referencedDeclaration": 1706,
													"src": "2272:13:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_PaymentMethod_$1706",
														"typeString": "enum ICO.PaymentMethod"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2103:202:14"
									},
									"src": "2082:224:14"
								},
								{
									"anonymous": false,
									"eventSelector": "63b43fa153147ade1de28ed76841cdbc34e510ed94dd1ff5a88e278b0b1ad9ba",
									"id": 1811,
									"name": "NewSaleCreated",
									"nameLocation": "2317:14:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1803,
												"indexed": true,
												"mutability": "mutable",
												"name": "saleId",
												"nameLocation": "2357:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1811,
												"src": "2341:22:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2341:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1805,
												"indexed": false,
												"mutability": "mutable",
												"name": "startTime",
												"nameLocation": "2381:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 1811,
												"src": "2373:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1804,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2373:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1807,
												"indexed": false,
												"mutability": "mutable",
												"name": "endTime",
												"nameLocation": "2408:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1811,
												"src": "2400:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1806,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2400:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1809,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenPriceUSD",
												"nameLocation": "2433:13:14",
												"nodeType": "VariableDeclaration",
												"scope": 1811,
												"src": "2425:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2425:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2331:121:14"
									},
									"src": "2311:142:14"
								},
								{
									"body": {
										"id": 1879,
										"nodeType": "Block",
										"src": "2730:409:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1834,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2755:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1835,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2759:6:14",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2755:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1833,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "2740:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2740:26:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1837,
												"nodeType": "ExpressionStatement",
												"src": "2740:26:14"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1838,
														"name": "__UUPSUpgradeable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 548,
														"src": "2776:22:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2776:24:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1840,
												"nodeType": "ExpressionStatement",
												"src": "2776:24:14"
											},
											{
												"expression": {
													"id": 1843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1841,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1709,
														"src": "2811:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1264",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1842,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1814,
														"src": "2819:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1264",
															"typeString": "contract IERC20"
														}
													},
													"src": "2811:14:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1264",
														"typeString": "contract IERC20"
													}
												},
												"id": 1844,
												"nodeType": "ExpressionStatement",
												"src": "2811:14:14"
											},
											{
												"expression": {
													"id": 1847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1845,
														"name": "softCapInUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1711,
														"src": "2835:12:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1846,
														"name": "_softCapInUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1820,
														"src": "2850:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2835:28:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1848,
												"nodeType": "ExpressionStatement",
												"src": "2835:28:14"
											},
											{
												"expression": {
													"id": 1851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1849,
														"name": "hardCapInUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1713,
														"src": "2873:12:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1850,
														"name": "_hardCapInUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1822,
														"src": "2888:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2873:28:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1852,
												"nodeType": "ExpressionStatement",
												"src": "2873:28:14"
											},
											{
												"expression": {
													"id": 1855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1853,
														"name": "usdt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1736,
														"src": "2911:4:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1854,
														"name": "_usdt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1816,
														"src": "2918:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2911:12:14",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1856,
												"nodeType": "ExpressionStatement",
												"src": "2911:12:14"
											},
											{
												"expression": {
													"id": 1859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1857,
														"name": "usdc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1738,
														"src": "2933:4:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1858,
														"name": "_usdc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1818,
														"src": "2940:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2933:12:14",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1860,
												"nodeType": "ExpressionStatement",
												"src": "2933:12:14"
											},
											{
												"expression": {
													"id": 1865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1861,
														"name": "priceFeedBNB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1685,
														"src": "2955:12:14",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1863,
																"name": "_priceFeedBNB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1824,
																"src": "2992:13:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1862,
															"name": "AggregatorV3Interface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "2970:21:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
																"typeString": "type(contract AggregatorV3Interface)"
															}
														},
														"id": 1864,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2970:36:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"src": "2955:51:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"id": 1866,
												"nodeType": "ExpressionStatement",
												"src": "2955:51:14"
											},
											{
												"expression": {
													"id": 1871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1867,
														"name": "priceFeedUSDT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1688,
														"src": "3016:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1869,
																"name": "_priceFeedUSDT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1826,
																"src": "3054:14:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1868,
															"name": "AggregatorV3Interface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "3032:21:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
																"typeString": "type(contract AggregatorV3Interface)"
															}
														},
														"id": 1870,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3032:37:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"src": "3016:53:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"id": 1872,
												"nodeType": "ExpressionStatement",
												"src": "3016:53:14"
											},
											{
												"expression": {
													"id": 1877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1873,
														"name": "priceFeedUSDC",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1691,
														"src": "3079:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1875,
																"name": "_priceFeedUSDC",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1828,
																"src": "3117:14:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1874,
															"name": "AggregatorV3Interface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "3095:21:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
																"typeString": "type(contract AggregatorV3Interface)"
															}
														},
														"id": 1876,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3095:37:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"src": "3079:53:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"id": 1878,
												"nodeType": "ExpressionStatement",
												"src": "3079:53:14"
											}
										]
									},
									"functionSelector": "fd663da2",
									"id": 1880,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1831,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1830,
												"name": "initializer",
												"nameLocations": [
													"2718:11:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 348,
												"src": "2718:11:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "2718:11:14"
										}
									],
									"name": "initialize",
									"nameLocation": "2468:10:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1814,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "2495:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "2488:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1264",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1813,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1812,
														"name": "IERC20",
														"nameLocations": [
															"2488:6:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1264,
														"src": "2488:6:14"
													},
													"referencedDeclaration": 1264,
													"src": "2488:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1264",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1816,
												"mutability": "mutable",
												"name": "_usdt",
												"nameLocation": "2519:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "2511:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2511:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1818,
												"mutability": "mutable",
												"name": "_usdc",
												"nameLocation": "2542:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "2534:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1817,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2534:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1820,
												"mutability": "mutable",
												"name": "_softCapInUSD",
												"nameLocation": "2565:13:14",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "2557:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1819,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2557:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1822,
												"mutability": "mutable",
												"name": "_hardCapInUSD",
												"nameLocation": "2596:13:14",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "2588:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1821,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2588:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1824,
												"mutability": "mutable",
												"name": "_priceFeedBNB",
												"nameLocation": "2627:13:14",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "2619:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1823,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2619:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1826,
												"mutability": "mutable",
												"name": "_priceFeedUSDT",
												"nameLocation": "2658:14:14",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "2650:22:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1825,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2650:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1828,
												"mutability": "mutable",
												"name": "_priceFeedUSDC",
												"nameLocation": "2690:14:14",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "2682:22:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1827,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2478:232:14"
									},
									"returnParameters": {
										"id": 1832,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2730:0:14"
									},
									"scope": 3147,
									"src": "2459:680:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1889,
										"nodeType": "Block",
										"src": "3172:77:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1884,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3190:15:14",
															"subExpression": {
																"id": 1883,
																"name": "isICOFinalized",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1727,
																"src": "3191:14:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "49434f20616c72656164792066696e616c697a6564",
															"id": 1885,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3207:23:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d894807d07a4878944df72000c35a26fc670b7c15dedc34156876b2464e1fd23",
																"typeString": "literal_string \"ICO already finalized\""
															},
															"value": "ICO already finalized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d894807d07a4878944df72000c35a26fc670b7c15dedc34156876b2464e1fd23",
																"typeString": "literal_string \"ICO already finalized\""
															}
														],
														"id": 1882,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3182:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3182:49:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1887,
												"nodeType": "ExpressionStatement",
												"src": "3182:49:14"
											},
											{
												"id": 1888,
												"nodeType": "PlaceholderStatement",
												"src": "3241:1:14"
											}
										]
									},
									"id": 1890,
									"name": "icoNotFinalized",
									"nameLocation": "3154:15:14",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1881,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3169:2:14"
									},
									"src": "3145:104:14",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1899,
										"nodeType": "Block",
										"src": "3274:58:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1894,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3292:10:14",
															"subExpression": {
																"id": 1893,
																"name": "isFreezed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1731,
																"src": "3293:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "667265657a6564",
															"id": 1895,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3304:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5e1a07520dc062ba4ff449fce67822fde8495347c7d50898a83b1dfb63596097",
																"typeString": "literal_string \"freezed\""
															},
															"value": "freezed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5e1a07520dc062ba4ff449fce67822fde8495347c7d50898a83b1dfb63596097",
																"typeString": "literal_string \"freezed\""
															}
														],
														"id": 1892,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3284:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3284:30:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1897,
												"nodeType": "ExpressionStatement",
												"src": "3284:30:14"
											},
											{
												"id": 1898,
												"nodeType": "PlaceholderStatement",
												"src": "3324:1:14"
											}
										]
									},
									"id": 1900,
									"name": "freezed",
									"nameLocation": "3264:7:14",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1891,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3271:2:14"
									},
									"src": "3255:77:14",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1911,
										"nodeType": "Block",
										"src": "3383:84:14",
										"statements": [
											{
												"expression": {
													"id": 1909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1907,
														"name": "isFreezed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1731,
														"src": "3444:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1908,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3456:4:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3444:16:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1910,
												"nodeType": "ExpressionStatement",
												"src": "3444:16:14"
											}
										]
									},
									"functionSelector": "62a5af3b",
									"id": 1912,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1903,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1902,
												"name": "onlyOwner",
												"nameLocations": [
													"3365:9:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 135,
												"src": "3365:9:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "3365:9:14"
										},
										{
											"id": 1905,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1904,
												"name": "freezed",
												"nameLocations": [
													"3375:7:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1900,
												"src": "3375:7:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "3375:7:14"
										}
									],
									"name": "freeze",
									"nameLocation": "3347:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1901,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3353:2:14"
									},
									"returnParameters": {
										"id": 1906,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3383:0:14"
									},
									"scope": 3147,
									"src": "3338:129:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1926,
										"nodeType": "Block",
										"src": "3512:83:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1918,
															"name": "isFreezed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1731,
															"src": "3530:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c726561647920556e467265657a6564",
															"id": 1919,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3541:19:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_37095db391cf553f65f0eddf201a3c7bc5118c1120fca6827815be26758eff4c",
																"typeString": "literal_string \"Already UnFreezed\""
															},
															"value": "Already UnFreezed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_37095db391cf553f65f0eddf201a3c7bc5118c1120fca6827815be26758eff4c",
																"typeString": "literal_string \"Already UnFreezed\""
															}
														],
														"id": 1917,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3522:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3522:39:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1921,
												"nodeType": "ExpressionStatement",
												"src": "3522:39:14"
											},
											{
												"expression": {
													"id": 1924,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1922,
														"name": "isFreezed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1731,
														"src": "3571:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1923,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3583:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "3571:17:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1925,
												"nodeType": "ExpressionStatement",
												"src": "3571:17:14"
											}
										]
									},
									"functionSelector": "7cf12b90",
									"id": 1927,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1915,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1914,
												"name": "onlyOwner",
												"nameLocations": [
													"3502:9:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 135,
												"src": "3502:9:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "3502:9:14"
										}
									],
									"name": "unFreeze",
									"nameLocation": "3482:8:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1913,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3490:2:14"
									},
									"returnParameters": {
										"id": 1916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3512:0:14"
									},
									"scope": 3147,
									"src": "3473:122:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1982,
										"nodeType": "Block",
										"src": "3710:537:14",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_PaymentMethod_$1706",
														"typeString": "enum ICO.PaymentMethod"
													},
													"id": 1938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1935,
														"name": "paymentMethod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1930,
														"src": "3724:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_PaymentMethod_$1706",
															"typeString": "enum ICO.PaymentMethod"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 1936,
															"name": "PaymentMethod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1706,
															"src": "3741:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_PaymentMethod_$1706_$",
																"typeString": "type(enum ICO.PaymentMethod)"
															}
														},
														"id": 1937,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3755:3:14",
														"memberName": "BNB",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1703,
														"src": "3741:17:14",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_PaymentMethod_$1706",
															"typeString": "enum ICO.PaymentMethod"
														}
													},
													"src": "3724:34:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_PaymentMethod_$1706",
															"typeString": "enum ICO.PaymentMethod"
														},
														"id": 1951,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1948,
															"name": "paymentMethod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1930,
															"src": "3876:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																"typeString": "enum ICO.PaymentMethod"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1949,
																"name": "PaymentMethod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1706,
																"src": "3893:13:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_PaymentMethod_$1706_$",
																	"typeString": "type(enum ICO.PaymentMethod)"
																}
															},
															"id": 1950,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "3907:4:14",
															"memberName": "USDT",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1704,
															"src": "3893:18:14",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																"typeString": "enum ICO.PaymentMethod"
															}
														},
														"src": "3876:35:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																"typeString": "enum ICO.PaymentMethod"
															},
															"id": 1964,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1961,
																"name": "paymentMethod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1930,
																"src": "4030:13:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																	"typeString": "enum ICO.PaymentMethod"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1962,
																	"name": "PaymentMethod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1706,
																	"src": "4047:13:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_PaymentMethod_$1706_$",
																		"typeString": "type(enum ICO.PaymentMethod)"
																	}
																},
																"id": 1963,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4061:4:14",
																"memberName": "USDC",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1705,
																"src": "4047:18:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																	"typeString": "enum ICO.PaymentMethod"
																}
															},
															"src": "4030:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 1978,
															"nodeType": "Block",
															"src": "4180:61:14",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "556e737570706f72746564207061796d656e74206d6574686f64",
																				"id": 1975,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4201:28:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_20a9374871eda95a21489d37b12097781d38e0ea68a5e5d037a1b2c3ea6a8c04",
																					"typeString": "literal_string \"Unsupported payment method\""
																				},
																				"value": "Unsupported payment method"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_20a9374871eda95a21489d37b12097781d38e0ea68a5e5d037a1b2c3ea6a8c04",
																					"typeString": "literal_string \"Unsupported payment method\""
																				}
																			],
																			"id": 1974,
																			"name": "revert",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				4294967277,
																				4294967277
																			],
																			"referencedDeclaration": 4294967277,
																			"src": "4194:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																				"typeString": "function (string memory) pure"
																			}
																		},
																		"id": 1976,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4194:36:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1977,
																	"nodeType": "ExpressionStatement",
																	"src": "4194:36:14"
																}
															]
														},
														"id": 1979,
														"nodeType": "IfStatement",
														"src": "4026:215:14",
														"trueBody": {
															"id": 1973,
															"nodeType": "Block",
															"src": "4067:107:14",
															"statements": [
																{
																	"assignments": [
																		null,
																		1966,
																		null,
																		null,
																		null
																	],
																	"declarations": [
																		null,
																		{
																			"constant": false,
																			"id": 1966,
																			"mutability": "mutable",
																			"name": "price",
																			"nameLocation": "4091:5:14",
																			"nodeType": "VariableDeclaration",
																			"scope": 1973,
																			"src": "4084:12:14",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"typeName": {
																				"id": 1965,
																				"name": "int256",
																				"nodeType": "ElementaryTypeName",
																				"src": "4084:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"visibility": "internal"
																		},
																		null,
																		null,
																		null
																	],
																	"id": 1970,
																	"initialValue": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 1967,
																				"name": "priceFeedUSDC",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1691,
																				"src": "4106:13:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																					"typeString": "contract AggregatorV3Interface"
																				}
																			},
																			"id": 1968,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4120:15:14",
																			"memberName": "latestRoundData",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 44,
																			"src": "4106:29:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
																				"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
																			}
																		},
																		"id": 1969,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4106:31:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
																			"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "4081:56:14"
																},
																{
																	"expression": {
																		"id": 1971,
																		"name": "price",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1966,
																		"src": "4158:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"functionReturnParameters": 1934,
																	"id": 1972,
																	"nodeType": "Return",
																	"src": "4151:12:14"
																}
															]
														}
													},
													"id": 1980,
													"nodeType": "IfStatement",
													"src": "3872:369:14",
													"trueBody": {
														"id": 1960,
														"nodeType": "Block",
														"src": "3913:107:14",
														"statements": [
															{
																"assignments": [
																	null,
																	1953,
																	null,
																	null,
																	null
																],
																"declarations": [
																	null,
																	{
																		"constant": false,
																		"id": 1953,
																		"mutability": "mutable",
																		"name": "price",
																		"nameLocation": "3937:5:14",
																		"nodeType": "VariableDeclaration",
																		"scope": 1960,
																		"src": "3930:12:14",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"typeName": {
																			"id": 1952,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "3930:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"visibility": "internal"
																	},
																	null,
																	null,
																	null
																],
																"id": 1957,
																"initialValue": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 1954,
																			"name": "priceFeedUSDT",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1688,
																			"src": "3952:13:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																				"typeString": "contract AggregatorV3Interface"
																			}
																		},
																		"id": 1955,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3966:15:14",
																		"memberName": "latestRoundData",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 44,
																		"src": "3952:29:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
																			"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
																		}
																	},
																	"id": 1956,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3952:31:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
																		"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "3927:56:14"
															},
															{
																"expression": {
																	"id": 1958,
																	"name": "price",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1953,
																	"src": "4004:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"functionReturnParameters": 1934,
																"id": 1959,
																"nodeType": "Return",
																"src": "3997:12:14"
															}
														]
													}
												},
												"id": 1981,
												"nodeType": "IfStatement",
												"src": "3720:521:14",
												"trueBody": {
													"id": 1947,
													"nodeType": "Block",
													"src": "3760:106:14",
													"statements": [
														{
															"assignments": [
																null,
																1940,
																null,
																null,
																null
															],
															"declarations": [
																null,
																{
																	"constant": false,
																	"id": 1940,
																	"mutability": "mutable",
																	"name": "price",
																	"nameLocation": "3784:5:14",
																	"nodeType": "VariableDeclaration",
																	"scope": 1947,
																	"src": "3777:12:14",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"typeName": {
																		"id": 1939,
																		"name": "int256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3777:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"visibility": "internal"
																},
																null,
																null,
																null
															],
															"id": 1944,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1941,
																		"name": "priceFeedBNB",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1685,
																		"src": "3799:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																			"typeString": "contract AggregatorV3Interface"
																		}
																	},
																	"id": 1942,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3812:15:14",
																	"memberName": "latestRoundData",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 44,
																	"src": "3799:28:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
																		"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
																	}
																},
																"id": 1943,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3799:30:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
																	"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3774:55:14"
														},
														{
															"expression": {
																"id": 1945,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1940,
																"src": "3850:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"functionReturnParameters": 1934,
															"id": 1946,
															"nodeType": "Return",
															"src": "3843:12:14"
														}
													]
												}
											}
										]
									},
									"functionSelector": "115afc3a",
									"id": 1983,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getPriceFeed",
									"nameLocation": "3610:13:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1930,
												"mutability": "mutable",
												"name": "paymentMethod",
												"nameLocation": "3638:13:14",
												"nodeType": "VariableDeclaration",
												"scope": 1983,
												"src": "3624:27:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_PaymentMethod_$1706",
													"typeString": "enum ICO.PaymentMethod"
												},
												"typeName": {
													"id": 1929,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1928,
														"name": "PaymentMethod",
														"nameLocations": [
															"3624:13:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1706,
														"src": "3624:13:14"
													},
													"referencedDeclaration": 1706,
													"src": "3624:13:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_PaymentMethod_$1706",
														"typeString": "enum ICO.PaymentMethod"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3623:29:14"
									},
									"returnParameters": {
										"id": 1934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1933,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1983,
												"src": "3698:6:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1932,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3698:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3697:8:14"
									},
									"scope": 3147,
									"src": "3601:646:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1994,
										"nodeType": "Block",
										"src": "4314:35:14",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1990,
														"name": "val",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1985,
														"src": "4332:3:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "31653130",
														"id": 1991,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4338:4:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000000000_by_1",
															"typeString": "int_const 10000000000"
														},
														"value": "1e10"
													},
													"src": "4332:10:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1989,
												"id": 1993,
												"nodeType": "Return",
												"src": "4324:18:14"
											}
										]
									},
									"functionSelector": "a1c4b5a2",
									"id": 1995,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "precision_mul_10",
									"nameLocation": "4262:16:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1985,
												"mutability": "mutable",
												"name": "val",
												"nameLocation": "4284:3:14",
												"nodeType": "VariableDeclaration",
												"scope": 1995,
												"src": "4279:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1984,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4279:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4278:10:14"
									},
									"returnParameters": {
										"id": 1989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1988,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1995,
												"src": "4309:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1987,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4309:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4308:6:14"
									},
									"scope": 3147,
									"src": "4253:96:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2006,
										"nodeType": "Block",
										"src": "4416:35:14",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2002,
														"name": "val",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1997,
														"src": "4434:3:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "31653138",
														"id": 2003,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4440:4:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1e18"
													},
													"src": "4434:10:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2001,
												"id": 2005,
												"nodeType": "Return",
												"src": "4426:18:14"
											}
										]
									},
									"functionSelector": "2593198d",
									"id": 2007,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "precision_mul_18",
									"nameLocation": "4364:16:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1997,
												"mutability": "mutable",
												"name": "val",
												"nameLocation": "4386:3:14",
												"nodeType": "VariableDeclaration",
												"scope": 2007,
												"src": "4381:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1996,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4381:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4380:10:14"
									},
									"returnParameters": {
										"id": 2001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2000,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2007,
												"src": "4411:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1999,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4411:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4410:6:14"
									},
									"scope": 3147,
									"src": "4355:96:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2018,
										"nodeType": "Block",
										"src": "4517:35:14",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2014,
														"name": "val",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2009,
														"src": "4535:3:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31653130",
														"id": 2015,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4541:4:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000000000_by_1",
															"typeString": "int_const 10000000000"
														},
														"value": "1e10"
													},
													"src": "4535:10:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2013,
												"id": 2017,
												"nodeType": "Return",
												"src": "4527:18:14"
											}
										]
									},
									"functionSelector": "b3fdafb9",
									"id": 2019,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "precision_div_10",
									"nameLocation": "4465:16:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2009,
												"mutability": "mutable",
												"name": "val",
												"nameLocation": "4487:3:14",
												"nodeType": "VariableDeclaration",
												"scope": 2019,
												"src": "4482:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2008,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4482:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4481:10:14"
									},
									"returnParameters": {
										"id": 2013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2012,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2019,
												"src": "4512:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2011,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4512:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4511:6:14"
									},
									"scope": 3147,
									"src": "4456:96:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2030,
										"nodeType": "Block",
										"src": "4618:35:14",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2026,
														"name": "val",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2021,
														"src": "4636:3:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31653138",
														"id": 2027,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4642:4:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1e18"
													},
													"src": "4636:10:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2025,
												"id": 2029,
												"nodeType": "Return",
												"src": "4628:18:14"
											}
										]
									},
									"functionSelector": "9fa8adb8",
									"id": 2031,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "precision_div_18",
									"nameLocation": "4566:16:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2021,
												"mutability": "mutable",
												"name": "val",
												"nameLocation": "4588:3:14",
												"nodeType": "VariableDeclaration",
												"scope": 2031,
												"src": "4583:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2020,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4583:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4582:10:14"
									},
									"returnParameters": {
										"id": 2025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2024,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2031,
												"src": "4613:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2023,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4613:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4612:6:14"
									},
									"scope": 3147,
									"src": "4557:96:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2116,
										"nodeType": "Block",
										"src": "4827:540:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2062,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2056,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2052,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2049,
																		"name": "_startTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2033,
																		"src": "4857:10:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"expression": {
																			"id": 2050,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "4870:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 2051,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4876:9:14",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "4870:15:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4857:28:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2055,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2053,
																		"name": "_endTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2035,
																		"src": "4889:8:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 2054,
																		"name": "_startTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2033,
																		"src": "4900:10:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4889:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4857:53:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2061,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2057,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "4914:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 2058,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4920:9:14",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "4914:15:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2059,
																		"name": "getLatestSaleEndTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3079,
																		"src": "4932:20:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 2060,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4932:22:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4914:40:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4857:97:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642073746172742074696d652072616e6765",
															"id": 2063,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4968:26:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a2d2e7a15f42f292e75295df8170c1409618a86fbef71da331c44b30609e3c68",
																"typeString": "literal_string \"Invalid start time range\""
															},
															"value": "Invalid start time range"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a2d2e7a15f42f292e75295df8170c1409618a86fbef71da331c44b30609e3c68",
																"typeString": "literal_string \"Invalid start time range\""
															}
														],
														"id": 2048,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4837:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4837:167:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2065,
												"nodeType": "ExpressionStatement",
												"src": "4837:167:14"
											},
											{
												"expression": {
													"id": 2070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2066,
														"name": "saleCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1715,
														"src": "5014:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2069,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2067,
															"name": "saleCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1715,
															"src": "5026:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2068,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5037:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "5026:12:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5014:24:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2071,
												"nodeType": "ExpressionStatement",
												"src": "5014:24:14"
											},
											{
												"assignments": [
													2074
												],
												"declarations": [
													{
														"constant": false,
														"id": 2074,
														"mutability": "mutable",
														"name": "sale",
														"nameLocation": "5061:4:14",
														"nodeType": "VariableDeclaration",
														"scope": 2116,
														"src": "5048:17:14",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Sale_$1702_storage_ptr",
															"typeString": "struct ICO.Sale"
														},
														"typeName": {
															"id": 2073,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2072,
																"name": "Sale",
																"nameLocations": [
																	"5048:4:14"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1702,
																"src": "5048:4:14"
															},
															"referencedDeclaration": 1702,
															"src": "5048:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Sale_$1702_storage_ptr",
																"typeString": "struct ICO.Sale"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2078,
												"initialValue": {
													"baseExpression": {
														"id": 2075,
														"name": "sales",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1743,
														"src": "5068:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Sale_$1702_storage_$",
															"typeString": "mapping(uint256 => struct ICO.Sale storage ref)"
														}
													},
													"id": 2077,
													"indexExpression": {
														"id": 2076,
														"name": "saleCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1715,
														"src": "5074:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5068:16:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Sale_$1702_storage",
														"typeString": "struct ICO.Sale storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5048:36:14"
											},
											{
												"expression": {
													"id": 2083,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2079,
															"name": "sale",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2074,
															"src": "5098:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Sale_$1702_storage_ptr",
																"typeString": "struct ICO.Sale storage pointer"
															}
														},
														"id": 2081,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5103:9:14",
														"memberName": "startTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1693,
														"src": "5098:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2082,
														"name": "_startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2033,
														"src": "5115:10:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5098:27:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2084,
												"nodeType": "ExpressionStatement",
												"src": "5098:27:14"
											},
											{
												"expression": {
													"id": 2089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2085,
															"name": "sale",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2074,
															"src": "5139:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Sale_$1702_storage_ptr",
																"typeString": "struct ICO.Sale storage pointer"
															}
														},
														"id": 2087,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5144:7:14",
														"memberName": "endTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1695,
														"src": "5139:12:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2088,
														"name": "_endTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2035,
														"src": "5154:8:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5139:23:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2090,
												"nodeType": "ExpressionStatement",
												"src": "5139:23:14"
											},
											{
												"expression": {
													"id": 2095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2091,
															"name": "sale",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2074,
															"src": "5176:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Sale_$1702_storage_ptr",
																"typeString": "struct ICO.Sale storage pointer"
															}
														},
														"id": 2093,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5181:13:14",
														"memberName": "tokenPriceUSD",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1697,
														"src": "5176:18:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2094,
														"name": "_tokenPriceUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2037,
														"src": "5197:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5176:35:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2096,
												"nodeType": "ExpressionStatement",
												"src": "5176:35:14"
											},
											{
												"expression": {
													"id": 2101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2097,
															"name": "sale",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2074,
															"src": "5225:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Sale_$1702_storage_ptr",
																"typeString": "struct ICO.Sale storage pointer"
															}
														},
														"id": 2099,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5230:10:14",
														"memberName": "tokensSold",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1699,
														"src": "5225:15:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2100,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5243:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5225:19:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2102,
												"nodeType": "ExpressionStatement",
												"src": "5225:19:14"
											},
											{
												"expression": {
													"id": 2107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2103,
															"name": "sale",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2074,
															"src": "5258:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Sale_$1702_storage_ptr",
																"typeString": "struct ICO.Sale storage pointer"
															}
														},
														"id": 2105,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5263:11:14",
														"memberName": "isFinalized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1701,
														"src": "5258:16:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 2106,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5277:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "5258:24:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2108,
												"nodeType": "ExpressionStatement",
												"src": "5258:24:14"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2110,
															"name": "saleCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1715,
															"src": "5312:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2111,
															"name": "_startTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2033,
															"src": "5323:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2112,
															"name": "_endTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2035,
															"src": "5335:8:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2113,
															"name": "_tokenPriceUSD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2037,
															"src": "5345:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2109,
														"name": "NewSaleCreated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1811,
														"src": "5297:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256,uint256)"
														}
													},
													"id": 2114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5297:63:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2115,
												"nodeType": "EmitStatement",
												"src": "5292:68:14"
											}
										]
									},
									"functionSelector": "6c1909ed",
									"id": 2117,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2040,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2039,
												"name": "nonReentrant",
												"nameLocations": [
													"4780:12:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 791,
												"src": "4780:12:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "4780:12:14"
										},
										{
											"id": 2042,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2041,
												"name": "onlyOwner",
												"nameLocations": [
													"4793:9:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 135,
												"src": "4793:9:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "4793:9:14"
										},
										{
											"id": 2044,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2043,
												"name": "icoNotFinalized",
												"nameLocations": [
													"4803:15:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1890,
												"src": "4803:15:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "4803:15:14"
										},
										{
											"id": 2046,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2045,
												"name": "freezed",
												"nameLocations": [
													"4819:7:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1900,
												"src": "4819:7:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "4819:7:14"
										}
									],
									"name": "createSale",
									"nameLocation": "4668:10:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2033,
												"mutability": "mutable",
												"name": "_startTime",
												"nameLocation": "4696:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 2117,
												"src": "4688:18:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2032,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4688:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2035,
												"mutability": "mutable",
												"name": "_endTime",
												"nameLocation": "4724:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2117,
												"src": "4716:16:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2034,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4716:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2037,
												"mutability": "mutable",
												"name": "_tokenPriceUSD",
												"nameLocation": "4750:14:14",
												"nodeType": "VariableDeclaration",
												"scope": 2117,
												"src": "4742:22:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2036,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4742:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4678:92:14"
									},
									"returnParameters": {
										"id": 2047,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4827:0:14"
									},
									"scope": 3147,
									"src": "4659:708:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2235,
										"nodeType": "Block",
										"src": "5507:1098:14",
										"statements": [
											{
												"assignments": [
													2128
												],
												"declarations": [
													{
														"constant": false,
														"id": 2128,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "5525:5:14",
														"nodeType": "VariableDeclaration",
														"scope": 2235,
														"src": "5517:13:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2127,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5517:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2137,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2133,
																			"name": "paymentMethod",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2120,
																			"src": "5569:13:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																				"typeString": "enum ICO.PaymentMethod"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																				"typeString": "enum ICO.PaymentMethod"
																			}
																		],
																		"id": 2132,
																		"name": "_getPriceFeed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1983,
																		"src": "5555:13:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_enum$_PaymentMethod_$1706_$returns$_t_int256_$",
																			"typeString": "function (enum ICO.PaymentMethod) view returns (int256)"
																		}
																	},
																	"id": 2134,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5555:28:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 2131,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5550:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2130,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "5550:4:14",
																	"typeDescriptions": {}
																}
															},
															"id": 2135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5550:34:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2129,
														"name": "precision_mul_10",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1995,
														"src": "5533:16:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) pure returns (uint256)"
														}
													},
													"id": 2136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5533:52:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5517:68:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2139,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2128,
																"src": "5604:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 2140,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5613:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5604:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642070726963652066656564",
															"id": 2142,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5616:20:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dbf071520f0a95e05bb16da9ebcd49bf0ac91e963647b14497245101e3db79a3",
																"typeString": "literal_string \"Invalid price feed\""
															},
															"value": "Invalid price feed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dbf071520f0a95e05bb16da9ebcd49bf0ac91e963647b14497245101e3db79a3",
																"typeString": "literal_string \"Invalid price feed\""
															}
														],
														"id": 2138,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5596:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5596:41:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2144,
												"nodeType": "ExpressionStatement",
												"src": "5596:41:14"
											},
											{
												"assignments": [
													2146
												],
												"declarations": [
													{
														"constant": false,
														"id": 2146,
														"mutability": "mutable",
														"name": "currentSaleId",
														"nameLocation": "5655:13:14",
														"nodeType": "VariableDeclaration",
														"scope": 2235,
														"src": "5647:21:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2145,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5647:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2149,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2147,
														"name": "getCurrentSaleId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3068,
														"src": "5671:16:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 2148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5671:18:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5647:42:14"
											},
											{
												"assignments": [
													2152
												],
												"declarations": [
													{
														"constant": false,
														"id": 2152,
														"mutability": "mutable",
														"name": "sale",
														"nameLocation": "5712:4:14",
														"nodeType": "VariableDeclaration",
														"scope": 2235,
														"src": "5699:17:14",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Sale_$1702_storage_ptr",
															"typeString": "struct ICO.Sale"
														},
														"typeName": {
															"id": 2151,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2150,
																"name": "Sale",
																"nameLocations": [
																	"5699:4:14"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1702,
																"src": "5699:4:14"
															},
															"referencedDeclaration": 1702,
															"src": "5699:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Sale_$1702_storage_ptr",
																"typeString": "struct ICO.Sale"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2156,
												"initialValue": {
													"baseExpression": {
														"id": 2153,
														"name": "sales",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1743,
														"src": "5719:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Sale_$1702_storage_$",
															"typeString": "mapping(uint256 => struct ICO.Sale storage ref)"
														}
													},
													"id": 2155,
													"indexExpression": {
														"id": 2154,
														"name": "currentSaleId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2146,
														"src": "5725:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5719:20:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Sale_$1702_storage",
														"typeString": "struct ICO.Sale storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5699:40:14"
											},
											{
												"assignments": [
													2158
												],
												"declarations": [
													{
														"constant": false,
														"id": 2158,
														"mutability": "mutable",
														"name": "tokenPriceInUSD",
														"nameLocation": "5758:15:14",
														"nodeType": "VariableDeclaration",
														"scope": 2235,
														"src": "5750:23:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2157,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5750:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2161,
												"initialValue": {
													"expression": {
														"id": 2159,
														"name": "sale",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2152,
														"src": "5776:4:14",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Sale_$1702_storage_ptr",
															"typeString": "struct ICO.Sale storage pointer"
														}
													},
													"id": 2160,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5781:13:14",
													"memberName": "tokenPriceUSD",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1697,
													"src": "5776:18:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5750:44:14"
											},
											{
												"assignments": [
													2163
												],
												"declarations": [
													{
														"constant": false,
														"id": 2163,
														"mutability": "mutable",
														"name": "paymentAmountInUSD",
														"nameLocation": "5845:18:14",
														"nodeType": "VariableDeclaration",
														"scope": 2235,
														"src": "5837:26:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2162,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5837:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2164,
												"nodeType": "VariableDeclarationStatement",
												"src": "5837:26:14"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_PaymentMethod_$1706",
														"typeString": "enum ICO.PaymentMethod"
													},
													"id": 2168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2165,
														"name": "paymentMethod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2120,
														"src": "5878:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_PaymentMethod_$1706",
															"typeString": "enum ICO.PaymentMethod"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 2166,
															"name": "PaymentMethod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1706,
															"src": "5895:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_PaymentMethod_$1706_$",
																"typeString": "type(enum ICO.PaymentMethod)"
															}
														},
														"id": 2167,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5909:3:14",
														"memberName": "BNB",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1703,
														"src": "5895:17:14",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_PaymentMethod_$1706",
															"typeString": "enum ICO.PaymentMethod"
														}
													},
													"src": "5878:34:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 2189,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																"typeString": "enum ICO.PaymentMethod"
															},
															"id": 2184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2181,
																"name": "paymentMethod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2120,
																"src": "6047:13:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																	"typeString": "enum ICO.PaymentMethod"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 2182,
																	"name": "PaymentMethod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1706,
																	"src": "6064:13:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_PaymentMethod_$1706_$",
																		"typeString": "type(enum ICO.PaymentMethod)"
																	}
																},
																"id": 2183,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "6078:4:14",
																"memberName": "USDC",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1705,
																"src": "6064:18:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																	"typeString": "enum ICO.PaymentMethod"
																}
															},
															"src": "6047:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																"typeString": "enum ICO.PaymentMethod"
															},
															"id": 2188,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2185,
																"name": "paymentMethod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2120,
																"src": "6098:13:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																	"typeString": "enum ICO.PaymentMethod"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 2186,
																	"name": "PaymentMethod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1706,
																	"src": "6115:13:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_PaymentMethod_$1706_$",
																		"typeString": "type(enum ICO.PaymentMethod)"
																	}
																},
																"id": 2187,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "6129:4:14",
																"memberName": "USDT",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1704,
																"src": "6115:18:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																	"typeString": "enum ICO.PaymentMethod"
																}
															},
															"src": "6098:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "6047:86:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 2222,
														"nodeType": "Block",
														"src": "6411:61:14",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"hexValue": "556e737570706f72746564207061796d656e74206d6574686f64",
																			"id": 2219,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6432:28:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_20a9374871eda95a21489d37b12097781d38e0ea68a5e5d037a1b2c3ea6a8c04",
																				"typeString": "literal_string \"Unsupported payment method\""
																			},
																			"value": "Unsupported payment method"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_20a9374871eda95a21489d37b12097781d38e0ea68a5e5d037a1b2c3ea6a8c04",
																				"typeString": "literal_string \"Unsupported payment method\""
																			}
																		],
																		"id": 2218,
																		"name": "revert",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967277,
																			4294967277
																		],
																		"referencedDeclaration": 4294967277,
																		"src": "6425:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (string memory) pure"
																		}
																	},
																	"id": 2220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6425:36:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 2221,
																"nodeType": "ExpressionStatement",
																"src": "6425:36:14"
															}
														]
													},
													"id": 2223,
													"nodeType": "IfStatement",
													"src": "6030:442:14",
													"trueBody": {
														"id": 2217,
														"nodeType": "Block",
														"src": "6144:261:14",
														"statements": [
															{
																"assignments": [
																	2191
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 2191,
																		"mutability": "mutable",
																		"name": "stablecoinDecimals",
																		"nameLocation": "6166:18:14",
																		"nodeType": "VariableDeclaration",
																		"scope": 2217,
																		"src": "6158:26:14",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 2190,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "6158:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 2193,
																"initialValue": {
																	"hexValue": "36",
																	"id": 2192,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6187:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_6_by_1",
																		"typeString": "int_const 6"
																	},
																	"value": "6"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "6158:30:14"
															},
															{
																"assignments": [
																	2195
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 2195,
																		"mutability": "mutable",
																		"name": "normalizedAmount",
																		"nameLocation": "6210:16:14",
																		"nodeType": "VariableDeclaration",
																		"scope": 2217,
																		"src": "6202:24:14",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 2194,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "6202:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 2205,
																"initialValue": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2204,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2196,
																		"name": "paymentAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2122,
																		"src": "6229:13:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2202,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "3130",
																					"id": 2197,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "6262:2:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10_by_1",
																						"typeString": "int_const 10"
																					},
																					"value": "10"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "**",
																				"rightExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 2200,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "3138",
																								"id": 2198,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "6267:2:14",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_18_by_1",
																									"typeString": "int_const 18"
																								},
																								"value": "18"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "-",
																							"rightExpression": {
																								"id": 2199,
																								"name": "stablecoinDecimals",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2191,
																								"src": "6272:18:14",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "6267:23:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 2201,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "6266:25:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "6262:29:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2203,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "6261:31:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6229:63:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "6202:90:14"
															},
															{
																"expression": {
																	"id": 2215,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 2206,
																		"name": "paymentAmountInUSD",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2163,
																		"src": "6306:18:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2213,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"arguments": [
																						{
																							"id": 2210,
																							"name": "price",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2128,
																							"src": "6368:5:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 2209,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "6360:7:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						},
																						"typeName": {
																							"id": 2208,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "6360:7:14",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2211,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6360:14:14",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 2212,
																					"name": "normalizedAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2195,
																					"src": "6377:16:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "6360:33:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 2207,
																			"name": "precision_div_18",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2031,
																			"src": "6343:16:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2214,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6343:51:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6306:88:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2216,
																"nodeType": "ExpressionStatement",
																"src": "6306:88:14"
															}
														]
													}
												},
												"id": 2224,
												"nodeType": "IfStatement",
												"src": "5874:598:14",
												"trueBody": {
													"id": 2180,
													"nodeType": "Block",
													"src": "5914:110:14",
													"statements": [
														{
															"expression": {
																"id": 2178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2169,
																	"name": "paymentAmountInUSD",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2163,
																	"src": "5928:18:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2176,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2173,
																						"name": "price",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2128,
																						"src": "5990:5:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 2172,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "5982:7:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 2171,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "5982:7:14",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2174,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5982:14:14",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 2175,
																				"name": "paymentAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2122,
																				"src": "5999:13:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5982:30:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2170,
																		"name": "precision_div_18",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2031,
																		"src": "5965:16:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2177,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5965:48:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5928:85:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2179,
															"nodeType": "ExpressionStatement",
															"src": "5928:85:14"
														}
													]
												}
											},
											{
												"assignments": [
													2226
												],
												"declarations": [
													{
														"constant": false,
														"id": 2226,
														"mutability": "mutable",
														"name": "tokenAmount",
														"nameLocation": "6490:11:14",
														"nodeType": "VariableDeclaration",
														"scope": 2235,
														"src": "6482:19:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2225,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6482:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2232,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2228,
																"name": "paymentAmountInUSD",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2163,
																"src": "6521:18:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2227,
															"name": "precision_mul_18",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2007,
															"src": "6504:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) pure returns (uint256)"
															}
														},
														"id": 2229,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6504:36:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 2230,
														"name": "tokenPriceInUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2158,
														"src": "6555:15:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6504:66:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6482:88:14"
											},
											{
												"expression": {
													"id": 2233,
													"name": "tokenAmount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2226,
													"src": "6587:11:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2126,
												"id": 2234,
												"nodeType": "Return",
												"src": "6580:18:14"
											}
										]
									},
									"functionSelector": "05834e67",
									"id": 2236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateTokenAmount",
									"nameLocation": "5382:20:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2120,
												"mutability": "mutable",
												"name": "paymentMethod",
												"nameLocation": "5426:13:14",
												"nodeType": "VariableDeclaration",
												"scope": 2236,
												"src": "5412:27:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_PaymentMethod_$1706",
													"typeString": "enum ICO.PaymentMethod"
												},
												"typeName": {
													"id": 2119,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2118,
														"name": "PaymentMethod",
														"nameLocations": [
															"5412:13:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1706,
														"src": "5412:13:14"
													},
													"referencedDeclaration": 1706,
													"src": "5412:13:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_PaymentMethod_$1706",
														"typeString": "enum ICO.PaymentMethod"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2122,
												"mutability": "mutable",
												"name": "paymentAmount",
												"nameLocation": "5457:13:14",
												"nodeType": "VariableDeclaration",
												"scope": 2236,
												"src": "5449:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5449:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5402:74:14"
									},
									"returnParameters": {
										"id": 2126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2125,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2236,
												"src": "5498:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5498:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5497:9:14"
									},
									"scope": 3147,
									"src": "5373:1232:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2356,
										"nodeType": "Block",
										"src": "6747:977:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2247,
																"name": "tokenAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2241,
																"src": "6765:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 2248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6780:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6765:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d75737420626520706f736974697665",
															"id": 2250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6783:25:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fbff1a1f6c2af74648d360c36de5f47b5c561797f493e9c58d33289d0ad24acc",
																"typeString": "literal_string \"Amount must be positive\""
															},
															"value": "Amount must be positive"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fbff1a1f6c2af74648d360c36de5f47b5c561797f493e9c58d33289d0ad24acc",
																"typeString": "literal_string \"Amount must be positive\""
															}
														],
														"id": 2246,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6757:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6757:52:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2252,
												"nodeType": "ExpressionStatement",
												"src": "6757:52:14"
											},
											{
												"assignments": [
													2254
												],
												"declarations": [
													{
														"constant": false,
														"id": 2254,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "6828:5:14",
														"nodeType": "VariableDeclaration",
														"scope": 2356,
														"src": "6820:13:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2253,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6820:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2263,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2259,
																			"name": "paymentMethod",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2239,
																			"src": "6872:13:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																				"typeString": "enum ICO.PaymentMethod"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																				"typeString": "enum ICO.PaymentMethod"
																			}
																		],
																		"id": 2258,
																		"name": "_getPriceFeed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1983,
																		"src": "6858:13:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_enum$_PaymentMethod_$1706_$returns$_t_int256_$",
																			"typeString": "function (enum ICO.PaymentMethod) view returns (int256)"
																		}
																	},
																	"id": 2260,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6858:28:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 2257,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6853:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2256,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "6853:4:14",
																	"typeDescriptions": {}
																}
															},
															"id": 2261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6853:34:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2255,
														"name": "precision_mul_10",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1995,
														"src": "6836:16:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) pure returns (uint256)"
														}
													},
													"id": 2262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6836:52:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6820:68:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2265,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2254,
																"src": "6907:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 2266,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6916:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6907:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642070726963652066656564",
															"id": 2268,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6919:20:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dbf071520f0a95e05bb16da9ebcd49bf0ac91e963647b14497245101e3db79a3",
																"typeString": "literal_string \"Invalid price feed\""
															},
															"value": "Invalid price feed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dbf071520f0a95e05bb16da9ebcd49bf0ac91e963647b14497245101e3db79a3",
																"typeString": "literal_string \"Invalid price feed\""
															}
														],
														"id": 2264,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6899:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6899:41:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2270,
												"nodeType": "ExpressionStatement",
												"src": "6899:41:14"
											},
											{
												"assignments": [
													2272
												],
												"declarations": [
													{
														"constant": false,
														"id": 2272,
														"mutability": "mutable",
														"name": "currentSaleId",
														"nameLocation": "6959:13:14",
														"nodeType": "VariableDeclaration",
														"scope": 2356,
														"src": "6951:21:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2271,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6951:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2275,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2273,
														"name": "getCurrentSaleId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3068,
														"src": "6975:16:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 2274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6975:18:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6951:42:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2277,
																"name": "currentSaleId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2272,
																"src": "7011:13:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 2278,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7028:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7011:18:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f206163746976652073616c65",
															"id": 2280,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7031:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_96b145fdc05e3ce6aa7fad5e89550d457f70c47d1f8d674ad654a917590143f7",
																"typeString": "literal_string \"No active sale\""
															},
															"value": "No active sale"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_96b145fdc05e3ce6aa7fad5e89550d457f70c47d1f8d674ad654a917590143f7",
																"typeString": "literal_string \"No active sale\""
															}
														],
														"id": 2276,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7003:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7003:45:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2282,
												"nodeType": "ExpressionStatement",
												"src": "7003:45:14"
											},
											{
												"assignments": [
													2285
												],
												"declarations": [
													{
														"constant": false,
														"id": 2285,
														"mutability": "mutable",
														"name": "sale",
														"nameLocation": "7071:4:14",
														"nodeType": "VariableDeclaration",
														"scope": 2356,
														"src": "7058:17:14",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Sale_$1702_storage_ptr",
															"typeString": "struct ICO.Sale"
														},
														"typeName": {
															"id": 2284,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2283,
																"name": "Sale",
																"nameLocations": [
																	"7058:4:14"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1702,
																"src": "7058:4:14"
															},
															"referencedDeclaration": 1702,
															"src": "7058:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Sale_$1702_storage_ptr",
																"typeString": "struct ICO.Sale"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2289,
												"initialValue": {
													"baseExpression": {
														"id": 2286,
														"name": "sales",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1743,
														"src": "7078:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Sale_$1702_storage_$",
															"typeString": "mapping(uint256 => struct ICO.Sale storage ref)"
														}
													},
													"id": 2288,
													"indexExpression": {
														"id": 2287,
														"name": "currentSaleId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2272,
														"src": "7084:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7078:20:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Sale_$1702_storage",
														"typeString": "struct ICO.Sale storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7058:40:14"
											},
											{
												"assignments": [
													2291
												],
												"declarations": [
													{
														"constant": false,
														"id": 2291,
														"mutability": "mutable",
														"name": "tokenPriceInUSD",
														"nameLocation": "7116:15:14",
														"nodeType": "VariableDeclaration",
														"scope": 2356,
														"src": "7108:23:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2290,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7108:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2294,
												"initialValue": {
													"expression": {
														"id": 2292,
														"name": "sale",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2285,
														"src": "7134:4:14",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Sale_$1702_storage_ptr",
															"typeString": "struct ICO.Sale storage pointer"
														}
													},
													"id": 2293,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7139:13:14",
													"memberName": "tokenPriceUSD",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1697,
													"src": "7134:18:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7108:44:14"
											},
											{
												"assignments": [
													2296
												],
												"declarations": [
													{
														"constant": false,
														"id": 2296,
														"mutability": "mutable",
														"name": "totalPaymentInUSD",
														"nameLocation": "7171:17:14",
														"nodeType": "VariableDeclaration",
														"scope": 2356,
														"src": "7163:25:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2295,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7163:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2302,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2298,
																"name": "tokenAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2241,
																"src": "7208:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2299,
																"name": "tokenPriceInUSD",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2291,
																"src": "7222:15:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7208:29:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2297,
														"name": "precision_div_18",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2031,
														"src": "7191:16:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) pure returns (uint256)"
														}
													},
													"id": 2301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7191:47:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7163:75:14"
											},
											{
												"assignments": [
													2304
												],
												"declarations": [
													{
														"constant": false,
														"id": 2304,
														"mutability": "mutable",
														"name": "paymentAmount",
														"nameLocation": "7257:13:14",
														"nodeType": "VariableDeclaration",
														"scope": 2356,
														"src": "7249:21:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2303,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7249:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2305,
												"nodeType": "VariableDeclarationStatement",
												"src": "7249:21:14"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_PaymentMethod_$1706",
														"typeString": "enum ICO.PaymentMethod"
													},
													"id": 2309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2306,
														"name": "paymentMethod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2239,
														"src": "7284:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_PaymentMethod_$1706",
															"typeString": "enum ICO.PaymentMethod"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 2307,
															"name": "PaymentMethod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1706,
															"src": "7301:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_PaymentMethod_$1706_$",
																"typeString": "type(enum ICO.PaymentMethod)"
															}
														},
														"id": 2308,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7315:3:14",
														"memberName": "BNB",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1703,
														"src": "7301:17:14",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_PaymentMethod_$1706",
															"typeString": "enum ICO.PaymentMethod"
														}
													},
													"src": "7284:34:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 2330,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																"typeString": "enum ICO.PaymentMethod"
															},
															"id": 2325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2322,
																"name": "paymentMethod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2239,
																"src": "7436:13:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																	"typeString": "enum ICO.PaymentMethod"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 2323,
																	"name": "PaymentMethod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1706,
																	"src": "7453:13:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_PaymentMethod_$1706_$",
																		"typeString": "type(enum ICO.PaymentMethod)"
																	}
																},
																"id": 2324,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "7467:4:14",
																"memberName": "USDT",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1704,
																"src": "7453:18:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																	"typeString": "enum ICO.PaymentMethod"
																}
															},
															"src": "7436:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																"typeString": "enum ICO.PaymentMethod"
															},
															"id": 2329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2326,
																"name": "paymentMethod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2239,
																"src": "7487:13:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																	"typeString": "enum ICO.PaymentMethod"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 2327,
																	"name": "PaymentMethod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1706,
																	"src": "7504:13:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_PaymentMethod_$1706_$",
																		"typeString": "type(enum ICO.PaymentMethod)"
																	}
																},
																"id": 2328,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "7518:4:14",
																"memberName": "USDC",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1705,
																"src": "7504:18:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																	"typeString": "enum ICO.PaymentMethod"
																}
															},
															"src": "7487:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "7436:86:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 2351,
														"nodeType": "Block",
														"src": "7626:61:14",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"hexValue": "556e737570706f72746564207061796d656e74206d6574686f64",
																			"id": 2348,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7647:28:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_20a9374871eda95a21489d37b12097781d38e0ea68a5e5d037a1b2c3ea6a8c04",
																				"typeString": "literal_string \"Unsupported payment method\""
																			},
																			"value": "Unsupported payment method"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_20a9374871eda95a21489d37b12097781d38e0ea68a5e5d037a1b2c3ea6a8c04",
																				"typeString": "literal_string \"Unsupported payment method\""
																			}
																		],
																		"id": 2347,
																		"name": "revert",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967277,
																			4294967277
																		],
																		"referencedDeclaration": 4294967277,
																		"src": "7640:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (string memory) pure"
																		}
																	},
																	"id": 2349,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7640:36:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 2350,
																"nodeType": "ExpressionStatement",
																"src": "7640:36:14"
															}
														]
													},
													"id": 2352,
													"nodeType": "IfStatement",
													"src": "7419:268:14",
													"trueBody": {
														"id": 2346,
														"nodeType": "Block",
														"src": "7533:87:14",
														"statements": [
															{
																"expression": {
																	"id": 2344,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 2331,
																		"name": "paymentAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2304,
																		"src": "7547:13:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2343,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2337,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2332,
																						"name": "totalPaymentInUSD",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2296,
																						"src": "7564:17:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_rational_1000000_by_1",
																									"typeString": "int_const 1000000"
																								},
																								"id": 2335,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"leftExpression": {
																									"hexValue": "3130",
																									"id": 2333,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "7585:2:14",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "**",
																								"rightExpression": {
																									"hexValue": "36",
																									"id": 2334,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "7589:1:14",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_6_by_1",
																										"typeString": "int_const 6"
																									},
																									"value": "6"
																								},
																								"src": "7585:5:14",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1000000_by_1",
																									"typeString": "int_const 1000000"
																								}
																							}
																						],
																						"id": 2336,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "7584:7:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1000000_by_1",
																							"typeString": "int_const 1000000"
																						}
																					},
																					"src": "7564:27:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 2338,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "7563:29:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 2341,
																					"name": "price",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2254,
																					"src": "7603:5:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2340,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7595:7:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 2339,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "7595:7:14",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2342,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7595:14:14",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7563:46:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7547:62:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2345,
																"nodeType": "ExpressionStatement",
																"src": "7547:62:14"
															}
														]
													}
												},
												"id": 2353,
												"nodeType": "IfStatement",
												"src": "7280:407:14",
												"trueBody": {
													"id": 2321,
													"nodeType": "Block",
													"src": "7320:93:14",
													"statements": [
														{
															"expression": {
																"id": 2319,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2310,
																	"name": "paymentAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2304,
																	"src": "7334:13:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 2312,
																				"name": "totalPaymentInUSD",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2296,
																				"src": "7367:17:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 2311,
																			"name": "precision_mul_18",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2007,
																			"src": "7350:16:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2313,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7350:35:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 2316,
																				"name": "price",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2254,
																				"src": "7396:5:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 2315,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7388:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 2314,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "7388:7:14",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2317,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7388:14:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7350:52:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7334:68:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2320,
															"nodeType": "ExpressionStatement",
															"src": "7334:68:14"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2354,
													"name": "paymentAmount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2304,
													"src": "7704:13:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2245,
												"id": 2355,
												"nodeType": "Return",
												"src": "7697:20:14"
											}
										]
									},
									"functionSelector": "117d260f",
									"id": 2357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculatePaymentAmount",
									"nameLocation": "6620:22:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2239,
												"mutability": "mutable",
												"name": "paymentMethod",
												"nameLocation": "6666:13:14",
												"nodeType": "VariableDeclaration",
												"scope": 2357,
												"src": "6652:27:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_PaymentMethod_$1706",
													"typeString": "enum ICO.PaymentMethod"
												},
												"typeName": {
													"id": 2238,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2237,
														"name": "PaymentMethod",
														"nameLocations": [
															"6652:13:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1706,
														"src": "6652:13:14"
													},
													"referencedDeclaration": 1706,
													"src": "6652:13:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_PaymentMethod_$1706",
														"typeString": "enum ICO.PaymentMethod"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2241,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "6697:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 2357,
												"src": "6689:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6689:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6642:72:14"
									},
									"returnParameters": {
										"id": 2245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2244,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2357,
												"src": "6738:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6738:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6737:9:14"
									},
									"scope": 3147,
									"src": "6611:1113:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2600,
										"nodeType": "Block",
										"src": "7908:2245:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2372,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "7926:3:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2373,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7930:6:14",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "7926:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2374,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 151,
																	"src": "7940:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 2375,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7940:7:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7926:21:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e65722063616e6e6f742062757920746f6b656e73",
															"id": 2377,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7949:25:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6074d909f1c7eb2393bdf1029d0b7e2b2329445b551a02e61050a4a408023785",
																"typeString": "literal_string \"Owner cannot buy tokens\""
															},
															"value": "Owner cannot buy tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6074d909f1c7eb2393bdf1029d0b7e2b2329445b551a02e61050a4a408023785",
																"typeString": "literal_string \"Owner cannot buy tokens\""
															}
														],
														"id": 2371,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7918:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7918:57:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2379,
												"nodeType": "ExpressionStatement",
												"src": "7918:57:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2381,
																"name": "saleCount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1715,
																"src": "7993:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 2382,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8006:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7993:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f2073616c65",
															"id": 2384,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8009:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_745b7c27209a9df0afa3e1a0af6f3a48dc087e43ee7b30261a0fc4b9578e75a7",
																"typeString": "literal_string \"No sale\""
															},
															"value": "No sale"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_745b7c27209a9df0afa3e1a0af6f3a48dc087e43ee7b30261a0fc4b9578e75a7",
																"typeString": "literal_string \"No sale\""
															}
														],
														"id": 2380,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7985:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7985:34:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2386,
												"nodeType": "ExpressionStatement",
												"src": "7985:34:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2392,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "8037:29:14",
															"subExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 2388,
																		"name": "sales",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1743,
																		"src": "8038:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Sale_$1702_storage_$",
																			"typeString": "mapping(uint256 => struct ICO.Sale storage ref)"
																		}
																	},
																	"id": 2390,
																	"indexExpression": {
																		"id": 2389,
																		"name": "saleCount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1715,
																		"src": "8044:9:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8038:16:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Sale_$1702_storage",
																		"typeString": "struct ICO.Sale storage ref"
																	}
																},
																"id": 2391,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8055:11:14",
																"memberName": "isFinalized",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1701,
																"src": "8038:28:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616c6520616c72656164792066696e616c697a6564",
															"id": 2393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8068:24:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c62da71e519c5f2bf89b59327b7f977696c4a0042adb3aafb9f068ba780f8ac7",
																"typeString": "literal_string \"Sale already finalized\""
															},
															"value": "Sale already finalized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c62da71e519c5f2bf89b59327b7f977696c4a0042adb3aafb9f068ba780f8ac7",
																"typeString": "literal_string \"Sale already finalized\""
															}
														],
														"id": 2387,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8029:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8029:64:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2395,
												"nodeType": "ExpressionStatement",
												"src": "8029:64:14"
											},
											{
												"assignments": [
													2397
												],
												"declarations": [
													{
														"constant": false,
														"id": 2397,
														"mutability": "mutable",
														"name": "tokenAmount",
														"nameLocation": "8111:11:14",
														"nodeType": "VariableDeclaration",
														"scope": 2600,
														"src": "8103:19:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2396,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8103:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2398,
												"nodeType": "VariableDeclarationStatement",
												"src": "8103:19:14"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_PaymentMethod_$1706",
														"typeString": "enum ICO.PaymentMethod"
													},
													"id": 2402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2399,
														"name": "paymentMethod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2360,
														"src": "8136:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_PaymentMethod_$1706",
															"typeString": "enum ICO.PaymentMethod"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 2400,
															"name": "PaymentMethod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1706,
															"src": "8153:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_PaymentMethod_$1706_$",
																"typeString": "type(enum ICO.PaymentMethod)"
															}
														},
														"id": 2401,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8167:3:14",
														"memberName": "BNB",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1703,
														"src": "8153:17:14",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_PaymentMethod_$1706",
															"typeString": "enum ICO.PaymentMethod"
														}
													},
													"src": "8136:34:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 2438,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																"typeString": "enum ICO.PaymentMethod"
															},
															"id": 2433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2430,
																"name": "paymentMethod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2360,
																"src": "8414:13:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																	"typeString": "enum ICO.PaymentMethod"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 2431,
																	"name": "PaymentMethod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1706,
																	"src": "8431:13:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_PaymentMethod_$1706_$",
																		"typeString": "type(enum ICO.PaymentMethod)"
																	}
																},
																"id": 2432,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "8445:4:14",
																"memberName": "USDT",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1704,
																"src": "8431:18:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																	"typeString": "enum ICO.PaymentMethod"
																}
															},
															"src": "8414:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																"typeString": "enum ICO.PaymentMethod"
															},
															"id": 2437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2434,
																"name": "paymentMethod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2360,
																"src": "8465:13:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																	"typeString": "enum ICO.PaymentMethod"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 2435,
																	"name": "PaymentMethod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1706,
																	"src": "8482:13:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_PaymentMethod_$1706_$",
																		"typeString": "type(enum ICO.PaymentMethod)"
																	}
																},
																"id": 2436,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "8496:4:14",
																"memberName": "USDC",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1705,
																"src": "8482:18:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																	"typeString": "enum ICO.PaymentMethod"
																}
															},
															"src": "8465:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "8414:86:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 2492,
													"nodeType": "IfStatement",
													"src": "8397:713:14",
													"trueBody": {
														"id": 2491,
														"nodeType": "Block",
														"src": "8511:599:14",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2442,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2440,
																				"name": "paymentAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2362,
																				"src": "8533:13:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "!=",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 2441,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8550:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "8533:18:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		{
																			"hexValue": "456e7465722076616c696420616d6f756e74",
																			"id": 2443,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8553:20:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_8a7248c601ff75c171cc9e31d0318cd31dcd14aa40f22f649faacd9d755b61c5",
																				"typeString": "literal_string \"Enter valid amount\""
																			},
																			"value": "Enter valid amount"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			{
																				"typeIdentifier": "t_stringliteral_8a7248c601ff75c171cc9e31d0318cd31dcd14aa40f22f649faacd9d755b61c5",
																				"typeString": "literal_string \"Enter valid amount\""
																			}
																		],
																		"id": 2439,
																		"name": "require",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967278,
																			4294967278,
																			4294967278
																		],
																		"referencedDeclaration": 4294967278,
																		"src": "8525:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (bool,string memory) pure"
																		}
																	},
																	"id": 2444,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8525:49:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 2445,
																"nodeType": "ExpressionStatement",
																"src": "8525:49:14"
															},
															{
																"assignments": [
																	2448
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 2448,
																		"mutability": "mutable",
																		"name": "stablecoin",
																		"nameLocation": "8595:10:14",
																		"nodeType": "VariableDeclaration",
																		"scope": 2491,
																		"src": "8588:17:14",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1264",
																			"typeString": "contract IERC20"
																		},
																		"typeName": {
																			"id": 2447,
																			"nodeType": "UserDefinedTypeName",
																			"pathNode": {
																				"id": 2446,
																				"name": "IERC20",
																				"nameLocations": [
																					"8588:6:14"
																				],
																				"nodeType": "IdentifierPath",
																				"referencedDeclaration": 1264,
																				"src": "8588:6:14"
																			},
																			"referencedDeclaration": 1264,
																			"src": "8588:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1264",
																				"typeString": "contract IERC20"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 2460,
																"initialValue": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																			"typeString": "enum ICO.PaymentMethod"
																		},
																		"id": 2452,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2449,
																			"name": "paymentMethod",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2360,
																			"src": "8608:13:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																				"typeString": "enum ICO.PaymentMethod"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"expression": {
																				"id": 2450,
																				"name": "PaymentMethod",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1706,
																				"src": "8625:13:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_enum$_PaymentMethod_$1706_$",
																					"typeString": "type(enum ICO.PaymentMethod)"
																				}
																			},
																			"id": 2451,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "8639:4:14",
																			"memberName": "USDT",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1704,
																			"src": "8625:18:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																				"typeString": "enum ICO.PaymentMethod"
																			}
																		},
																		"src": "8608:35:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"arguments": [
																			{
																				"id": 2457,
																				"name": "usdc",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1738,
																				"src": "8700:4:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2456,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1264,
																			"src": "8693:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$1264_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 2458,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8693:12:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1264",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 2459,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "8608:97:14",
																	"trueExpression": {
																		"arguments": [
																			{
																				"id": 2454,
																				"name": "usdt",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1736,
																				"src": "8669:4:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2453,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1264,
																			"src": "8662:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$1264_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 2455,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8662:12:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1264",
																			"typeString": "contract IERC20"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1264",
																		"typeString": "contract IERC20"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "8588:117:14"
															},
															{
																"expression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 2464,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "8789:3:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 2465,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "8793:6:14",
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "8789:10:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"arguments": [
																						{
																							"id": 2468,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "8829:4:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_ICO_$3147",
																								"typeString": "contract ICO"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_ICO_$3147",
																								"typeString": "contract ICO"
																							}
																						],
																						"id": 2467,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "8821:7:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 2466,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "8821:7:14",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2469,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8821:13:14",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2470,
																					"name": "paymentAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2362,
																					"src": "8856:13:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2462,
																					"name": "stablecoin",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2448,
																					"src": "8744:10:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$1264",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 2463,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "8755:12:14",
																				"memberName": "transferFrom",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1263,
																				"src": "8744:23:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,address,uint256) external returns (bool)"
																				}
																			},
																			"id": 2471,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8744:143:14",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		{
																			"hexValue": "537461626c65636f696e207472616e73666572206661696c6564",
																			"id": 2472,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8905:28:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_c84bd9c4652ced38c134ab47300145495de9d5aff68e1b658cc1dca99fef7eb7",
																				"typeString": "literal_string \"Stablecoin transfer failed\""
																			},
																			"value": "Stablecoin transfer failed"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			{
																				"typeIdentifier": "t_stringliteral_c84bd9c4652ced38c134ab47300145495de9d5aff68e1b658cc1dca99fef7eb7",
																				"typeString": "literal_string \"Stablecoin transfer failed\""
																			}
																		],
																		"id": 2461,
																		"name": "require",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967278,
																			4294967278,
																			4294967278
																		],
																		"referencedDeclaration": 4294967278,
																		"src": "8719:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (bool,string memory) pure"
																		}
																	},
																	"id": 2473,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8719:228:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 2474,
																"nodeType": "ExpressionStatement",
																"src": "8719:228:14"
															},
															{
																"expression": {
																	"id": 2480,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 2475,
																		"name": "tokenAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2397,
																		"src": "8961:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"id": 2477,
																				"name": "paymentMethod",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2360,
																				"src": "8996:13:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																					"typeString": "enum ICO.PaymentMethod"
																				}
																			},
																			{
																				"id": 2478,
																				"name": "paymentAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2362,
																				"src": "9011:13:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																					"typeString": "enum ICO.PaymentMethod"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 2476,
																			"name": "calculateTokenAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2236,
																			"src": "8975:20:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_enum$_PaymentMethod_$1706_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (enum ICO.PaymentMethod,uint256) view returns (uint256)"
																			}
																		},
																		"id": 2479,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8975:50:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8961:64:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2481,
																"nodeType": "ExpressionStatement",
																"src": "8961:64:14"
															},
															{
																"expression": {
																	"id": 2489,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"baseExpression": {
																			"baseExpression": {
																				"id": 2482,
																				"name": "investorPayments",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1763,
																				"src": "9039:16:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_PaymentMethod_$1706_$_t_uint256_$_$",
																					"typeString": "mapping(address => mapping(enum ICO.PaymentMethod => uint256))"
																				}
																			},
																			"id": 2486,
																			"indexExpression": {
																				"expression": {
																					"id": 2483,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "9056:3:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 2484,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "9060:6:14",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "9056:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "9039:28:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_enum$_PaymentMethod_$1706_$_t_uint256_$",
																				"typeString": "mapping(enum ICO.PaymentMethod => uint256)"
																			}
																		},
																		"id": 2487,
																		"indexExpression": {
																			"id": 2485,
																			"name": "paymentMethod",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2360,
																			"src": "9068:13:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																				"typeString": "enum ICO.PaymentMethod"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"nodeType": "IndexAccess",
																		"src": "9039:43:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "+=",
																	"rightHandSide": {
																		"id": 2488,
																		"name": "paymentAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2362,
																		"src": "9086:13:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9039:60:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2490,
																"nodeType": "ExpressionStatement",
																"src": "9039:60:14"
															}
														]
													}
												},
												"id": 2493,
												"nodeType": "IfStatement",
												"src": "8132:978:14",
												"trueBody": {
													"id": 2429,
													"nodeType": "Block",
													"src": "8172:219:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2407,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 2404,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "8194:3:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 2405,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "8198:5:14",
																			"memberName": "value",
																			"nodeType": "MemberAccess",
																			"src": "8194:9:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2406,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8207:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "8194:14:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "53656e6420612076616c696420424e4220616d6f756e74",
																		"id": 2408,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8210:25:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c4187a1289740d8ffce3bb99c104d1df31ca9848a3a5aafe5f4d5ecd5e91ee9b",
																			"typeString": "literal_string \"Send a valid BNB amount\""
																		},
																		"value": "Send a valid BNB amount"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_c4187a1289740d8ffce3bb99c104d1df31ca9848a3a5aafe5f4d5ecd5e91ee9b",
																			"typeString": "literal_string \"Send a valid BNB amount\""
																		}
																	],
																	"id": 2403,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "8186:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2409,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8186:50:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2410,
															"nodeType": "ExpressionStatement",
															"src": "8186:50:14"
														},
														{
															"expression": {
																"id": 2417,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2411,
																	"name": "tokenAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2397,
																	"src": "8250:11:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 2413,
																			"name": "paymentMethod",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2360,
																			"src": "8285:13:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																				"typeString": "enum ICO.PaymentMethod"
																			}
																		},
																		{
																			"expression": {
																				"id": 2414,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "8300:3:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 2415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "8304:5:14",
																			"memberName": "value",
																			"nodeType": "MemberAccess",
																			"src": "8300:9:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																				"typeString": "enum ICO.PaymentMethod"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2412,
																		"name": "calculateTokenAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2236,
																		"src": "8264:20:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_enum$_PaymentMethod_$1706_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (enum ICO.PaymentMethod,uint256) view returns (uint256)"
																		}
																	},
																	"id": 2416,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8264:46:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8250:60:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2418,
															"nodeType": "ExpressionStatement",
															"src": "8250:60:14"
														},
														{
															"expression": {
																"id": 2427,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 2419,
																			"name": "investorPayments",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1763,
																			"src": "8324:16:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_PaymentMethod_$1706_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(enum ICO.PaymentMethod => uint256))"
																			}
																		},
																		"id": 2423,
																		"indexExpression": {
																			"expression": {
																				"id": 2420,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "8341:3:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 2421,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "8345:6:14",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "8341:10:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8324:28:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_enum$_PaymentMethod_$1706_$_t_uint256_$",
																			"typeString": "mapping(enum ICO.PaymentMethod => uint256)"
																		}
																	},
																	"id": 2424,
																	"indexExpression": {
																		"id": 2422,
																		"name": "paymentMethod",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2360,
																		"src": "8353:13:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																			"typeString": "enum ICO.PaymentMethod"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8324:43:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"expression": {
																		"id": 2425,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "8371:3:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2426,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8375:5:14",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "8371:9:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8324:56:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2428,
															"nodeType": "ExpressionStatement",
															"src": "8324:56:14"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2495,
																"name": "tokenAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2397,
																"src": "9137:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 2496,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9152:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9137:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420746f6b656e20616d6f756e74",
															"id": 2498,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9155:22:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51e395ccdea9060dec5fa8fca2f2563cffa61f9f6f61f3f9c9b3895fa879ed58",
																"typeString": "literal_string \"Invalid token amount\""
															},
															"value": "Invalid token amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51e395ccdea9060dec5fa8fca2f2563cffa61f9f6f61f3f9c9b3895fa879ed58",
																"typeString": "literal_string \"Invalid token amount\""
															}
														],
														"id": 2494,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9129:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9129:49:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2500,
												"nodeType": "ExpressionStatement",
												"src": "9129:49:14"
											},
											{
												"assignments": [
													2502
												],
												"declarations": [
													{
														"constant": false,
														"id": 2502,
														"mutability": "mutable",
														"name": "totalCostInUSD",
														"nameLocation": "9196:14:14",
														"nodeType": "VariableDeclaration",
														"scope": 2600,
														"src": "9188:22:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2501,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9188:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2512,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2508,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2503,
																	"name": "tokenAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2397,
																	"src": "9214:11:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 2504,
																			"name": "sales",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1743,
																			"src": "9240:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Sale_$1702_storage_$",
																				"typeString": "mapping(uint256 => struct ICO.Sale storage ref)"
																			}
																		},
																		"id": 2506,
																		"indexExpression": {
																			"id": 2505,
																			"name": "saleCount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1715,
																			"src": "9246:9:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9240:16:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Sale_$1702_storage",
																			"typeString": "struct ICO.Sale storage ref"
																		}
																	},
																	"id": 2507,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9257:13:14",
																	"memberName": "tokenPriceUSD",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1697,
																	"src": "9240:30:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9214:56:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2509,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9213:58:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 2510,
														"name": "PRECISION_18",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1725,
														"src": "9274:12:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9213:73:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9188:98:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2516,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2514,
																	"name": "totalFundsRaisedUSD",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1717,
																	"src": "9317:19:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 2515,
																	"name": "totalCostInUSD",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2502,
																	"src": "9339:14:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9317:36:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2517,
																"name": "hardCapInUSD",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1713,
																"src": "9357:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9317:52:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "48617264206361702072656163686564",
															"id": 2519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9383:18:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c07dacc766697a4a5558e08455451d0672777bb5104aed3615bc1964c00cc795",
																"typeString": "literal_string \"Hard cap reached\""
															},
															"value": "Hard cap reached"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c07dacc766697a4a5558e08455451d0672777bb5104aed3615bc1964c00cc795",
																"typeString": "literal_string \"Hard cap reached\""
															}
														],
														"id": 2513,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9296:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9296:115:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2521,
												"nodeType": "ExpressionStatement",
												"src": "9296:115:14"
											},
											{
												"expression": {
													"id": 2532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2522,
															"name": "contributionsInUSD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1747,
															"src": "9421:18:14",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2525,
														"indexExpression": {
															"expression": {
																"id": 2523,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9440:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2524,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9444:6:14",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9440:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9421:30:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2531,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 2526,
																"name": "contributionsInUSD",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1747,
																"src": "9453:18:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 2529,
															"indexExpression": {
																"expression": {
																	"id": 2527,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "9472:3:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2528,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9476:6:14",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "9472:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9453:30:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 2530,
															"name": "totalCostInUSD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2502,
															"src": "9485:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "9453:46:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9421:78:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2533,
												"nodeType": "ExpressionStatement",
												"src": "9421:78:14"
											},
											{
												"expression": {
													"id": 2538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2534,
														"name": "totalFundsRaisedUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1717,
														"src": "9509:19:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2537,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2535,
															"name": "totalFundsRaisedUSD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1717,
															"src": "9531:19:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 2536,
															"name": "totalCostInUSD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2502,
															"src": "9552:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "9531:35:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9509:57:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2539,
												"nodeType": "ExpressionStatement",
												"src": "9509:57:14"
											},
											{
												"expression": {
													"id": 2545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 2540,
																"name": "sales",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1743,
																"src": "9576:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Sale_$1702_storage_$",
																	"typeString": "mapping(uint256 => struct ICO.Sale storage ref)"
																}
															},
															"id": 2542,
															"indexExpression": {
																"id": 2541,
																"name": "saleCount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1715,
																"src": "9582:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9576:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Sale_$1702_storage",
																"typeString": "struct ICO.Sale storage ref"
															}
														},
														"id": 2543,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "9593:10:14",
														"memberName": "tokensSold",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1699,
														"src": "9576:27:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2544,
														"name": "tokenAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2397,
														"src": "9607:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9576:42:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2546,
												"nodeType": "ExpressionStatement",
												"src": "9576:42:14"
											},
											{
												"expression": {
													"id": 2551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2547,
														"name": "totalTokensSold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1719,
														"src": "9628:15:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2550,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2548,
															"name": "totalTokensSold",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1719,
															"src": "9646:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 2549,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2397,
															"src": "9663:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "9646:28:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9628:46:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2552,
												"nodeType": "ExpressionStatement",
												"src": "9628:46:14"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 2553,
															"name": "tokensBoughtByInvestor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1751,
															"src": "9689:22:14",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2556,
														"indexExpression": {
															"expression": {
																"id": 2554,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9712:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9716:6:14",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9712:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9689:34:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2557,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9727:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9689:39:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2567,
												"nodeType": "IfStatement",
												"src": "9685:96:14",
												"trueBody": {
													"id": 2566,
													"nodeType": "Block",
													"src": "9730:51:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2562,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "9759:3:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2563,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9763:6:14",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "9759:10:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 2559,
																		"name": "investors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1734,
																		"src": "9744:9:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 2561,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9754:4:14",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "9744:14:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
																		"typeString": "function (address[] storage pointer,address)"
																	}
																},
																"id": 2564,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9744:26:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2565,
															"nodeType": "ExpressionStatement",
															"src": "9744:26:14"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2568,
															"name": "tokensBoughtByInvestor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1751,
															"src": "9790:22:14",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2571,
														"indexExpression": {
															"expression": {
																"id": 2569,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9813:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2570,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9817:6:14",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9813:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9790:34:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2577,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 2572,
																"name": "tokensBoughtByInvestor",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1751,
																"src": "9826:22:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 2575,
															"indexExpression": {
																"expression": {
																	"id": 2573,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "9849:3:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2574,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9853:6:14",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "9849:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9826:34:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 2576,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2397,
															"src": "9862:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "9826:47:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9790:83:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2579,
												"nodeType": "ExpressionStatement",
												"src": "9790:83:14"
											},
											{
												"expression": {
													"id": 2585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2580,
															"name": "paymentMethodForInvestor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1756,
															"src": "9883:24:14",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_enum$_PaymentMethod_$1706_$",
																"typeString": "mapping(address => enum ICO.PaymentMethod)"
															}
														},
														"id": 2583,
														"indexExpression": {
															"expression": {
																"id": 2581,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9908:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2582,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9912:6:14",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9908:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9883:36:14",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_PaymentMethod_$1706",
															"typeString": "enum ICO.PaymentMethod"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2584,
														"name": "paymentMethod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2360,
														"src": "9922:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_PaymentMethod_$1706",
															"typeString": "enum ICO.PaymentMethod"
														}
													},
													"src": "9883:52:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_PaymentMethod_$1706",
														"typeString": "enum ICO.PaymentMethod"
													}
												},
												"id": 2586,
												"nodeType": "ExpressionStatement",
												"src": "9883:52:14"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2588,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9980:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2589,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9984:6:14",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9980:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2590,
															"name": "saleCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1715,
															"src": "10004:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2591,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2397,
															"src": "10027:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 2592,
																	"name": "sales",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1743,
																	"src": "10052:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Sale_$1702_storage_$",
																		"typeString": "mapping(uint256 => struct ICO.Sale storage ref)"
																	}
																},
																"id": 2594,
																"indexExpression": {
																	"id": 2593,
																	"name": "saleCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1715,
																	"src": "10058:9:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10052:16:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Sale_$1702_storage",
																	"typeString": "struct ICO.Sale storage ref"
																}
															},
															"id": 2595,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10069:13:14",
															"memberName": "tokenPriceUSD",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1697,
															"src": "10052:30:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2596,
															"name": "paymentAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2362,
															"src": "10096:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2597,
															"name": "paymentMethod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2360,
															"src": "10123:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																"typeString": "enum ICO.PaymentMethod"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																"typeString": "enum ICO.PaymentMethod"
															}
														],
														"id": 2587,
														"name": "TokensPurchased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1801,
														"src": "9951:15:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_enum$_PaymentMethod_$1706_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256,uint256,enum ICO.PaymentMethod)"
														}
													},
													"id": 2598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9951:195:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2599,
												"nodeType": "EmitStatement",
												"src": "9946:200:14"
											}
										]
									},
									"functionSelector": "940c333e",
									"id": 2601,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2365,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2364,
												"name": "nonReentrant",
												"nameLocations": [
													"7851:12:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 791,
												"src": "7851:12:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "7851:12:14"
										},
										{
											"id": 2367,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2366,
												"name": "icoNotFinalized",
												"nameLocations": [
													"7872:15:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1890,
												"src": "7872:15:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "7872:15:14"
										},
										{
											"id": 2369,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2368,
												"name": "freezed",
												"nameLocations": [
													"7896:7:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1900,
												"src": "7896:7:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "7896:7:14"
										}
									],
									"name": "buyTokens",
									"nameLocation": "7739:9:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2360,
												"mutability": "mutable",
												"name": "paymentMethod",
												"nameLocation": "7763:13:14",
												"nodeType": "VariableDeclaration",
												"scope": 2601,
												"src": "7749:27:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_PaymentMethod_$1706",
													"typeString": "enum ICO.PaymentMethod"
												},
												"typeName": {
													"id": 2359,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2358,
														"name": "PaymentMethod",
														"nameLocations": [
															"7749:13:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1706,
														"src": "7749:13:14"
													},
													"referencedDeclaration": 1706,
													"src": "7749:13:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_PaymentMethod_$1706",
														"typeString": "enum ICO.PaymentMethod"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2362,
												"mutability": "mutable",
												"name": "paymentAmount",
												"nameLocation": "7786:13:14",
												"nodeType": "VariableDeclaration",
												"scope": 2601,
												"src": "7778:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7778:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7748:52:14"
									},
									"returnParameters": {
										"id": 2370,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7908:0:14"
									},
									"scope": 3147,
									"src": "7730:2423:14",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2635,
										"nodeType": "Block",
										"src": "10280:290:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2615,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2613,
																"name": "totalFundsRaisedUSD",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1717,
																"src": "10311:19:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2614,
																"name": "softCapInUSD",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1711,
																"src": "10334:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10311:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536f667420436170204e4f742052656163686564",
															"id": 2616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10360:22:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0ac6ed66eb10da1daf17a818038873a6c51ace7271027943cc6a6f233843a4a5",
																"typeString": "literal_string \"Soft Cap NOt Reached\""
															},
															"value": "Soft Cap NOt Reached"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0ac6ed66eb10da1daf17a818038873a6c51ace7271027943cc6a6f233843a4a5",
																"typeString": "literal_string \"Soft Cap NOt Reached\""
															}
														],
														"id": 2612,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10290:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10290:102:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2618,
												"nodeType": "ExpressionStatement",
												"src": "10290:102:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2620,
															"name": "isTokensAirdropped",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1729,
															"src": "10410:18:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41697264726f70206e6f7420636f6d706c65746564",
															"id": 2621,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10430:23:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_aff7558382c088943ad2bf11af33e010b3e0eab9fe7e943d464ecefccf0c4c65",
																"typeString": "literal_string \"Airdrop not completed\""
															},
															"value": "Airdrop not completed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_aff7558382c088943ad2bf11af33e010b3e0eab9fe7e943d464ecefccf0c4c65",
																"typeString": "literal_string \"Airdrop not completed\""
															}
														],
														"id": 2619,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10402:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10402:52:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2623,
												"nodeType": "ExpressionStatement",
												"src": "10402:52:14"
											},
											{
												"expression": {
													"id": 2626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2624,
														"name": "isICOFinalized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1727,
														"src": "10465:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2625,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10482:4:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "10465:21:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2627,
												"nodeType": "ExpressionStatement",
												"src": "10465:21:14"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2628,
														"name": "_transferFundsToOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2727,
														"src": "10496:21:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10496:23:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2630,
												"nodeType": "ExpressionStatement",
												"src": "10496:23:14"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2632,
															"name": "totalTokensSold",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1719,
															"src": "10547:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2631,
														"name": "ICOFinalized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1767,
														"src": "10534:12:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10534:29:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2634,
												"nodeType": "EmitStatement",
												"src": "10529:34:14"
											}
										]
									},
									"functionSelector": "23cc75a8",
									"id": 2636,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2604,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2603,
												"name": "nonReentrant",
												"nameLocations": [
													"10205:12:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 791,
												"src": "10205:12:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "10205:12:14"
										},
										{
											"id": 2606,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2605,
												"name": "onlyOwner",
												"nameLocations": [
													"10226:9:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 135,
												"src": "10226:9:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "10226:9:14"
										},
										{
											"id": 2608,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2607,
												"name": "icoNotFinalized",
												"nameLocations": [
													"10244:15:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1890,
												"src": "10244:15:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "10244:15:14"
										},
										{
											"id": 2610,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2609,
												"name": "freezed",
												"nameLocations": [
													"10268:7:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1900,
												"src": "10268:7:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "10268:7:14"
										}
									],
									"name": "finalizeICO",
									"nameLocation": "10168:11:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2602,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10179:2:14"
									},
									"returnParameters": {
										"id": 2611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10280:0:14"
									},
									"scope": 3147,
									"src": "10159:411:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2726,
										"nodeType": "Block",
										"src": "10616:740:14",
										"statements": [
											{
												"assignments": [
													2640
												],
												"declarations": [
													{
														"constant": false,
														"id": 2640,
														"mutability": "mutable",
														"name": "self",
														"nameLocation": "10634:4:14",
														"nodeType": "VariableDeclaration",
														"scope": 2726,
														"src": "10626:12:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2639,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10626:7:14",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2645,
												"initialValue": {
													"arguments": [
														{
															"id": 2643,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "10649:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ICO_$3147",
																"typeString": "contract ICO"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_ICO_$3147",
																"typeString": "contract ICO"
															}
														],
														"id": 2642,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "10641:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 2641,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10641:7:14",
															"typeDescriptions": {}
														}
													},
													"id": 2644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10641:13:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10626:28:14"
											},
											{
												"assignments": [
													2647
												],
												"declarations": [
													{
														"constant": false,
														"id": 2647,
														"mutability": "mutable",
														"name": "nativeBalance",
														"nameLocation": "10672:13:14",
														"nodeType": "VariableDeclaration",
														"scope": 2726,
														"src": "10664:21:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2646,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10664:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2650,
												"initialValue": {
													"expression": {
														"id": 2648,
														"name": "self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2640,
														"src": "10688:4:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "10693:7:14",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "10688:12:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10664:36:14"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2651,
														"name": "nativeBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2647,
														"src": "10714:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2652,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10731:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10714:18:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2673,
												"nodeType": "IfStatement",
												"src": "10710:164:14",
												"trueBody": {
													"id": 2672,
													"nodeType": "Block",
													"src": "10734:140:14",
													"statements": [
														{
															"assignments": [
																2655,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2655,
																	"mutability": "mutable",
																	"name": "success",
																	"nameLocation": "10754:7:14",
																	"nodeType": "VariableDeclaration",
																	"scope": 2672,
																	"src": "10749:12:14",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 2654,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "10749:4:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																null
															],
															"id": 2666,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "",
																		"id": 2664,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10811:2:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																				"typeString": "literal_string \"\""
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 2658,
																						"name": "owner",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 151,
																						"src": "10775:5:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																							"typeString": "function () view returns (address)"
																						}
																					},
																					"id": 2659,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "10775:7:14",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2657,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "10767:8:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_payable_$",
																					"typeString": "type(address payable)"
																				},
																				"typeName": {
																					"id": 2656,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "10767:8:14",
																					"stateMutability": "payable",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2660,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10767:16:14",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"id": 2661,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10784:4:14",
																		"memberName": "call",
																		"nodeType": "MemberAccess",
																		"src": "10767:21:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																		}
																	},
																	"id": 2663,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"names": [
																		"value"
																	],
																	"nodeType": "FunctionCallOptions",
																	"options": [
																		{
																			"id": 2662,
																			"name": "nativeBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2647,
																			"src": "10796:13:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"src": "10767:43:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 2665,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10767:47:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "10748:66:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2668,
																		"name": "success",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2655,
																		"src": "10836:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5472616e73666572206661696c6564",
																		"id": 2669,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10845:17:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																			"typeString": "literal_string \"Transfer failed\""
																		},
																		"value": "Transfer failed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																			"typeString": "literal_string \"Transfer failed\""
																		}
																	],
																	"id": 2667,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "10828:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2670,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10828:35:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2671,
															"nodeType": "ExpressionStatement",
															"src": "10828:35:14"
														}
													]
												}
											},
											{
												"assignments": [
													2675
												],
												"declarations": [
													{
														"constant": false,
														"id": 2675,
														"mutability": "mutable",
														"name": "usdtBalance",
														"nameLocation": "10891:11:14",
														"nodeType": "VariableDeclaration",
														"scope": 2726,
														"src": "10883:19:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2674,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10883:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2682,
												"initialValue": {
													"arguments": [
														{
															"id": 2680,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2640,
															"src": "10928:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2677,
																	"name": "usdt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1736,
																	"src": "10912:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2676,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1264,
																"src": "10905:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1264_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 2678,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10905:12:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1264",
																"typeString": "contract IERC20"
															}
														},
														"id": 2679,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10918:9:14",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1221,
														"src": "10905:22:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 2681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10905:28:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10883:50:14"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2683,
														"name": "usdtBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2675,
														"src": "10947:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2684,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10962:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10947:16:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2699,
												"nodeType": "IfStatement",
												"src": "10943:169:14",
												"trueBody": {
													"id": 2698,
													"nodeType": "Block",
													"src": "10965:147:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 2691,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 151,
																					"src": "11026:5:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																						"typeString": "function () view returns (address)"
																					}
																				},
																				"id": 2692,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "11026:7:14",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 2693,
																				"name": "usdtBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2675,
																				"src": "11035:11:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 2688,
																						"name": "usdt",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1736,
																						"src": "11011:4:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 2687,
																					"name": "IERC20",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1264,
																					"src": "11004:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IERC20_$1264_$",
																						"typeString": "type(contract IERC20)"
																					}
																				},
																				"id": 2689,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "11004:12:14",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$1264",
																					"typeString": "contract IERC20"
																				}
																			},
																			"id": 2690,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "11017:8:14",
																			"memberName": "transfer",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1231,
																			"src": "11004:21:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																				"typeString": "function (address,uint256) external returns (bool)"
																			}
																		},
																		"id": 2694,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11004:43:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "55534454207472616e73666572206661696c6564",
																		"id": 2695,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11065:22:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4",
																			"typeString": "literal_string \"USDT transfer failed\""
																		},
																		"value": "USDT transfer failed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4",
																			"typeString": "literal_string \"USDT transfer failed\""
																		}
																	],
																	"id": 2686,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "10979:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2696,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10979:122:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2697,
															"nodeType": "ExpressionStatement",
															"src": "10979:122:14"
														}
													]
												}
											},
											{
												"assignments": [
													2701
												],
												"declarations": [
													{
														"constant": false,
														"id": 2701,
														"mutability": "mutable",
														"name": "usdcBalance",
														"nameLocation": "11129:11:14",
														"nodeType": "VariableDeclaration",
														"scope": 2726,
														"src": "11121:19:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2700,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11121:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2708,
												"initialValue": {
													"arguments": [
														{
															"id": 2706,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2640,
															"src": "11166:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2703,
																	"name": "usdc",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1738,
																	"src": "11150:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2702,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1264,
																"src": "11143:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1264_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 2704,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11143:12:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1264",
																"typeString": "contract IERC20"
															}
														},
														"id": 2705,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11156:9:14",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1221,
														"src": "11143:22:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 2707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11143:28:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11121:50:14"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2709,
														"name": "usdcBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2701,
														"src": "11185:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2710,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11200:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "11185:16:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2725,
												"nodeType": "IfStatement",
												"src": "11181:169:14",
												"trueBody": {
													"id": 2724,
													"nodeType": "Block",
													"src": "11203:147:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 2717,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 151,
																					"src": "11264:5:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																						"typeString": "function () view returns (address)"
																					}
																				},
																				"id": 2718,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "11264:7:14",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 2719,
																				"name": "usdcBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2701,
																				"src": "11273:11:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 2714,
																						"name": "usdc",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1738,
																						"src": "11249:4:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 2713,
																					"name": "IERC20",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1264,
																					"src": "11242:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IERC20_$1264_$",
																						"typeString": "type(contract IERC20)"
																					}
																				},
																				"id": 2715,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "11242:12:14",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$1264",
																					"typeString": "contract IERC20"
																				}
																			},
																			"id": 2716,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "11255:8:14",
																			"memberName": "transfer",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1231,
																			"src": "11242:21:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																				"typeString": "function (address,uint256) external returns (bool)"
																			}
																		},
																		"id": 2720,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11242:43:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "55534443207472616e73666572206661696c6564",
																		"id": 2721,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11303:22:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_032fb3428477d66798bdf7801f58a252d723dc1362b9dfac5726f85f81cca815",
																			"typeString": "literal_string \"USDC transfer failed\""
																		},
																		"value": "USDC transfer failed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_032fb3428477d66798bdf7801f58a252d723dc1362b9dfac5726f85f81cca815",
																			"typeString": "literal_string \"USDC transfer failed\""
																		}
																	],
																	"id": 2712,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11217:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2722,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11217:122:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2723,
															"nodeType": "ExpressionStatement",
															"src": "11217:122:14"
														}
													]
												}
											}
										]
									},
									"id": 2727,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferFundsToOwner",
									"nameLocation": "10585:21:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2637,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10606:2:14"
									},
									"returnParameters": {
										"id": 2638,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10616:0:14"
									},
									"scope": 3147,
									"src": "10576:780:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2856,
										"nodeType": "Block",
										"src": "11487:1184:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2740,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "11505:19:14",
															"subExpression": {
																"id": 2739,
																"name": "isTokensAirdropped",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1729,
																"src": "11506:18:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41697264726f7020616c726561647920636f6d706c65746564",
															"id": 2741,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11526:27:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_35194372afc15163c58aa5af5530ba0e7f2576a9d985e6f8d166066860d6966a",
																"typeString": "literal_string \"Airdrop already completed\""
															},
															"value": "Airdrop already completed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_35194372afc15163c58aa5af5530ba0e7f2576a9d985e6f8d166066860d6966a",
																"typeString": "literal_string \"Airdrop already completed\""
															}
														],
														"id": 2738,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11497:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11497:57:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2743,
												"nodeType": "ExpressionStatement",
												"src": "11497:57:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2751,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2747,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "11601:3:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2748,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "11605:6:14",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "11601:10:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 2745,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1709,
																		"src": "11585:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1264",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 2746,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11591:9:14",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1221,
																	"src": "11585:15:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 2749,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11585:27:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2750,
																"name": "totalTokensSold",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1719,
																"src": "11616:15:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11585:46:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742046756e6473",
															"id": 2752,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11645:20:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092",
																"typeString": "literal_string \"Insufficient Funds\""
															},
															"value": "Insufficient Funds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092",
																"typeString": "literal_string \"Insufficient Funds\""
															}
														],
														"id": 2744,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11564:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11564:111:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2754,
												"nodeType": "ExpressionStatement",
												"src": "11564:111:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2760,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2756,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "11693:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2757,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11699:9:14",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "11693:15:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2758,
																	"name": "getLatestSaleEndTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3079,
																	"src": "11711:20:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 2759,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11711:22:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11693:40:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616c65206f6e676f696e67",
															"id": 2761,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11735:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_52e3d128a4ea4439173e3f4b78f0e12548c2c4449a80c4b2fbefb1fd3e6a7665",
																"typeString": "literal_string \"Sale ongoing\""
															},
															"value": "Sale ongoing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_52e3d128a4ea4439173e3f4b78f0e12548c2c4449a80c4b2fbefb1fd3e6a7665",
																"typeString": "literal_string \"Sale ongoing\""
															}
														],
														"id": 2755,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11685:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11685:65:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2763,
												"nodeType": "ExpressionStatement",
												"src": "11685:65:14"
											},
											{
												"assignments": [
													2765
												],
												"declarations": [
													{
														"constant": false,
														"id": 2765,
														"mutability": "mutable",
														"name": "investorLength",
														"nameLocation": "11769:14:14",
														"nodeType": "VariableDeclaration",
														"scope": 2856,
														"src": "11761:22:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2764,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11761:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2768,
												"initialValue": {
													"expression": {
														"id": 2766,
														"name": "investors",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1734,
														"src": "11786:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 2767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "11796:6:14",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "11786:16:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11761:41:14"
											},
											{
												"assignments": [
													2770
												],
												"declarations": [
													{
														"constant": false,
														"id": 2770,
														"mutability": "mutable",
														"name": "investorsIterated",
														"nameLocation": "11820:17:14",
														"nodeType": "VariableDeclaration",
														"scope": 2856,
														"src": "11812:25:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2769,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11812:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2771,
												"nodeType": "VariableDeclarationStatement",
												"src": "11812:25:14"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2772,
														"name": "investorLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2765,
														"src": "11852:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "3130",
														"id": 2773,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11869:2:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "11852:19:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2786,
													"nodeType": "Block",
													"src": "11943:46:14",
													"statements": [
														{
															"expression": {
																"id": 2784,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2782,
																	"name": "investorsIterated",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2770,
																	"src": "11957:17:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 2783,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11977:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "11957:21:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2785,
															"nodeType": "ExpressionStatement",
															"src": "11957:21:14"
														}
													]
												},
												"id": 2787,
												"nodeType": "IfStatement",
												"src": "11848:141:14",
												"trueBody": {
													"id": 2781,
													"nodeType": "Block",
													"src": "11873:64:14",
													"statements": [
														{
															"expression": {
																"id": 2779,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2775,
																	"name": "investorsIterated",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2770,
																	"src": "11887:17:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2778,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2776,
																		"name": "investorLength",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2765,
																		"src": "11907:14:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "3131",
																		"id": 2777,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11924:2:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_11_by_1",
																			"typeString": "int_const 11"
																		},
																		"value": "11"
																	},
																	"src": "11907:19:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11887:39:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2780,
															"nodeType": "ExpressionStatement",
															"src": "11887:39:14"
														}
													]
												}
											},
											{
												"body": {
													"id": 2844,
													"nodeType": "Block",
													"src": "12064:515:14",
													"statements": [
														{
															"assignments": [
																2801
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2801,
																	"mutability": "mutable",
																	"name": "investor",
																	"nameLocation": "12086:8:14",
																	"nodeType": "VariableDeclaration",
																	"scope": 2844,
																	"src": "12078:16:14",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 2800,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12078:7:14",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2805,
															"initialValue": {
																"baseExpression": {
																	"id": 2802,
																	"name": "investors",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1734,
																	"src": "12097:9:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 2804,
																"indexExpression": {
																	"id": 2803,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2789,
																	"src": "12107:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12097:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12078:31:14"
														},
														{
															"assignments": [
																2807
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2807,
																	"mutability": "mutable",
																	"name": "tokensBought",
																	"nameLocation": "12131:12:14",
																	"nodeType": "VariableDeclaration",
																	"scope": 2844,
																	"src": "12123:20:14",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2806,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12123:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2811,
															"initialValue": {
																"baseExpression": {
																	"id": 2808,
																	"name": "tokensBoughtByInvestor",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1751,
																	"src": "12146:22:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2810,
																"indexExpression": {
																	"id": 2809,
																	"name": "investor",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2801,
																	"src": "12169:8:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12146:32:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12123:55:14"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2814,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2812,
																	"name": "tokensBought",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2807,
																	"src": "12197:12:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2813,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12212:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "12197:16:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2837,
															"nodeType": "IfStatement",
															"src": "12193:313:14",
															"trueBody": {
																"id": 2836,
																"nodeType": "Block",
																"src": "12215:291:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [],
																							"expression": {
																								"argumentTypes": [],
																								"id": 2818,
																								"name": "owner",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 151,
																								"src": "12281:5:14",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																									"typeString": "function () view returns (address)"
																								}
																							},
																							"id": 2819,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "12281:7:14",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"id": 2820,
																							"name": "investor",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2801,
																							"src": "12310:8:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"id": 2821,
																							"name": "tokensBought",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2807,
																							"src": "12340:12:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"id": 2816,
																							"name": "token",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1709,
																							"src": "12241:5:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_IERC20_$1264",
																								"typeString": "contract IERC20"
																							}
																						},
																						"id": 2817,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "12247:12:14",
																						"memberName": "transferFrom",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1263,
																						"src": "12241:18:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																							"typeString": "function (address,address,uint256) external returns (bool)"
																						}
																					},
																					"id": 2822,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "12241:129:14",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "546f6b656e207472616e73666572206661696c6564",
																					"id": 2823,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "12372:23:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																						"typeString": "literal_string \"Token transfer failed\""
																					},
																					"value": "Token transfer failed"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																						"typeString": "literal_string \"Token transfer failed\""
																					}
																				],
																				"id": 2815,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "12233:7:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 2824,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12233:163:14",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2825,
																		"nodeType": "ExpressionStatement",
																		"src": "12233:163:14"
																	},
																	{
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 2826,
																					"name": "investors",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1734,
																					"src": "12414:9:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 2828,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "12424:3:14",
																				"memberName": "pop",
																				"nodeType": "MemberAccess",
																				"src": "12414:13:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
																					"typeString": "function (address[] storage pointer)"
																				}
																			},
																			"id": 2829,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12414:15:14",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2830,
																		"nodeType": "ExpressionStatement",
																		"src": "12414:15:14"
																	},
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 2832,
																					"name": "investor",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2801,
																					"src": "12468:8:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2833,
																					"name": "tokensBought",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2807,
																					"src": "12478:12:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2831,
																				"name": "TokenAirdropped",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1786,
																				"src": "12452:15:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256)"
																				}
																			},
																			"id": 2834,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12452:39:14",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2835,
																		"nodeType": "EmitStatement",
																		"src": "12447:44:14"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2840,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2838,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2789,
																	"src": "12523:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2839,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12528:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "12523:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2843,
															"nodeType": "IfStatement",
															"src": "12519:50:14",
															"trueBody": {
																"id": 2842,
																"nodeType": "Block",
																"src": "12531:38:14",
																"statements": [
																	{
																		"id": 2841,
																		"nodeType": "Break",
																		"src": "12549:5:14"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2794,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2789,
														"src": "12035:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 2795,
														"name": "investorsIterated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2770,
														"src": "12040:17:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12035:22:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2845,
												"initializationExpression": {
													"assignments": [
														2789
													],
													"declarations": [
														{
															"constant": false,
															"id": 2789,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "12011:1:14",
															"nodeType": "VariableDeclaration",
															"scope": 2845,
															"src": "12003:9:14",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2788,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12003:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2793,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2792,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2790,
															"name": "investorLength",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2765,
															"src": "12015:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"hexValue": "31",
															"id": 2791,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12032:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "12015:18:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "12003:30:14"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 2798,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": false,
														"src": "12059:3:14",
														"subExpression": {
															"id": 2797,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2789,
															"src": "12059:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2799,
													"nodeType": "ExpressionStatement",
													"src": "12059:3:14"
												},
												"nodeType": "ForStatement",
												"src": "11998:581:14"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2846,
															"name": "investors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1734,
															"src": "12592:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 2847,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12602:6:14",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "12592:16:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2848,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12612:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12592:21:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2855,
												"nodeType": "IfStatement",
												"src": "12588:77:14",
												"trueBody": {
													"id": 2854,
													"nodeType": "Block",
													"src": "12615:50:14",
													"statements": [
														{
															"expression": {
																"id": 2852,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2850,
																	"name": "isTokensAirdropped",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1729,
																	"src": "12629:18:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 2851,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12650:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "12629:25:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2853,
															"nodeType": "ExpressionStatement",
															"src": "12629:25:14"
														}
													]
												}
											}
										]
									},
									"functionSelector": "91152c5c",
									"id": 2857,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2730,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2729,
												"name": "nonReentrant",
												"nameLocations": [
													"11412:12:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 791,
												"src": "11412:12:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "11412:12:14"
										},
										{
											"id": 2732,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2731,
												"name": "onlyOwner",
												"nameLocations": [
													"11433:9:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 135,
												"src": "11433:9:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "11433:9:14"
										},
										{
											"id": 2734,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2733,
												"name": "icoNotFinalized",
												"nameLocations": [
													"11451:15:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1890,
												"src": "11451:15:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "11451:15:14"
										},
										{
											"id": 2736,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2735,
												"name": "freezed",
												"nameLocations": [
													"11475:7:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1900,
												"src": "11475:7:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "11475:7:14"
										}
									],
									"name": "airdropTokens",
									"nameLocation": "11371:13:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2728,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11384:2:14"
									},
									"returnParameters": {
										"id": 2737,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11487:0:14"
									},
									"scope": 3147,
									"src": "11362:1309:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3051,
										"nodeType": "Block",
										"src": "12751:1972:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2871,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2867,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "12769:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2868,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12775:9:14",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "12769:15:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2869,
																	"name": "getLatestSaleEndTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3079,
																	"src": "12787:20:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 2870,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12787:22:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12769:40:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616c65206f6e676f696e67",
															"id": 2872,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12811:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_52e3d128a4ea4439173e3f4b78f0e12548c2c4449a80c4b2fbefb1fd3e6a7665",
																"typeString": "literal_string \"Sale ongoing\""
															},
															"value": "Sale ongoing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_52e3d128a4ea4439173e3f4b78f0e12548c2c4449a80c4b2fbefb1fd3e6a7665",
																"typeString": "literal_string \"Sale ongoing\""
															}
														],
														"id": 2866,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12761:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12761:65:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2874,
												"nodeType": "ExpressionStatement",
												"src": "12761:65:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2878,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2876,
																"name": "totalFundsRaisedUSD",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1717,
																"src": "12844:19:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2877,
																"name": "softCapInUSD",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1711,
																"src": "12866:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12844:34:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536f6674206361702072656163686564",
															"id": 2879,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12880:18:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7c68e13a7a3bf736cdb65f14ebef38f840872b490e156aead879b05f23b99d80",
																"typeString": "literal_string \"Soft cap reached\""
															},
															"value": "Soft cap reached"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7c68e13a7a3bf736cdb65f14ebef38f840872b490e156aead879b05f23b99d80",
																"typeString": "literal_string \"Soft cap reached\""
															}
														],
														"id": 2875,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12836:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12836:63:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2881,
												"nodeType": "ExpressionStatement",
												"src": "12836:63:14"
											},
											{
												"assignments": [
													2883
												],
												"declarations": [
													{
														"constant": false,
														"id": 2883,
														"mutability": "mutable",
														"name": "investorLength",
														"nameLocation": "12918:14:14",
														"nodeType": "VariableDeclaration",
														"scope": 3051,
														"src": "12910:22:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2882,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12910:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2886,
												"initialValue": {
													"expression": {
														"id": 2884,
														"name": "investors",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1734,
														"src": "12935:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 2885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "12945:6:14",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "12935:16:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12910:41:14"
											},
											{
												"assignments": [
													2888
												],
												"declarations": [
													{
														"constant": false,
														"id": 2888,
														"mutability": "mutable",
														"name": "investorsIterated",
														"nameLocation": "12969:17:14",
														"nodeType": "VariableDeclaration",
														"scope": 3051,
														"src": "12961:25:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2887,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12961:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2889,
												"nodeType": "VariableDeclarationStatement",
												"src": "12961:25:14"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2890,
														"name": "investorLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2883,
														"src": "13001:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "3130",
														"id": 2891,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13018:2:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "13001:19:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2904,
													"nodeType": "Block",
													"src": "13092:46:14",
													"statements": [
														{
															"expression": {
																"id": 2902,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2900,
																	"name": "investorsIterated",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2888,
																	"src": "13106:17:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 2901,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13126:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "13106:21:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2903,
															"nodeType": "ExpressionStatement",
															"src": "13106:21:14"
														}
													]
												},
												"id": 2905,
												"nodeType": "IfStatement",
												"src": "12997:141:14",
												"trueBody": {
													"id": 2899,
													"nodeType": "Block",
													"src": "13022:64:14",
													"statements": [
														{
															"expression": {
																"id": 2897,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2893,
																	"name": "investorsIterated",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2888,
																	"src": "13036:17:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2896,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2894,
																		"name": "investorLength",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2883,
																		"src": "13056:14:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "3131",
																		"id": 2895,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13073:2:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_11_by_1",
																			"typeString": "int_const 11"
																		},
																		"value": "11"
																	},
																	"src": "13056:19:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13036:39:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2898,
															"nodeType": "ExpressionStatement",
															"src": "13036:39:14"
														}
													]
												}
											},
											{
												"body": {
													"id": 3039,
													"nodeType": "Block",
													"src": "13214:1421:14",
													"statements": [
														{
															"assignments": [
																2919
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2919,
																	"mutability": "mutable",
																	"name": "investor",
																	"nameLocation": "13236:8:14",
																	"nodeType": "VariableDeclaration",
																	"scope": 3039,
																	"src": "13228:16:14",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 2918,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "13228:7:14",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2923,
															"initialValue": {
																"baseExpression": {
																	"id": 2920,
																	"name": "investors",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1734,
																	"src": "13247:9:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 2922,
																"indexExpression": {
																	"id": 2921,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2907,
																	"src": "13257:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "13247:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "13228:31:14"
														},
														{
															"body": {
																"id": 3026,
																"nodeType": "Block",
																"src": "13303:1222:14",
																"statements": [
																	{
																		"assignments": [
																			2936
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 2936,
																				"mutability": "mutable",
																				"name": "paymentMethod",
																				"nameLocation": "13335:13:14",
																				"nodeType": "VariableDeclaration",
																				"scope": 3026,
																				"src": "13321:27:14",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																					"typeString": "enum ICO.PaymentMethod"
																				},
																				"typeName": {
																					"id": 2935,
																					"nodeType": "UserDefinedTypeName",
																					"pathNode": {
																						"id": 2934,
																						"name": "PaymentMethod",
																						"nameLocations": [
																							"13321:13:14"
																						],
																						"nodeType": "IdentifierPath",
																						"referencedDeclaration": 1706,
																						"src": "13321:13:14"
																					},
																					"referencedDeclaration": 1706,
																					"src": "13321:13:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																						"typeString": "enum ICO.PaymentMethod"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 2940,
																		"initialValue": {
																			"arguments": [
																				{
																					"id": 2938,
																					"name": "j",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2925,
																					"src": "13365:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				],
																				"id": 2937,
																				"name": "PaymentMethod",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1706,
																				"src": "13351:13:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_enum$_PaymentMethod_$1706_$",
																					"typeString": "type(enum ICO.PaymentMethod)"
																				}
																			},
																			"id": 2939,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13351:16:14",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																				"typeString": "enum ICO.PaymentMethod"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "13321:46:14"
																	},
																	{
																		"assignments": [
																			2942
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 2942,
																				"mutability": "mutable",
																				"name": "amount",
																				"nameLocation": "13393:6:14",
																				"nodeType": "VariableDeclaration",
																				"scope": 3026,
																				"src": "13385:14:14",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 2941,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "13385:7:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 2948,
																		"initialValue": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 2943,
																					"name": "investorPayments",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1763,
																					"src": "13402:16:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_PaymentMethod_$1706_$_t_uint256_$_$",
																						"typeString": "mapping(address => mapping(enum ICO.PaymentMethod => uint256))"
																					}
																				},
																				"id": 2945,
																				"indexExpression": {
																					"id": 2944,
																					"name": "investor",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2919,
																					"src": "13419:8:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "13402:26:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_enum$_PaymentMethod_$1706_$_t_uint256_$",
																					"typeString": "mapping(enum ICO.PaymentMethod => uint256)"
																				}
																			},
																			"id": 2947,
																			"indexExpression": {
																				"id": 2946,
																				"name": "paymentMethod",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2936,
																				"src": "13429:13:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																					"typeString": "enum ICO.PaymentMethod"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "13402:41:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "13385:58:14"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2951,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2949,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2942,
																				"src": "13466:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 2950,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13475:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "13466:10:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 3025,
																		"nodeType": "IfStatement",
																		"src": "13462:1032:14",
																		"trueBody": {
																			"id": 3024,
																			"nodeType": "Block",
																			"src": "13478:1016:14",
																			"statements": [
																				{
																					"expression": {
																						"id": 2958,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"baseExpression": {
																								"baseExpression": {
																									"id": 2952,
																									"name": "investorPayments",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1763,
																									"src": "13500:16:14",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_PaymentMethod_$1706_$_t_uint256_$_$",
																										"typeString": "mapping(address => mapping(enum ICO.PaymentMethod => uint256))"
																									}
																								},
																								"id": 2955,
																								"indexExpression": {
																									"id": 2953,
																									"name": "investor",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2919,
																									"src": "13517:8:14",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "13500:26:14",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_enum$_PaymentMethod_$1706_$_t_uint256_$",
																									"typeString": "mapping(enum ICO.PaymentMethod => uint256)"
																								}
																							},
																							"id": 2956,
																							"indexExpression": {
																								"id": 2954,
																								"name": "paymentMethod",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2936,
																								"src": "13527:13:14",
																								"typeDescriptions": {
																									"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																									"typeString": "enum ICO.PaymentMethod"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"nodeType": "IndexAccess",
																							"src": "13500:41:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"hexValue": "30",
																							"id": 2957,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "13544:1:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "13500:45:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2959,
																					"nodeType": "ExpressionStatement",
																					"src": "13500:45:14"
																				},
																				{
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																							"typeString": "enum ICO.PaymentMethod"
																						},
																						"id": 2963,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 2960,
																							"name": "paymentMethod",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2936,
																							"src": "13571:13:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																								"typeString": "enum ICO.PaymentMethod"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"expression": {
																								"id": 2961,
																								"name": "PaymentMethod",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1706,
																								"src": "13588:13:14",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_enum$_PaymentMethod_$1706_$",
																									"typeString": "type(enum ICO.PaymentMethod)"
																								}
																							},
																							"id": 2962,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "13602:3:14",
																							"memberName": "BNB",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1703,
																							"src": "13588:17:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																								"typeString": "enum ICO.PaymentMethod"
																							}
																						},
																						"src": "13571:34:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"falseBody": {
																						"condition": {
																							"commonType": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							},
																							"id": 2990,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"commonType": {
																									"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																									"typeString": "enum ICO.PaymentMethod"
																								},
																								"id": 2985,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2982,
																									"name": "paymentMethod",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2936,
																									"src": "13862:13:14",
																									"typeDescriptions": {
																										"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																										"typeString": "enum ICO.PaymentMethod"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "==",
																								"rightExpression": {
																									"expression": {
																										"id": 2983,
																										"name": "PaymentMethod",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1706,
																										"src": "13879:13:14",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_enum$_PaymentMethod_$1706_$",
																											"typeString": "type(enum ICO.PaymentMethod)"
																										}
																									},
																									"id": 2984,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"memberLocation": "13893:4:14",
																									"memberName": "USDT",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 1704,
																									"src": "13879:18:14",
																									"typeDescriptions": {
																										"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																										"typeString": "enum ICO.PaymentMethod"
																									}
																								},
																								"src": "13862:35:14",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "||",
																							"rightExpression": {
																								"commonType": {
																									"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																									"typeString": "enum ICO.PaymentMethod"
																								},
																								"id": 2989,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2986,
																									"name": "paymentMethod",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2936,
																									"src": "13925:13:14",
																									"typeDescriptions": {
																										"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																										"typeString": "enum ICO.PaymentMethod"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "==",
																								"rightExpression": {
																									"expression": {
																										"id": 2987,
																										"name": "PaymentMethod",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1706,
																										"src": "13942:13:14",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_enum$_PaymentMethod_$1706_$",
																											"typeString": "type(enum ICO.PaymentMethod)"
																										}
																									},
																									"id": 2988,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"memberLocation": "13956:4:14",
																									"memberName": "USDC",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 1705,
																									"src": "13942:18:14",
																									"typeDescriptions": {
																										"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																										"typeString": "enum ICO.PaymentMethod"
																									}
																								},
																								"src": "13925:35:14",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								}
																							},
																							"src": "13862:98:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						"id": 3016,
																						"nodeType": "IfStatement",
																						"src": "13833:547:14",
																						"trueBody": {
																							"id": 3015,
																							"nodeType": "Block",
																							"src": "13983:397:14",
																							"statements": [
																								{
																									"assignments": [
																										2993
																									],
																									"declarations": [
																										{
																											"constant": false,
																											"id": 2993,
																											"mutability": "mutable",
																											"name": "stablecoin",
																											"nameLocation": "14016:10:14",
																											"nodeType": "VariableDeclaration",
																											"scope": 3015,
																											"src": "14009:17:14",
																											"stateVariable": false,
																											"storageLocation": "default",
																											"typeDescriptions": {
																												"typeIdentifier": "t_contract$_IERC20_$1264",
																												"typeString": "contract IERC20"
																											},
																											"typeName": {
																												"id": 2992,
																												"nodeType": "UserDefinedTypeName",
																												"pathNode": {
																													"id": 2991,
																													"name": "IERC20",
																													"nameLocations": [
																														"14009:6:14"
																													],
																													"nodeType": "IdentifierPath",
																													"referencedDeclaration": 1264,
																													"src": "14009:6:14"
																												},
																												"referencedDeclaration": 1264,
																												"src": "14009:6:14",
																												"typeDescriptions": {
																													"typeIdentifier": "t_contract$_IERC20_$1264",
																													"typeString": "contract IERC20"
																												}
																											},
																											"visibility": "internal"
																										}
																									],
																									"id": 3005,
																									"initialValue": {
																										"condition": {
																											"commonType": {
																												"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																												"typeString": "enum ICO.PaymentMethod"
																											},
																											"id": 2997,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"leftExpression": {
																												"id": 2994,
																												"name": "paymentMethod",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 2936,
																												"src": "14029:13:14",
																												"typeDescriptions": {
																													"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																													"typeString": "enum ICO.PaymentMethod"
																												}
																											},
																											"nodeType": "BinaryOperation",
																											"operator": "==",
																											"rightExpression": {
																												"expression": {
																													"id": 2995,
																													"name": "PaymentMethod",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1706,
																													"src": "14046:13:14",
																													"typeDescriptions": {
																														"typeIdentifier": "t_type$_t_enum$_PaymentMethod_$1706_$",
																														"typeString": "type(enum ICO.PaymentMethod)"
																													}
																												},
																												"id": 2996,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"lValueRequested": false,
																												"memberLocation": "14060:4:14",
																												"memberName": "USDT",
																												"nodeType": "MemberAccess",
																												"referencedDeclaration": 1704,
																												"src": "14046:18:14",
																												"typeDescriptions": {
																													"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																													"typeString": "enum ICO.PaymentMethod"
																												}
																											},
																											"src": "14029:35:14",
																											"typeDescriptions": {
																												"typeIdentifier": "t_bool",
																												"typeString": "bool"
																											}
																										},
																										"falseExpression": {
																											"arguments": [
																												{
																													"id": 3002,
																													"name": "usdc",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1738,
																													"src": "14145:4:14",
																													"typeDescriptions": {
																														"typeIdentifier": "t_address",
																														"typeString": "address"
																													}
																												}
																											],
																											"expression": {
																												"argumentTypes": [
																													{
																														"typeIdentifier": "t_address",
																														"typeString": "address"
																													}
																												],
																												"id": 3001,
																												"name": "IERC20",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1264,
																												"src": "14138:6:14",
																												"typeDescriptions": {
																													"typeIdentifier": "t_type$_t_contract$_IERC20_$1264_$",
																													"typeString": "type(contract IERC20)"
																												}
																											},
																											"id": 3003,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"kind": "typeConversion",
																											"lValueRequested": false,
																											"nameLocations": [],
																											"names": [],
																											"nodeType": "FunctionCall",
																											"src": "14138:12:14",
																											"tryCall": false,
																											"typeDescriptions": {
																												"typeIdentifier": "t_contract$_IERC20_$1264",
																												"typeString": "contract IERC20"
																											}
																										},
																										"id": 3004,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "Conditional",
																										"src": "14029:121:14",
																										"trueExpression": {
																											"arguments": [
																												{
																													"id": 2999,
																													"name": "usdt",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1736,
																													"src": "14102:4:14",
																													"typeDescriptions": {
																														"typeIdentifier": "t_address",
																														"typeString": "address"
																													}
																												}
																											],
																											"expression": {
																												"argumentTypes": [
																													{
																														"typeIdentifier": "t_address",
																														"typeString": "address"
																													}
																												],
																												"id": 2998,
																												"name": "IERC20",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1264,
																												"src": "14095:6:14",
																												"typeDescriptions": {
																													"typeIdentifier": "t_type$_t_contract$_IERC20_$1264_$",
																													"typeString": "type(contract IERC20)"
																												}
																											},
																											"id": 3000,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"kind": "typeConversion",
																											"lValueRequested": false,
																											"nameLocations": [],
																											"names": [],
																											"nodeType": "FunctionCall",
																											"src": "14095:12:14",
																											"tryCall": false,
																											"typeDescriptions": {
																												"typeIdentifier": "t_contract$_IERC20_$1264",
																												"typeString": "contract IERC20"
																											}
																										},
																										"typeDescriptions": {
																											"typeIdentifier": "t_contract$_IERC20_$1264",
																											"typeString": "contract IERC20"
																										}
																									},
																									"nodeType": "VariableDeclarationStatement",
																									"src": "14009:141:14"
																								},
																								{
																									"expression": {
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"id": 3009,
																														"name": "investor",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 2919,
																														"src": "14233:8:14",
																														"typeDescriptions": {
																															"typeIdentifier": "t_address",
																															"typeString": "address"
																														}
																													},
																													{
																														"id": 3010,
																														"name": "amount",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 2942,
																														"src": "14243:6:14",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													}
																												],
																												"expression": {
																													"argumentTypes": [
																														{
																															"typeIdentifier": "t_address",
																															"typeString": "address"
																														},
																														{
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													],
																													"expression": {
																														"id": 3007,
																														"name": "stablecoin",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 2993,
																														"src": "14213:10:14",
																														"typeDescriptions": {
																															"typeIdentifier": "t_contract$_IERC20_$1264",
																															"typeString": "contract IERC20"
																														}
																													},
																													"id": 3008,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": false,
																													"lValueRequested": false,
																													"memberLocation": "14224:8:14",
																													"memberName": "transfer",
																													"nodeType": "MemberAccess",
																													"referencedDeclaration": 1231,
																													"src": "14213:19:14",
																													"typeDescriptions": {
																														"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																														"typeString": "function (address,uint256) external returns (bool)"
																													}
																												},
																												"id": 3011,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"kind": "functionCall",
																												"lValueRequested": false,
																												"nameLocations": [],
																												"names": [],
																												"nodeType": "FunctionCall",
																												"src": "14213:37:14",
																												"tryCall": false,
																												"typeDescriptions": {
																													"typeIdentifier": "t_bool",
																													"typeString": "bool"
																												}
																											},
																											{
																												"hexValue": "537461626c65636f696e20726566756e64206661696c6564",
																												"id": 3012,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"kind": "string",
																												"lValueRequested": false,
																												"nodeType": "Literal",
																												"src": "14280:26:14",
																												"typeDescriptions": {
																													"typeIdentifier": "t_stringliteral_4c76e179fd3981278de294ff97a7ccb030d7577d0e7f55ac3f87e02e3abaa726",
																													"typeString": "literal_string \"Stablecoin refund failed\""
																												},
																												"value": "Stablecoin refund failed"
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_bool",
																													"typeString": "bool"
																												},
																												{
																													"typeIdentifier": "t_stringliteral_4c76e179fd3981278de294ff97a7ccb030d7577d0e7f55ac3f87e02e3abaa726",
																													"typeString": "literal_string \"Stablecoin refund failed\""
																												}
																											],
																											"id": 3006,
																											"name": "require",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [
																												4294967278,
																												4294967278,
																												4294967278
																											],
																											"referencedDeclaration": 4294967278,
																											"src": "14176:7:14",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																												"typeString": "function (bool,string memory) pure"
																											}
																										},
																										"id": 3013,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "functionCall",
																										"lValueRequested": false,
																										"nameLocations": [],
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "14176:156:14",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_tuple$__$",
																											"typeString": "tuple()"
																										}
																									},
																									"id": 3014,
																									"nodeType": "ExpressionStatement",
																									"src": "14176:156:14"
																								}
																							]
																						}
																					},
																					"id": 3017,
																					"nodeType": "IfStatement",
																					"src": "13567:813:14",
																					"trueBody": {
																						"id": 2981,
																						"nodeType": "Block",
																						"src": "13607:220:14",
																						"statements": [
																							{
																								"assignments": [
																									2965,
																									null
																								],
																								"declarations": [
																									{
																										"constant": false,
																										"id": 2965,
																										"mutability": "mutable",
																										"name": "sent",
																										"nameLocation": "13639:4:14",
																										"nodeType": "VariableDeclaration",
																										"scope": 2981,
																										"src": "13634:9:14",
																										"stateVariable": false,
																										"storageLocation": "default",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bool",
																											"typeString": "bool"
																										},
																										"typeName": {
																											"id": 2964,
																											"name": "bool",
																											"nodeType": "ElementaryTypeName",
																											"src": "13634:4:14",
																											"typeDescriptions": {
																												"typeIdentifier": "t_bool",
																												"typeString": "bool"
																											}
																										},
																										"visibility": "internal"
																									},
																									null
																								],
																								"id": 2975,
																								"initialValue": {
																									"arguments": [
																										{
																											"hexValue": "",
																											"id": 2973,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "string",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "13716:2:14",
																											"typeDescriptions": {
																												"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																												"typeString": "literal_string \"\""
																											},
																											"value": ""
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																												"typeString": "literal_string \"\""
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																													"typeString": "literal_string \"\""
																												}
																											],
																											"expression": {
																												"arguments": [
																													{
																														"id": 2968,
																														"name": "investor",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 2919,
																														"src": "13657:8:14",
																														"typeDescriptions": {
																															"typeIdentifier": "t_address",
																															"typeString": "address"
																														}
																													}
																												],
																												"expression": {
																													"argumentTypes": [
																														{
																															"typeIdentifier": "t_address",
																															"typeString": "address"
																														}
																													],
																													"id": 2967,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": true,
																													"lValueRequested": false,
																													"nodeType": "ElementaryTypeNameExpression",
																													"src": "13649:8:14",
																													"typeDescriptions": {
																														"typeIdentifier": "t_type$_t_address_payable_$",
																														"typeString": "type(address payable)"
																													},
																													"typeName": {
																														"id": 2966,
																														"name": "address",
																														"nodeType": "ElementaryTypeName",
																														"src": "13649:8:14",
																														"stateMutability": "payable",
																														"typeDescriptions": {}
																													}
																												},
																												"id": 2969,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"kind": "typeConversion",
																												"lValueRequested": false,
																												"nameLocations": [],
																												"names": [],
																												"nodeType": "FunctionCall",
																												"src": "13649:17:14",
																												"tryCall": false,
																												"typeDescriptions": {
																													"typeIdentifier": "t_address_payable",
																													"typeString": "address payable"
																												}
																											},
																											"id": 2970,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberLocation": "13667:4:14",
																											"memberName": "call",
																											"nodeType": "MemberAccess",
																											"src": "13649:22:14",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																												"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																											}
																										},
																										"id": 2972,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"names": [
																											"value"
																										],
																										"nodeType": "FunctionCallOptions",
																										"options": [
																											{
																												"id": 2971,
																												"name": "amount",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 2942,
																												"src": "13679:6:14",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											}
																										],
																										"src": "13649:37:14",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																											"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																										}
																									},
																									"id": 2974,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"nameLocations": [],
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "13649:95:14",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																										"typeString": "tuple(bool,bytes memory)"
																									}
																								},
																								"nodeType": "VariableDeclarationStatement",
																								"src": "13633:111:14"
																							},
																							{
																								"expression": {
																									"arguments": [
																										{
																											"id": 2977,
																											"name": "sent",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 2965,
																											"src": "13778:4:14",
																											"typeDescriptions": {
																												"typeIdentifier": "t_bool",
																												"typeString": "bool"
																											}
																										},
																										{
																											"hexValue": "424e4220726566756e64206661696c6564",
																											"id": 2978,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "string",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "13784:19:14",
																											"typeDescriptions": {
																												"typeIdentifier": "t_stringliteral_9061bb5d1762fde4c9d1190b8ce0bd989de0debb196be3c053155f36b52a6ce0",
																												"typeString": "literal_string \"BNB refund failed\""
																											},
																											"value": "BNB refund failed"
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_bool",
																												"typeString": "bool"
																											},
																											{
																												"typeIdentifier": "t_stringliteral_9061bb5d1762fde4c9d1190b8ce0bd989de0debb196be3c053155f36b52a6ce0",
																												"typeString": "literal_string \"BNB refund failed\""
																											}
																										],
																										"id": 2976,
																										"name": "require",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [
																											4294967278,
																											4294967278,
																											4294967278
																										],
																										"referencedDeclaration": 4294967278,
																										"src": "13770:7:14",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																											"typeString": "function (bool,string memory) pure"
																										}
																									},
																									"id": 2979,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"nameLocations": [],
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "13770:34:14",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_tuple$__$",
																										"typeString": "tuple()"
																									}
																								},
																								"id": 2980,
																								"nodeType": "ExpressionStatement",
																								"src": "13770:34:14"
																							}
																						]
																					}
																				},
																				{
																					"eventCall": {
																						"arguments": [
																							{
																								"id": 3019,
																								"name": "investor",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2919,
																								"src": "14443:8:14",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 3020,
																								"name": "amount",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2942,
																								"src": "14453:6:14",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 3021,
																								"name": "paymentMethod",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2936,
																								"src": "14461:13:14",
																								"typeDescriptions": {
																									"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																									"typeString": "enum ICO.PaymentMethod"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_enum$_PaymentMethod_$1706",
																									"typeString": "enum ICO.PaymentMethod"
																								}
																							],
																							"id": 3018,
																							"name": "RefundInitiated",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1780,
																							"src": "14427:15:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_enum$_PaymentMethod_$1706_$returns$__$",
																								"typeString": "function (address,uint256,enum ICO.PaymentMethod)"
																							}
																						},
																						"id": 3022,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "14427:48:14",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 3023,
																					"nodeType": "EmitStatement",
																					"src": "14422:53:14"
																				}
																			]
																		}
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 2930,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2928,
																	"name": "j",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2925,
																	"src": "13291:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "33",
																	"id": 2929,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13295:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																"src": "13291:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3027,
															"initializationExpression": {
																"assignments": [
																	2925
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 2925,
																		"mutability": "mutable",
																		"name": "j",
																		"nameLocation": "13284:1:14",
																		"nodeType": "VariableDeclaration",
																		"scope": 3027,
																		"src": "13278:7:14",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		"typeName": {
																			"id": 2924,
																			"name": "uint8",
																			"nodeType": "ElementaryTypeName",
																			"src": "13278:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 2927,
																"initialValue": {
																	"hexValue": "30",
																	"id": 2926,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13288:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "13278:11:14"
															},
															"isSimpleCounterLoop": true,
															"loopExpression": {
																"expression": {
																	"id": 2932,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "13298:3:14",
																	"subExpression": {
																		"id": 2931,
																		"name": "j",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2925,
																		"src": "13298:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"id": 2933,
																"nodeType": "ExpressionStatement",
																"src": "13298:3:14"
															},
															"nodeType": "ForStatement",
															"src": "13273:1252:14"
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 3028,
																		"name": "investors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1734,
																		"src": "14538:9:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 3030,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "14548:3:14",
																	"memberName": "pop",
																	"nodeType": "MemberAccess",
																	"src": "14538:13:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
																		"typeString": "function (address[] storage pointer)"
																	}
																},
																"id": 3031,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14538:15:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3032,
															"nodeType": "ExpressionStatement",
															"src": "14538:15:14"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3035,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3033,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2907,
																	"src": "14571:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 3034,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14576:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "14571:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3038,
															"nodeType": "IfStatement",
															"src": "14567:58:14",
															"trueBody": {
																"id": 3037,
																"nodeType": "Block",
																"src": "14579:46:14",
																"statements": [
																	{
																		"id": 3036,
																		"nodeType": "Break",
																		"src": "14601:5:14"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2912,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2907,
														"src": "13185:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 2913,
														"name": "investorsIterated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2888,
														"src": "13190:17:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13185:22:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3040,
												"initializationExpression": {
													"assignments": [
														2907
													],
													"declarations": [
														{
															"constant": false,
															"id": 2907,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "13161:1:14",
															"nodeType": "VariableDeclaration",
															"scope": 3040,
															"src": "13153:9:14",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2906,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "13153:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2911,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2910,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2908,
															"name": "investorLength",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2883,
															"src": "13165:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"hexValue": "31",
															"id": 2909,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13182:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "13165:18:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "13153:30:14"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 2916,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": false,
														"src": "13209:3:14",
														"subExpression": {
															"id": 2915,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2907,
															"src": "13209:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2917,
													"nodeType": "ExpressionStatement",
													"src": "13209:3:14"
												},
												"nodeType": "ForStatement",
												"src": "13148:1487:14"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 3041,
															"name": "investors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1734,
															"src": "14648:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 3042,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "14658:6:14",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "14648:16:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 3043,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14668:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "14648:21:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3050,
												"nodeType": "IfStatement",
												"src": "14644:73:14",
												"trueBody": {
													"id": 3049,
													"nodeType": "Block",
													"src": "14671:46:14",
													"statements": [
														{
															"expression": {
																"id": 3047,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3045,
																	"name": "isICOFinalized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1727,
																	"src": "14685:14:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 3046,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14702:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "14685:21:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3048,
															"nodeType": "ExpressionStatement",
															"src": "14685:21:14"
														}
													]
												}
											}
										]
									},
									"functionSelector": "7fb12001",
									"id": 3052,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2860,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2859,
												"name": "nonReentrant",
												"nameLocations": [
													"12712:12:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 791,
												"src": "12712:12:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "12712:12:14"
										},
										{
											"id": 2862,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2861,
												"name": "onlyOwner",
												"nameLocations": [
													"12725:9:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 135,
												"src": "12725:9:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "12725:9:14"
										},
										{
											"id": 2864,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2863,
												"name": "icoNotFinalized",
												"nameLocations": [
													"12735:15:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1890,
												"src": "12735:15:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "12735:15:14"
										}
									],
									"name": "initiateRefund",
									"nameLocation": "12686:14:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2858,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12700:2:14"
									},
									"returnParameters": {
										"id": 2865,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12751:0:14"
									},
									"scope": 3147,
									"src": "12677:2046:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3059,
										"nodeType": "Block",
										"src": "14756:59:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "44697265637420424e42207472616e7366657273206e6f7420616c6c6f776564",
															"id": 3056,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14773:34:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_17550aa7e27a420bf678ad118b2de30f8f99747e4dbc150a39e97cdeb8fb8119",
																"typeString": "literal_string \"Direct BNB transfers not allowed\""
															},
															"value": "Direct BNB transfers not allowed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_17550aa7e27a420bf678ad118b2de30f8f99747e4dbc150a39e97cdeb8fb8119",
																"typeString": "literal_string \"Direct BNB transfers not allowed\""
															}
														],
														"id": 3055,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "14766:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory) pure"
														}
													},
													"id": 3057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14766:42:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3058,
												"nodeType": "ExpressionStatement",
												"src": "14766:42:14"
											}
										]
									},
									"id": 3060,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3053,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14736:2:14"
									},
									"returnParameters": {
										"id": 3054,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14756:0:14"
									},
									"scope": 3147,
									"src": "14729:86:14",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3067,
										"nodeType": "Block",
										"src": "14879:33:14",
										"statements": [
											{
												"expression": {
													"id": 3065,
													"name": "saleCount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1715,
													"src": "14896:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3064,
												"id": 3066,
												"nodeType": "Return",
												"src": "14889:16:14"
											}
										]
									},
									"functionSelector": "212ea247",
									"id": 3068,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentSaleId",
									"nameLocation": "14830:16:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3061,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14846:2:14"
									},
									"returnParameters": {
										"id": 3064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3063,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3068,
												"src": "14870:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3062,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14870:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14869:9:14"
									},
									"scope": 3147,
									"src": "14821:91:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3078,
										"nodeType": "Block",
										"src": "14982:48:14",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 3073,
															"name": "sales",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1743,
															"src": "14999:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Sale_$1702_storage_$",
																"typeString": "mapping(uint256 => struct ICO.Sale storage ref)"
															}
														},
														"id": 3075,
														"indexExpression": {
															"id": 3074,
															"name": "saleCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1715,
															"src": "15005:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "14999:16:14",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Sale_$1702_storage",
															"typeString": "struct ICO.Sale storage ref"
														}
													},
													"id": 3076,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "15016:7:14",
													"memberName": "endTime",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1695,
													"src": "14999:24:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3072,
												"id": 3077,
												"nodeType": "Return",
												"src": "14992:31:14"
											}
										]
									},
									"id": 3079,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLatestSaleEndTime",
									"nameLocation": "14927:20:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3069,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14947:2:14"
									},
									"returnParameters": {
										"id": 3072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3071,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3079,
												"src": "14973:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3070,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14973:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14972:9:14"
									},
									"scope": 3147,
									"src": "14918:112:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3101,
										"nodeType": "Block",
										"src": "15161:99:14",
										"statements": [
											{
												"assignments": [
													3090
												],
												"declarations": [
													{
														"constant": false,
														"id": 3090,
														"mutability": "mutable",
														"name": "sale",
														"nameLocation": "15183:4:14",
														"nodeType": "VariableDeclaration",
														"scope": 3101,
														"src": "15171:16:14",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Sale_$1702_memory_ptr",
															"typeString": "struct ICO.Sale"
														},
														"typeName": {
															"id": 3089,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3088,
																"name": "Sale",
																"nameLocations": [
																	"15171:4:14"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1702,
																"src": "15171:4:14"
															},
															"referencedDeclaration": 1702,
															"src": "15171:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Sale_$1702_storage_ptr",
																"typeString": "struct ICO.Sale"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3094,
												"initialValue": {
													"baseExpression": {
														"id": 3091,
														"name": "sales",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1743,
														"src": "15190:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Sale_$1702_storage_$",
															"typeString": "mapping(uint256 => struct ICO.Sale storage ref)"
														}
													},
													"id": 3093,
													"indexExpression": {
														"id": 3092,
														"name": "saleCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1715,
														"src": "15196:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "15190:16:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Sale_$1702_storage",
														"typeString": "struct ICO.Sale storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15171:35:14"
											},
											{
												"expression": {
													"components": [
														{
															"expression": {
																"id": 3095,
																"name": "sale",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3090,
																"src": "15224:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Sale_$1702_memory_ptr",
																	"typeString": "struct ICO.Sale memory"
																}
															},
															"id": 3096,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15229:9:14",
															"memberName": "startTime",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1693,
															"src": "15224:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 3097,
																"name": "sale",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3090,
																"src": "15240:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Sale_$1702_memory_ptr",
																	"typeString": "struct ICO.Sale memory"
																}
															},
															"id": 3098,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15245:7:14",
															"memberName": "endTime",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1695,
															"src": "15240:12:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 3099,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "15223:30:14",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 3087,
												"id": 3100,
												"nodeType": "Return",
												"src": "15216:37:14"
											}
										]
									},
									"functionSelector": "c211e1f9",
									"id": 3102,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSaleStartEndTime",
									"nameLocation": "15045:19:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3081,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3102,
												"src": "15065:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3080,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15065:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15064:9:14"
									},
									"returnParameters": {
										"id": 3087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3084,
												"mutability": "mutable",
												"name": "_startTime",
												"nameLocation": "15127:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 3102,
												"src": "15119:18:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3083,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15119:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3086,
												"mutability": "mutable",
												"name": "_endTime",
												"nameLocation": "15147:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 3102,
												"src": "15139:16:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3085,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15139:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15118:38:14"
									},
									"scope": 3147,
									"src": "15036:224:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3112,
										"nodeType": "Block",
										"src": "15322:61:14",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3109,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3107,
																"name": "totalFundsRaisedUSD",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1717,
																"src": "15340:19:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 3108,
																"name": "softCapInUSD",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1711,
																"src": "15363:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15340:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 3110,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "15339:37:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3106,
												"id": 3111,
												"nodeType": "Return",
												"src": "15332:44:14"
											}
										]
									},
									"functionSelector": "06e4d36f",
									"id": 3113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSoftCapReached",
									"nameLocation": "15275:17:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15292:2:14"
									},
									"returnParameters": {
										"id": 3106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3113,
												"src": "15316:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3104,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15316:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15315:6:14"
									},
									"scope": 3147,
									"src": "15266:117:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3123,
										"nodeType": "Block",
										"src": "15445:61:14",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3118,
																"name": "totalFundsRaisedUSD",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1717,
																"src": "15463:19:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 3119,
																"name": "hardCapInUSD",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1713,
																"src": "15486:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15463:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 3121,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "15462:37:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3117,
												"id": 3122,
												"nodeType": "Return",
												"src": "15455:44:14"
											}
										]
									},
									"functionSelector": "91d8730a",
									"id": 3124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getHardCapReached",
									"nameLocation": "15398:17:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3114,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15415:2:14"
									},
									"returnParameters": {
										"id": 3117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3116,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3124,
												"src": "15439:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3115,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15439:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15438:6:14"
									},
									"scope": 3147,
									"src": "15389:117:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3136,
										"nodeType": "Block",
										"src": "15584:79:14",
										"statements": [
											{
												"expression": {
													"id": 3132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3129,
														"name": "investorCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3127,
														"src": "15594:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 3130,
															"name": "investors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1734,
															"src": "15610:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 3131,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15620:6:14",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "15610:16:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15594:32:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3133,
												"nodeType": "ExpressionStatement",
												"src": "15594:32:14"
											},
											{
												"expression": {
													"id": 3134,
													"name": "investorCount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3127,
													"src": "15643:13:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3128,
												"id": 3135,
												"nodeType": "Return",
												"src": "15636:20:14"
											}
										]
									},
									"functionSelector": "960524e3",
									"id": 3137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getInvestorCount",
									"nameLocation": "15521:16:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15537:2:14"
									},
									"returnParameters": {
										"id": 3128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3127,
												"mutability": "mutable",
												"name": "investorCount",
												"nameLocation": "15569:13:14",
												"nodeType": "VariableDeclaration",
												"scope": 3137,
												"src": "15561:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15561:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15560:23:14"
									},
									"scope": 3147,
									"src": "15512:151:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										630
									],
									"body": {
										"id": 3145,
										"nodeType": "Block",
										"src": "15750:2:14",
										"statements": []
									},
									"id": 3146,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3143,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3142,
												"name": "onlyOwner",
												"nameLocations": [
													"15740:9:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 135,
												"src": "15740:9:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "15740:9:14"
										}
									],
									"name": "_authorizeUpgrade",
									"nameLocation": "15677:17:14",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3141,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "15731:8:14"
									},
									"parameters": {
										"id": 3140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3139,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "15703:17:14",
												"nodeType": "VariableDeclaration",
												"scope": 3146,
												"src": "15695:25:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15695:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15694:27:14"
									},
									"returnParameters": {
										"id": 3144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15750:0:14"
									},
									"scope": 3147,
									"src": "15668:84:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3148,
							"src": "429:15325:14",
							"usedErrors": [
								76,
								81,
								257,
								260,
								521,
								526,
								753,
								902,
								915,
								1274,
								1536
							],
							"usedEvents": [
								87,
								265,
								859,
								1767,
								1771,
								1780,
								1786,
								1801,
								1811
							]
						}
					],
					"src": "32:15722:14"
				},
				"id": 14
			}
		}
	}
}