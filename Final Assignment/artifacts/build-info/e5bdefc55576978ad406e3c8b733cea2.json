{
	"id": "e5bdefc55576978ad406e3c8b733cea2",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"Final Assignment/final_assignment_staking 1.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.10;\n\nimport \"./ERC-20.sol\";\n\ncontract Staking_Token {\n    ERC20Basic Token;\n\n    constructor(ERC20Basic _addressERC20) {\n        Token = _addressERC20;\n    }\n\n    struct Stake {\n        uint256 stake_amount;\n        string stake_type;\n        uint256 stake_time;\n        uint256 starting_stake_time;\n        bool isFixed;\n        address owner;\n        bool isClaimed;\n    }\n\n    address mapping_address;\n    uint256 expirytime_forfixedstaking = block.timestamp + 300;\n    uint256 penality_stake = 4; \n    uint256 fixedinterest_rate = 6;\n    uint256 unfixedinterest_rate = 2;\n    uint256 stake_reward;\n    uint256 Interest;\n    uint256 totalIntrestAmount;\n    uint256 finalAmount;\n\n    mapping(address => Stake) public Stake_details;\n\n    event tokensStaked(address from, uint256 amount, uint256 _duration);\n\n    function staking(uint256 _amount,string memory _type,uint256 _duration, bool _isFixed) public {\n        require(Token.balanceOf(msg.sender) >= _amount, \"Insufficient Balance\");\n        //fixed staking\n        if ( keccak256(abi.encodePacked(_type)) == keccak256(abi.encodePacked(\"fixed\")) ) {\n            require( _amount > 0,\" Stake can not be 0 , Enter some amount of tokens\");\n            Stake_details[msg.sender].stake_amount = _amount;\n            Stake_details[msg.sender].stake_type = _type;\n            Stake_details[msg.sender].stake_time = expirytime_forfixedstaking + _duration;\n            Stake_details[msg.sender].isFixed = _isFixed;\n            Stake_details[msg.sender].owner =msg.sender;\n            Stake_details[msg.sender].isClaimed =false;\n            Stake_details[msg.sender].starting_stake_time = block.timestamp;\n            Token.transfer( msg.sender,address(this), _amount);\n            emit tokensStaked(msg.sender, _amount, block.timestamp);\n        } \n        //unfixed staking \n        else if (keccak256(abi.encodePacked(_type)) == keccak256(abi.encodePacked(\"unfixed\")) ) {\n            Stake_details[msg.sender].stake_amount = _amount;\n            Stake_details[msg.sender].stake_type = _type;\n            Stake_details[msg.sender].isFixed = _isFixed;\n            Stake_details[msg.sender].owner =msg.sender;\n            Stake_details[msg.sender].isClaimed =false;\n            Stake_details[msg.sender].starting_stake_time = block.timestamp;\n            Token.transfer( msg.sender,address(this), _amount);\n            emit tokensStaked(msg.sender, _amount, block.timestamp);\n        }\n    }\n\n    function unstaking(address _address) public returns (uint256) {\n        require(msg.sender == Stake_details[_address].owner,\"Stake has not been initiated\");\n        if (Stake_details[_address].isFixed == true) {\n            if (block.timestamp > Stake_details[msg.sender].stake_time ) {\n                Interest =(Stake_details[_address].stake_amount *fixedinterest_rate ) /100;\n                totalIntrestAmount =Stake_details[_address].stake_amount + Interest;\n                Token.transfer(address(this),_address, totalIntrestAmount);\n                delete Stake_details[_address];\n                Stake_details[msg.sender].isClaimed =true;\n                return totalIntrestAmount;\n            }\n\n            //unstaked before fixed time so the penality will be taken\n            else if (block.timestamp < Stake_details[msg.sender].stake_time) {\n                require( block.timestamp <  expirytime_forfixedstaking,\"\" );\n                Interest = (Stake_details[_address].stake_amount * fixedinterest_rate )/ 100 ;\n                totalIntrestAmount = (Interest * 96) / 100;\n                finalAmount =totalIntrestAmount +Stake_details[_address].stake_amount;\n                Token.transfer(address(this),_address, finalAmount);\n                delete Stake_details[_address];\n                Stake_details[msg.sender].isClaimed =true;\n                return finalAmount;\n            }\n        } \n        // Unfixed staking loop\n        else if (Stake_details[_address].isFixed == false) {\n            Interest =(Stake_details[_address].stake_amount *unfixedinterest_rate) /100 ;\n                totalIntrestAmount =Stake_details[_address].stake_amount + Interest;\n                Token.transfer(address(this),_address, totalIntrestAmount);\n                delete Stake_details[_address];\n                Stake_details[msg.sender].isClaimed =true;\n                return totalIntrestAmount;\n        }\n    }\n\n    function TokenBalance(address _address) public view returns (uint256) {\n        return Token.balanceOf(_address);\n    }\n\n\n    function claimedRewards(address _address) public view returns (uint256) {\n    if (Stake_details[_address].isFixed == true) {\n        if (block.timestamp > Stake_details[msg.sender].stake_time) {\n            return Stake_details[_address].stake_amount + Interest;\n        } else {\n            return Stake_details[_address].stake_amount;\n        }\n    }\n    else if(block.timestamp < Stake_details[msg.sender].stake_time){\n         return finalAmount - totalIntrestAmount;\n    \n    }\n     else {\n        return Stake_details[_address].stake_amount + Interest;\n    }\n}\n\nfunction unclaimedRewards(address _address) public view  returns (uint256) {\n    if (Stake_details[_address].isFixed == true) {\n        if (Stake_details[_address].isClaimed == true) {\n            return 0;\n        } else {\n            return Interest;\n        }\n    } else {\n        if (Stake_details[_address].isClaimed == true) {\n            return 0;\n        } else {\n            return Interest;\n        }\n    }\n}\n    function getstaking_details(address _address) public view returns (Stake memory) {\n        return Stake_details[_address];\n    }\n\n    function getcontractaddress() public view returns (address) {\n        return address(this);\n    }\n}\n"
			},
			"Final Assignment/ERC-20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ninterface IERC20 {\r\n\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    function transfer(address sender , address recipient, uint256 amount) external returns (bool);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\n\r\ncontract ERC20Basic is IERC20 {\r\n\r\n    string public constant name = \"ERC20Basic\";\r\n    string public constant symbol = \"ERC\";\r\n    uint8 public constant decimals = 18;\r\n\r\n\r\n    mapping(address => uint256) balances;\r\n\r\n    mapping(address => mapping (address => uint256)) allowed;\r\n\r\n    uint256 totalSupply_ = 10 ether;\r\n\r\n\r\n   constructor() {\r\n    balances[msg.sender] = totalSupply_;\r\n    }\r\n\r\n\r\n    function mint(uint _amount)public returns(uint){\r\n        totalSupply_ += _amount;\r\n        balances[msg.sender] += _amount;\r\n        return totalSupply_; \r\n    \r\n    }\r\n\r\n    function totalSupply() public override view returns (uint256) {\r\n    return totalSupply_;\r\n    }\r\n\r\n    function balanceOf(address tokenOwner) public override view returns (uint256) {\r\n        return balances[tokenOwner];\r\n    }\r\n\r\n    function transfer(address sender,address receiver, uint256 numTokens) public override returns (bool) {\r\n        require(numTokens <= balances[sender],\"balance not enough\");\r\n        balances[sender] = balances[sender]-numTokens;\r\n        balances[receiver] = balances[receiver]+numTokens;\r\n        emit Transfer(sender, receiver, numTokens);\r\n        return true;\r\n    }\r\n\r\n    function approve(address delegate, uint256 numTokens) public override returns (bool) {\r\n        allowed[msg.sender][delegate] = numTokens;\r\n        emit Approval(msg.sender, delegate, numTokens);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address owner, address delegate) public override view returns (uint) {\r\n        return allowed[owner][delegate];\r\n    }\r\n\r\n    function transferFrom(address owner, address buyer, uint256 numTokens) public override returns (bool) {\r\n        require(numTokens <= balances[owner]);\r\n        require(numTokens <= allowed[owner][msg.sender]);\r\n        balances[owner] = balances[owner]-numTokens;\r\n        allowed[owner][msg.sender] = allowed[owner][msg.sender]-numTokens;\r\n        balances[buyer] = balances[buyer]+numTokens;\r\n        emit Transfer(owner, buyer, numTokens);\r\n        return true;\r\n    }\r\n\r\n    function getcontractaddress() public returns(address){\r\n      return address(this);\r\n      }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "london"
		}
	},
	"output": {
		"contracts": {
			"Final Assignment/ERC-20.sol": {
				"ERC20Basic": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "delegate",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegate",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "numTokens",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenOwner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getcontractaddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "numTokens",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "numTokens",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Final Assignment/ERC-20.sol\":764:2910  contract ERC20Basic is IERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"Final Assignment/ERC-20.sol\":1075:1083  10 ether */\n  0x8ac7230489e80000\n    /* \"Final Assignment/ERC-20.sol\":1052:1083  uint256 totalSupply_ = 10 ether */\n  0x02\n  sstore\n    /* \"Final Assignment/ERC-20.sol\":1093:1157  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"Final Assignment/ERC-20.sol\":1137:1149  totalSupply_ */\n  sload(0x02)\n    /* \"Final Assignment/ERC-20.sol\":1123:1133  msg.sender */\n  caller\n    /* \"Final Assignment/ERC-20.sol\":1114:1122  balances */\n  0x00\n    /* \"Final Assignment/ERC-20.sol\":1114:1134  balances[msg.sender] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"Final Assignment/ERC-20.sol\":1114:1149  balances[msg.sender] = totalSupply_ */\n  sstore\n    /* \"Final Assignment/ERC-20.sol\":764:2910  contract ERC20Basic is IERC20 {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Final Assignment/ERC-20.sol\":764:2910  contract ERC20Basic is IERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x313ce567\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa0712d68\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xbeabacc8\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x15621373\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Final Assignment/ERC-20.sol\":803:845  string public constant name = \"ERC20Basic\" */\n    tag_3:\n      tag_15\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0a\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xb0, 0x45524332304261736963)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Final Assignment/ERC-20.sol\":1957:2181  function approve(address delegate, uint256 numTokens) public override returns (bool) {... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1169:1183   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1162:1184   */\n      iszero\n        /* \"#utility.yul\":1144:1185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1132:1134   */\n      0x20\n        /* \"#utility.yul\":1117:1135   */\n      add\n        /* \"Final Assignment/ERC-20.sol\":1957:2181  function approve(address delegate, uint256 numTokens) public override returns (bool) {... */\n      tag_17\n        /* \"#utility.yul\":1004:1191   */\n      jump\n        /* \"Final Assignment/ERC-20.sol\":2815:2907  function getcontractaddress() public returns(address){... */\n    tag_5:\n      mload(0x40)\n        /* \"Final Assignment/ERC-20.sol\":2892:2896  this */\n      address\n        /* \"#utility.yul\":1342:1393   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"Final Assignment/ERC-20.sol\":2815:2907  function getcontractaddress() public returns(address){... */\n      tag_17\n        /* \"#utility.yul\":1196:1399   */\n      jump\n        /* \"Final Assignment/ERC-20.sol\":1343:1439  function totalSupply() public override view returns (uint256) {... */\n    tag_6:\n        /* \"Final Assignment/ERC-20.sol\":1419:1431  totalSupply_ */\n      sload(0x02)\n        /* \"Final Assignment/ERC-20.sol\":1343:1439  function totalSupply() public override view returns (uint256) {... */\n    tag_29:\n      mload(0x40)\n        /* \"#utility.yul\":1550:1575   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1538:1540   */\n      0x20\n        /* \"#utility.yul\":1523:1541   */\n      add\n        /* \"Final Assignment/ERC-20.sol\":1343:1439  function totalSupply() public override view returns (uint256) {... */\n      tag_17\n        /* \"#utility.yul\":1404:1581   */\n      jump\n        /* \"Final Assignment/ERC-20.sol\":2335:2807  function transferFrom(address owner, address buyer, uint256 numTokens) public override returns (bool) {... */\n    tag_7:\n      tag_19\n      tag_34\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n        /* \"Final Assignment/ERC-20.sol\":896:931  uint8 public constant decimals = 18 */\n    tag_8:\n      tag_38\n        /* \"Final Assignment/ERC-20.sol\":929:931  18 */\n      0x12\n        /* \"Final Assignment/ERC-20.sol\":896:931  uint8 public constant decimals = 18 */\n      dup2\n      jump\n    tag_38:\n      mload(0x40)\n        /* \"#utility.yul\":2091:2095   */\n      0xff\n        /* \"#utility.yul\":2079:2096   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2061:2097   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2049:2051   */\n      0x20\n        /* \"#utility.yul\":2034:2052   */\n      add\n        /* \"Final Assignment/ERC-20.sol\":896:931  uint8 public constant decimals = 18 */\n      tag_17\n        /* \"#utility.yul\":1919:2103   */\n      jump\n        /* \"Final Assignment/ERC-20.sol\":1447:1571  function balanceOf(address tokenOwner) public override view returns (uint256) {... */\n    tag_9:\n      tag_29\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Final Assignment/ERC-20.sol\":1543:1563  balances[tokenOwner] */\n      and\n        /* \"Final Assignment/ERC-20.sol\":1516:1523  uint256 */\n      0x00\n        /* \"Final Assignment/ERC-20.sol\":1543:1563  balances[tokenOwner] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"Final Assignment/ERC-20.sol\":1447:1571  function balanceOf(address tokenOwner) public override view returns (uint256) {... */\n      jump\n        /* \"Final Assignment/ERC-20.sol\":852:889  string public constant symbol = \"ERC\" */\n    tag_10:\n      tag_15\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x03\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xe8, 0x455243)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\n        /* \"Final Assignment/ERC-20.sol\":1167:1335  function mint(uint _amount)public returns(uint){... */\n    tag_11:\n      tag_29\n      tag_51\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n        /* \"Final Assignment/ERC-20.sol\":1579:1949  function transfer(address sender,address receiver, uint256 numTokens) public override returns (bool) {... */\n    tag_12:\n      tag_19\n      tag_56\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n        /* \"Final Assignment/ERC-20.sol\":2189:2327  function allowance(address owner, address delegate) public override view returns (uint) {... */\n    tag_13:\n      tag_29\n      tag_60\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_60:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Final Assignment/ERC-20.sol\":2295:2309  allowed[owner] */\n      swap2\n      dup3\n      and\n        /* \"Final Assignment/ERC-20.sol\":2271:2275  uint */\n      0x00\n        /* \"Final Assignment/ERC-20.sol\":2295:2309  allowed[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"Final Assignment/ERC-20.sol\":2295:2302  allowed */\n      0x01\n        /* \"Final Assignment/ERC-20.sol\":2295:2309  allowed[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"Final Assignment/ERC-20.sol\":2295:2319  allowed[owner][delegate] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"Final Assignment/ERC-20.sol\":2189:2327  function allowance(address owner, address delegate) public override view returns (uint) {... */\n      jump\n        /* \"Final Assignment/ERC-20.sol\":1957:2181  function approve(address delegate, uint256 numTokens) public override returns (bool) {... */\n    tag_22:\n        /* \"Final Assignment/ERC-20.sol\":2061:2071  msg.sender */\n      caller\n        /* \"Final Assignment/ERC-20.sol\":2036:2040  bool */\n      0x00\n        /* \"Final Assignment/ERC-20.sol\":2053:2072  allowed[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"Final Assignment/ERC-20.sol\":2053:2060  allowed */\n      0x01\n        /* \"Final Assignment/ERC-20.sol\":2053:2072  allowed[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Final Assignment/ERC-20.sol\":2053:2082  allowed[msg.sender][delegate] */\n      dup8\n      and\n      dup1\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"Final Assignment/ERC-20.sol\":2053:2094  allowed[msg.sender][delegate] = numTokens */\n      dup6\n      swap1\n      sstore\n        /* \"Final Assignment/ERC-20.sol\":2110:2151  Approval(msg.sender, delegate, numTokens) */\n      mload\n        /* \"Final Assignment/ERC-20.sol\":2036:2040  bool */\n      swap2\n      swap3\n        /* \"Final Assignment/ERC-20.sol\":2053:2082  allowed[msg.sender][delegate] */\n      swap1\n      swap2\n        /* \"Final Assignment/ERC-20.sol\":2110:2151  Approval(msg.sender, delegate, numTokens) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap1\n      tag_65\n      swap1\n        /* \"Final Assignment/ERC-20.sol\":2085:2094  numTokens */\n      dup7\n        /* \"#utility.yul\":1550:1575   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1538:1540   */\n      0x20\n        /* \"#utility.yul\":1523:1541   */\n      add\n      swap1\n        /* \"#utility.yul\":1404:1581   */\n      jump\n        /* \"Final Assignment/ERC-20.sol\":2110:2151  Approval(msg.sender, delegate, numTokens) */\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n      pop\n        /* \"Final Assignment/ERC-20.sol\":2169:2173  true */\n      0x01\n        /* \"Final Assignment/ERC-20.sol\":1957:2181  function approve(address delegate, uint256 numTokens) public override returns (bool) {... */\n    tag_64:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Final Assignment/ERC-20.sol\":2335:2807  function transferFrom(address owner, address buyer, uint256 numTokens) public override returns (bool) {... */\n    tag_36:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Final Assignment/ERC-20.sol\":2469:2484  balances[owner] */\n      dup4\n      and\n        /* \"Final Assignment/ERC-20.sol\":2431:2435  bool */\n      0x00\n        /* \"Final Assignment/ERC-20.sol\":2469:2484  balances[owner] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"Final Assignment/ERC-20.sol\":2456:2484  numTokens <= balances[owner] */\n      dup3\n      gt\n      iszero\n        /* \"Final Assignment/ERC-20.sol\":2448:2485  require(numTokens <= balances[owner]) */\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Final Assignment/ERC-20.sol\":2517:2531  allowed[owner] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Final Assignment/ERC-20.sol\":2517:2524  allowed */\n      0x01\n        /* \"Final Assignment/ERC-20.sol\":2517:2531  allowed[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"Final Assignment/ERC-20.sol\":2532:2542  msg.sender */\n      caller\n        /* \"Final Assignment/ERC-20.sol\":2517:2543  allowed[owner][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"Final Assignment/ERC-20.sol\":2504:2543  numTokens <= allowed[owner][msg.sender] */\n      dup3\n      gt\n      iszero\n        /* \"Final Assignment/ERC-20.sol\":2496:2544  require(numTokens <= allowed[owner][msg.sender]) */\n      tag_70\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_70:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Final Assignment/ERC-20.sol\":2573:2588  balances[owner] */\n      dup5\n      and\n        /* \"Final Assignment/ERC-20.sol\":2573:2581  balances */\n      0x00\n        /* \"Final Assignment/ERC-20.sol\":2573:2588  balances[owner] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"Final Assignment/ERC-20.sol\":2573:2598  balances[owner]-numTokens */\n      tag_71\n      swap1\n        /* \"Final Assignment/ERC-20.sol\":2589:2598  numTokens */\n      dup4\n      swap1\n        /* \"Final Assignment/ERC-20.sol\":2573:2598  balances[owner]-numTokens */\n      tag_72\n      jump\t// in\n    tag_71:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Final Assignment/ERC-20.sol\":2555:2570  balances[owner] */\n      dup6\n      and\n        /* \"Final Assignment/ERC-20.sol\":2555:2563  balances */\n      0x00\n        /* \"Final Assignment/ERC-20.sol\":2555:2570  balances[owner] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"Final Assignment/ERC-20.sol\":2555:2598  balances[owner] = balances[owner]-numTokens */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"Final Assignment/ERC-20.sol\":2638:2645  allowed */\n      0x01\n        /* \"Final Assignment/ERC-20.sol\":2638:2652  allowed[owner] */\n      dup2\n      mstore\n      dup3\n      dup3\n      keccak256\n        /* \"Final Assignment/ERC-20.sol\":2653:2663  msg.sender */\n      caller\n        /* \"Final Assignment/ERC-20.sol\":2638:2664  allowed[owner][msg.sender] */\n      dup4\n      mstore\n      swap1\n      mstore\n      keccak256\n      sload\n        /* \"Final Assignment/ERC-20.sol\":2638:2674  allowed[owner][msg.sender]-numTokens */\n      tag_73\n      swap1\n        /* \"Final Assignment/ERC-20.sol\":2665:2674  numTokens */\n      dup4\n      swap1\n        /* \"Final Assignment/ERC-20.sol\":2638:2674  allowed[owner][msg.sender]-numTokens */\n      tag_72\n      jump\t// in\n    tag_73:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Final Assignment/ERC-20.sol\":2609:2623  allowed[owner] */\n      dup1\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Final Assignment/ERC-20.sol\":2609:2616  allowed */\n      0x01\n        /* \"Final Assignment/ERC-20.sol\":2609:2623  allowed[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"Final Assignment/ERC-20.sol\":2624:2634  msg.sender */\n      caller\n        /* \"Final Assignment/ERC-20.sol\":2609:2635  allowed[owner][msg.sender] */\n      dup5\n      mstore\n      dup3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"Final Assignment/ERC-20.sol\":2609:2674  allowed[owner][msg.sender] = allowed[owner][msg.sender]-numTokens */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"Final Assignment/ERC-20.sol\":2703:2718  balances[buyer] */\n      swap2\n      dup7\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      swap1\n      mstore\n      keccak256\n      sload\n        /* \"Final Assignment/ERC-20.sol\":2703:2728  balances[buyer]+numTokens */\n      tag_74\n      swap1\n        /* \"Final Assignment/ERC-20.sol\":2719:2728  numTokens */\n      dup4\n      swap1\n        /* \"Final Assignment/ERC-20.sol\":2703:2728  balances[buyer]+numTokens */\n      tag_75\n      jump\t// in\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Final Assignment/ERC-20.sol\":2685:2700  balances[buyer] */\n      dup5\n      dup2\n      and\n        /* \"Final Assignment/ERC-20.sol\":2685:2693  balances */\n      0x00\n        /* \"Final Assignment/ERC-20.sol\":2685:2700  balances[buyer] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"Final Assignment/ERC-20.sol\":2685:2728  balances[buyer] = balances[buyer]+numTokens */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"Final Assignment/ERC-20.sol\":2744:2777  Transfer(owner, buyer, numTokens) */\n      mload\n        /* \"#utility.yul\":1550:1575   */\n      dup6\n      dup2\n      mstore\n        /* \"Final Assignment/ERC-20.sol\":2685:2700  balances[buyer] */\n      swap1\n      swap3\n        /* \"Final Assignment/ERC-20.sol\":2744:2777  Transfer(owner, buyer, numTokens) */\n      swap2\n      dup8\n      and\n      swap2\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1523:1541   */\n      add\n        /* \"Final Assignment/ERC-20.sol\":2744:2777  Transfer(owner, buyer, numTokens) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n      pop\n        /* \"Final Assignment/ERC-20.sol\":2795:2799  true */\n      0x01\n        /* \"Final Assignment/ERC-20.sol\":2335:2807  function transferFrom(address owner, address buyer, uint256 numTokens) public override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Final Assignment/ERC-20.sol\":1167:1335  function mint(uint _amount)public returns(uint){... */\n    tag_53:\n        /* \"Final Assignment/ERC-20.sol\":1209:1213  uint */\n      0x00\n        /* \"Final Assignment/ERC-20.sol\":1241:1248  _amount */\n      dup2\n        /* \"Final Assignment/ERC-20.sol\":1225:1237  totalSupply_ */\n      0x02\n      0x00\n        /* \"Final Assignment/ERC-20.sol\":1225:1248  totalSupply_ += _amount */\n      dup3\n      dup3\n      sload\n      tag_79\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_79:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"Final Assignment/ERC-20.sol\":1268:1278  msg.sender */\n      caller\n        /* \"Final Assignment/ERC-20.sol\":1259:1267  balances */\n      0x00\n        /* \"Final Assignment/ERC-20.sol\":1259:1279  balances[msg.sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"Final Assignment/ERC-20.sol\":1259:1290  balances[msg.sender] += _amount */\n      dup1\n      sload\n        /* \"Final Assignment/ERC-20.sol\":1283:1290  _amount */\n      dup5\n      swap3\n        /* \"Final Assignment/ERC-20.sol\":1259:1267  balances */\n      swap1\n        /* \"Final Assignment/ERC-20.sol\":1259:1290  balances[msg.sender] += _amount */\n      tag_80\n      swap1\n        /* \"Final Assignment/ERC-20.sol\":1283:1290  _amount */\n      dup5\n      swap1\n        /* \"Final Assignment/ERC-20.sol\":1259:1290  balances[msg.sender] += _amount */\n      tag_75\n      jump\t// in\n    tag_80:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"Final Assignment/ERC-20.sol\":1308:1320  totalSupply_ */\n      sload(0x02)\n      swap3\n        /* \"Final Assignment/ERC-20.sol\":1167:1335  function mint(uint _amount)public returns(uint){... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Final Assignment/ERC-20.sol\":1579:1949  function transfer(address sender,address receiver, uint256 numTokens) public override returns (bool) {... */\n    tag_57:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Final Assignment/ERC-20.sol\":1712:1728  balances[sender] */\n      dup4\n      and\n        /* \"Final Assignment/ERC-20.sol\":1674:1678  bool */\n      0x00\n        /* \"Final Assignment/ERC-20.sol\":1712:1728  balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"Final Assignment/ERC-20.sol\":1699:1728  numTokens <= balances[sender] */\n      dup3\n      gt\n      iszero\n        /* \"Final Assignment/ERC-20.sol\":1691:1750  require(numTokens <= balances[sender],\"balance not enough\") */\n      tag_82\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3346:3348   */\n      0x20\n        /* \"Final Assignment/ERC-20.sol\":1691:1750  require(numTokens <= balances[sender],\"balance not enough\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3328:3349   */\n      mstore\n        /* \"#utility.yul\":3385:3387   */\n      0x12\n        /* \"#utility.yul\":3365:3383   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3358:3388   */\n      mstore\n      shl(0x73, 0x0c4c2d8c2dcc6ca40dcdee840cadcdeeaced)\n        /* \"#utility.yul\":3404:3422   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3397:3445   */\n      mstore\n        /* \"#utility.yul\":3462:3480   */\n      0x64\n      add\n        /* \"Final Assignment/ERC-20.sol\":1691:1750  require(numTokens <= balances[sender],\"balance not enough\") */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_82:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Final Assignment/ERC-20.sol\":1780:1796  balances[sender] */\n      dup5\n      and\n        /* \"Final Assignment/ERC-20.sol\":1780:1788  balances */\n      0x00\n        /* \"Final Assignment/ERC-20.sol\":1780:1796  balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"Final Assignment/ERC-20.sol\":1780:1806  balances[sender]-numTokens */\n      tag_85\n      swap1\n        /* \"Final Assignment/ERC-20.sol\":1797:1806  numTokens */\n      dup4\n      swap1\n        /* \"Final Assignment/ERC-20.sol\":1780:1806  balances[sender]-numTokens */\n      tag_72\n      jump\t// in\n    tag_85:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Final Assignment/ERC-20.sol\":1761:1777  balances[sender] */\n      dup1\n      dup7\n      and\n        /* \"Final Assignment/ERC-20.sol\":1761:1769  balances */\n      0x00\n        /* \"Final Assignment/ERC-20.sol\":1761:1777  balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"Final Assignment/ERC-20.sol\":1761:1806  balances[sender] = balances[sender]-numTokens */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"Final Assignment/ERC-20.sol\":1838:1856  balances[receiver] */\n      swap1\n      dup6\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"Final Assignment/ERC-20.sol\":1838:1866  balances[receiver]+numTokens */\n      tag_74\n      swap1\n        /* \"Final Assignment/ERC-20.sol\":1857:1866  numTokens */\n      dup4\n      swap1\n        /* \"Final Assignment/ERC-20.sol\":1838:1866  balances[receiver]+numTokens */\n      tag_75\n      jump\t// in\n        /* \"#utility.yul\":14:562   */\n    tag_18:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      dup3\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_93:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_95\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_93)\n    tag_95:\n        /* \"#utility.yul\":298:301   */\n      pop\n        /* \"#utility.yul\":483:484   */\n      0x00\n        /* \"#utility.yul\":478:480   */\n      0x40\n        /* \"#utility.yul\":469:475   */\n      dup3\n        /* \"#utility.yul\":458:467   */\n      dup7\n        /* \"#utility.yul\":454:476   */\n      add\n        /* \"#utility.yul\":450:481   */\n      add\n        /* \"#utility.yul\":443:485   */\n      mstore\n        /* \"#utility.yul\":553:555   */\n      0x40\n        /* \"#utility.yul\":546:548   */\n      0x1f\n        /* \"#utility.yul\":542:549   */\n      not\n        /* \"#utility.yul\":537:539   */\n      0x1f\n        /* \"#utility.yul\":529:535   */\n      dup4\n        /* \"#utility.yul\":525:540   */\n      add\n        /* \"#utility.yul\":521:550   */\n      and\n        /* \"#utility.yul\":510:519   */\n      dup6\n        /* \"#utility.yul\":506:551   */\n      add\n        /* \"#utility.yul\":502:556   */\n      add\n        /* \"#utility.yul\":494:556   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":567:740   */\n    tag_89:\n        /* \"#utility.yul\":635:655   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":684:715   */\n      dup2\n      and\n        /* \"#utility.yul\":674:716   */\n      dup2\n      eq\n        /* \"#utility.yul\":664:734   */\n      tag_97\n      jumpi\n        /* \"#utility.yul\":730:731   */\n      0x00\n        /* \"#utility.yul\":727:728   */\n      dup1\n        /* \"#utility.yul\":720:732   */\n      revert\n        /* \"#utility.yul\":664:734   */\n    tag_97:\n        /* \"#utility.yul\":567:740   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":745:999   */\n    tag_21:\n        /* \"#utility.yul\":813:819   */\n      0x00\n        /* \"#utility.yul\":821:827   */\n      dup1\n        /* \"#utility.yul\":874:876   */\n      0x40\n        /* \"#utility.yul\":862:871   */\n      dup4\n        /* \"#utility.yul\":853:860   */\n      dup6\n        /* \"#utility.yul\":849:872   */\n      sub\n        /* \"#utility.yul\":845:877   */\n      slt\n        /* \"#utility.yul\":842:894   */\n      iszero\n      tag_99\n      jumpi\n        /* \"#utility.yul\":890:891   */\n      0x00\n        /* \"#utility.yul\":887:888   */\n      dup1\n        /* \"#utility.yul\":880:892   */\n      revert\n        /* \"#utility.yul\":842:894   */\n    tag_99:\n        /* \"#utility.yul\":913:942   */\n      tag_100\n        /* \"#utility.yul\":932:941   */\n      dup4\n        /* \"#utility.yul\":913:942   */\n      tag_89\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":903:942   */\n      swap5\n        /* \"#utility.yul\":989:991   */\n      0x20\n        /* \"#utility.yul\":974:992   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":961:993   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":745:999   */\n      jump\t// out\n        /* \"#utility.yul\":1586:1914   */\n    tag_35:\n        /* \"#utility.yul\":1663:1669   */\n      0x00\n        /* \"#utility.yul\":1671:1677   */\n      dup1\n        /* \"#utility.yul\":1679:1685   */\n      0x00\n        /* \"#utility.yul\":1732:1734   */\n      0x60\n        /* \"#utility.yul\":1720:1729   */\n      dup5\n        /* \"#utility.yul\":1711:1718   */\n      dup7\n        /* \"#utility.yul\":1707:1730   */\n      sub\n        /* \"#utility.yul\":1703:1735   */\n      slt\n        /* \"#utility.yul\":1700:1752   */\n      iszero\n      tag_105\n      jumpi\n        /* \"#utility.yul\":1748:1749   */\n      0x00\n        /* \"#utility.yul\":1745:1746   */\n      dup1\n        /* \"#utility.yul\":1738:1750   */\n      revert\n        /* \"#utility.yul\":1700:1752   */\n    tag_105:\n        /* \"#utility.yul\":1771:1800   */\n      tag_106\n        /* \"#utility.yul\":1790:1799   */\n      dup5\n        /* \"#utility.yul\":1771:1800   */\n      tag_89\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":1761:1800   */\n      swap3\n      pop\n        /* \"#utility.yul\":1819:1857   */\n      tag_107\n        /* \"#utility.yul\":1853:1855   */\n      0x20\n        /* \"#utility.yul\":1842:1851   */\n      dup6\n        /* \"#utility.yul\":1838:1856   */\n      add\n        /* \"#utility.yul\":1819:1857   */\n      tag_89\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":1809:1857   */\n      swap2\n      pop\n        /* \"#utility.yul\":1904:1906   */\n      0x40\n        /* \"#utility.yul\":1893:1902   */\n      dup5\n        /* \"#utility.yul\":1889:1907   */\n      add\n        /* \"#utility.yul\":1876:1908   */\n      calldataload\n        /* \"#utility.yul\":1866:1908   */\n      swap1\n      pop\n        /* \"#utility.yul\":1586:1914   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2108:2294   */\n    tag_44:\n        /* \"#utility.yul\":2167:2173   */\n      0x00\n        /* \"#utility.yul\":2220:2222   */\n      0x20\n        /* \"#utility.yul\":2208:2217   */\n      dup3\n        /* \"#utility.yul\":2199:2206   */\n      dup5\n        /* \"#utility.yul\":2195:2218   */\n      sub\n        /* \"#utility.yul\":2191:2223   */\n      slt\n        /* \"#utility.yul\":2188:2240   */\n      iszero\n      tag_110\n      jumpi\n        /* \"#utility.yul\":2236:2237   */\n      0x00\n        /* \"#utility.yul\":2233:2234   */\n      dup1\n        /* \"#utility.yul\":2226:2238   */\n      revert\n        /* \"#utility.yul\":2188:2240   */\n    tag_110:\n        /* \"#utility.yul\":2259:2288   */\n      tag_111\n        /* \"#utility.yul\":2278:2287   */\n      dup3\n        /* \"#utility.yul\":2259:2288   */\n      tag_89\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":2249:2288   */\n      swap4\n        /* \"#utility.yul\":2108:2294   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2299:2479   */\n    tag_52:\n        /* \"#utility.yul\":2358:2364   */\n      0x00\n        /* \"#utility.yul\":2411:2413   */\n      0x20\n        /* \"#utility.yul\":2399:2408   */\n      dup3\n        /* \"#utility.yul\":2390:2397   */\n      dup5\n        /* \"#utility.yul\":2386:2409   */\n      sub\n        /* \"#utility.yul\":2382:2414   */\n      slt\n        /* \"#utility.yul\":2379:2431   */\n      iszero\n      tag_113\n      jumpi\n        /* \"#utility.yul\":2427:2428   */\n      0x00\n        /* \"#utility.yul\":2424:2425   */\n      dup1\n        /* \"#utility.yul\":2417:2429   */\n      revert\n        /* \"#utility.yul\":2379:2431   */\n    tag_113:\n      pop\n        /* \"#utility.yul\":2450:2473   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2299:2479   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2484:2744   */\n    tag_61:\n        /* \"#utility.yul\":2552:2558   */\n      0x00\n        /* \"#utility.yul\":2560:2566   */\n      dup1\n        /* \"#utility.yul\":2613:2615   */\n      0x40\n        /* \"#utility.yul\":2601:2610   */\n      dup4\n        /* \"#utility.yul\":2592:2599   */\n      dup6\n        /* \"#utility.yul\":2588:2611   */\n      sub\n        /* \"#utility.yul\":2584:2616   */\n      slt\n        /* \"#utility.yul\":2581:2633   */\n      iszero\n      tag_115\n      jumpi\n        /* \"#utility.yul\":2629:2630   */\n      0x00\n        /* \"#utility.yul\":2626:2627   */\n      dup1\n        /* \"#utility.yul\":2619:2631   */\n      revert\n        /* \"#utility.yul\":2581:2633   */\n    tag_115:\n        /* \"#utility.yul\":2652:2681   */\n      tag_116\n        /* \"#utility.yul\":2671:2680   */\n      dup4\n        /* \"#utility.yul\":2652:2681   */\n      tag_89\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":2642:2681   */\n      swap2\n      pop\n        /* \"#utility.yul\":2700:2738   */\n      tag_117\n        /* \"#utility.yul\":2734:2736   */\n      0x20\n        /* \"#utility.yul\":2723:2732   */\n      dup5\n        /* \"#utility.yul\":2719:2737   */\n      add\n        /* \"#utility.yul\":2700:2738   */\n      tag_89\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":2690:2738   */\n      swap1\n      pop\n        /* \"#utility.yul\":2484:2744   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2749:2876   */\n    tag_90:\n        /* \"#utility.yul\":2810:2820   */\n      0x4e487b71\n        /* \"#utility.yul\":2805:2808   */\n      0xe0\n        /* \"#utility.yul\":2801:2821   */\n      shl\n        /* \"#utility.yul\":2798:2799   */\n      0x00\n        /* \"#utility.yul\":2791:2822   */\n      mstore\n        /* \"#utility.yul\":2841:2845   */\n      0x11\n        /* \"#utility.yul\":2838:2839   */\n      0x04\n        /* \"#utility.yul\":2831:2846   */\n      mstore\n        /* \"#utility.yul\":2865:2869   */\n      0x24\n        /* \"#utility.yul\":2862:2863   */\n      0x00\n        /* \"#utility.yul\":2855:2870   */\n      revert\n        /* \"#utility.yul\":2881:3009   */\n    tag_72:\n        /* \"#utility.yul\":2948:2957   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":2969:2980   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":2966:3003   */\n      iszero\n      tag_64\n      jumpi\n        /* \"#utility.yul\":2983:3001   */\n      tag_64\n      tag_90\n      jump\t// in\n        /* \"#utility.yul\":3014:3139   */\n    tag_75:\n        /* \"#utility.yul\":3079:3088   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3100:3110   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3097:3133   */\n      iszero\n      tag_64\n      jumpi\n        /* \"#utility.yul\":3113:3131   */\n      tag_64\n      tag_90\n      jump\t// in\n\n    auxdata: 0xa2646970667358221220d6d2c550ae0333f71ebd490b78421c3224a0b1996d85eb75fc6acfeb8fcb68aa64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_105": {
									"entryPoint": null,
									"id": 105,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052678ac7230489e8000060025534801561001c57600080fd5b506002543360009081526020819052604090205561066a8061003f6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063313ce56711610071578063313ce5671461014357806370a082311461015d57806395d89b4114610186578063a0712d68146101a8578063beabacc8146101bb578063dd62ed3e146101ce57600080fd5b806306fdde03146100ae578063095ea7b3146100ed578063156213731461011057806318160ddd1461011e57806323b872dd14610130575b600080fd5b6100d76040518060400160405280600a8152602001694552433230426173696360b01b81525081565b6040516100e491906104ba565b60405180910390f35b6101006100fb366004610524565b610207565b60405190151581526020016100e4565b6040513081526020016100e4565b6002545b6040519081526020016100e4565b61010061013e36600461054e565b610274565b61014b601281565b60405160ff90911681526020016100e4565b61012261016b36600461058a565b6001600160a01b031660009081526020819052604090205490565b6100d76040518060400160405280600381526020016245524360e81b81525081565b6101226101b63660046105ac565b6103bf565b6101006101c936600461054e565b610405565b6101226101dc3660046105c5565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3360008181526001602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906102629086815260200190565b60405180910390a35060015b92915050565b6001600160a01b03831660009081526020819052604081205482111561029957600080fd5b6001600160a01b03841660009081526001602090815260408083203384529091529020548211156102c957600080fd5b6001600160a01b0384166000908152602081905260409020546102ed90839061060e565b6001600160a01b03851660009081526020818152604080832093909355600181528282203383529052205461032390839061060e565b6001600160a01b0380861660009081526001602090815260408083203384528252808320949094559186168152908190522054610361908390610621565b6001600160a01b038481166000818152602081815260409182902094909455518581529092918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35060019392505050565b600081600260008282546103d39190610621565b909155505033600090815260208190526040812080548492906103f7908490610621565b909155505060025492915050565b6001600160a01b0383166000908152602081905260408120548211156104665760405162461bcd60e51b81526020600482015260126024820152710c4c2d8c2dcc6ca40dcdee840cadcdeeaced60731b604482015260640160405180910390fd5b6001600160a01b03841660009081526020819052604090205461048a90839061060e565b6001600160a01b038086166000908152602081905260408082209390935590851681522054610361908390610621565b600060208083528351808285015260005b818110156104e7578581018301518582016040015282016104cb565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461051f57600080fd5b919050565b6000806040838503121561053757600080fd5b61054083610508565b946020939093013593505050565b60008060006060848603121561056357600080fd5b61056c84610508565b925061057a60208501610508565b9150604084013590509250925092565b60006020828403121561059c57600080fd5b6105a582610508565b9392505050565b6000602082840312156105be57600080fd5b5035919050565b600080604083850312156105d857600080fd5b6105e183610508565b91506105ef60208401610508565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561026e5761026e6105f8565b8082018082111561026e5761026e6105f856fea2646970667358221220d6d2c550ae0333f71ebd490b78421c3224a0b1996d85eb75fc6acfeb8fcb68aa64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH8 0x8AC7230489E80000 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x66A DUP1 PUSH2 0x3F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0xBEABACC8 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x15621373 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x130 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH10 0x45524332304261736963 PUSH1 0xB0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE4 SWAP2 SWAP1 PUSH2 0x4BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x100 PUSH2 0xFB CALLDATASIZE PUSH1 0x4 PUSH2 0x524 JUMP JUMPDEST PUSH2 0x207 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE4 JUMP JUMPDEST PUSH1 0x40 MLOAD ADDRESS DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE4 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE4 JUMP JUMPDEST PUSH2 0x100 PUSH2 0x13E CALLDATASIZE PUSH1 0x4 PUSH2 0x54E JUMP JUMPDEST PUSH2 0x274 JUMP JUMPDEST PUSH2 0x14B PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE4 JUMP JUMPDEST PUSH2 0x122 PUSH2 0x16B CALLDATASIZE PUSH1 0x4 PUSH2 0x58A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xD7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x455243 PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x122 PUSH2 0x1B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x5AC JUMP JUMPDEST PUSH2 0x3BF JUMP JUMPDEST PUSH2 0x100 PUSH2 0x1C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x54E JUMP JUMPDEST PUSH2 0x405 JUMP JUMPDEST PUSH2 0x122 PUSH2 0x1DC CALLDATASIZE PUSH1 0x4 PUSH2 0x5C5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE MLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x262 SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x299 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x2C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2ED SWAP1 DUP4 SWAP1 PUSH2 0x60E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x1 DUP2 MSTORE DUP3 DUP3 KECCAK256 CALLER DUP4 MSTORE SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x323 SWAP1 DUP4 SWAP1 PUSH2 0x60E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 DUP7 AND DUP2 MSTORE SWAP1 DUP2 SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x361 SWAP1 DUP4 SWAP1 PUSH2 0x621 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3D3 SWAP2 SWAP1 PUSH2 0x621 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x3F7 SWAP1 DUP5 SWAP1 PUSH2 0x621 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x2 SLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x466 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0xC4C2D8C2DCC6CA40DCDEE840CADCDEEACED PUSH1 0x73 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x48A SWAP1 DUP4 SWAP1 PUSH2 0x60E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP6 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x361 SWAP1 DUP4 SWAP1 PUSH2 0x621 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4E7 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x4CB JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x51F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x537 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x540 DUP4 PUSH2 0x508 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x563 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x56C DUP5 PUSH2 0x508 JUMP JUMPDEST SWAP3 POP PUSH2 0x57A PUSH1 0x20 DUP6 ADD PUSH2 0x508 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x59C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5A5 DUP3 PUSH2 0x508 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5E1 DUP4 PUSH2 0x508 JUMP JUMPDEST SWAP2 POP PUSH2 0x5EF PUSH1 0x20 DUP5 ADD PUSH2 0x508 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x26E JUMPI PUSH2 0x26E PUSH2 0x5F8 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x26E JUMPI PUSH2 0x26E PUSH2 0x5F8 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 0xD2 0xC5 POP 0xAE SUB CALLER 0xF7 0x1E 0xBD 0x49 SIGNEXTEND PUSH25 0x421C3224A0B1996D85EB75FC6ACFEB8FCB68AA64736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "764:2146:0:-:0;;;1075:8;1052:31;;1093:64;;;;;;;;;-1:-1:-1;1137:12:0;;1123:10;1114:8;:20;;;;;;;;;;:35;764:2146;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@allowance_244": {
									"entryPoint": null,
									"id": 244,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_227": {
									"entryPoint": 519,
									"id": 227,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_148": {
									"entryPoint": null,
									"id": 148,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_81": {
									"entryPoint": null,
									"id": 81,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getcontractaddress_331": {
									"entryPoint": null,
									"id": 331,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mint_126": {
									"entryPoint": 959,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_75": {
									"entryPoint": null,
									"id": 75,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_78": {
									"entryPoint": null,
									"id": 78,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_135": {
									"entryPoint": null,
									"id": 135,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_320": {
									"entryPoint": 628,
									"id": 320,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_198": {
									"entryPoint": 1029,
									"id": 198,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1288,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1418,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1477,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1358,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1316,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1452,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1210,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_10a5c1b95c8118e7a9a5e100b5db3e9810aa46855d52cd9bc67c5625dd900658__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1569,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 1550,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1528,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3488:2",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:2",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "135:427:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "155:2:2",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:2"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "184:2:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:21:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:13:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "200:6:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:2"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "254:2:2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "232:34:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "284:1:2",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "279:1:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "344:90:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:2"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:2"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:2"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "388:2:2",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:2"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:2"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:2"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:2"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:2"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:2"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:2"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:13:2"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "316:19:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "318:15:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:2"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:2"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:2"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:2"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "298:3:2",
																"statements": []
															},
															"src": "294:140:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "458:9:2"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "469:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "454:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "454:22:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "478:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "450:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "450:31:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "483:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "443:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "443:42:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "443:42:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "494:62:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "510:9:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "529:6:2"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "537:2:2",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "525:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "525:15:2"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "546:2:2",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "542:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "542:7:2"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "521:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "521:29:2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "506:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "506:45:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "553:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:54:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "104:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "115:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "126:4:2",
														"type": ""
													}
												],
												"src": "14:548:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "616:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "626:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "648:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "635:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "635:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "626:5:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "718:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "727:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "730:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "720:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "720:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "720:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "677:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "688:5:2"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "703:3:2",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "708:1:2",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "699:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "699:11:2"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "712:1:2",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "695:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "695:19:2"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "684:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "684:31:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "674:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "674:42:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "667:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "667:50:2"
															},
															"nodeType": "YulIf",
															"src": "664:70:2"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "595:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "606:5:2",
														"type": ""
													}
												],
												"src": "567:173:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "832:167:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "878:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "887:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "890:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "880:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "880:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "880:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "853:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "862:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "849:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "849:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "874:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "845:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "845:32:2"
															},
															"nodeType": "YulIf",
															"src": "842:52:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "903:39:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "932:9:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "913:18:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "913:29:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "903:6:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "951:42:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "978:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "989:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "974:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "974:18:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "961:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "961:32:2"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "951:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "790:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "801:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "813:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "821:6:2",
														"type": ""
													}
												],
												"src": "745:254:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1099:92:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1109:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1121:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1132:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1117:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1117:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1109:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1151:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1176:6:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1169:6:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1169:14:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1162:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1162:22:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1144:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1144:41:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1144:41:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1068:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1079:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1090:4:2",
														"type": ""
													}
												],
												"src": "1004:187:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1297:102:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1307:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1319:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1330:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1315:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1315:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1307:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1349:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1364:6:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1380:3:2",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1385:1:2",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1376:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1376:11:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1389:1:2",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1372:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1372:19:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1360:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1360:32:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1342:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1342:51:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1342:51:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1266:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1277:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1288:4:2",
														"type": ""
													}
												],
												"src": "1196:203:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1505:76:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1515:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1527:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1538:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1523:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1523:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1515:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1557:9:2"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1568:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1550:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1550:25:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1550:25:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1474:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1485:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1496:4:2",
														"type": ""
													}
												],
												"src": "1404:177:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1690:224:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1736:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1745:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1748:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1738:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1738:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1738:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1711:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1720:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1707:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1707:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1732:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1703:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1703:32:2"
															},
															"nodeType": "YulIf",
															"src": "1700:52:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1761:39:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1790:9:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1771:18:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1771:29:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1761:6:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1809:48:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1842:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1853:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1838:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1838:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1819:18:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1819:38:2"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1809:6:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1866:42:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1893:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1904:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1889:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1889:18:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1876:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1876:32:2"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1866:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1640:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1651:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1663:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1671:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1679:6:2",
														"type": ""
													}
												],
												"src": "1586:328:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2016:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2026:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2038:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2049:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2034:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2034:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2026:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2068:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2083:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2091:4:2",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2079:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2079:17:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2061:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2061:36:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2061:36:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1985:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1996:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2007:4:2",
														"type": ""
													}
												],
												"src": "1919:184:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2178:116:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2224:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2233:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2236:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2226:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2226:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2226:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2199:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2208:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2195:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2195:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2220:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2191:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2191:32:2"
															},
															"nodeType": "YulIf",
															"src": "2188:52:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2249:39:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2278:9:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2259:18:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2259:29:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2249:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2144:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2155:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2167:6:2",
														"type": ""
													}
												],
												"src": "2108:186:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2369:110:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2415:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2424:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2427:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2417:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2417:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2417:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2390:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2399:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2386:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2386:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2411:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2382:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2382:32:2"
															},
															"nodeType": "YulIf",
															"src": "2379:52:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2440:33:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2463:9:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2450:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2450:23:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2440:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2335:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2346:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2358:6:2",
														"type": ""
													}
												],
												"src": "2299:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2571:173:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2617:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2626:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2629:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2619:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2619:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2619:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2592:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2601:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2588:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2588:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2613:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2584:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2584:32:2"
															},
															"nodeType": "YulIf",
															"src": "2581:52:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2642:39:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2671:9:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2652:18:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2652:29:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2642:6:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2690:48:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2723:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2734:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2719:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2719:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2700:18:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2700:38:2"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2690:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2529:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2540:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2552:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2560:6:2",
														"type": ""
													}
												],
												"src": "2484:260:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2781:95:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2798:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2805:3:2",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2810:10:2",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2801:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2801:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2791:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2791:31:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2791:31:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2838:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2841:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2831:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2831:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2831:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2862:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2865:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2855:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2855:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2855:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2749:127:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2930:79:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2940:17:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2952:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2955:1:2"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2948:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2948:9:2"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "2940:4:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2981:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2983:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2983:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2983:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "2972:4:2"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2978:1:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2969:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2969:11:2"
															},
															"nodeType": "YulIf",
															"src": "2966:37:2"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2912:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2915:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "2921:4:2",
														"type": ""
													}
												],
												"src": "2881:128:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3062:77:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3072:16:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3083:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3086:1:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3079:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3079:9:2"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3072:3:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3111:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3113:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3113:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3113:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3103:1:2"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "3106:3:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3100:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3100:10:2"
															},
															"nodeType": "YulIf",
															"src": "3097:36:2"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3045:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3048:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3054:3:2",
														"type": ""
													}
												],
												"src": "3014:125:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3318:168:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3335:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3346:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3328:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3328:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3328:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3369:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3380:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3365:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3365:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3385:2:2",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3358:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3358:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3358:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3408:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3419:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3404:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3404:18:2"
																	},
																	{
																		"hexValue": "62616c616e6365206e6f7420656e6f756768",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3424:20:2",
																		"type": "",
																		"value": "balance not enough"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3397:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3397:48:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3397:48:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3454:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3466:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3477:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3462:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3462:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3454:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_10a5c1b95c8118e7a9a5e100b5db3e9810aa46855d52cd9bc67c5625dd900658__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3295:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3309:4:2",
														"type": ""
													}
												],
												"src": "3144:342:2"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_10a5c1b95c8118e7a9a5e100b5db3e9810aa46855d52cd9bc67c5625dd900658__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"balance not enough\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c8063313ce56711610071578063313ce5671461014357806370a082311461015d57806395d89b4114610186578063a0712d68146101a8578063beabacc8146101bb578063dd62ed3e146101ce57600080fd5b806306fdde03146100ae578063095ea7b3146100ed578063156213731461011057806318160ddd1461011e57806323b872dd14610130575b600080fd5b6100d76040518060400160405280600a8152602001694552433230426173696360b01b81525081565b6040516100e491906104ba565b60405180910390f35b6101006100fb366004610524565b610207565b60405190151581526020016100e4565b6040513081526020016100e4565b6002545b6040519081526020016100e4565b61010061013e36600461054e565b610274565b61014b601281565b60405160ff90911681526020016100e4565b61012261016b36600461058a565b6001600160a01b031660009081526020819052604090205490565b6100d76040518060400160405280600381526020016245524360e81b81525081565b6101226101b63660046105ac565b6103bf565b6101006101c936600461054e565b610405565b6101226101dc3660046105c5565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3360008181526001602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906102629086815260200190565b60405180910390a35060015b92915050565b6001600160a01b03831660009081526020819052604081205482111561029957600080fd5b6001600160a01b03841660009081526001602090815260408083203384529091529020548211156102c957600080fd5b6001600160a01b0384166000908152602081905260409020546102ed90839061060e565b6001600160a01b03851660009081526020818152604080832093909355600181528282203383529052205461032390839061060e565b6001600160a01b0380861660009081526001602090815260408083203384528252808320949094559186168152908190522054610361908390610621565b6001600160a01b038481166000818152602081815260409182902094909455518581529092918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35060019392505050565b600081600260008282546103d39190610621565b909155505033600090815260208190526040812080548492906103f7908490610621565b909155505060025492915050565b6001600160a01b0383166000908152602081905260408120548211156104665760405162461bcd60e51b81526020600482015260126024820152710c4c2d8c2dcc6ca40dcdee840cadcdeeaced60731b604482015260640160405180910390fd5b6001600160a01b03841660009081526020819052604090205461048a90839061060e565b6001600160a01b038086166000908152602081905260408082209390935590851681522054610361908390610621565b600060208083528351808285015260005b818110156104e7578581018301518582016040015282016104cb565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461051f57600080fd5b919050565b6000806040838503121561053757600080fd5b61054083610508565b946020939093013593505050565b60008060006060848603121561056357600080fd5b61056c84610508565b925061057a60208501610508565b9150604084013590509250925092565b60006020828403121561059c57600080fd5b6105a582610508565b9392505050565b6000602082840312156105be57600080fd5b5035919050565b600080604083850312156105d857600080fd5b6105e183610508565b91506105ef60208401610508565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561026e5761026e6105f8565b8082018082111561026e5761026e6105f856fea2646970667358221220d6d2c550ae0333f71ebd490b78421c3224a0b1996d85eb75fc6acfeb8fcb68aa64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0xBEABACC8 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x15621373 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x130 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH10 0x45524332304261736963 PUSH1 0xB0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE4 SWAP2 SWAP1 PUSH2 0x4BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x100 PUSH2 0xFB CALLDATASIZE PUSH1 0x4 PUSH2 0x524 JUMP JUMPDEST PUSH2 0x207 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE4 JUMP JUMPDEST PUSH1 0x40 MLOAD ADDRESS DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE4 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE4 JUMP JUMPDEST PUSH2 0x100 PUSH2 0x13E CALLDATASIZE PUSH1 0x4 PUSH2 0x54E JUMP JUMPDEST PUSH2 0x274 JUMP JUMPDEST PUSH2 0x14B PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE4 JUMP JUMPDEST PUSH2 0x122 PUSH2 0x16B CALLDATASIZE PUSH1 0x4 PUSH2 0x58A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xD7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x455243 PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x122 PUSH2 0x1B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x5AC JUMP JUMPDEST PUSH2 0x3BF JUMP JUMPDEST PUSH2 0x100 PUSH2 0x1C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x54E JUMP JUMPDEST PUSH2 0x405 JUMP JUMPDEST PUSH2 0x122 PUSH2 0x1DC CALLDATASIZE PUSH1 0x4 PUSH2 0x5C5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE MLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x262 SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x299 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x2C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2ED SWAP1 DUP4 SWAP1 PUSH2 0x60E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x1 DUP2 MSTORE DUP3 DUP3 KECCAK256 CALLER DUP4 MSTORE SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x323 SWAP1 DUP4 SWAP1 PUSH2 0x60E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 DUP7 AND DUP2 MSTORE SWAP1 DUP2 SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x361 SWAP1 DUP4 SWAP1 PUSH2 0x621 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3D3 SWAP2 SWAP1 PUSH2 0x621 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x3F7 SWAP1 DUP5 SWAP1 PUSH2 0x621 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x2 SLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x466 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0xC4C2D8C2DCC6CA40DCDEE840CADCDEEACED PUSH1 0x73 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x48A SWAP1 DUP4 SWAP1 PUSH2 0x60E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP6 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x361 SWAP1 DUP4 SWAP1 PUSH2 0x621 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4E7 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x4CB JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x51F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x537 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x540 DUP4 PUSH2 0x508 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x563 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x56C DUP5 PUSH2 0x508 JUMP JUMPDEST SWAP3 POP PUSH2 0x57A PUSH1 0x20 DUP6 ADD PUSH2 0x508 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x59C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5A5 DUP3 PUSH2 0x508 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5E1 DUP4 PUSH2 0x508 JUMP JUMPDEST SWAP2 POP PUSH2 0x5EF PUSH1 0x20 DUP5 ADD PUSH2 0x508 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x26E JUMPI PUSH2 0x26E PUSH2 0x5F8 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x26E JUMPI PUSH2 0x26E PUSH2 0x5F8 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 0xD2 0xC5 POP 0xAE SUB CALLER 0xF7 0x1E 0xBD 0x49 SIGNEXTEND PUSH25 0x421C3224A0B1996D85EB75FC6ACFEB8FCB68AA64736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "764:2146:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;803:42;;;;;;;;;;;;;;;-1:-1:-1;;;803:42:0;;;;;;;;;;;;:::i;:::-;;;;;;;;1957:224;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:2;;1162:22;1144:41;;1132:2;1117:18;1957:224:0;1004:187:2;2815:92:0;;;2892:4;1342:51:2;;1330:2;1315:18;2815:92:0;1196:203:2;1343:96:0;1419:12;;1343:96;;;1550:25:2;;;1538:2;1523:18;1343:96:0;1404:177:2;2335:472:0;;;;;;:::i;:::-;;:::i;896:35::-;;929:2;896:35;;;;;2091:4:2;2079:17;;;2061:36;;2049:2;2034:18;896:35:0;1919:184:2;1447:124:0;;;;;;:::i;:::-;-1:-1:-1;;;;;1543:20:0;1516:7;1543:20;;;;;;;;;;;;1447:124;852:37;;;;;;;;;;;;;;;-1:-1:-1;;;852:37:0;;;;;1167:168;;;;;;:::i;:::-;;:::i;1579:370::-;;;;;;:::i;:::-;;:::i;2189:138::-;;;;;;:::i;:::-;-1:-1:-1;;;;;2295:14:0;;;2271:4;2295:14;;;:7;:14;;;;;;;;:24;;;;;;;;;;;;;2189:138;1957:224;2061:10;2036:4;2053:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;2053:29:0;;;;;;;;;;:41;;;2110;2036:4;;2053:29;;2110:41;;;;2085:9;1550:25:2;;1538:2;1523:18;;1404:177;2110:41:0;;;;;;;;-1:-1:-1;2169:4:0;1957:224;;;;;:::o;2335:472::-;-1:-1:-1;;;;;2469:15:0;;2431:4;2469:15;;;;;;;;;;;2456:28;;;2448:37;;;;;;-1:-1:-1;;;;;2517:14:0;;;;;;:7;:14;;;;;;;;2532:10;2517:26;;;;;;;;2504:39;;;2496:48;;;;;;-1:-1:-1;;;;;2573:15:0;;:8;:15;;;;;;;;;;;:25;;2589:9;;2573:25;:::i;:::-;-1:-1:-1;;;;;2555:15:0;;:8;:15;;;;;;;;;;;:43;;;;2638:7;:14;;;;;2653:10;2638:26;;;;;;:36;;2665:9;;2638:36;:::i;:::-;-1:-1:-1;;;;;2609:14:0;;;;;;;:7;:14;;;;;;;;2624:10;2609:26;;;;;;;:65;;;;2703:15;;;;;;;;;;;:25;;2719:9;;2703:25;:::i;:::-;-1:-1:-1;;;;;2685:15:0;;;:8;:15;;;;;;;;;;;;:43;;;;2744:33;1550:25:2;;;2685:15:0;;2744:33;;;;;;1523:18:2;2744:33:0;;;;;;;-1:-1:-1;2795:4:0;2335:472;;;;;:::o;1167:168::-;1209:4;1241:7;1225:12;;:23;;;;;;;:::i;:::-;;;;-1:-1:-1;;1268:10:0;1259:8;:20;;;;;;;;;;:31;;1283:7;;1259:8;:31;;1283:7;;1259:31;:::i;:::-;;;;-1:-1:-1;;1308:12:0;;;1167:168;-1:-1:-1;;1167:168:0:o;1579:370::-;-1:-1:-1;;;;;1712:16:0;;1674:4;1712:16;;;;;;;;;;;1699:29;;;1691:59;;;;-1:-1:-1;;;1691:59:0;;3346:2:2;1691:59:0;;;3328:21:2;3385:2;3365:18;;;3358:30;-1:-1:-1;;;3404:18:2;;;3397:48;3462:18;;1691:59:0;;;;;;;;-1:-1:-1;;;;;1780:16:0;;:8;:16;;;;;;;;;;;:26;;1797:9;;1780:26;:::i;:::-;-1:-1:-1;;;;;1761:16:0;;;:8;:16;;;;;;;;;;;:45;;;;1838:18;;;;;;;:28;;1857:9;;1838:28;:::i;14:548:2:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:2;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:2:o;1586:328::-;1663:6;1671;1679;1732:2;1720:9;1711:7;1707:23;1703:32;1700:52;;;1748:1;1745;1738:12;1700:52;1771:29;1790:9;1771:29;:::i;:::-;1761:39;;1819:38;1853:2;1842:9;1838:18;1819:38;:::i;:::-;1809:48;;1904:2;1893:9;1889:18;1876:32;1866:42;;1586:328;;;;;:::o;2108:186::-;2167:6;2220:2;2208:9;2199:7;2195:23;2191:32;2188:52;;;2236:1;2233;2226:12;2188:52;2259:29;2278:9;2259:29;:::i;:::-;2249:39;2108:186;-1:-1:-1;;;2108:186:2:o;2299:180::-;2358:6;2411:2;2399:9;2390:7;2386:23;2382:32;2379:52;;;2427:1;2424;2417:12;2379:52;-1:-1:-1;2450:23:2;;2299:180;-1:-1:-1;2299:180:2:o;2484:260::-;2552:6;2560;2613:2;2601:9;2592:7;2588:23;2584:32;2581:52;;;2629:1;2626;2619:12;2581:52;2652:29;2671:9;2652:29;:::i;:::-;2642:39;;2700:38;2734:2;2723:9;2719:18;2700:38;:::i;:::-;2690:48;;2484:260;;;;;:::o;2749:127::-;2810:10;2805:3;2801:20;2798:1;2791:31;2841:4;2838:1;2831:15;2865:4;2862:1;2855:15;2881:128;2948:9;;;2969:11;;;2966:37;;;2983:18;;:::i;3014:125::-;3079:9;;;3100:10;;;3097:36;;;3113:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "328400",
								"executionCost": "46751",
								"totalCost": "375151"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24523",
								"balanceOf(address)": "2562",
								"decimals()": "204",
								"getcontractaddress()": "221",
								"mint(uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2348",
								"transfer(address,address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 764,
									"end": 2910,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 764,
									"end": 2910,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 764,
									"end": 2910,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1075,
									"end": 1083,
									"name": "PUSH",
									"source": 0,
									"value": "8AC7230489E80000"
								},
								{
									"begin": 1052,
									"end": 1083,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1052,
									"end": 1083,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1093,
									"end": 1157,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1093,
									"end": 1157,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1093,
									"end": 1157,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1093,
									"end": 1157,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1093,
									"end": 1157,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1093,
									"end": 1157,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1093,
									"end": 1157,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1093,
									"end": 1157,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1093,
									"end": 1157,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1093,
									"end": 1157,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1137,
									"end": 1149,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1137,
									"end": 1149,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1123,
									"end": 1133,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 1114,
									"end": 1122,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1114,
									"end": 1134,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1114,
									"end": 1134,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1114,
									"end": 1134,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1114,
									"end": 1134,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1114,
									"end": 1134,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1114,
									"end": 1134,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1114,
									"end": 1134,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1114,
									"end": 1134,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1114,
									"end": 1134,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1114,
									"end": 1134,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 1114,
									"end": 1149,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 764,
									"end": 2910,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 764,
									"end": 2910,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 764,
									"end": 2910,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 764,
									"end": 2910,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 764,
									"end": 2910,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 764,
									"end": 2910,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 764,
									"end": 2910,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d6d2c550ae0333f71ebd490b78421c3224a0b1996d85eb75fc6acfeb8fcb68aa64736f6c63430008140033",
									".code": [
										{
											"begin": 764,
											"end": 2910,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "PUSH",
											"source": 0,
											"value": "A0712D68"
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "PUSH",
											"source": 0,
											"value": "BEABACC8"
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "PUSH",
											"source": 0,
											"value": "15621373"
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 764,
											"end": 2910,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 803,
											"end": 845,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 803,
											"end": 845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 803,
											"end": 845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 803,
											"end": 845,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 803,
											"end": 845,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 803,
											"end": 845,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 803,
											"end": 845,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 803,
											"end": 845,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 803,
											"end": 845,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 803,
											"end": 845,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 803,
											"end": 845,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 803,
											"end": 845,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 803,
											"end": 845,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 803,
											"end": 845,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 803,
											"end": 845,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 803,
											"end": 845,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "45524332304261736963"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 803,
											"end": 845,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 803,
											"end": 845,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 803,
											"end": 845,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 803,
											"end": 845,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 803,
											"end": 845,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 803,
											"end": 845,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 803,
											"end": 845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 803,
											"end": 845,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 803,
											"end": 845,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 803,
											"end": 845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 803,
											"end": 845,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 803,
											"end": 845,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 803,
											"end": 845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 803,
											"end": 845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 803,
											"end": 845,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 803,
											"end": 845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 803,
											"end": 845,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 803,
											"end": 845,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 803,
											"end": 845,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 803,
											"end": 845,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 803,
											"end": 845,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 803,
											"end": 845,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 803,
											"end": 845,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1957,
											"end": 2181,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1957,
											"end": 2181,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1957,
											"end": 2181,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1957,
											"end": 2181,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1957,
											"end": 2181,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1957,
											"end": 2181,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1957,
											"end": 2181,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1957,
											"end": 2181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1957,
											"end": 2181,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1957,
											"end": 2181,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1957,
											"end": 2181,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1957,
											"end": 2181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1957,
											"end": 2181,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1957,
											"end": 2181,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1957,
											"end": 2181,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1957,
											"end": 2181,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1184,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1132,
											"end": 1134,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1117,
											"end": 1135,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1957,
											"end": 2181,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1004,
											"end": 1191,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2815,
											"end": 2907,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2815,
											"end": 2907,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2815,
											"end": 2907,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2815,
											"end": 2907,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2892,
											"end": 2896,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1393,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1393,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2815,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1196,
											"end": 1399,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1439,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1343,
											"end": 1439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1419,
											"end": 1431,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1419,
											"end": 1431,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1439,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1343,
											"end": 1439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1439,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1343,
											"end": 1439,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1550,
											"end": 1575,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1550,
											"end": 1575,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1550,
											"end": 1575,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 1540,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1523,
											"end": 1541,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1404,
											"end": 1581,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2335,
											"end": 2807,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2335,
											"end": 2807,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2335,
											"end": 2807,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2335,
											"end": 2807,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2335,
											"end": 2807,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2335,
											"end": 2807,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2335,
											"end": 2807,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2335,
											"end": 2807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2335,
											"end": 2807,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2335,
											"end": 2807,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2335,
											"end": 2807,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2335,
											"end": 2807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 896,
											"end": 931,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 896,
											"end": 931,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 896,
											"end": 931,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 929,
											"end": 931,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 896,
											"end": 931,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 896,
											"end": 931,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 896,
											"end": 931,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 896,
											"end": 931,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 896,
											"end": 931,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 896,
											"end": 931,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2095,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2079,
											"end": 2096,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2079,
											"end": 2096,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2079,
											"end": 2096,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2097,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2097,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2049,
											"end": 2051,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2052,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 896,
											"end": 931,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1919,
											"end": 2103,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1571,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1447,
											"end": 1571,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1447,
											"end": 1571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1447,
											"end": 1571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1447,
											"end": 1571,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1447,
											"end": 1571,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1447,
											"end": 1571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1447,
											"end": 1571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1447,
											"end": 1571,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1447,
											"end": 1571,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1543,
											"end": 1563,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1516,
											"end": 1523,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1543,
											"end": 1563,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1563,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1563,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1563,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1543,
											"end": 1563,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1563,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1563,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1563,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1543,
											"end": 1563,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1563,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1563,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1563,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1447,
											"end": 1571,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 852,
											"end": 889,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 852,
											"end": 889,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 852,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 852,
											"end": 889,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 852,
											"end": 889,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 852,
											"end": 889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 852,
											"end": 889,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 852,
											"end": 889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 852,
											"end": 889,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 852,
											"end": 889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 852,
											"end": 889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 852,
											"end": 889,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 852,
											"end": 889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 852,
											"end": 889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 852,
											"end": 889,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 852,
											"end": 889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "455243"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 852,
											"end": 889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 852,
											"end": 889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 852,
											"end": 889,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 852,
											"end": 889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 852,
											"end": 889,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1335,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1167,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1167,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1167,
											"end": 1335,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1167,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1167,
											"end": 1335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1335,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1167,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1167,
											"end": 1335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 1949,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1579,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1579,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1579,
											"end": 1949,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 1949,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1579,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1579,
											"end": 1949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 1949,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1579,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1579,
											"end": 1949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2327,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2189,
											"end": 2327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2189,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2189,
											"end": 2327,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2327,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2189,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2189,
											"end": 2327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2327,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2189,
											"end": 2327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2295,
											"end": 2309,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2295,
											"end": 2309,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2295,
											"end": 2309,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2271,
											"end": 2275,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2295,
											"end": 2309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2295,
											"end": 2309,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2295,
											"end": 2309,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2295,
											"end": 2302,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2295,
											"end": 2309,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2295,
											"end": 2309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2295,
											"end": 2309,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2295,
											"end": 2309,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2295,
											"end": 2309,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2295,
											"end": 2309,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2295,
											"end": 2309,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2295,
											"end": 2309,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2327,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1957,
											"end": 2181,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1957,
											"end": 2181,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2061,
											"end": 2071,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2036,
											"end": 2040,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2072,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2072,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2072,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2060,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2053,
											"end": 2072,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2072,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2072,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2072,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2072,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2072,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2072,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2053,
											"end": 2082,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2082,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2082,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2082,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2082,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2082,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2082,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2082,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2082,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2094,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2094,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2110,
											"end": 2151,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2036,
											"end": 2040,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2036,
											"end": 2040,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2082,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2082,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2110,
											"end": 2151,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 2110,
											"end": 2151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2110,
											"end": 2151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2110,
											"end": 2151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2094,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1550,
											"end": 1575,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1550,
											"end": 1575,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 1540,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1523,
											"end": 1541,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1523,
											"end": 1541,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1581,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2110,
											"end": 2151,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2110,
											"end": 2151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2110,
											"end": 2151,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2110,
											"end": 2151,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2110,
											"end": 2151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2110,
											"end": 2151,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2110,
											"end": 2151,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2110,
											"end": 2151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2110,
											"end": 2151,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2169,
											"end": 2173,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1957,
											"end": 2181,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1957,
											"end": 2181,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1957,
											"end": 2181,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1957,
											"end": 2181,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1957,
											"end": 2181,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1957,
											"end": 2181,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1957,
											"end": 2181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2335,
											"end": 2807,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2335,
											"end": 2807,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2469,
											"end": 2484,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2469,
											"end": 2484,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2431,
											"end": 2435,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2469,
											"end": 2484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2469,
											"end": 2484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2469,
											"end": 2484,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2469,
											"end": 2484,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2469,
											"end": 2484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2469,
											"end": 2484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2469,
											"end": 2484,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2469,
											"end": 2484,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2469,
											"end": 2484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2469,
											"end": 2484,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2469,
											"end": 2484,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2456,
											"end": 2484,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2456,
											"end": 2484,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2456,
											"end": 2484,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2448,
											"end": 2485,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2485,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2448,
											"end": 2485,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2485,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2485,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2448,
											"end": 2485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2517,
											"end": 2531,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2517,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 2531,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 2531,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 2524,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2517,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2517,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 2531,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 2531,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2517,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 2531,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 2531,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2532,
											"end": 2542,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 2543,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 2543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 2543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 2543,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 2543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 2543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 2543,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 2543,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2543,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2543,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2543,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2496,
											"end": 2544,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2544,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2496,
											"end": 2544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2544,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2544,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2496,
											"end": 2544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2573,
											"end": 2588,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2588,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2581,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2573,
											"end": 2588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2588,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2588,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2588,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2573,
											"end": 2588,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2588,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2588,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2588,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2573,
											"end": 2598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2589,
											"end": 2598,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2589,
											"end": 2598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2573,
											"end": 2598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2598,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2573,
											"end": 2598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2555,
											"end": 2570,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 2570,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 2563,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2555,
											"end": 2570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 2570,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 2570,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 2570,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2555,
											"end": 2570,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 2570,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 2570,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 2570,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2555,
											"end": 2570,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 2570,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 2570,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 2598,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 2598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 2598,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 2598,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2638,
											"end": 2645,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2638,
											"end": 2652,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2638,
											"end": 2652,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2638,
											"end": 2652,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2638,
											"end": 2652,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2638,
											"end": 2652,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2653,
											"end": 2663,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2638,
											"end": 2664,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2638,
											"end": 2664,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2638,
											"end": 2664,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2638,
											"end": 2664,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2638,
											"end": 2664,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2638,
											"end": 2664,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2638,
											"end": 2674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2638,
											"end": 2674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2674,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2638,
											"end": 2674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2638,
											"end": 2674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2638,
											"end": 2674,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2638,
											"end": 2674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2609,
											"end": 2623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2609,
											"end": 2623,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2609,
											"end": 2623,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2609,
											"end": 2623,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2609,
											"end": 2623,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2609,
											"end": 2623,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2609,
											"end": 2623,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2609,
											"end": 2616,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2609,
											"end": 2623,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2609,
											"end": 2623,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2609,
											"end": 2623,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2609,
											"end": 2623,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2609,
											"end": 2623,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2609,
											"end": 2623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2609,
											"end": 2623,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2609,
											"end": 2623,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2624,
											"end": 2634,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2609,
											"end": 2635,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2609,
											"end": 2635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2609,
											"end": 2635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2609,
											"end": 2635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2609,
											"end": 2635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2609,
											"end": 2635,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2609,
											"end": 2635,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2609,
											"end": 2674,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 2609,
											"end": 2674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2609,
											"end": 2674,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 2609,
											"end": 2674,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2703,
											"end": 2718,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2703,
											"end": 2718,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2703,
											"end": 2718,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2703,
											"end": 2718,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2703,
											"end": 2718,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2703,
											"end": 2718,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2703,
											"end": 2718,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2703,
											"end": 2718,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2703,
											"end": 2718,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2703,
											"end": 2718,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2703,
											"end": 2718,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2703,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2703,
											"end": 2728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2719,
											"end": 2728,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2719,
											"end": 2728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2703,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2703,
											"end": 2728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2703,
											"end": 2728,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2703,
											"end": 2728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2685,
											"end": 2700,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2685,
											"end": 2700,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2685,
											"end": 2700,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2685,
											"end": 2693,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2685,
											"end": 2700,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2685,
											"end": 2700,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2685,
											"end": 2700,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2685,
											"end": 2700,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2685,
											"end": 2700,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2685,
											"end": 2700,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2685,
											"end": 2700,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2685,
											"end": 2700,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2685,
											"end": 2700,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2685,
											"end": 2700,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2685,
											"end": 2700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2685,
											"end": 2700,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2685,
											"end": 2728,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 2685,
											"end": 2728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2685,
											"end": 2728,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 2685,
											"end": 2728,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2744,
											"end": 2777,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1550,
											"end": 1575,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1550,
											"end": 1575,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1550,
											"end": 1575,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2685,
											"end": 2700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2685,
											"end": 2700,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2744,
											"end": 2777,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2744,
											"end": 2777,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2744,
											"end": 2777,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2744,
											"end": 2777,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2744,
											"end": 2777,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 2744,
											"end": 2777,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1523,
											"end": 1541,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2777,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2744,
											"end": 2777,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2744,
											"end": 2777,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2744,
											"end": 2777,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2744,
											"end": 2777,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2744,
											"end": 2777,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2744,
											"end": 2777,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2795,
											"end": 2799,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2335,
											"end": 2807,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2335,
											"end": 2807,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2335,
											"end": 2807,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2335,
											"end": 2807,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2335,
											"end": 2807,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2335,
											"end": 2807,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1335,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1167,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1209,
											"end": 1213,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 1248,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1225,
											"end": 1237,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1225,
											"end": 1237,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1225,
											"end": 1248,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1225,
											"end": 1248,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1225,
											"end": 1248,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1225,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1225,
											"end": 1248,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1225,
											"end": 1248,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1225,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1225,
											"end": 1248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1225,
											"end": 1248,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1225,
											"end": 1248,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1225,
											"end": 1248,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1225,
											"end": 1248,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1225,
											"end": 1248,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1268,
											"end": 1278,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1267,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1259,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1279,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1259,
											"end": 1279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1279,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1259,
											"end": 1279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1279,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1290,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1290,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1283,
											"end": 1290,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1283,
											"end": 1290,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1267,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1259,
											"end": 1290,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1283,
											"end": 1290,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1283,
											"end": 1290,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1259,
											"end": 1290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1290,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1259,
											"end": 1290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1290,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1290,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1290,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1335,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1167,
											"end": 1335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 1949,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1579,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1712,
											"end": 1728,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1712,
											"end": 1728,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1674,
											"end": 1678,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1712,
											"end": 1728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1712,
											"end": 1728,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1712,
											"end": 1728,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1712,
											"end": 1728,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1712,
											"end": 1728,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1712,
											"end": 1728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1712,
											"end": 1728,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1712,
											"end": 1728,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1712,
											"end": 1728,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1712,
											"end": 1728,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1712,
											"end": 1728,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1699,
											"end": 1728,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1699,
											"end": 1728,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1699,
											"end": 1728,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1691,
											"end": 1750,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1750,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1691,
											"end": 1750,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1691,
											"end": 1750,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1750,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3346,
											"end": 3348,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1691,
											"end": 1750,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1691,
											"end": 1750,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1750,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3328,
											"end": 3349,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3385,
											"end": 3387,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3365,
											"end": 3383,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3365,
											"end": 3383,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3365,
											"end": 3383,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3358,
											"end": 3388,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C4C2D8C2DCC6CA40DCDEE840CADCDEEACED"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3404,
											"end": 3422,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3404,
											"end": 3422,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3404,
											"end": 3422,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3397,
											"end": 3445,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3462,
											"end": 3480,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3462,
											"end": 3480,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1750,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1691,
											"end": 1750,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1750,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1750,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1750,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1750,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1750,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1750,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1691,
											"end": 1750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1780,
											"end": 1796,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1780,
											"end": 1796,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1780,
											"end": 1788,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1780,
											"end": 1796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1780,
											"end": 1796,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1780,
											"end": 1796,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1780,
											"end": 1796,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1780,
											"end": 1796,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1780,
											"end": 1796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1780,
											"end": 1796,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1780,
											"end": 1796,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1780,
											"end": 1796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1780,
											"end": 1796,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1780,
											"end": 1796,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1780,
											"end": 1806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1780,
											"end": 1806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1797,
											"end": 1806,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1797,
											"end": 1806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1780,
											"end": 1806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1780,
											"end": 1806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1780,
											"end": 1806,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1780,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1761,
											"end": 1777,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1761,
											"end": 1777,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1761,
											"end": 1777,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1761,
											"end": 1769,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1761,
											"end": 1777,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1761,
											"end": 1777,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1761,
											"end": 1777,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1761,
											"end": 1777,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1761,
											"end": 1777,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1761,
											"end": 1777,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1761,
											"end": 1777,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1761,
											"end": 1777,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1761,
											"end": 1777,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1761,
											"end": 1777,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1761,
											"end": 1777,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1761,
											"end": 1806,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1761,
											"end": 1806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1761,
											"end": 1806,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1761,
											"end": 1806,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1838,
											"end": 1856,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1838,
											"end": 1856,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1838,
											"end": 1856,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1838,
											"end": 1856,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1838,
											"end": 1856,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1838,
											"end": 1856,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1838,
											"end": 1856,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1838,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1838,
											"end": 1866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1857,
											"end": 1866,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1857,
											"end": 1866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1838,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1838,
											"end": 1866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 562,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 14,
											"end": 562,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 298,
											"end": 301,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 483,
											"end": 484,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 480,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 475,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 458,
											"end": 467,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 454,
											"end": 476,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 450,
											"end": 481,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 443,
											"end": 485,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 553,
											"end": 555,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 546,
											"end": 548,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 542,
											"end": 549,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 537,
											"end": 539,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 529,
											"end": 535,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 525,
											"end": 540,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 521,
											"end": 550,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 506,
											"end": 551,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 502,
											"end": 556,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 494,
											"end": 556,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 567,
											"end": 740,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 567,
											"end": 740,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 635,
											"end": 655,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 635,
											"end": 655,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 684,
											"end": 715,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 684,
											"end": 715,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 674,
											"end": 716,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 674,
											"end": 716,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 664,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 730,
											"end": 731,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 728,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 720,
											"end": 732,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 664,
											"end": 734,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 567,
											"end": 740,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 567,
											"end": 740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 745,
											"end": 999,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 745,
											"end": 999,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 813,
											"end": 819,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 827,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 874,
											"end": 876,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 871,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 853,
											"end": 860,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 849,
											"end": 872,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 845,
											"end": 877,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 842,
											"end": 894,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 842,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 890,
											"end": 891,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 888,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 880,
											"end": 892,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 842,
											"end": 894,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 932,
											"end": 941,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 913,
											"end": 942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 913,
											"end": 942,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 913,
											"end": 942,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 903,
											"end": 942,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 974,
											"end": 992,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 961,
											"end": 993,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 961,
											"end": 993,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 745,
											"end": 999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1586,
											"end": 1914,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1586,
											"end": 1914,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1663,
											"end": 1669,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1671,
											"end": 1677,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1679,
											"end": 1685,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1734,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1720,
											"end": 1729,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1711,
											"end": 1718,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1730,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1735,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1700,
											"end": 1752,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1700,
											"end": 1752,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 1700,
											"end": 1752,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1749,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1745,
											"end": 1746,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1738,
											"end": 1750,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1700,
											"end": 1752,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 1700,
											"end": 1752,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1771,
											"end": 1800,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 1790,
											"end": 1799,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1771,
											"end": 1800,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1771,
											"end": 1800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1771,
											"end": 1800,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 1771,
											"end": 1800,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1800,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1800,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1857,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1853,
											"end": 1855,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1842,
											"end": 1851,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1838,
											"end": 1856,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1857,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1819,
											"end": 1857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1857,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1819,
											"end": 1857,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1809,
											"end": 1857,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1809,
											"end": 1857,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1904,
											"end": 1906,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1893,
											"end": 1902,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1889,
											"end": 1907,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1876,
											"end": 1908,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1866,
											"end": 1908,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1866,
											"end": 1908,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1586,
											"end": 1914,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1586,
											"end": 1914,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1586,
											"end": 1914,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1586,
											"end": 1914,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1586,
											"end": 1914,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1586,
											"end": 1914,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2108,
											"end": 2294,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2108,
											"end": 2294,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2167,
											"end": 2173,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2220,
											"end": 2222,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2208,
											"end": 2217,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2206,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2195,
											"end": 2218,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2191,
											"end": 2223,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2236,
											"end": 2237,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2234,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 2278,
											"end": 2287,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2259,
											"end": 2288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2249,
											"end": 2288,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2108,
											"end": 2294,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2108,
											"end": 2294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2299,
											"end": 2479,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2299,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2358,
											"end": 2364,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2411,
											"end": 2413,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2399,
											"end": 2408,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2390,
											"end": 2397,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2386,
											"end": 2409,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2382,
											"end": 2414,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 2379,
											"end": 2431,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2379,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 2379,
											"end": 2431,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2427,
											"end": 2428,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2424,
											"end": 2425,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2417,
											"end": 2429,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2379,
											"end": 2431,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 2379,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2450,
											"end": 2473,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 2450,
											"end": 2473,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2299,
											"end": 2479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2299,
											"end": 2479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2552,
											"end": 2558,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2560,
											"end": 2566,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2613,
											"end": 2615,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2601,
											"end": 2610,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2592,
											"end": 2599,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2588,
											"end": 2611,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2584,
											"end": 2616,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 2581,
											"end": 2633,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2581,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 2581,
											"end": 2633,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2629,
											"end": 2630,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2626,
											"end": 2627,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2631,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2581,
											"end": 2633,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 2581,
											"end": 2633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2652,
											"end": 2681,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2671,
											"end": 2680,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2652,
											"end": 2681,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2652,
											"end": 2681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2652,
											"end": 2681,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2652,
											"end": 2681,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2700,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2734,
											"end": 2736,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2723,
											"end": 2732,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2719,
											"end": 2737,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2700,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2700,
											"end": 2738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2700,
											"end": 2738,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2700,
											"end": 2738,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2690,
											"end": 2738,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2690,
											"end": 2738,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2484,
											"end": 2744,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2749,
											"end": 2876,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2749,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2810,
											"end": 2820,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B71"
										},
										{
											"begin": 2805,
											"end": 2808,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2801,
											"end": 2821,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2798,
											"end": 2799,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2791,
											"end": 2822,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2841,
											"end": 2845,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2838,
											"end": 2839,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2831,
											"end": 2846,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2869,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2862,
											"end": 2863,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2855,
											"end": 2870,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 3009,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2881,
											"end": 3009,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2948,
											"end": 2957,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2948,
											"end": 2957,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2948,
											"end": 2957,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2969,
											"end": 2980,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2969,
											"end": 2980,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2969,
											"end": 2980,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2966,
											"end": 3003,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2966,
											"end": 3003,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2966,
											"end": 3003,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2983,
											"end": 3001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2983,
											"end": 3001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2983,
											"end": 3001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3139,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 3014,
											"end": 3139,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3088,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3088,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3088,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3100,
											"end": 3110,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3100,
											"end": 3110,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3100,
											"end": 3110,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3097,
											"end": 3133,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3097,
											"end": 3133,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3097,
											"end": 3133,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3113,
											"end": 3131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3113,
											"end": 3131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 3113,
											"end": 3131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"Final Assignment/ERC-20.sol",
								"Final Assignment/final_assignment_staking 1.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getcontractaddress()": "15621373",
							"mint(uint256)": "a0712d68",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,address,uint256)": "beabacc8",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"numTokens\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getcontractaddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"numTokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"numTokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Final Assignment/ERC-20.sol\":\"ERC20Basic\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Final Assignment/ERC-20.sol\":{\"keccak256\":\"0xbd38bf37f4420ee85a9e3e33cf19872d33f0a7d7d5794ad62fa3a066f37f53f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f73eac771641f2e8f5e9c2e15acbcc6f6726cbc572ea82ed1e703e961bfdcaf\",\"dweb:/ipfs/QmTBE8L2sHeBEzg4Rxz5LeDbBEWxDgEWXqQF4JaaewbVV3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 85,
								"contract": "Final Assignment/ERC-20.sol:ERC20Basic",
								"label": "balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 91,
								"contract": "Final Assignment/ERC-20.sol:ERC20Basic",
								"label": "allowed",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 94,
								"contract": "Final Assignment/ERC-20.sol:ERC20Basic",
								"label": "totalSupply_",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,address,uint256)": "beabacc8",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Final Assignment/ERC-20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Final Assignment/ERC-20.sol\":{\"keccak256\":\"0xbd38bf37f4420ee85a9e3e33cf19872d33f0a7d7d5794ad62fa3a066f37f53f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f73eac771641f2e8f5e9c2e15acbcc6f6726cbc572ea82ed1e703e961bfdcaf\",\"dweb:/ipfs/QmTBE8L2sHeBEzg4Rxz5LeDbBEWxDgEWXqQF4JaaewbVV3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Final Assignment/final_assignment_staking 1.sol": {
				"Staking_Token": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract ERC20Basic",
									"name": "_addressERC20",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_duration",
									"type": "uint256"
								}
							],
							"name": "tokensStaked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "Stake_details",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "stake_amount",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "stake_type",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "stake_time",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "starting_stake_time",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isFixed",
									"type": "bool"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "isClaimed",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "TokenBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "claimedRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getcontractaddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "getstaking_details",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "stake_amount",
											"type": "uint256"
										},
										{
											"internalType": "string",
											"name": "stake_type",
											"type": "string"
										},
										{
											"internalType": "uint256",
											"name": "stake_time",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "starting_stake_time",
											"type": "uint256"
										},
										{
											"internalType": "bool",
											"name": "isFixed",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "owner",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "isClaimed",
											"type": "bool"
										}
									],
									"internalType": "struct Staking_Token.Stake",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "_type",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "_duration",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_isFixed",
									"type": "bool"
								}
							],
							"name": "staking",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "unclaimedRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "unstaking",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Final Assignment/final_assignment_staking 1.sol\":82:5772  contract Staking_Token {... */\n  mstore(0x40, 0x80)\n    /* \"Final Assignment/final_assignment_staking 1.sol\":499:520  block.timestamp + 300 */\n  tag_1\n    /* \"Final Assignment/final_assignment_staking 1.sol\":499:514  block.timestamp */\n  timestamp\n    /* \"Final Assignment/final_assignment_staking 1.sol\":517:520  300 */\n  0x012c\n    /* \"Final Assignment/final_assignment_staking 1.sol\":499:520  block.timestamp + 300 */\n  tag_2\n  jump\t// in\ntag_1:\n    /* \"Final Assignment/final_assignment_staking 1.sol\":462:520  uint256 expirytime_forfixedstaking = block.timestamp + 300 */\n  0x02\n  sstore\n    /* \"Final Assignment/final_assignment_staking 1.sol\":551:552  4 */\n  0x04\n    /* \"Final Assignment/final_assignment_staking 1.sol\":526:552  uint256 penality_stake = 4 */\n  0x03\n  sstore\n    /* \"Final Assignment/final_assignment_staking 1.sol\":588:589  6 */\n  0x06\n    /* \"Final Assignment/final_assignment_staking 1.sol\":559:589  uint256 fixedinterest_rate = 6 */\n  0x04\n  sstore\n    /* \"Final Assignment/final_assignment_staking 1.sol\":626:627  2 */\n  0x02\n    /* \"Final Assignment/final_assignment_staking 1.sol\":595:627  uint256 unfixedinterest_rate = 2 */\n  0x05\n  sstore\n    /* \"Final Assignment/final_assignment_staking 1.sol\":134:210  constructor(ERC20Basic _addressERC20) {... */\n  callvalue\n  dup1\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_4\n  swap2\n  tag_5\n  jump\t// in\ntag_4:\n    /* \"Final Assignment/final_assignment_staking 1.sol\":182:187  Token */\n  0x00\n    /* \"Final Assignment/final_assignment_staking 1.sol\":182:203  Token = _addressERC20 */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"Final Assignment/final_assignment_staking 1.sol\":82:5772  contract Staking_Token {... */\n  jump(tag_9)\n    /* \"#utility.yul\":14:236   */\ntag_2:\n    /* \"#utility.yul\":79:88   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":100:110   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":97:230   */\n  iszero\n  tag_11\n  jumpi\n    /* \"#utility.yul\":152:162   */\n  0x4e487b71\n    /* \"#utility.yul\":147:150   */\n  0xe0\n    /* \"#utility.yul\":143:163   */\n  shl\n    /* \"#utility.yul\":140:141   */\n  0x00\n    /* \"#utility.yul\":133:164   */\n  mstore\n    /* \"#utility.yul\":187:191   */\n  0x11\n    /* \"#utility.yul\":184:185   */\n  0x04\n    /* \"#utility.yul\":177:192   */\n  mstore\n    /* \"#utility.yul\":215:219   */\n  0x24\n    /* \"#utility.yul\":212:213   */\n  0x00\n    /* \"#utility.yul\":205:220   */\n  revert\n    /* \"#utility.yul\":97:230   */\ntag_11:\n    /* \"#utility.yul\":14:236   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":241:549   */\ntag_5:\n    /* \"#utility.yul\":329:335   */\n  0x00\n    /* \"#utility.yul\":382:384   */\n  0x20\n    /* \"#utility.yul\":370:379   */\n  dup3\n    /* \"#utility.yul\":361:368   */\n  dup5\n    /* \"#utility.yul\":357:380   */\n  sub\n    /* \"#utility.yul\":353:385   */\n  slt\n    /* \"#utility.yul\":350:402   */\n  iszero\n  tag_13\n  jumpi\n    /* \"#utility.yul\":398:399   */\n  0x00\n    /* \"#utility.yul\":395:396   */\n  dup1\n    /* \"#utility.yul\":388:400   */\n  revert\n    /* \"#utility.yul\":350:402   */\ntag_13:\n    /* \"#utility.yul\":424:440   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":469:500   */\n  dup2\n  and\n    /* \"#utility.yul\":459:501   */\n  dup2\n  eq\n    /* \"#utility.yul\":449:519   */\n  tag_14\n  jumpi\n    /* \"#utility.yul\":515:516   */\n  0x00\n    /* \"#utility.yul\":512:513   */\n  dup1\n    /* \"#utility.yul\":505:517   */\n  revert\n    /* \"#utility.yul\":449:519   */\ntag_14:\n    /* \"#utility.yul\":538:543   */\n  swap4\n    /* \"#utility.yul\":241:549   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\ntag_9:\n    /* \"Final Assignment/final_assignment_staking 1.sol\":82:5772  contract Staking_Token {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Final Assignment/final_assignment_staking 1.sol\":82:5772  contract Staking_Token {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xbd834345\n      gt\n      tag_11\n      jumpi\n      dup1\n      0xbd834345\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xcb8d751a\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xf42f2e82\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf87c34f5\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      dup1\n      0x15621373\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x16f88c94\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x949813b8\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xb6e2b395\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Final Assignment/final_assignment_staking 1.sol\":5673:5770  function getcontractaddress() public view returns (address) {... */\n    tag_3:\n      mload(0x40)\n        /* \"Final Assignment/final_assignment_staking 1.sol\":5758:5762  this */\n      address\n        /* \"#utility.yul\":160:211   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"Final Assignment/final_assignment_staking 1.sol\":5673:5770  function getcontractaddress() public view returns (address) {... */\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Final Assignment/final_assignment_staking 1.sol\":866:2490  function staking(uint256 _amount,string memory _type,uint256 _duration, bool _isFixed) public {... */\n    tag_4:\n      tag_16\n      tag_17\n      calldatasize\n      0x04\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n    tag_16:\n      stop\n        /* \"Final Assignment/final_assignment_staking 1.sol\":5116:5534  function unclaimedRewards(address _address) public view  returns (uint256) {... */\n    tag_5:\n      tag_20\n      tag_21\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n        /* \"#utility.yul\":2179:2204   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2167:2169   */\n      0x20\n        /* \"#utility.yul\":2152:2170   */\n      add\n        /* \"Final Assignment/final_assignment_staking 1.sol\":5116:5534  function unclaimedRewards(address _address) public view  returns (uint256) {... */\n      tag_14\n        /* \"#utility.yul\":2033:2210   */\n      jump\n        /* \"Final Assignment/final_assignment_staking 1.sol\":4422:4541  function TokenBalance(address _address) public view returns (uint256) {... */\n    tag_6:\n      tag_20\n      tag_27\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_27:\n      tag_28\n      jump\t// in\n        /* \"Final Assignment/final_assignment_staking 1.sol\":4548:5114  function claimedRewards(address _address) public view returns (uint256) {... */\n    tag_7:\n      tag_20\n      tag_31\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_31:\n      tag_32\n      jump\t// in\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2496:4416  function unstaking(address _address) public returns (uint256) {... */\n    tag_8:\n      tag_20\n      tag_35\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_35:\n      tag_36\n      jump\t// in\n        /* \"Final Assignment/final_assignment_staking 1.sol\":739:785  mapping(address => Stake) public Stake_details */\n    tag_9:\n      tag_38\n      tag_39\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_14\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n        /* \"Final Assignment/final_assignment_staking 1.sol\":5539:5667  function getstaking_details(address _address) public view returns (Stake memory) {... */\n    tag_10:\n      tag_43\n      tag_44\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_44:\n      tag_45\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n        /* \"Final Assignment/final_assignment_staking 1.sol\":866:2490  function staking(uint256 _amount,string memory _type,uint256 _duration, bool _isFixed) public {... */\n    tag_19:\n        /* \"Final Assignment/final_assignment_staking 1.sol\":978:983  Token */\n      sload(0x00)\n        /* \"Final Assignment/final_assignment_staking 1.sol\":978:1005  Token.balanceOf(msg.sender) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"Final Assignment/final_assignment_staking 1.sol\":994:1004  msg.sender */\n      caller\n        /* \"Final Assignment/final_assignment_staking 1.sol\":978:1005  Token.balanceOf(msg.sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:211   */\n      mstore\n        /* \"Final Assignment/final_assignment_staking 1.sol\":1009:1016  _amount */\n      dup6\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Final Assignment/final_assignment_staking 1.sol\":978:983  Token */\n      and\n      swap1\n        /* \"Final Assignment/final_assignment_staking 1.sol\":978:993  Token.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"Final Assignment/final_assignment_staking 1.sol\":978:1005  Token.balanceOf(msg.sender) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_52\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_52:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n        /* \"Final Assignment/final_assignment_staking 1.sol\":978:1016  Token.balanceOf(msg.sender) >= _amount */\n      lt\n      iszero\n        /* \"Final Assignment/final_assignment_staking 1.sol\":970:1041  require(Token.balanceOf(msg.sender) >= _amount, \"Insufficient Balance\") */\n      tag_55\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4627:4629   */\n      0x20\n        /* \"Final Assignment/final_assignment_staking 1.sol\":970:1041  require(Token.balanceOf(msg.sender) >= _amount, \"Insufficient Balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4609:4630   */\n      mstore\n        /* \"#utility.yul\":4666:4668   */\n      0x14\n        /* \"#utility.yul\":4646:4664   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4639:4669   */\n      mstore\n      shl(0x60, 0x496e73756666696369656e742042616c616e6365)\n        /* \"#utility.yul\":4685:4703   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4678:4728   */\n      mstore\n        /* \"#utility.yul\":4745:4763   */\n      0x64\n      add\n        /* \"Final Assignment/final_assignment_staking 1.sol\":970:1041  require(Token.balanceOf(msg.sender) >= _amount, \"Insufficient Balance\") */\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_55:\n        /* \"Final Assignment/final_assignment_staking 1.sol\":1128:1153  abi.encodePacked(\"fixed\") */\n      mload(0x40)\n      shl(0xda, 0x199a5e1959)\n      0x20\n      dup3\n      add\n        /* \"#utility.yul\":4976:4996   */\n      mstore\n        /* \"#utility.yul\":5012:5023   */\n      0x25\n      add\n        /* \"Final Assignment/final_assignment_staking 1.sol\":1128:1153  abi.encodePacked(\"fixed\") */\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"Final Assignment/final_assignment_staking 1.sol\":1118:1154  keccak256(abi.encodePacked(\"fixed\")) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"Final Assignment/final_assignment_staking 1.sol\":1107:1112  _type */\n      dup4\n        /* \"Final Assignment/final_assignment_staking 1.sol\":1090:1113  abi.encodePacked(_type) */\n      add(0x20, mload(0x40))\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"Final Assignment/final_assignment_staking 1.sol\":1080:1114  keccak256(abi.encodePacked(_type)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"Final Assignment/final_assignment_staking 1.sol\":1080:1154  keccak256(abi.encodePacked(_type)) == keccak256(abi.encodePacked(\"fixed\")) */\n      sub\n        /* \"Final Assignment/final_assignment_staking 1.sol\":1075:2484  if ( keccak256(abi.encodePacked(_type)) == keccak256(abi.encodePacked(\"fixed\")) ) {... */\n      tag_62\n      jumpi\n        /* \"Final Assignment/final_assignment_staking 1.sol\":1190:1191  0 */\n      0x00\n        /* \"Final Assignment/final_assignment_staking 1.sol\":1180:1187  _amount */\n      dup5\n        /* \"Final Assignment/final_assignment_staking 1.sol\":1180:1191  _amount > 0 */\n      gt\n        /* \"Final Assignment/final_assignment_staking 1.sol\":1171:1244  require( _amount > 0,\" Stake can not be 0 , Enter some amount of tokens\") */\n      tag_63\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5530:5532   */\n      0x20\n        /* \"Final Assignment/final_assignment_staking 1.sol\":1171:1244  require( _amount > 0,\" Stake can not be 0 , Enter some amount of tokens\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5512:5533   */\n      mstore\n        /* \"#utility.yul\":5569:5571   */\n      0x31\n        /* \"#utility.yul\":5549:5567   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5542:5572   */\n      mstore\n        /* \"#utility.yul\":5608:5642   */\n      0x205374616b652063616e206e6f742062652030202c20456e74657220736f6d65\n        /* \"#utility.yul\":5588:5606   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5581:5643   */\n      mstore\n      shl(0x78, 0x20616d6f756e74206f6620746f6b656e73)\n        /* \"#utility.yul\":5659:5677   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5652:5699   */\n      mstore\n        /* \"#utility.yul\":5716:5735   */\n      0x84\n      add\n        /* \"Final Assignment/final_assignment_staking 1.sol\":1171:1244  require( _amount > 0,\" Stake can not be 0 , Enter some amount of tokens\") */\n      tag_56\n        /* \"#utility.yul\":5328:5741   */\n      jump\n        /* \"Final Assignment/final_assignment_staking 1.sol\":1171:1244  require( _amount > 0,\" Stake can not be 0 , Enter some amount of tokens\") */\n    tag_63:\n        /* \"Final Assignment/final_assignment_staking 1.sol\":1272:1282  msg.sender */\n      caller\n        /* \"Final Assignment/final_assignment_staking 1.sol\":1258:1283  Stake_details[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Final Assignment/final_assignment_staking 1.sol\":1258:1271  Stake_details */\n      0x0a\n        /* \"Final Assignment/final_assignment_staking 1.sol\":1258:1283  Stake_details[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Final Assignment/final_assignment_staking 1.sol\":1258:1306  Stake_details[msg.sender].stake_amount = _amount */\n      dup5\n      dup2\n      sstore\n        /* \"Final Assignment/final_assignment_staking 1.sol\":1320:1356  Stake_details[msg.sender].stake_type */\n      0x01\n      add\n        /* \"Final Assignment/final_assignment_staking 1.sol\":1320:1364  Stake_details[msg.sender].stake_type = _type */\n      tag_66\n        /* \"Final Assignment/final_assignment_staking 1.sol\":1359:1364  _type */\n      dup5\n        /* \"Final Assignment/final_assignment_staking 1.sol\":1320:1356  Stake_details[msg.sender].stake_type */\n      dup3\n        /* \"Final Assignment/final_assignment_staking 1.sol\":1320:1364  Stake_details[msg.sender].stake_type = _type */\n      tag_67\n      jump\t// in\n    tag_66:\n      pop\n        /* \"Final Assignment/final_assignment_staking 1.sol\":1446:1455  _duration */\n      dup2\n        /* \"Final Assignment/final_assignment_staking 1.sol\":1417:1443  expirytime_forfixedstaking */\n      sload(0x02)\n        /* \"Final Assignment/final_assignment_staking 1.sol\":1417:1455  expirytime_forfixedstaking + _duration */\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n        /* \"Final Assignment/final_assignment_staking 1.sol\":1392:1402  msg.sender */\n      caller\n        /* \"Final Assignment/final_assignment_staking 1.sol\":1378:1403  Stake_details[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"Final Assignment/final_assignment_staking 1.sol\":1378:1391  Stake_details */\n      0x0a\n        /* \"Final Assignment/final_assignment_staking 1.sol\":1378:1403  Stake_details[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"Final Assignment/final_assignment_staking 1.sol\":1378:1414  Stake_details[msg.sender].stake_time */\n      0x02\n      dup2\n      add\n        /* \"Final Assignment/final_assignment_staking 1.sol\":1378:1455  Stake_details[msg.sender].stake_time = expirytime_forfixedstaking + _duration */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"Final Assignment/final_assignment_staking 1.sol\":1469:1502  Stake_details[msg.sender].isFixed */\n      0x04\n      dup1\n      dup6\n      add\n        /* \"Final Assignment/final_assignment_staking 1.sol\":1469:1513  Stake_details[msg.sender].isFixed = _isFixed */\n      dup1\n      sload\n      not(sub(shl(0xa8, 0x01), 0x01))\n        /* \"Final Assignment/final_assignment_staking 1.sol\":1527:1570  Stake_details[msg.sender].owner =msg.sender */\n      and\n        /* \"Final Assignment/final_assignment_staking 1.sol\":1469:1513  Stake_details[msg.sender].isFixed = _isFixed */\n      dup8\n      iszero\n      iszero\n      not(sub(shl(0xa8, 0x01), 0x0100))\n        /* \"Final Assignment/final_assignment_staking 1.sol\":1527:1570  Stake_details[msg.sender].owner =msg.sender */\n      and\n      or\n        /* \"Final Assignment/final_assignment_staking 1.sol\":1469:1513  Stake_details[msg.sender].isFixed = _isFixed */\n      0x0100\n        /* \"Final Assignment/final_assignment_staking 1.sol\":1527:1570  Stake_details[msg.sender].owner =msg.sender */\n      dup7\n      mul\n      or\n      not(shl(0xa8, 0xff))\n        /* \"Final Assignment/final_assignment_staking 1.sol\":1584:1626  Stake_details[msg.sender].isClaimed =false */\n      and\n      swap1\n      sstore\n        /* \"Final Assignment/final_assignment_staking 1.sol\":1688:1703  block.timestamp */\n      timestamp\n        /* \"Final Assignment/final_assignment_staking 1.sol\":1640:1685  Stake_details[msg.sender].starting_stake_time */\n      0x03\n      swap1\n      swap6\n      add\n        /* \"Final Assignment/final_assignment_staking 1.sol\":1640:1703  Stake_details[msg.sender].starting_stake_time = block.timestamp */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"Final Assignment/final_assignment_staking 1.sol\":1717:1722  Token */\n      swap1\n      sload\n        /* \"Final Assignment/final_assignment_staking 1.sol\":1717:1767  Token.transfer( msg.sender,address(this), _amount) */\n      swap1\n      mload\n      shl(0xe3, 0x17d57599)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Final Assignment/final_assignment_staking 1.sol\":1717:1722  Token */\n      swap1\n      swap2\n      and\n      swap3\n        /* \"Final Assignment/final_assignment_staking 1.sol\":1717:1731  Token.transfer */\n      0xbeabacc8\n      swap3\n        /* \"Final Assignment/final_assignment_staking 1.sol\":1717:1767  Token.transfer( msg.sender,address(this), _amount) */\n      tag_70\n      swap3\n        /* \"Final Assignment/final_assignment_staking 1.sol\":1392:1402  msg.sender */\n      swap1\n      swap2\n        /* \"Final Assignment/final_assignment_staking 1.sol\":1752:1756  this */\n      address\n      swap2\n        /* \"Final Assignment/final_assignment_staking 1.sol\":1759:1766  _amount */\n      dup11\n      swap2\n        /* \"Final Assignment/final_assignment_staking 1.sol\":1717:1767  Token.transfer( msg.sender,address(this), _amount) */\n      add\n      tag_71\n      jump\t// in\n    tag_70:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_73\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_73:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      pop\n        /* \"Final Assignment/final_assignment_staking 1.sol\":1786:1836  tokensStaked(msg.sender, _amount, block.timestamp) */\n      0x40\n      dup1\n      mload\n        /* \"Final Assignment/final_assignment_staking 1.sol\":1799:1809  msg.sender */\n      caller\n        /* \"#utility.yul\":9429:9480   */\n      dup2\n      mstore\n        /* \"#utility.yul\":9511:9513   */\n      0x20\n        /* \"#utility.yul\":9496:9514   */\n      dup2\n      add\n        /* \"#utility.yul\":9489:9523   */\n      dup7\n      swap1\n      mstore\n        /* \"Final Assignment/final_assignment_staking 1.sol\":1820:1835  block.timestamp */\n      timestamp\n        /* \"#utility.yul\":9539:9557   */\n      dup2\n      dup4\n      add\n        /* \"#utility.yul\":9532:9566   */\n      mstore\n        /* \"Final Assignment/final_assignment_staking 1.sol\":1786:1836  tokensStaked(msg.sender, _amount, block.timestamp) */\n      swap1\n      mload\n      0x96c68044657fcb3bea5ad282f026bd0361f647d377dfe1615a77e35dd87280a1\n      swap2\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":9417:9419   */\n      0x60\n        /* \"Final Assignment/final_assignment_staking 1.sol\":1786:1836  tokensStaked(msg.sender, _amount, block.timestamp) */\n      add\n      swap1\n      log1\n        /* \"Final Assignment/final_assignment_staking 1.sol\":1075:2484  if ( keccak256(abi.encodePacked(_type)) == keccak256(abi.encodePacked(\"fixed\")) ) {... */\n      jump(tag_82)\n    tag_62:\n        /* \"Final Assignment/final_assignment_staking 1.sol\":1941:1968  abi.encodePacked(\"unfixed\") */\n      mload(0x40)\n      shl(0xca, 0x1d5b999a5e1959)\n      0x20\n      dup3\n      add\n        /* \"#utility.yul\":9779:9801   */\n      mstore\n        /* \"#utility.yul\":9817:9828   */\n      0x27\n      add\n        /* \"Final Assignment/final_assignment_staking 1.sol\":1941:1968  abi.encodePacked(\"unfixed\") */\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"Final Assignment/final_assignment_staking 1.sol\":1931:1969  keccak256(abi.encodePacked(\"unfixed\")) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"Final Assignment/final_assignment_staking 1.sol\":1920:1925  _type */\n      dup4\n        /* \"Final Assignment/final_assignment_staking 1.sol\":1903:1926  abi.encodePacked(_type) */\n      add(0x20, mload(0x40))\n      tag_81\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"Final Assignment/final_assignment_staking 1.sol\":1893:1927  keccak256(abi.encodePacked(_type)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"Final Assignment/final_assignment_staking 1.sol\":1893:1969  keccak256(abi.encodePacked(_type)) == keccak256(abi.encodePacked(\"unfixed\")) */\n      sub\n        /* \"Final Assignment/final_assignment_staking 1.sol\":1889:2484  if (keccak256(abi.encodePacked(_type)) == keccak256(abi.encodePacked(\"unfixed\")) ) {... */\n      tag_82\n      jumpi\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2000:2010  msg.sender */\n      caller\n        /* \"Final Assignment/final_assignment_staking 1.sol\":1986:2011  Stake_details[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Final Assignment/final_assignment_staking 1.sol\":1986:1999  Stake_details */\n      0x0a\n        /* \"Final Assignment/final_assignment_staking 1.sol\":1986:2011  Stake_details[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Final Assignment/final_assignment_staking 1.sol\":1986:2034  Stake_details[msg.sender].stake_amount = _amount */\n      dup5\n      dup2\n      sstore\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2048:2084  Stake_details[msg.sender].stake_type */\n      0x01\n      add\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2048:2092  Stake_details[msg.sender].stake_type = _type */\n      tag_83\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2087:2092  _type */\n      dup5\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2048:2084  Stake_details[msg.sender].stake_type */\n      dup3\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2048:2092  Stake_details[msg.sender].stake_type = _type */\n      tag_67\n      jump\t// in\n    tag_83:\n      pop\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2120:2130  msg.sender */\n      caller\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2106:2131  Stake_details[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2106:2119  Stake_details */\n      0x0a\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2106:2131  Stake_details[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2106:2139  Stake_details[msg.sender].isFixed */\n      0x04\n      dup1\n      dup3\n      add\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2106:2150  Stake_details[msg.sender].isFixed = _isFixed */\n      dup1\n      sload\n      not(sub(shl(0xa8, 0x01), 0x01))\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2164:2207  Stake_details[msg.sender].owner =msg.sender */\n      and\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2106:2150  Stake_details[msg.sender].isFixed = _isFixed */\n      dup8\n      iszero\n      iszero\n      not(sub(shl(0xa8, 0x01), 0x0100))\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2164:2207  Stake_details[msg.sender].owner =msg.sender */\n      and\n      or\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2106:2150  Stake_details[msg.sender].isFixed = _isFixed */\n      0x0100\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2164:2207  Stake_details[msg.sender].owner =msg.sender */\n      dup8\n      mul\n      or\n      not(shl(0xa8, 0xff))\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2221:2263  Stake_details[msg.sender].isClaimed =false */\n      and\n      swap1\n      sstore\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2325:2340  block.timestamp */\n      timestamp\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2277:2322  Stake_details[msg.sender].starting_stake_time */\n      0x03\n      swap1\n      swap3\n      add\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2277:2340  Stake_details[msg.sender].starting_stake_time = block.timestamp */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2354:2359  Token */\n      swap2\n      sload\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2354:2404  Token.transfer( msg.sender,address(this), _amount) */\n      swap1\n      mload\n      shl(0xe3, 0x17d57599)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2354:2359  Token */\n      swap1\n      swap2\n      and\n      swap3\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2354:2368  Token.transfer */\n      0xbeabacc8\n      swap3\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2354:2404  Token.transfer( msg.sender,address(this), _amount) */\n      tag_84\n      swap3\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2389:2393  this */\n      address\n      swap2\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2396:2403  _amount */\n      dup11\n      swap2\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2354:2404  Token.transfer( msg.sender,address(this), _amount) */\n      add\n      tag_71\n      jump\t// in\n    tag_84:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_86\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_86:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_87\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_87:\n      pop\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2423:2473  tokensStaked(msg.sender, _amount, block.timestamp) */\n      0x40\n      dup1\n      mload\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2436:2446  msg.sender */\n      caller\n        /* \"#utility.yul\":9429:9480   */\n      dup2\n      mstore\n        /* \"#utility.yul\":9511:9513   */\n      0x20\n        /* \"#utility.yul\":9496:9514   */\n      dup2\n      add\n        /* \"#utility.yul\":9489:9523   */\n      dup7\n      swap1\n      mstore\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2457:2472  block.timestamp */\n      timestamp\n        /* \"#utility.yul\":9539:9557   */\n      dup2\n      dup4\n      add\n        /* \"#utility.yul\":9532:9566   */\n      mstore\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2423:2473  tokensStaked(msg.sender, _amount, block.timestamp) */\n      swap1\n      mload\n      0x96c68044657fcb3bea5ad282f026bd0361f647d377dfe1615a77e35dd87280a1\n      swap2\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":9417:9419   */\n      0x60\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2423:2473  tokensStaked(msg.sender, _amount, block.timestamp) */\n      add\n      swap1\n      log1\n        /* \"Final Assignment/final_assignment_staking 1.sol\":1889:2484  if (keccak256(abi.encodePacked(_type)) == keccak256(abi.encodePacked(\"unfixed\")) ) {... */\n    tag_82:\n        /* \"Final Assignment/final_assignment_staking 1.sol\":866:2490  function staking(uint256 _amount,string memory _type,uint256 _duration, bool _isFixed) public {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Final Assignment/final_assignment_staking 1.sol\":5116:5534  function unclaimedRewards(address _address) public view  returns (uint256) {... */\n    tag_23:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Final Assignment/final_assignment_staking 1.sol\":5201:5224  Stake_details[_address] */\n      dup2\n      and\n        /* \"Final Assignment/final_assignment_staking 1.sol\":5182:5189  uint256 */\n      0x00\n        /* \"Final Assignment/final_assignment_staking 1.sol\":5201:5224  Stake_details[_address] */\n      swap1\n      dup2\n      mstore\n        /* \"Final Assignment/final_assignment_staking 1.sol\":5201:5214  Stake_details */\n      0x0a\n        /* \"Final Assignment/final_assignment_staking 1.sol\":5201:5224  Stake_details[_address] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"Final Assignment/final_assignment_staking 1.sol\":5201:5232  Stake_details[_address].isFixed */\n      0x04\n      add\n      sload\n      0xff\n      and\n        /* \"Final Assignment/final_assignment_staking 1.sol\":5201:5240  Stake_details[_address].isFixed == true */\n      iszero\n      iszero\n        /* \"Final Assignment/final_assignment_staking 1.sol\":5201:5232  Stake_details[_address].isFixed */\n      0x01\n        /* \"Final Assignment/final_assignment_staking 1.sol\":5201:5240  Stake_details[_address].isFixed == true */\n      sub\n        /* \"Final Assignment/final_assignment_staking 1.sol\":5197:5532  if (Stake_details[_address].isFixed == true) {... */\n      tag_90\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Final Assignment/final_assignment_staking 1.sol\":5256:5279  Stake_details[_address] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Final Assignment/final_assignment_staking 1.sol\":5256:5269  Stake_details */\n      0x0a\n        /* \"Final Assignment/final_assignment_staking 1.sol\":5256:5279  Stake_details[_address] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Final Assignment/final_assignment_staking 1.sol\":5256:5289  Stake_details[_address].isClaimed */\n      0x04\n      add\n      sload\n      shl(0xa8, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"Final Assignment/final_assignment_staking 1.sol\":5256:5297  Stake_details[_address].isClaimed == true */\n      iszero\n      iszero\n        /* \"Final Assignment/final_assignment_staking 1.sol\":5293:5297  true */\n      0x01\n        /* \"Final Assignment/final_assignment_staking 1.sol\":5256:5297  Stake_details[_address].isClaimed == true */\n      sub\n        /* \"Final Assignment/final_assignment_staking 1.sol\":5252:5378  if (Stake_details[_address].isClaimed == true) {... */\n      tag_91\n      jumpi\n      pop\n        /* \"Final Assignment/final_assignment_staking 1.sol\":5320:5321  0 */\n      0x00\n      swap2\n        /* \"Final Assignment/final_assignment_staking 1.sol\":5116:5534  function unclaimedRewards(address _address) public view  returns (uint256) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"Final Assignment/final_assignment_staking 1.sol\":5252:5378  if (Stake_details[_address].isClaimed == true) {... */\n    tag_91:\n      pop\n      pop\n        /* \"Final Assignment/final_assignment_staking 1.sol\":5359:5367  Interest */\n      sload(0x07)\n      swap1\n        /* \"Final Assignment/final_assignment_staking 1.sol\":5116:5534  function unclaimedRewards(address _address) public view  returns (uint256) {... */\n      jump\t// out\n        /* \"Final Assignment/final_assignment_staking 1.sol\":5197:5532  if (Stake_details[_address].isFixed == true) {... */\n    tag_90:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Final Assignment/final_assignment_staking 1.sol\":5404:5427  Stake_details[_address] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Final Assignment/final_assignment_staking 1.sol\":5404:5417  Stake_details */\n      0x0a\n        /* \"Final Assignment/final_assignment_staking 1.sol\":5404:5427  Stake_details[_address] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Final Assignment/final_assignment_staking 1.sol\":5404:5437  Stake_details[_address].isClaimed */\n      0x04\n      add\n      sload\n      shl(0xa8, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"Final Assignment/final_assignment_staking 1.sol\":5404:5445  Stake_details[_address].isClaimed == true */\n      iszero\n      iszero\n        /* \"Final Assignment/final_assignment_staking 1.sol\":5441:5445  true */\n      0x01\n        /* \"Final Assignment/final_assignment_staking 1.sol\":5404:5445  Stake_details[_address].isClaimed == true */\n      sub\n        /* \"Final Assignment/final_assignment_staking 1.sol\":5400:5526  if (Stake_details[_address].isClaimed == true) {... */\n      tag_91\n      jumpi\n      pop\n        /* \"Final Assignment/final_assignment_staking 1.sol\":5468:5469  0 */\n      0x00\n      swap2\n        /* \"Final Assignment/final_assignment_staking 1.sol\":5116:5534  function unclaimedRewards(address _address) public view  returns (uint256) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"Final Assignment/final_assignment_staking 1.sol\":5400:5526  if (Stake_details[_address].isClaimed == true) {... */\n    tag_95:\n        /* \"Final Assignment/final_assignment_staking 1.sol\":5116:5534  function unclaimedRewards(address _address) public view  returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Final Assignment/final_assignment_staking 1.sol\":4422:4541  function TokenBalance(address _address) public view returns (uint256) {... */\n    tag_28:\n        /* \"Final Assignment/final_assignment_staking 1.sol\":4483:4490  uint256 */\n      0x00\n        /* \"Final Assignment/final_assignment_staking 1.sol\":4509:4514  Token */\n      dup1\n      sload\n        /* \"Final Assignment/final_assignment_staking 1.sol\":4509:4534  Token.balanceOf(_address) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":178:210   */\n      dup5\n      dup2\n      and\n        /* \"Final Assignment/final_assignment_staking 1.sol\":4509:4534  Token.balanceOf(_address) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":160:211   */\n      mstore\n        /* \"Final Assignment/final_assignment_staking 1.sol\":4509:4514  Token */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"Final Assignment/final_assignment_staking 1.sol\":4509:4524  Token.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"Final Assignment/final_assignment_staking 1.sol\":4509:4534  Token.balanceOf(_address) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_99\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_99:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_100\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_100:\n        /* \"Final Assignment/final_assignment_staking 1.sol\":4502:4534  return Token.balanceOf(_address) */\n      swap3\n        /* \"Final Assignment/final_assignment_staking 1.sol\":4422:4541  function TokenBalance(address _address) public view returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Final Assignment/final_assignment_staking 1.sol\":4548:5114  function claimedRewards(address _address) public view returns (uint256) {... */\n    tag_32:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Final Assignment/final_assignment_staking 1.sol\":4630:4653  Stake_details[_address] */\n      dup2\n      and\n        /* \"Final Assignment/final_assignment_staking 1.sol\":4611:4618  uint256 */\n      0x00\n        /* \"Final Assignment/final_assignment_staking 1.sol\":4630:4653  Stake_details[_address] */\n      swap1\n      dup2\n      mstore\n        /* \"Final Assignment/final_assignment_staking 1.sol\":4630:4643  Stake_details */\n      0x0a\n        /* \"Final Assignment/final_assignment_staking 1.sol\":4630:4653  Stake_details[_address] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"Final Assignment/final_assignment_staking 1.sol\":4630:4661  Stake_details[_address].isFixed */\n      0x04\n      add\n      sload\n      0xff\n      and\n        /* \"Final Assignment/final_assignment_staking 1.sol\":4630:4669  Stake_details[_address].isFixed == true */\n      iszero\n      iszero\n        /* \"Final Assignment/final_assignment_staking 1.sol\":4630:4661  Stake_details[_address].isFixed */\n      0x01\n        /* \"Final Assignment/final_assignment_staking 1.sol\":4630:4669  Stake_details[_address].isFixed == true */\n      sub\n        /* \"Final Assignment/final_assignment_staking 1.sol\":4626:5112  if (Stake_details[_address].isFixed == true) {... */\n      tag_102\n      jumpi\n        /* \"Final Assignment/final_assignment_staking 1.sol\":4717:4727  msg.sender */\n      caller\n        /* \"Final Assignment/final_assignment_staking 1.sol\":4703:4728  Stake_details[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Final Assignment/final_assignment_staking 1.sol\":4703:4716  Stake_details */\n      0x0a\n        /* \"Final Assignment/final_assignment_staking 1.sol\":4703:4728  Stake_details[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Final Assignment/final_assignment_staking 1.sol\":4703:4739  Stake_details[msg.sender].stake_time */\n      0x02\n      add\n      sload\n        /* \"Final Assignment/final_assignment_staking 1.sol\":4685:4700  block.timestamp */\n      timestamp\n        /* \"Final Assignment/final_assignment_staking 1.sol\":4685:4739  block.timestamp > Stake_details[msg.sender].stake_time */\n      gt\n        /* \"Final Assignment/final_assignment_staking 1.sol\":4681:4894  if (block.timestamp > Stake_details[msg.sender].stake_time) {... */\n      iszero\n      tag_103\n      jumpi\n        /* \"Final Assignment/final_assignment_staking 1.sol\":4801:4809  Interest */\n      sload(0x07)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Final Assignment/final_assignment_staking 1.sol\":4762:4785  Stake_details[_address] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Final Assignment/final_assignment_staking 1.sol\":4762:4775  Stake_details */\n      0x0a\n        /* \"Final Assignment/final_assignment_staking 1.sol\":4762:4785  Stake_details[_address] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Final Assignment/final_assignment_staking 1.sol\":4762:4798  Stake_details[_address].stake_amount */\n      sload\n        /* \"Final Assignment/final_assignment_staking 1.sol\":4762:4809  Stake_details[_address].stake_amount + Interest */\n      tag_100\n      swap2\n        /* \"Final Assignment/final_assignment_staking 1.sol\":4801:4809  Interest */\n      swap1\n        /* \"Final Assignment/final_assignment_staking 1.sol\":4762:4809  Stake_details[_address].stake_amount + Interest */\n      tag_69\n      jump\t// in\n        /* \"Final Assignment/final_assignment_staking 1.sol\":4681:4894  if (block.timestamp > Stake_details[msg.sender].stake_time) {... */\n    tag_103:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Final Assignment/final_assignment_staking 1.sol\":4847:4870  Stake_details[_address] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Final Assignment/final_assignment_staking 1.sol\":4847:4860  Stake_details */\n      0x0a\n        /* \"Final Assignment/final_assignment_staking 1.sol\":4847:4870  Stake_details[_address] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Final Assignment/final_assignment_staking 1.sol\":4847:4883  Stake_details[_address].stake_amount */\n      sload\n      swap1\n        /* \"Final Assignment/final_assignment_staking 1.sol\":4548:5114  function claimedRewards(address _address) public view returns (uint256) {... */\n      jump\t// out\n        /* \"Final Assignment/final_assignment_staking 1.sol\":4626:5112  if (Stake_details[_address].isFixed == true) {... */\n    tag_102:\n        /* \"Final Assignment/final_assignment_staking 1.sol\":4945:4955  msg.sender */\n      caller\n        /* \"Final Assignment/final_assignment_staking 1.sol\":4931:4956  Stake_details[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Final Assignment/final_assignment_staking 1.sol\":4931:4944  Stake_details */\n      0x0a\n        /* \"Final Assignment/final_assignment_staking 1.sol\":4931:4956  Stake_details[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Final Assignment/final_assignment_staking 1.sol\":4931:4967  Stake_details[msg.sender].stake_time */\n      0x02\n      add\n      sload\n        /* \"Final Assignment/final_assignment_staking 1.sol\":4913:4928  block.timestamp */\n      timestamp\n        /* \"Final Assignment/final_assignment_staking 1.sol\":4913:4967  block.timestamp < Stake_details[msg.sender].stake_time */\n      lt\n        /* \"Final Assignment/final_assignment_staking 1.sol\":4910:5112  if(block.timestamp < Stake_details[msg.sender].stake_time){... */\n      iszero\n      tag_107\n      jumpi\n        /* \"Final Assignment/final_assignment_staking 1.sol\":5000:5018  totalIntrestAmount */\n      sload(0x08)\n        /* \"Final Assignment/final_assignment_staking 1.sol\":4986:4997  finalAmount */\n      sload(0x09)\n        /* \"Final Assignment/final_assignment_staking 1.sol\":4986:5018  finalAmount - totalIntrestAmount */\n      tag_100\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n        /* \"Final Assignment/final_assignment_staking 1.sol\":4910:5112  if(block.timestamp < Stake_details[msg.sender].stake_time){... */\n    tag_107:\n        /* \"Final Assignment/final_assignment_staking 1.sol\":5097:5105  Interest */\n      sload(0x07)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Final Assignment/final_assignment_staking 1.sol\":5058:5081  Stake_details[_address] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Final Assignment/final_assignment_staking 1.sol\":5058:5071  Stake_details */\n      0x0a\n        /* \"Final Assignment/final_assignment_staking 1.sol\":5058:5081  Stake_details[_address] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Final Assignment/final_assignment_staking 1.sol\":5058:5094  Stake_details[_address].stake_amount */\n      sload\n        /* \"Final Assignment/final_assignment_staking 1.sol\":5058:5105  Stake_details[_address].stake_amount + Interest */\n      tag_100\n      swap2\n        /* \"Final Assignment/final_assignment_staking 1.sol\":5097:5105  Interest */\n      swap1\n        /* \"Final Assignment/final_assignment_staking 1.sol\":5058:5105  Stake_details[_address].stake_amount + Interest */\n      tag_69\n      jump\t// in\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2496:4416  function unstaking(address _address) public returns (uint256) {... */\n    tag_36:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2590:2613  Stake_details[_address] */\n      dup1\n      dup3\n      and\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2549:2556  uint256 */\n      0x00\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2590:2613  Stake_details[_address] */\n      swap1\n      dup2\n      mstore\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2590:2603  Stake_details */\n      0x0a\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2590:2613  Stake_details[_address] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2590:2619  Stake_details[_address].owner */\n      0x04\n      add\n      sload\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2549:2556  uint256 */\n      swap1\n      swap2\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2576:2586  msg.sender */\n      caller\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2590:2619  Stake_details[_address].owner */\n      0x0100\n      swap1\n      swap3\n      div\n      and\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2576:2619  msg.sender == Stake_details[_address].owner */\n      eq\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2568:2651  require(msg.sender == Stake_details[_address].owner,\"Stake has not been initiated\") */\n      tag_113\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10174:10176   */\n      0x20\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2568:2651  require(msg.sender == Stake_details[_address].owner,\"Stake has not been initiated\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10156:10177   */\n      mstore\n        /* \"#utility.yul\":10213:10215   */\n      0x1c\n        /* \"#utility.yul\":10193:10211   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10186:10216   */\n      mstore\n        /* \"#utility.yul\":10252:10282   */\n      0x5374616b6520686173206e6f74206265656e20696e6974696174656400000000\n        /* \"#utility.yul\":10232:10250   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10225:10283   */\n      mstore\n        /* \"#utility.yul\":10300:10318   */\n      0x64\n      add\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2568:2651  require(msg.sender == Stake_details[_address].owner,\"Stake has not been initiated\") */\n      tag_56\n        /* \"#utility.yul\":9972:10324   */\n      jump\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2568:2651  require(msg.sender == Stake_details[_address].owner,\"Stake has not been initiated\") */\n    tag_113:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2665:2688  Stake_details[_address] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2665:2678  Stake_details */\n      0x0a\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2665:2688  Stake_details[_address] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2665:2696  Stake_details[_address].isFixed */\n      0x04\n      add\n      sload\n      0xff\n      and\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2665:2704  Stake_details[_address].isFixed == true */\n      iszero\n      iszero\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2665:2696  Stake_details[_address].isFixed */\n      0x01\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2665:2704  Stake_details[_address].isFixed == true */\n      sub\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2661:4410  if (Stake_details[_address].isFixed == true) {... */\n      tag_116\n      jumpi\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2756:2766  msg.sender */\n      caller\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2742:2767  Stake_details[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2742:2755  Stake_details */\n      0x0a\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2742:2767  Stake_details[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2742:2778  Stake_details[msg.sender].stake_time */\n      0x02\n      add\n      sload\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2724:2739  block.timestamp */\n      timestamp\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2724:2778  block.timestamp > Stake_details[msg.sender].stake_time */\n      gt\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2720:3895  if (block.timestamp > Stake_details[msg.sender].stake_time ) {... */\n      iszero\n      tag_117\n      jumpi\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2848:2866  fixedinterest_rate */\n      sload(0x04)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2810:2833  Stake_details[_address] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2810:2823  Stake_details */\n      0x0a\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2810:2833  Stake_details[_address] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2810:2846  Stake_details[_address].stake_amount */\n      sload\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2870:2873  100 */\n      0x64\n      swap2\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2810:2866  Stake_details[_address].stake_amount *fixedinterest_rate */\n      tag_118\n      swap2\n      tag_119\n      jump\t// in\n    tag_118:\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2809:2873  (Stake_details[_address].stake_amount *fixedinterest_rate ) /100 */\n      tag_120\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2799:2807  Interest */\n      0x07\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2799:2873  Interest =(Stake_details[_address].stake_amount *fixedinterest_rate ) /100 */\n      dup2\n      swap1\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2911:2934  Stake_details[_address] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2911:2924  Stake_details */\n      0x0a\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2911:2934  Stake_details[_address] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2911:2947  Stake_details[_address].stake_amount */\n      sload\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2911:2958  Stake_details[_address].stake_amount + Interest */\n      tag_122\n      swap2\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2799:2873  Interest =(Stake_details[_address].stake_amount *fixedinterest_rate ) /100 */\n      swap1\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2911:2958  Stake_details[_address].stake_amount + Interest */\n      tag_69\n      jump\t// in\n    tag_122:\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2891:2909  totalIntrestAmount */\n      0x08\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2891:2958  totalIntrestAmount =Stake_details[_address].stake_amount + Interest */\n      dup2\n      swap1\n      sstore\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2976:2981  Token */\n      sload(0x00)\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2976:3034  Token.transfer(address(this),_address, totalIntrestAmount) */\n      mload(0x40)\n      shl(0xe3, 0x17d57599)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2976:2981  Token */\n      swap1\n      swap2\n      and\n      swap2\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2976:2990  Token.transfer */\n      0xbeabacc8\n      swap2\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2976:3034  Token.transfer(address(this),_address, totalIntrestAmount) */\n      tag_123\n      swap2\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2999:3003  this */\n      address\n      swap2\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3005:3013  _address */\n      dup8\n      swap2\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2891:2958  totalIntrestAmount =Stake_details[_address].stake_amount + Interest */\n      swap1\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2976:3034  Token.transfer(address(this),_address, totalIntrestAmount) */\n      0x04\n      add\n      tag_71\n      jump\t// in\n    tag_123:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_125\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_125:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_126\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_126:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3059:3082  Stake_details[_address] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3059:3072  Stake_details */\n      0x0a\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3059:3082  Stake_details[_address] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3052:3082  delete Stake_details[_address] */\n      dup2\n      dup2\n      sstore\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3059:3082  Stake_details[_address] */\n      swap1\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3052:3082  delete Stake_details[_address] */\n      tag_127\n      0x01\n      dup4\n      add\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3059:3082  Stake_details[_address] */\n      dup3\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3052:3082  delete Stake_details[_address] */\n      tag_128\n      jump\t// in\n    tag_127:\n      pop\n      0x00\n      0x02\n      dup3\n      add\n      dup2\n      swap1\n      sstore\n      0x03\n      dup3\n      add\n      dup2\n      swap1\n      sstore\n      0x04\n      swap2\n      dup3\n      add\n      dup1\n      sload\n      not(sub(shl(0xb0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3114:3124  msg.sender */\n      caller\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3100:3125  Stake_details[msg.sender] */\n      dup2\n      mstore\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3100:3113  Stake_details */\n      0x0a\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3100:3125  Stake_details[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3100:3135  Stake_details[msg.sender].isClaimed */\n      add\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3100:3141  Stake_details[msg.sender].isClaimed =true */\n      dup1\n      sload\n      not(shl(0xa8, 0xff))\n      and\n      shl(0xa8, 0x01)\n      or\n      swap1\n      sstore\n      pop\n      pop\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3166:3184  totalIntrestAmount */\n      sload(0x08)\n      swap1\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2496:4416  function unstaking(address _address) public returns (uint256) {... */\n      jump\t// out\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2720:3895  if (block.timestamp > Stake_details[msg.sender].stake_time ) {... */\n    tag_117:\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3325:3335  msg.sender */\n      caller\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3311:3336  Stake_details[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3311:3324  Stake_details */\n      0x0a\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3311:3336  Stake_details[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3311:3347  Stake_details[msg.sender].stake_time */\n      0x02\n      add\n      sload\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3293:3308  block.timestamp */\n      timestamp\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3293:3347  block.timestamp < Stake_details[msg.sender].stake_time */\n      lt\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3289:3895  if (block.timestamp < Stake_details[msg.sender].stake_time) {... */\n      iszero\n      tag_95\n      jumpi\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3395:3421  expirytime_forfixedstaking */\n      sload(0x02)\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3376:3391  block.timestamp */\n      timestamp\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3376:3421  block.timestamp <  expirytime_forfixedstaking */\n      lt\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3367:3426  require( block.timestamp <  expirytime_forfixedstaking,\"\" ) */\n      tag_131\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10926:10928   */\n      0x20\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3367:3426  require( block.timestamp <  expirytime_forfixedstaking,\"\" ) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10908:10929   */\n      mstore\n      0x00\n        /* \"#utility.yul\":10945:10963   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10938:10967   */\n      mstore\n        /* \"#utility.yul\":10984:11002   */\n      0x44\n      add\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3367:3426  require( block.timestamp <  expirytime_forfixedstaking,\"\" ) */\n      tag_56\n        /* \"#utility.yul\":10724:11008   */\n      jump\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3367:3426  require( block.timestamp <  expirytime_forfixedstaking,\"\" ) */\n    tag_131:\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3495:3513  fixedinterest_rate */\n      sload(0x04)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3456:3479  Stake_details[_address] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3456:3469  Stake_details */\n      0x0a\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3456:3479  Stake_details[_address] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3456:3492  Stake_details[_address].stake_amount */\n      sload\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3517:3520  100 */\n      0x64\n      swap2\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3456:3513  Stake_details[_address].stake_amount * fixedinterest_rate */\n      tag_134\n      swap2\n      tag_119\n      jump\t// in\n    tag_134:\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3455:3520  (Stake_details[_address].stake_amount * fixedinterest_rate )/ 100 */\n      tag_135\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_135:\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3444:3452  Interest */\n      0x07\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3444:3520  Interest = (Stake_details[_address].stake_amount * fixedinterest_rate )/ 100 */\n      dup2\n      swap1\n      sstore\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3578:3581  100 */\n      0x64\n      swap1\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3561:3574  Interest * 96 */\n      tag_136\n      swap1\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3572:3574  96 */\n      0x60\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3561:3574  Interest * 96 */\n      tag_119\n      jump\t// in\n    tag_136:\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3560:3581  (Interest * 96) / 100 */\n      tag_137\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_137:\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3539:3557  totalIntrestAmount */\n      0x08\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3539:3581  totalIntrestAmount = (Interest * 96) / 100 */\n      dup2\n      swap1\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3632:3655  Stake_details[_address] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3632:3645  Stake_details */\n      0x0a\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3632:3655  Stake_details[_address] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3632:3668  Stake_details[_address].stake_amount */\n      sload\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3612:3668  totalIntrestAmount +Stake_details[_address].stake_amount */\n      tag_138\n      swap2\n      tag_69\n      jump\t// in\n    tag_138:\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3599:3610  finalAmount */\n      0x09\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3599:3668  finalAmount =totalIntrestAmount +Stake_details[_address].stake_amount */\n      dup2\n      swap1\n      sstore\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3686:3691  Token */\n      sload(0x00)\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3686:3737  Token.transfer(address(this),_address, finalAmount) */\n      mload(0x40)\n      shl(0xe3, 0x17d57599)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3686:3691  Token */\n      swap1\n      swap2\n      and\n      swap2\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3686:3700  Token.transfer */\n      0xbeabacc8\n      swap2\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3686:3737  Token.transfer(address(this),_address, finalAmount) */\n      tag_139\n      swap2\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3709:3713  this */\n      address\n      swap2\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3715:3723  _address */\n      dup8\n      swap2\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3599:3668  finalAmount =totalIntrestAmount +Stake_details[_address].stake_amount */\n      swap1\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3686:3737  Token.transfer(address(this),_address, finalAmount) */\n      0x04\n      add\n      tag_71\n      jump\t// in\n    tag_139:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_141\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_141:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_142\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_142:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3762:3785  Stake_details[_address] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3762:3775  Stake_details */\n      0x0a\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3762:3785  Stake_details[_address] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3755:3785  delete Stake_details[_address] */\n      dup2\n      dup2\n      sstore\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3762:3785  Stake_details[_address] */\n      swap1\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3755:3785  delete Stake_details[_address] */\n      tag_143\n      0x01\n      dup4\n      add\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3762:3785  Stake_details[_address] */\n      dup3\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3755:3785  delete Stake_details[_address] */\n      tag_128\n      jump\t// in\n    tag_143:\n      pop\n      0x00\n      0x02\n      dup3\n      add\n      dup2\n      swap1\n      sstore\n      0x03\n      dup3\n      add\n      dup2\n      swap1\n      sstore\n      0x04\n      swap2\n      dup3\n      add\n      dup1\n      sload\n      not(sub(shl(0xb0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3817:3827  msg.sender */\n      caller\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3803:3828  Stake_details[msg.sender] */\n      dup2\n      mstore\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3803:3816  Stake_details */\n      0x0a\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3803:3828  Stake_details[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3803:3838  Stake_details[msg.sender].isClaimed */\n      add\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3803:3844  Stake_details[msg.sender].isClaimed =true */\n      dup1\n      sload\n      not(shl(0xa8, 0xff))\n      and\n      shl(0xa8, 0x01)\n      or\n      swap1\n      sstore\n      pop\n      pop\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3869:3880  finalAmount */\n      sload(0x09)\n      swap1\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2496:4416  function unstaking(address _address) public returns (uint256) {... */\n      jump\t// out\n        /* \"Final Assignment/final_assignment_staking 1.sol\":2661:4410  if (Stake_details[_address].isFixed == true) {... */\n    tag_116:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3956:3979  Stake_details[_address] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3956:3969  Stake_details */\n      0x0a\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3956:3979  Stake_details[_address] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3956:3987  Stake_details[_address].isFixed */\n      0x04\n      add\n      sload\n      0xff\n      and\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3956:3996  Stake_details[_address].isFixed == false */\n      iszero\n      iszero\n      swap1\n      sub\n        /* \"Final Assignment/final_assignment_staking 1.sol\":3952:4410  if (Stake_details[_address].isFixed == false) {... */\n      tag_95\n      jumpi\n        /* \"Final Assignment/final_assignment_staking 1.sol\":4061:4081  unfixedinterest_rate */\n      sload(0x05)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Final Assignment/final_assignment_staking 1.sol\":4023:4046  Stake_details[_address] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Final Assignment/final_assignment_staking 1.sol\":4023:4036  Stake_details */\n      0x0a\n        /* \"Final Assignment/final_assignment_staking 1.sol\":4023:4046  Stake_details[_address] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Final Assignment/final_assignment_staking 1.sol\":4023:4059  Stake_details[_address].stake_amount */\n      sload\n        /* \"Final Assignment/final_assignment_staking 1.sol\":4084:4087  100 */\n      0x64\n      swap2\n        /* \"Final Assignment/final_assignment_staking 1.sol\":4023:4081  Stake_details[_address].stake_amount *unfixedinterest_rate */\n      tag_118\n      swap2\n      tag_119\n      jump\t// in\n        /* \"Final Assignment/final_assignment_staking 1.sol\":739:785  mapping(address => Stake) public Stake_details */\n    tag_40:\n      mstore(0x20, 0x0a)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      dup1\n      sload\n      swap2\n      swap3\n      swap2\n      tag_154\n      swap1\n      tag_155\n      jump\t// in\n    tag_154:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_156\n      swap1\n      tag_155\n      jump\t// in\n    tag_156:\n      dup1\n      iszero\n      tag_157\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_158\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_157)\n    tag_158:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_159:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_159\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_157:\n      pop\n      pop\n      pop\n      0x02\n      dup5\n      add\n      sload\n      0x03\n      dup6\n      add\n      sload\n      0x04\n      swap1\n      swap6\n      add\n      sload\n      swap4\n      swap5\n      swap1\n      swap4\n      swap1\n      swap3\n      pop\n      0xff\n      dup1\n      dup3\n      and\n      swap3\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      0x0100\n      dup4\n      div\n      and\n      swap2\n      shl(0xa8, 0x01)\n      swap1\n      div\n      and\n      dup8\n      jump\t// out\n        /* \"Final Assignment/final_assignment_staking 1.sol\":5539:5667  function getstaking_details(address _address) public view returns (Stake memory) {... */\n    tag_45:\n        /* \"Final Assignment/final_assignment_staking 1.sol\":5606:5618  Stake memory */\n      tag_160\n      mload(0x40)\n      dup1\n      0xe0\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x60\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      iszero(iszero(0x00))\n      dup2\n      mstore\n      0x20\n      add\n      and(sub(shl(0xa0, 0x01), 0x01), 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      iszero(iszero(0x00))\n      dup2\n      mstore\n      pop\n      swap1\n      jump\n    tag_160:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Final Assignment/final_assignment_staking 1.sol\":5637:5660  Stake_details[_address] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Final Assignment/final_assignment_staking 1.sol\":5637:5650  Stake_details */\n      0x0a\n        /* \"Final Assignment/final_assignment_staking 1.sol\":5637:5660  Stake_details[_address] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"Final Assignment/final_assignment_staking 1.sol\":5630:5660  return Stake_details[_address] */\n      dup3\n      mload\n      0xe0\n      dup2\n      add\n      swap1\n      swap4\n      mstore\n      dup1\n      sload\n      dup4\n      mstore\n      0x01\n      dup2\n      add\n      dup1\n      sload\n        /* \"Final Assignment/final_assignment_staking 1.sol\":5637:5660  Stake_details[_address] */\n      swap2\n      swap3\n        /* \"Final Assignment/final_assignment_staking 1.sol\":5630:5660  return Stake_details[_address] */\n      dup5\n      add\n      swap2\n      tag_163\n      swap1\n      tag_155\n      jump\t// in\n    tag_163:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_164\n      swap1\n      tag_155\n      jump\t// in\n    tag_164:\n      dup1\n      iszero\n      tag_165\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_166\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_165)\n    tag_166:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_167:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_167\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_165:\n      pop\n      pop\n      pop\n      swap2\n      dup4\n      mstore\n      pop\n      pop\n      0x02\n      dup3\n      add\n      sload\n      0x20\n      dup3\n      add\n      mstore\n      0x03\n      dup3\n      add\n      sload\n      0x40\n      dup3\n      add\n      mstore\n      0x04\n      swap1\n      swap2\n      add\n      sload\n      0xff\n      dup1\n      dup3\n      and\n      iszero\n      iszero\n      0x60\n      dup5\n      add\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      0x0100\n      dup4\n      div\n      and\n      0x80\n      dup5\n      add\n      mstore\n      shl(0xa8, 0x01)\n      swap1\n      swap2\n      div\n      and\n      iszero\n      iszero\n      0xa0\n      swap1\n      swap2\n      add\n      mstore\n      swap3\n        /* \"Final Assignment/final_assignment_staking 1.sol\":5539:5667  function getstaking_details(address _address) public view returns (Stake memory) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_128:\n      pop\n      dup1\n      sload\n      tag_168\n      swap1\n      tag_155\n      jump\t// in\n    tag_168:\n      0x00\n      dup3\n      sstore\n      dup1\n      0x1f\n      lt\n      tag_170\n      jumpi\n      pop\n      pop\n      jump\t// out\n    tag_170:\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      dup2\n      add\n      swap1\n      tag_171\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n      pop\n      jump\t// out\n    tag_172:\n    tag_173:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_174\n      jumpi\n      0x00\n      dup2\n      sstore\n      0x01\n      add\n      jump(tag_173)\n    tag_174:\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":222:349   */\n    tag_175:\n        /* \"#utility.yul\":283:293   */\n      0x4e487b71\n        /* \"#utility.yul\":278:281   */\n      0xe0\n        /* \"#utility.yul\":274:294   */\n      shl\n        /* \"#utility.yul\":271:272   */\n      0x00\n        /* \"#utility.yul\":264:295   */\n      mstore\n        /* \"#utility.yul\":314:318   */\n      0x41\n        /* \"#utility.yul\":311:312   */\n      0x04\n        /* \"#utility.yul\":304:319   */\n      mstore\n        /* \"#utility.yul\":338:342   */\n      0x24\n        /* \"#utility.yul\":335:336   */\n      0x00\n        /* \"#utility.yul\":328:343   */\n      revert\n        /* \"#utility.yul\":354:472   */\n    tag_176:\n        /* \"#utility.yul\":440:445   */\n      dup1\n        /* \"#utility.yul\":433:446   */\n      iszero\n        /* \"#utility.yul\":426:447   */\n      iszero\n        /* \"#utility.yul\":419:424   */\n      dup2\n        /* \"#utility.yul\":416:448   */\n      eq\n        /* \"#utility.yul\":406:466   */\n      tag_171\n      jumpi\n        /* \"#utility.yul\":462:463   */\n      0x00\n        /* \"#utility.yul\":459:460   */\n      dup1\n        /* \"#utility.yul\":452:464   */\n      revert\n        /* \"#utility.yul\":477:605   */\n    tag_177:\n        /* \"#utility.yul\":542:562   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":571:599   */\n      tag_95\n        /* \"#utility.yul\":542:562   */\n      dup2\n        /* \"#utility.yul\":571:599   */\n      tag_176\n      jump\t// in\n        /* \"#utility.yul\":610:1737   */\n    tag_18:\n        /* \"#utility.yul\":703:709   */\n      0x00\n        /* \"#utility.yul\":711:717   */\n      dup1\n        /* \"#utility.yul\":719:725   */\n      0x00\n        /* \"#utility.yul\":727:733   */\n      dup1\n        /* \"#utility.yul\":780:783   */\n      0x80\n        /* \"#utility.yul\":768:777   */\n      dup6\n        /* \"#utility.yul\":759:766   */\n      dup8\n        /* \"#utility.yul\":755:778   */\n      sub\n        /* \"#utility.yul\":751:784   */\n      slt\n        /* \"#utility.yul\":748:801   */\n      iszero\n      tag_192\n      jumpi\n        /* \"#utility.yul\":797:798   */\n      0x00\n        /* \"#utility.yul\":794:795   */\n      dup1\n        /* \"#utility.yul\":787:799   */\n      revert\n        /* \"#utility.yul\":748:801   */\n    tag_192:\n        /* \"#utility.yul\":833:842   */\n      dup5\n        /* \"#utility.yul\":820:843   */\n      calldataload\n        /* \"#utility.yul\":810:843   */\n      swap4\n      pop\n        /* \"#utility.yul\":894:896   */\n      0x20\n        /* \"#utility.yul\":883:892   */\n      dup6\n        /* \"#utility.yul\":879:897   */\n      add\n        /* \"#utility.yul\":866:898   */\n      calldataload\n        /* \"#utility.yul\":917:935   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":958:960   */\n      dup1\n        /* \"#utility.yul\":950:956   */\n      dup3\n        /* \"#utility.yul\":947:961   */\n      gt\n        /* \"#utility.yul\":944:978   */\n      iszero\n      tag_193\n      jumpi\n        /* \"#utility.yul\":974:975   */\n      0x00\n        /* \"#utility.yul\":971:972   */\n      dup1\n        /* \"#utility.yul\":964:976   */\n      revert\n        /* \"#utility.yul\":944:978   */\n    tag_193:\n        /* \"#utility.yul\":1012:1018   */\n      dup2\n        /* \"#utility.yul\":1001:1010   */\n      dup8\n        /* \"#utility.yul\":997:1019   */\n      add\n        /* \"#utility.yul\":987:1019   */\n      swap2\n      pop\n        /* \"#utility.yul\":1057:1064   */\n      dup8\n        /* \"#utility.yul\":1050:1054   */\n      0x1f\n        /* \"#utility.yul\":1046:1048   */\n      dup4\n        /* \"#utility.yul\":1042:1055   */\n      add\n        /* \"#utility.yul\":1038:1065   */\n      slt\n        /* \"#utility.yul\":1028:1083   */\n      tag_194\n      jumpi\n        /* \"#utility.yul\":1079:1080   */\n      0x00\n        /* \"#utility.yul\":1076:1077   */\n      dup1\n        /* \"#utility.yul\":1069:1081   */\n      revert\n        /* \"#utility.yul\":1028:1083   */\n    tag_194:\n        /* \"#utility.yul\":1115:1117   */\n      dup2\n        /* \"#utility.yul\":1102:1118   */\n      calldataload\n        /* \"#utility.yul\":1137:1139   */\n      dup2\n        /* \"#utility.yul\":1133:1135   */\n      dup2\n        /* \"#utility.yul\":1130:1140   */\n      gt\n        /* \"#utility.yul\":1127:1163   */\n      iszero\n      tag_196\n      jumpi\n        /* \"#utility.yul\":1143:1161   */\n      tag_196\n      tag_175\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":1218:1220   */\n      0x40\n        /* \"#utility.yul\":1212:1221   */\n      mload\n        /* \"#utility.yul\":1186:1188   */\n      0x1f\n        /* \"#utility.yul\":1272:1285   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1268:1290   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":1292:1294   */\n      0x3f\n        /* \"#utility.yul\":1264:1295   */\n      add\n        /* \"#utility.yul\":1260:1300   */\n      and\n        /* \"#utility.yul\":1248:1301   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":1316:1334   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":1336:1358   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":1313:1359   */\n      or\n        /* \"#utility.yul\":1310:1382   */\n      iszero\n      tag_198\n      jumpi\n        /* \"#utility.yul\":1362:1380   */\n      tag_198\n      tag_175\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":1402:1412   */\n      dup2\n        /* \"#utility.yul\":1398:1400   */\n      0x40\n        /* \"#utility.yul\":1391:1413   */\n      mstore\n        /* \"#utility.yul\":1437:1439   */\n      dup3\n        /* \"#utility.yul\":1429:1435   */\n      dup2\n        /* \"#utility.yul\":1422:1440   */\n      mstore\n        /* \"#utility.yul\":1477:1484   */\n      dup11\n        /* \"#utility.yul\":1472:1474   */\n      0x20\n        /* \"#utility.yul\":1467:1469   */\n      dup5\n        /* \"#utility.yul\":1463:1465   */\n      dup8\n        /* \"#utility.yul\":1459:1470   */\n      add\n        /* \"#utility.yul\":1455:1475   */\n      add\n        /* \"#utility.yul\":1452:1485   */\n      gt\n        /* \"#utility.yul\":1449:1502   */\n      iszero\n      tag_199\n      jumpi\n        /* \"#utility.yul\":1498:1499   */\n      0x00\n        /* \"#utility.yul\":1495:1496   */\n      dup1\n        /* \"#utility.yul\":1488:1500   */\n      revert\n        /* \"#utility.yul\":1449:1502   */\n    tag_199:\n        /* \"#utility.yul\":1554:1556   */\n      dup3\n        /* \"#utility.yul\":1549:1551   */\n      0x20\n        /* \"#utility.yul\":1545:1547   */\n      dup7\n        /* \"#utility.yul\":1541:1552   */\n      add\n        /* \"#utility.yul\":1536:1538   */\n      0x20\n        /* \"#utility.yul\":1528:1534   */\n      dup4\n        /* \"#utility.yul\":1524:1539   */\n      add\n        /* \"#utility.yul\":1511:1557   */\n      calldatacopy\n        /* \"#utility.yul\":1599:1600   */\n      0x00\n        /* \"#utility.yul\":1594:1596   */\n      0x20\n        /* \"#utility.yul\":1589:1591   */\n      dup5\n        /* \"#utility.yul\":1581:1587   */\n      dup4\n        /* \"#utility.yul\":1577:1592   */\n      add\n        /* \"#utility.yul\":1573:1597   */\n      add\n        /* \"#utility.yul\":1566:1601   */\n      mstore\n        /* \"#utility.yul\":1620:1626   */\n      dup1\n        /* \"#utility.yul\":1610:1626   */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1673:1675   */\n      0x40\n        /* \"#utility.yul\":1662:1671   */\n      dup6\n        /* \"#utility.yul\":1658:1676   */\n      add\n        /* \"#utility.yul\":1645:1677   */\n      calldataload\n        /* \"#utility.yul\":1635:1677   */\n      swap2\n      pop\n        /* \"#utility.yul\":1696:1731   */\n      tag_200\n        /* \"#utility.yul\":1727:1729   */\n      0x60\n        /* \"#utility.yul\":1716:1725   */\n      dup7\n        /* \"#utility.yul\":1712:1730   */\n      add\n        /* \"#utility.yul\":1696:1731   */\n      tag_177\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":1686:1731   */\n      swap1\n      pop\n        /* \"#utility.yul\":610:1737   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1742:2028   */\n    tag_22:\n        /* \"#utility.yul\":1801:1807   */\n      0x00\n        /* \"#utility.yul\":1854:1856   */\n      0x20\n        /* \"#utility.yul\":1842:1851   */\n      dup3\n        /* \"#utility.yul\":1833:1840   */\n      dup5\n        /* \"#utility.yul\":1829:1852   */\n      sub\n        /* \"#utility.yul\":1825:1857   */\n      slt\n        /* \"#utility.yul\":1822:1874   */\n      iszero\n      tag_202\n      jumpi\n        /* \"#utility.yul\":1870:1871   */\n      0x00\n        /* \"#utility.yul\":1867:1868   */\n      dup1\n        /* \"#utility.yul\":1860:1872   */\n      revert\n        /* \"#utility.yul\":1822:1874   */\n    tag_202:\n        /* \"#utility.yul\":1896:1919   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1948:1979   */\n      dup2\n      and\n        /* \"#utility.yul\":1938:1980   */\n      dup2\n      eq\n        /* \"#utility.yul\":1928:1998   */\n      tag_203\n      jumpi\n        /* \"#utility.yul\":1994:1995   */\n      0x00\n        /* \"#utility.yul\":1991:1992   */\n      dup1\n        /* \"#utility.yul\":1984:1996   */\n      revert\n        /* \"#utility.yul\":1928:1998   */\n    tag_203:\n        /* \"#utility.yul\":2017:2022   */\n      swap4\n        /* \"#utility.yul\":1742:2028   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2215:2465   */\n    tag_178:\n        /* \"#utility.yul\":2300:2301   */\n      0x00\n        /* \"#utility.yul\":2310:2423   */\n    tag_206:\n        /* \"#utility.yul\":2324:2330   */\n      dup4\n        /* \"#utility.yul\":2321:2322   */\n      dup2\n        /* \"#utility.yul\":2318:2331   */\n      lt\n        /* \"#utility.yul\":2310:2423   */\n      iszero\n      tag_208\n      jumpi\n        /* \"#utility.yul\":2400:2411   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":2394:2412   */\n      mload\n        /* \"#utility.yul\":2381:2392   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":2374:2413   */\n      mstore\n        /* \"#utility.yul\":2346:2348   */\n      0x20\n        /* \"#utility.yul\":2339:2349   */\n      add\n        /* \"#utility.yul\":2310:2423   */\n      jump(tag_206)\n    tag_208:\n      pop\n      pop\n        /* \"#utility.yul\":2457:2458   */\n      0x00\n        /* \"#utility.yul\":2439:2455   */\n      swap2\n      add\n        /* \"#utility.yul\":2432:2459   */\n      mstore\n        /* \"#utility.yul\":2215:2465   */\n      jump\t// out\n        /* \"#utility.yul\":2470:2741   */\n    tag_179:\n        /* \"#utility.yul\":2512:2515   */\n      0x00\n        /* \"#utility.yul\":2550:2555   */\n      dup2\n        /* \"#utility.yul\":2544:2556   */\n      mload\n        /* \"#utility.yul\":2577:2583   */\n      dup1\n        /* \"#utility.yul\":2572:2575   */\n      dup5\n        /* \"#utility.yul\":2565:2584   */\n      mstore\n        /* \"#utility.yul\":2593:2669   */\n      tag_210\n        /* \"#utility.yul\":2662:2668   */\n      dup2\n        /* \"#utility.yul\":2655:2659   */\n      0x20\n        /* \"#utility.yul\":2650:2653   */\n      dup7\n        /* \"#utility.yul\":2646:2660   */\n      add\n        /* \"#utility.yul\":2639:2643   */\n      0x20\n        /* \"#utility.yul\":2632:2637   */\n      dup7\n        /* \"#utility.yul\":2628:2644   */\n      add\n        /* \"#utility.yul\":2593:2669   */\n      tag_178\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":2723:2725   */\n      0x1f\n        /* \"#utility.yul\":2702:2717   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2698:2727   */\n      and\n        /* \"#utility.yul\":2689:2728   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":2730:2734   */\n      0x20\n        /* \"#utility.yul\":2685:2735   */\n      add\n      swap3\n        /* \"#utility.yul\":2470:2741   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2746:3443   */\n    tag_42:\n        /* \"#utility.yul\":3051:3057   */\n      dup8\n        /* \"#utility.yul\":3040:3049   */\n      dup2\n        /* \"#utility.yul\":3033:3058   */\n      mstore\n        /* \"#utility.yul\":3094:3097   */\n      0xe0\n        /* \"#utility.yul\":3089:3091   */\n      0x20\n        /* \"#utility.yul\":3078:3087   */\n      dup3\n        /* \"#utility.yul\":3074:3092   */\n      add\n        /* \"#utility.yul\":3067:3098   */\n      mstore\n        /* \"#utility.yul\":3014:3018   */\n      0x00\n        /* \"#utility.yul\":3115:3161   */\n      tag_212\n        /* \"#utility.yul\":3156:3159   */\n      0xe0\n        /* \"#utility.yul\":3145:3154   */\n      dup4\n        /* \"#utility.yul\":3141:3160   */\n      add\n        /* \"#utility.yul\":3133:3139   */\n      dup10\n        /* \"#utility.yul\":3115:3161   */\n      tag_179\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":3192:3194   */\n      0x40\n        /* \"#utility.yul\":3177:3195   */\n      dup4\n      add\n        /* \"#utility.yul\":3170:3204   */\n      swap8\n      swap1\n      swap8\n      mstore\n      pop\n        /* \"#utility.yul\":3235:3237   */\n      0x60\n        /* \"#utility.yul\":3220:3238   */\n      dup2\n      add\n        /* \"#utility.yul\":3213:3247   */\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"#utility.yul\":3291:3305   */\n      swap2\n      iszero\n        /* \"#utility.yul\":3284:3306   */\n      iszero\n        /* \"#utility.yul\":3278:3281   */\n      0x80\n        /* \"#utility.yul\":3263:3282   */\n      dup5\n      add\n        /* \"#utility.yul\":3256:3307   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3344:3376   */\n      and\n        /* \"#utility.yul\":3364:3367   */\n      0xa0\n        /* \"#utility.yul\":3323:3342   */\n      dup4\n      add\n        /* \"#utility.yul\":3316:3377   */\n      mstore\n        /* \"#utility.yul\":3421:3435   */\n      iszero\n        /* \"#utility.yul\":3414:3436   */\n      iszero\n        /* \"#utility.yul\":3408:3411   */\n      0xc0\n        /* \"#utility.yul\":3393:3412   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":3386:3437   */\n      mstore\n        /* \"#utility.yul\":3107:3161   */\n      swap3\n        /* \"#utility.yul\":2746:3443   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3448:4231   */\n    tag_47:\n        /* \"#utility.yul\":3621:3623   */\n      0x20\n        /* \"#utility.yul\":3610:3619   */\n      dup2\n        /* \"#utility.yul\":3603:3624   */\n      mstore\n        /* \"#utility.yul\":3666:3672   */\n      dup2\n        /* \"#utility.yul\":3660:3673   */\n      mload\n        /* \"#utility.yul\":3655:3657   */\n      0x20\n        /* \"#utility.yul\":3644:3653   */\n      dup3\n        /* \"#utility.yul\":3640:3658   */\n      add\n        /* \"#utility.yul\":3633:3674   */\n      mstore\n        /* \"#utility.yul\":3584:3588   */\n      0x00\n        /* \"#utility.yul\":3721:3723   */\n      0x20\n        /* \"#utility.yul\":3713:3719   */\n      dup4\n        /* \"#utility.yul\":3709:3724   */\n      add\n        /* \"#utility.yul\":3703:3725   */\n      mload\n        /* \"#utility.yul\":3761:3765   */\n      0xe0\n        /* \"#utility.yul\":3756:3758   */\n      0x40\n        /* \"#utility.yul\":3745:3754   */\n      dup5\n        /* \"#utility.yul\":3741:3759   */\n      add\n        /* \"#utility.yul\":3734:3766   */\n      mstore\n        /* \"#utility.yul\":3789:3841   */\n      tag_214\n        /* \"#utility.yul\":3836:3839   */\n      0x0100\n        /* \"#utility.yul\":3825:3834   */\n      dup5\n        /* \"#utility.yul\":3821:3840   */\n      add\n        /* \"#utility.yul\":3807:3819   */\n      dup3\n        /* \"#utility.yul\":3789:3841   */\n      tag_179\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":3775:3841   */\n      swap1\n      pop\n        /* \"#utility.yul\":3895:3897   */\n      0x40\n        /* \"#utility.yul\":3887:3893   */\n      dup5\n        /* \"#utility.yul\":3883:3898   */\n      add\n        /* \"#utility.yul\":3877:3899   */\n      mload\n        /* \"#utility.yul\":3872:3874   */\n      0x60\n        /* \"#utility.yul\":3861:3870   */\n      dup5\n        /* \"#utility.yul\":3857:3875   */\n      add\n        /* \"#utility.yul\":3850:3900   */\n      mstore\n        /* \"#utility.yul\":3955:3957   */\n      0x60\n        /* \"#utility.yul\":3947:3953   */\n      dup5\n        /* \"#utility.yul\":3943:3958   */\n      add\n        /* \"#utility.yul\":3937:3959   */\n      mload\n        /* \"#utility.yul\":3931:3934   */\n      0x80\n        /* \"#utility.yul\":3920:3929   */\n      dup5\n        /* \"#utility.yul\":3916:3935   */\n      add\n        /* \"#utility.yul\":3909:3960   */\n      mstore\n        /* \"#utility.yul\":4029:4032   */\n      0x80\n        /* \"#utility.yul\":4021:4027   */\n      dup5\n        /* \"#utility.yul\":4017:4033   */\n      add\n        /* \"#utility.yul\":4011:4034   */\n      mload\n        /* \"#utility.yul\":4004:4035   */\n      iszero\n        /* \"#utility.yul\":3997:4036   */\n      iszero\n        /* \"#utility.yul\":3991:3994   */\n      0xa0\n        /* \"#utility.yul\":3980:3989   */\n      dup5\n        /* \"#utility.yul\":3976:3995   */\n      add\n        /* \"#utility.yul\":3969:4037   */\n      mstore\n        /* \"#utility.yul\":4120:4121   */\n      0x01\n        /* \"#utility.yul\":4116:4117   */\n      dup1\n        /* \"#utility.yul\":4111:4114   */\n      0xa0\n        /* \"#utility.yul\":4107:4118   */\n      shl\n        /* \"#utility.yul\":4103:4122   */\n      sub\n        /* \"#utility.yul\":4096:4099   */\n      0xa0\n        /* \"#utility.yul\":4088:4094   */\n      dup6\n        /* \"#utility.yul\":4084:4100   */\n      add\n        /* \"#utility.yul\":4078:4101   */\n      mload\n        /* \"#utility.yul\":4074:4123   */\n      and\n        /* \"#utility.yul\":4068:4071   */\n      0xc0\n        /* \"#utility.yul\":4057:4066   */\n      dup5\n        /* \"#utility.yul\":4053:4072   */\n      add\n        /* \"#utility.yul\":4046:4124   */\n      mstore\n        /* \"#utility.yul\":4194:4197   */\n      0xc0\n        /* \"#utility.yul\":4186:4192   */\n      dup5\n        /* \"#utility.yul\":4182:4198   */\n      add\n        /* \"#utility.yul\":4176:4199   */\n      mload\n        /* \"#utility.yul\":4169:4200   */\n      iszero\n        /* \"#utility.yul\":4162:4201   */\n      iszero\n        /* \"#utility.yul\":4155:4159   */\n      0xe0\n        /* \"#utility.yul\":4144:4153   */\n      dup5\n        /* \"#utility.yul\":4140:4160   */\n      add\n        /* \"#utility.yul\":4133:4202   */\n      mstore\n        /* \"#utility.yul\":4219:4225   */\n      dup1\n        /* \"#utility.yul\":4211:4225   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3448:4231   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4236:4420   */\n    tag_54:\n        /* \"#utility.yul\":4306:4312   */\n      0x00\n        /* \"#utility.yul\":4359:4361   */\n      0x20\n        /* \"#utility.yul\":4347:4356   */\n      dup3\n        /* \"#utility.yul\":4338:4345   */\n      dup5\n        /* \"#utility.yul\":4334:4357   */\n      sub\n        /* \"#utility.yul\":4330:4362   */\n      slt\n        /* \"#utility.yul\":4327:4379   */\n      iszero\n      tag_216\n      jumpi\n        /* \"#utility.yul\":4375:4376   */\n      0x00\n        /* \"#utility.yul\":4372:4373   */\n      dup1\n        /* \"#utility.yul\":4365:4377   */\n      revert\n        /* \"#utility.yul\":4327:4379   */\n    tag_216:\n      pop\n        /* \"#utility.yul\":4398:4414   */\n      mload\n      swap2\n        /* \"#utility.yul\":4236:4420   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5034:5323   */\n    tag_61:\n        /* \"#utility.yul\":5165:5168   */\n      0x00\n        /* \"#utility.yul\":5203:5209   */\n      dup3\n        /* \"#utility.yul\":5197:5210   */\n      mload\n        /* \"#utility.yul\":5219:5285   */\n      tag_220\n        /* \"#utility.yul\":5278:5284   */\n      dup2\n        /* \"#utility.yul\":5273:5276   */\n      dup5\n        /* \"#utility.yul\":5266:5270   */\n      0x20\n        /* \"#utility.yul\":5258:5264   */\n      dup8\n        /* \"#utility.yul\":5254:5271   */\n      add\n        /* \"#utility.yul\":5219:5285   */\n      tag_178\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":5301:5317   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":5034:5323   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5746:6126   */\n    tag_155:\n        /* \"#utility.yul\":5825:5826   */\n      0x01\n        /* \"#utility.yul\":5821:5833   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":5868:5880   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":5889:5950   */\n      tag_223\n      jumpi\n        /* \"#utility.yul\":5943:5947   */\n      0x7f\n        /* \"#utility.yul\":5935:5941   */\n      dup3\n        /* \"#utility.yul\":5931:5948   */\n      and\n        /* \"#utility.yul\":5921:5948   */\n      swap2\n      pop\n        /* \"#utility.yul\":5889:5950   */\n    tag_223:\n        /* \"#utility.yul\":5996:5998   */\n      0x20\n        /* \"#utility.yul\":5988:5994   */\n      dup3\n        /* \"#utility.yul\":5985:5999   */\n      lt\n        /* \"#utility.yul\":5965:5983   */\n      dup2\n        /* \"#utility.yul\":5962:6000   */\n      sub\n        /* \"#utility.yul\":5959:6120   */\n      tag_224\n      jumpi\n        /* \"#utility.yul\":6042:6052   */\n      0x4e487b71\n        /* \"#utility.yul\":6037:6040   */\n      0xe0\n        /* \"#utility.yul\":6033:6053   */\n      shl\n        /* \"#utility.yul\":6030:6031   */\n      0x00\n        /* \"#utility.yul\":6023:6054   */\n      mstore\n        /* \"#utility.yul\":6077:6081   */\n      0x22\n        /* \"#utility.yul\":6074:6075   */\n      0x04\n        /* \"#utility.yul\":6067:6082   */\n      mstore\n        /* \"#utility.yul\":6105:6109   */\n      0x24\n        /* \"#utility.yul\":6102:6103   */\n      0x00\n        /* \"#utility.yul\":6095:6110   */\n      revert\n        /* \"#utility.yul\":5959:6120   */\n    tag_224:\n      pop\n        /* \"#utility.yul\":5746:6126   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6257:6802   */\n    tag_181:\n        /* \"#utility.yul\":6359:6361   */\n      0x1f\n        /* \"#utility.yul\":6354:6357   */\n      dup3\n        /* \"#utility.yul\":6351:6362   */\n      gt\n        /* \"#utility.yul\":6348:6796   */\n      iszero\n      tag_227\n      jumpi\n        /* \"#utility.yul\":6395:6396   */\n      0x00\n        /* \"#utility.yul\":6420:6425   */\n      dup2\n        /* \"#utility.yul\":6416:6418   */\n      dup2\n        /* \"#utility.yul\":6409:6426   */\n      mstore\n        /* \"#utility.yul\":6465:6469   */\n      0x20\n        /* \"#utility.yul\":6461:6463   */\n      dup2\n        /* \"#utility.yul\":6451:6470   */\n      keccak256\n        /* \"#utility.yul\":6535:6537   */\n      0x1f\n        /* \"#utility.yul\":6523:6533   */\n      dup6\n        /* \"#utility.yul\":6519:6538   */\n      add\n        /* \"#utility.yul\":6516:6517   */\n      0x05\n        /* \"#utility.yul\":6512:6539   */\n      shr\n        /* \"#utility.yul\":6506:6510   */\n      dup2\n        /* \"#utility.yul\":6502:6540   */\n      add\n        /* \"#utility.yul\":6571:6575   */\n      0x20\n        /* \"#utility.yul\":6559:6569   */\n      dup7\n        /* \"#utility.yul\":6556:6576   */\n      lt\n        /* \"#utility.yul\":6553:6600   */\n      iszero\n      tag_228\n      jumpi\n      pop\n        /* \"#utility.yul\":6594:6598   */\n      dup1\n        /* \"#utility.yul\":6553:6600   */\n    tag_228:\n        /* \"#utility.yul\":6649:6651   */\n      0x1f\n        /* \"#utility.yul\":6644:6647   */\n      dup6\n        /* \"#utility.yul\":6640:6652   */\n      add\n        /* \"#utility.yul\":6637:6638   */\n      0x05\n        /* \"#utility.yul\":6633:6653   */\n      shr\n        /* \"#utility.yul\":6627:6631   */\n      dup3\n        /* \"#utility.yul\":6623:6654   */\n      add\n        /* \"#utility.yul\":6613:6654   */\n      swap2\n      pop\n        /* \"#utility.yul\":6704:6786   */\n    tag_229:\n        /* \"#utility.yul\":6722:6724   */\n      dup2\n        /* \"#utility.yul\":6715:6720   */\n      dup2\n        /* \"#utility.yul\":6712:6725   */\n      lt\n        /* \"#utility.yul\":6704:6786   */\n      iszero\n      tag_231\n      jumpi\n        /* \"#utility.yul\":6767:6784   */\n      dup3\n      dup2\n      sstore\n        /* \"#utility.yul\":6748:6749   */\n      0x01\n        /* \"#utility.yul\":6737:6750   */\n      add\n        /* \"#utility.yul\":6704:6786   */\n      jump(tag_229)\n    tag_231:\n        /* \"#utility.yul\":6708:6711   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":6348:6796   */\n    tag_227:\n        /* \"#utility.yul\":6257:6802   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6978:8330   */\n    tag_67:\n        /* \"#utility.yul\":7104:7107   */\n      dup2\n        /* \"#utility.yul\":7098:7108   */\n      mload\n        /* \"#utility.yul\":7131:7149   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7123:7129   */\n      dup2\n        /* \"#utility.yul\":7120:7150   */\n      gt\n        /* \"#utility.yul\":7117:7173   */\n      iszero\n      tag_235\n      jumpi\n        /* \"#utility.yul\":7153:7171   */\n      tag_235\n      tag_175\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":7182:7279   */\n      tag_236\n        /* \"#utility.yul\":7272:7278   */\n      dup2\n        /* \"#utility.yul\":7232:7270   */\n      tag_237\n        /* \"#utility.yul\":7264:7268   */\n      dup5\n        /* \"#utility.yul\":7258:7269   */\n      sload\n        /* \"#utility.yul\":7232:7270   */\n      tag_155\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":7226:7230   */\n      dup5\n        /* \"#utility.yul\":7182:7279   */\n      tag_181\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":7334:7338   */\n      0x20\n      dup1\n        /* \"#utility.yul\":7398:7400   */\n      0x1f\n        /* \"#utility.yul\":7387:7401   */\n      dup4\n      gt\n        /* \"#utility.yul\":7415:7416   */\n      0x01\n        /* \"#utility.yul\":7410:8073   */\n      dup2\n      eq\n      tag_239\n      jumpi\n        /* \"#utility.yul\":8117:8118   */\n      0x00\n        /* \"#utility.yul\":8134:8140   */\n      dup5\n        /* \"#utility.yul\":8131:8220   */\n      iszero\n      tag_240\n      jumpi\n      pop\n        /* \"#utility.yul\":8186:8205   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":8180:8206   */\n      mload\n        /* \"#utility.yul\":8131:8220   */\n    tag_240:\n      not(0x00)\n        /* \"#utility.yul\":6935:6936   */\n      0x03\n        /* \"#utility.yul\":6931:6942   */\n      dup7\n      swap1\n      shl\n        /* \"#utility.yul\":6927:6951   */\n      shr\n        /* \"#utility.yul\":6923:6952   */\n      not\n        /* \"#utility.yul\":6913:6953   */\n      and\n        /* \"#utility.yul\":6959:6960   */\n      0x01\n        /* \"#utility.yul\":6955:6966   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":6910:6967   */\n      or\n        /* \"#utility.yul\":8233:8314   */\n      dup6\n      sstore\n        /* \"#utility.yul\":7380:8324   */\n      jump(tag_231)\n        /* \"#utility.yul\":7410:8073   */\n    tag_239:\n        /* \"#utility.yul\":6204:6205   */\n      0x00\n        /* \"#utility.yul\":6197:6211   */\n      dup6\n      dup2\n      mstore\n        /* \"#utility.yul\":6241:6245   */\n      0x20\n        /* \"#utility.yul\":6228:6246   */\n      dup2\n      keccak256\n      not(0x1f)\n        /* \"#utility.yul\":7446:7466   */\n      dup7\n      and\n      swap2\n        /* \"#utility.yul\":7564:7800   */\n    tag_243:\n        /* \"#utility.yul\":7578:7585   */\n      dup3\n        /* \"#utility.yul\":7575:7576   */\n      dup2\n        /* \"#utility.yul\":7572:7586   */\n      lt\n        /* \"#utility.yul\":7564:7800   */\n      iszero\n      tag_245\n      jumpi\n        /* \"#utility.yul\":7667:7686   */\n      dup9\n      dup7\n      add\n        /* \"#utility.yul\":7661:7687   */\n      mload\n        /* \"#utility.yul\":7646:7688   */\n      dup3\n      sstore\n        /* \"#utility.yul\":7759:7786   */\n      swap5\n      dup5\n      add\n      swap5\n        /* \"#utility.yul\":7727:7728   */\n      0x01\n        /* \"#utility.yul\":7715:7729   */\n      swap1\n      swap2\n      add\n      swap1\n        /* \"#utility.yul\":7594:7613   */\n      dup5\n      add\n        /* \"#utility.yul\":7564:7800   */\n      jump(tag_243)\n    tag_245:\n        /* \"#utility.yul\":7568:7571   */\n      pop\n        /* \"#utility.yul\":7828:7834   */\n      dup6\n        /* \"#utility.yul\":7819:7826   */\n      dup3\n        /* \"#utility.yul\":7816:7835   */\n      lt\n        /* \"#utility.yul\":7813:8014   */\n      iszero\n      tag_246\n      jumpi\n        /* \"#utility.yul\":7889:7908   */\n      dup8\n      dup6\n      add\n        /* \"#utility.yul\":7883:7909   */\n      mload\n      not(0x00)\n        /* \"#utility.yul\":7972:7973   */\n      0x03\n        /* \"#utility.yul\":7968:7982   */\n      dup9\n      swap1\n      shl\n        /* \"#utility.yul\":7984:7987   */\n      0xf8\n        /* \"#utility.yul\":7964:7988   */\n      and\n        /* \"#utility.yul\":7960:7997   */\n      shr\n        /* \"#utility.yul\":7956:7998   */\n      not\n        /* \"#utility.yul\":7941:7999   */\n      and\n        /* \"#utility.yul\":7926:8000   */\n      dup2\n      sstore\n        /* \"#utility.yul\":7813:8014   */\n    tag_246:\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":8060:8061   */\n      0x01\n        /* \"#utility.yul\":8044:8058   */\n      swap1\n      dup2\n      shl\n        /* \"#utility.yul\":8040:8062   */\n      add\n        /* \"#utility.yul\":8027:8063   */\n      swap1\n      sstore\n      pop\n        /* \"#utility.yul\":6978:8330   */\n      jump\t// out\n        /* \"#utility.yul\":8335:8462   */\n    tag_183:\n        /* \"#utility.yul\":8396:8406   */\n      0x4e487b71\n        /* \"#utility.yul\":8391:8394   */\n      0xe0\n        /* \"#utility.yul\":8387:8407   */\n      shl\n        /* \"#utility.yul\":8384:8385   */\n      0x00\n        /* \"#utility.yul\":8377:8408   */\n      mstore\n        /* \"#utility.yul\":8427:8431   */\n      0x11\n        /* \"#utility.yul\":8424:8425   */\n      0x04\n        /* \"#utility.yul\":8417:8432   */\n      mstore\n        /* \"#utility.yul\":8451:8455   */\n      0x24\n        /* \"#utility.yul\":8448:8449   */\n      0x00\n        /* \"#utility.yul\":8441:8456   */\n      revert\n        /* \"#utility.yul\":8467:8592   */\n    tag_69:\n        /* \"#utility.yul\":8532:8541   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":8553:8563   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":8550:8586   */\n      iszero\n      tag_100\n      jumpi\n        /* \"#utility.yul\":8566:8584   */\n      tag_100\n      tag_183\n      jump\t// in\n        /* \"#utility.yul\":8597:8972   */\n    tag_71:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":8855:8870   */\n      swap4\n      dup5\n      and\n        /* \"#utility.yul\":8837:8871   */\n      dup2\n      mstore\n        /* \"#utility.yul\":8907:8922   */\n      swap2\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":8902:8904   */\n      0x20\n        /* \"#utility.yul\":8887:8905   */\n      dup3\n      add\n        /* \"#utility.yul\":8880:8923   */\n      mstore\n        /* \"#utility.yul\":8954:8956   */\n      0x40\n        /* \"#utility.yul\":8939:8957   */\n      dup2\n      add\n        /* \"#utility.yul\":8932:8966   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":8787:8789   */\n      0x60\n        /* \"#utility.yul\":8772:8790   */\n      add\n      swap1\n        /* \"#utility.yul\":8597:8972   */\n      jump\t// out\n        /* \"#utility.yul\":8977:9222   */\n    tag_75:\n        /* \"#utility.yul\":9044:9050   */\n      0x00\n        /* \"#utility.yul\":9097:9099   */\n      0x20\n        /* \"#utility.yul\":9085:9094   */\n      dup3\n        /* \"#utility.yul\":9076:9083   */\n      dup5\n        /* \"#utility.yul\":9072:9095   */\n      sub\n        /* \"#utility.yul\":9068:9100   */\n      slt\n        /* \"#utility.yul\":9065:9117   */\n      iszero\n      tag_253\n      jumpi\n        /* \"#utility.yul\":9113:9114   */\n      0x00\n        /* \"#utility.yul\":9110:9111   */\n      dup1\n        /* \"#utility.yul\":9103:9115   */\n      revert\n        /* \"#utility.yul\":9065:9117   */\n    tag_253:\n        /* \"#utility.yul\":9145:9154   */\n      dup2\n        /* \"#utility.yul\":9139:9155   */\n      mload\n        /* \"#utility.yul\":9164:9192   */\n      tag_203\n        /* \"#utility.yul\":9186:9191   */\n      dup2\n        /* \"#utility.yul\":9164:9192   */\n      tag_176\n      jump\t// in\n        /* \"#utility.yul\":9839:9967   */\n    tag_109:\n        /* \"#utility.yul\":9906:9915   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":9927:9938   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":9924:9961   */\n      iszero\n      tag_100\n      jumpi\n        /* \"#utility.yul\":9941:9959   */\n      tag_100\n      tag_183\n      jump\t// in\n        /* \"#utility.yul\":10329:10497   */\n    tag_119:\n        /* \"#utility.yul\":10402:10411   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":10433:10442   */\n      dup2\n      iszero\n        /* \"#utility.yul\":10450:10465   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":10444:10466   */\n      dup5\n      eq\n        /* \"#utility.yul\":10430:10467   */\n      or\n        /* \"#utility.yul\":10420:10491   */\n      tag_100\n      jumpi\n        /* \"#utility.yul\":10471:10489   */\n      tag_100\n      tag_183\n      jump\t// in\n        /* \"#utility.yul\":10502:10719   */\n    tag_121:\n        /* \"#utility.yul\":10542:10543   */\n      0x00\n        /* \"#utility.yul\":10568:10569   */\n      dup3\n        /* \"#utility.yul\":10558:10690   */\n      tag_265\n      jumpi\n        /* \"#utility.yul\":10612:10622   */\n      0x4e487b71\n        /* \"#utility.yul\":10607:10610   */\n      0xe0\n        /* \"#utility.yul\":10603:10623   */\n      shl\n        /* \"#utility.yul\":10600:10601   */\n      0x00\n        /* \"#utility.yul\":10593:10624   */\n      mstore\n        /* \"#utility.yul\":10647:10651   */\n      0x12\n        /* \"#utility.yul\":10644:10645   */\n      0x04\n        /* \"#utility.yul\":10637:10652   */\n      mstore\n        /* \"#utility.yul\":10675:10679   */\n      0x24\n        /* \"#utility.yul\":10672:10673   */\n      0x00\n        /* \"#utility.yul\":10665:10680   */\n      revert\n        /* \"#utility.yul\":10558:10690   */\n    tag_265:\n      pop\n        /* \"#utility.yul\":10704:10713   */\n      div\n      swap1\n        /* \"#utility.yul\":10502:10719   */\n      jump\t// out\n\n    auxdata: 0xa26469706673582212203cecb1a2252bc34f7539eda3e426dbf799053f0657984a7369068e89b54860fd64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_349": {
									"entryPoint": null,
									"id": 349,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_contract$_ERC20Basic_$332_fromMemory": {
									"entryPoint": 153,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 114,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:551:2",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:2",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "62:174:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "72:16:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "83:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "86:1:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "79:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "79:9:2"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "72:3:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "119:111:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "140:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "147:3:2",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "152:10:2",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "143:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "143:20:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "133:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "133:31:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "133:31:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "184:1:2",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "187:4:2",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "177:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "177:15:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "177:15:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "212:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "215:4:2",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "205:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "205:15:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "205:15:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "103:1:2"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "106:3:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "100:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "100:10:2"
															},
															"nodeType": "YulIf",
															"src": "97:133:2"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "45:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "48:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "54:3:2",
														"type": ""
													}
												],
												"src": "14:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "340:209:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "386:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "395:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "398:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "388:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "388:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "388:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "361:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "370:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "357:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "357:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "382:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "353:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "353:32:2"
															},
															"nodeType": "YulIf",
															"src": "350:52:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "411:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "430:9:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "424:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "424:16:2"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "415:5:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "503:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "512:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "515:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "505:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "505:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "505:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "462:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "473:5:2"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "488:3:2",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "493:1:2",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "484:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "484:11:2"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "497:1:2",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "480:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "480:19:2"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "469:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "469:31:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "459:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "459:42:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "452:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "452:50:2"
															},
															"nodeType": "YulIf",
															"src": "449:70:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "528:15:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "538:5:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "528:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_ERC20Basic_$332_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "306:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "317:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "329:6:2",
														"type": ""
													}
												],
												"src": "241:308:2"
											}
										]
									},
									"contents": "{\n    { }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_decode_tuple_t_contract$_ERC20Basic_$332_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526100104261012c610072565b60025560046003556006600455600260055534801561002e57600080fd5b5060405161136b38038061136b83398101604081905261004d91610099565b600080546001600160a01b0319166001600160a01b03929092169190911790556100c9565b8082018082111561009357634e487b7160e01b600052601160045260246000fd5b92915050565b6000602082840312156100ab57600080fd5b81516001600160a01b03811681146100c257600080fd5b9392505050565b611293806100d86000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063bd8343451161005b578063bd834345146100e9578063cb8d751a146100fc578063f42f2e821461010f578063f87c34f51461013557600080fd5b8063156213731461008d57806316f88c94146100a0578063949813b8146100b5578063b6e2b395146100d6575b600080fd5b6040513081526020015b60405180910390f35b6100b36100ae366004610e15565b610155565b005b6100c86100c3366004610eea565b61057b565b604051908152602001610097565b6100c86100e4366004610eea565b61061e565b6100c86100f7366004610eea565b610693565b6100c861010a366004610eea565b610767565b61012261011d366004610eea565b610b5f565b6040516100979796959493929190610f6a565b610148610143366004610eea565b610c35565b6040516100979190610fb8565b6000546040516370a0823160e01b815233600482015285916001600160a01b0316906370a0823190602401602060405180830381865afa15801561019d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c19190611029565b101561020b5760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742042616c616e636560601b60448201526064015b60405180910390fd5b60405164199a5e195960da1b602082015260250160405160208183030381529060405280519060200120836040516020016102469190611042565b604051602081830303815290604052805190602001200361040257600084116102cb5760405162461bcd60e51b815260206004820152603160248201527f205374616b652063616e206e6f742062652030202c20456e74657220736f6d6560448201527020616d6f756e74206f6620746f6b656e7360781b6064820152608401610202565b336000908152600a602052604090208481556001016102ea84826110e7565b50816002546102f991906111bd565b336000818152600a60205260408082206002810194909455600480850180546001600160a81b031916871515610100600160a81b0319161761010086021760ff60a81b1916905542600390950194909455905490516317d5759960e31b81526001600160a01b039091169263beabacc89261037a92909130918a91016111d0565b6020604051808303816000875af1158015610399573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103bd91906111f4565b506040805133815260208101869052428183015290517f96c68044657fcb3bea5ad282f026bd0361f647d377dfe1615a77e35dd87280a19181900360600190a1610575565b604051661d5b999a5e195960ca1b6020820152602701604051602081830303815290604052805190602001208360405160200161043f9190611042565b604051602081830303815290604052805190602001200361057557336000908152600a6020526040902084815560010161047984826110e7565b50336000818152600a6020526040808220600480820180546001600160a81b031916871515610100600160a81b0319161761010087021760ff60a81b1916905542600390920191909155915490516317d5759960e31b81526001600160a01b039091169263beabacc8926104f19230918a91016111d0565b6020604051808303816000875af1158015610510573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053491906111f4565b506040805133815260208101869052428183015290517f96c68044657fcb3bea5ad282f026bd0361f647d377dfe1615a77e35dd87280a19181900360600190a15b50505050565b6001600160a01b0381166000908152600a602052604081206004015460ff1615156001036105e2576001600160a01b0382166000908152600a6020526040902060040154600160a81b900460ff1615156001036105da57506000919050565b505060075490565b6001600160a01b0382166000908152600a6020526040902060040154600160a81b900460ff1615156001036105da57506000919050565b919050565b600080546040516370a0823160e01b81526001600160a01b038481166004830152909116906370a0823190602401602060405180830381865afa158015610669573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068d9190611029565b92915050565b6001600160a01b0381166000908152600a602052604081206004015460ff16151560010361071757336000908152600a60205260409020600201544211156106fb576007546001600160a01b0383166000908152600a602052604090205461068d91906111bd565b506001600160a01b03166000908152600a602052604090205490565b336000908152600a60205260409020600201544210156107415760085460095461068d9190611211565b6007546001600160a01b0383166000908152600a602052604090205461068d91906111bd565b6001600160a01b038082166000908152600a602052604081206004015490913361010090920416146107db5760405162461bcd60e51b815260206004820152601c60248201527f5374616b6520686173206e6f74206265656e20696e69746961746564000000006044820152606401610202565b6001600160a01b0382166000908152600a602052604090206004015460ff161515600103610b1057336000908152600a6020526040902060020154421115610966576004546001600160a01b0383166000908152600a602052604090205460649161084591611224565b61084f919061123b565b60078190556001600160a01b0383166000908152600a602052604090205461087791906111bd565b60088190556000546040516317d5759960e31b81526001600160a01b039091169163beabacc8916108af9130918791906004016111d0565b6020604051808303816000875af11580156108ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f291906111f4565b506001600160a01b0382166000908152600a602052604081208181559061091c6001830182610d90565b5060006002820181905560038201819055600491820180546001600160b01b0319169055338152600a6020526040902001805460ff60a81b1916600160a81b179055505060085490565b336000908152600a60205260409020600201544210156106195760025442106109ab5760405162461bcd60e51b81526020600482015260006024820152604401610202565b6004546001600160a01b0383166000908152600a60205260409020546064916109d391611224565b6109dd919061123b565b60078190556064906109f0906060611224565b6109fa919061123b565b60088190556001600160a01b0383166000908152600a6020526040902054610a21916111bd565b60098190556000546040516317d5759960e31b81526001600160a01b039091169163beabacc891610a599130918791906004016111d0565b6020604051808303816000875af1158015610a78573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9c91906111f4565b506001600160a01b0382166000908152600a6020526040812081815590610ac66001830182610d90565b5060006002820181905560038201819055600491820180546001600160b01b0319169055338152600a6020526040902001805460ff60a81b1916600160a81b179055505060095490565b6001600160a01b0382166000908152600a602052604081206004015460ff1615159003610619576005546001600160a01b0383166000908152600a602052604090205460649161084591611224565b600a6020526000908152604090208054600182018054919291610b819061105e565b80601f0160208091040260200160405190810160405280929190818152602001828054610bad9061105e565b8015610bfa5780601f10610bcf57610100808354040283529160200191610bfa565b820191906000526020600020905b815481529060010190602001808311610bdd57829003601f168201915b505050600284015460038501546004909501549394909390925060ff80821692506001600160a01b0361010083041691600160a81b90041687565b610c826040518060e001604052806000815260200160608152602001600081526020016000815260200160001515815260200160006001600160a01b031681526020016000151581525090565b6001600160a01b0382166000908152600a6020908152604091829020825160e08101909352805483526001810180549192840191610cbf9061105e565b80601f0160208091040260200160405190810160405280929190818152602001828054610ceb9061105e565b8015610d385780601f10610d0d57610100808354040283529160200191610d38565b820191906000526020600020905b815481529060010190602001808311610d1b57829003601f168201915b5050509183525050600282015460208201526003820154604082015260049091015460ff808216151560608401526001600160a01b036101008304166080840152600160a81b90910416151560a09091015292915050565b508054610d9c9061105e565b6000825580601f10610dac575050565b601f016020900490600052602060002090810190610dca9190610dcd565b50565b5b80821115610de25760008155600101610dce565b5090565b634e487b7160e01b600052604160045260246000fd5b8015158114610dca57600080fd5b803561061981610dfc565b60008060008060808587031215610e2b57600080fd5b84359350602085013567ffffffffffffffff80821115610e4a57600080fd5b818701915087601f830112610e5e57600080fd5b813581811115610e7057610e70610de6565b604051601f8201601f19908116603f01168101908382118183101715610e9857610e98610de6565b816040528281528a6020848701011115610eb157600080fd5b82602086016020830137600060208483010152809750505050505060408501359150610edf60608601610e0a565b905092959194509250565b600060208284031215610efc57600080fd5b81356001600160a01b0381168114610f1357600080fd5b9392505050565b60005b83811015610f35578181015183820152602001610f1d565b50506000910152565b60008151808452610f56816020860160208601610f1a565b601f01601f19169290920160200192915050565b87815260e060208201526000610f8360e0830189610f3e565b604083019790975250606081019490945291151560808401526001600160a01b031660a0830152151560c09091015292915050565b60208152815160208201526000602083015160e06040840152610fdf610100840182610f3e565b905060408401516060840152606084015160808401526080840151151560a084015260018060a01b0360a08501511660c084015260c0840151151560e08401528091505092915050565b60006020828403121561103b57600080fd5b5051919050565b60008251611054818460208701610f1a565b9190910192915050565b600181811c9082168061107257607f821691505b60208210810361109257634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156110e257600081815260208120601f850160051c810160208610156110bf5750805b601f850160051c820191505b818110156110de578281556001016110cb565b5050505b505050565b815167ffffffffffffffff81111561110157611101610de6565b6111158161110f845461105e565b84611098565b602080601f83116001811461114a57600084156111325750858301515b600019600386901b1c1916600185901b1785556110de565b600085815260208120601f198616915b828110156111795788860151825594840194600190910190840161115a565b50858210156111975787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b8082018082111561068d5761068d6111a7565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60006020828403121561120657600080fd5b8151610f1381610dfc565b8181038181111561068d5761068d6111a7565b808202811582820484141761068d5761068d6111a7565b60008261125857634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212203cecb1a2252bc34f7539eda3e426dbf799053f0657984a7369068e89b54860fd64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0x10 TIMESTAMP PUSH2 0x12C PUSH2 0x72 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x4 PUSH1 0x3 SSTORE PUSH1 0x6 PUSH1 0x4 SSTORE PUSH1 0x2 PUSH1 0x5 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x136B CODESIZE SUB DUP1 PUSH2 0x136B DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x4D SWAP2 PUSH2 0x99 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0xC9 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x93 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1293 DUP1 PUSH2 0xD8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBD834345 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xBD834345 EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0xCB8D751A EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0xF42F2E82 EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0xF87C34F5 EQ PUSH2 0x135 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x15621373 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x16F88C94 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x949813B8 EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0xB6E2B395 EQ PUSH2 0xD6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD ADDRESS DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB3 PUSH2 0xAE CALLDATASIZE PUSH1 0x4 PUSH2 0xE15 JUMP JUMPDEST PUSH2 0x155 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC8 PUSH2 0xC3 CALLDATASIZE PUSH1 0x4 PUSH2 0xEEA JUMP JUMPDEST PUSH2 0x57B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x97 JUMP JUMPDEST PUSH2 0xC8 PUSH2 0xE4 CALLDATASIZE PUSH1 0x4 PUSH2 0xEEA JUMP JUMPDEST PUSH2 0x61E JUMP JUMPDEST PUSH2 0xC8 PUSH2 0xF7 CALLDATASIZE PUSH1 0x4 PUSH2 0xEEA JUMP JUMPDEST PUSH2 0x693 JUMP JUMPDEST PUSH2 0xC8 PUSH2 0x10A CALLDATASIZE PUSH1 0x4 PUSH2 0xEEA JUMP JUMPDEST PUSH2 0x767 JUMP JUMPDEST PUSH2 0x122 PUSH2 0x11D CALLDATASIZE PUSH1 0x4 PUSH2 0xEEA JUMP JUMPDEST PUSH2 0xB5F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x97 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF6A JUMP JUMPDEST PUSH2 0x148 PUSH2 0x143 CALLDATASIZE PUSH1 0x4 PUSH2 0xEEA JUMP JUMPDEST PUSH2 0xC35 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x97 SWAP2 SWAP1 PUSH2 0xFB8 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE DUP6 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x19D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C1 SWAP2 SWAP1 PUSH2 0x1029 JUMP JUMPDEST LT ISZERO PUSH2 0x20B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742042616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH5 0x199A5E1959 PUSH1 0xDA SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x25 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x246 SWAP2 SWAP1 PUSH2 0x1042 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SUB PUSH2 0x402 JUMPI PUSH1 0x0 DUP5 GT PUSH2 0x2CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x205374616B652063616E206E6F742062652030202C20456E74657220736F6D65 PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0x20616D6F756E74206F6620746F6B656E73 PUSH1 0x78 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x202 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP5 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2EA DUP5 DUP3 PUSH2 0x10E7 JUMP JUMPDEST POP DUP2 PUSH1 0x2 SLOAD PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x11BD JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x2 DUP2 ADD SWAP5 SWAP1 SWAP5 SSTORE PUSH1 0x4 DUP1 DUP6 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND DUP8 ISZERO ISZERO PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND OR PUSH2 0x100 DUP7 MUL OR PUSH1 0xFF PUSH1 0xA8 SHL NOT AND SWAP1 SSTORE TIMESTAMP PUSH1 0x3 SWAP1 SWAP6 ADD SWAP5 SWAP1 SWAP5 SSTORE SWAP1 SLOAD SWAP1 MLOAD PUSH4 0x17D57599 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 PUSH4 0xBEABACC8 SWAP3 PUSH2 0x37A SWAP3 SWAP1 SWAP2 ADDRESS SWAP2 DUP11 SWAP2 ADD PUSH2 0x11D0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x399 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3BD SWAP2 SWAP1 PUSH2 0x11F4 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE TIMESTAMP DUP2 DUP4 ADD MSTORE SWAP1 MLOAD PUSH32 0x96C68044657FCB3BEA5AD282F026BD0361F647D377DFE1615A77E35DD87280A1 SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 PUSH2 0x575 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH7 0x1D5B999A5E1959 PUSH1 0xCA SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x27 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x43F SWAP2 SWAP1 PUSH2 0x1042 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SUB PUSH2 0x575 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP5 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x479 DUP5 DUP3 PUSH2 0x10E7 JUMP JUMPDEST POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x4 DUP1 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND DUP8 ISZERO ISZERO PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND OR PUSH2 0x100 DUP8 MUL OR PUSH1 0xFF PUSH1 0xA8 SHL NOT AND SWAP1 SSTORE TIMESTAMP PUSH1 0x3 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP2 SLOAD SWAP1 MLOAD PUSH4 0x17D57599 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 PUSH4 0xBEABACC8 SWAP3 PUSH2 0x4F1 SWAP3 ADDRESS SWAP2 DUP11 SWAP2 ADD PUSH2 0x11D0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x510 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x534 SWAP2 SWAP1 PUSH2 0x11F4 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE TIMESTAMP DUP2 DUP4 ADD MSTORE SWAP1 MLOAD PUSH32 0x96C68044657FCB3BEA5AD282F026BD0361F647D377DFE1615A77E35DD87280A1 SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 SUB PUSH2 0x5E2 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 SUB PUSH2 0x5DA JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST POP POP PUSH1 0x7 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 SUB PUSH2 0x5DA JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x669 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x68D SWAP2 SWAP1 PUSH2 0x1029 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 SUB PUSH2 0x717 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD TIMESTAMP GT ISZERO PUSH2 0x6FB JUMPI PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x68D SWAP2 SWAP1 PUSH2 0x11BD JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x741 JUMPI PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH2 0x68D SWAP2 SWAP1 PUSH2 0x1211 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x68D SWAP2 SWAP1 PUSH2 0x11BD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 ADD SLOAD SWAP1 SWAP2 CALLER PUSH2 0x100 SWAP1 SWAP3 DIV AND EQ PUSH2 0x7DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B6520686173206E6F74206265656E20696E6974696174656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x202 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 SUB PUSH2 0xB10 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD TIMESTAMP GT ISZERO PUSH2 0x966 JUMPI PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x64 SWAP2 PUSH2 0x845 SWAP2 PUSH2 0x1224 JUMP JUMPDEST PUSH2 0x84F SWAP2 SWAP1 PUSH2 0x123B JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x877 SWAP2 SWAP1 PUSH2 0x11BD JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x17D57599 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0xBEABACC8 SWAP2 PUSH2 0x8AF SWAP2 ADDRESS SWAP2 DUP8 SWAP2 SWAP1 PUSH1 0x4 ADD PUSH2 0x11D0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8CE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8F2 SWAP2 SWAP1 PUSH2 0x11F4 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 DUP2 SSTORE SWAP1 PUSH2 0x91C PUSH1 0x1 DUP4 ADD DUP3 PUSH2 0xD90 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x2 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x4 SWAP2 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT AND SWAP1 SSTORE CALLER DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0xA8 SHL NOT AND PUSH1 0x1 PUSH1 0xA8 SHL OR SWAP1 SSTORE POP POP PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x619 JUMPI PUSH1 0x2 SLOAD TIMESTAMP LT PUSH2 0x9AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x202 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x64 SWAP2 PUSH2 0x9D3 SWAP2 PUSH2 0x1224 JUMP JUMPDEST PUSH2 0x9DD SWAP2 SWAP1 PUSH2 0x123B JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE PUSH1 0x64 SWAP1 PUSH2 0x9F0 SWAP1 PUSH1 0x60 PUSH2 0x1224 JUMP JUMPDEST PUSH2 0x9FA SWAP2 SWAP1 PUSH2 0x123B JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xA21 SWAP2 PUSH2 0x11BD JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x17D57599 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0xBEABACC8 SWAP2 PUSH2 0xA59 SWAP2 ADDRESS SWAP2 DUP8 SWAP2 SWAP1 PUSH1 0x4 ADD PUSH2 0x11D0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA78 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA9C SWAP2 SWAP1 PUSH2 0x11F4 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 DUP2 SSTORE SWAP1 PUSH2 0xAC6 PUSH1 0x1 DUP4 ADD DUP3 PUSH2 0xD90 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x2 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x4 SWAP2 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT AND SWAP1 SSTORE CALLER DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0xA8 SHL NOT AND PUSH1 0x1 PUSH1 0xA8 SHL OR SWAP1 SSTORE POP POP PUSH1 0x9 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO SWAP1 SUB PUSH2 0x619 JUMPI PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x64 SWAP2 PUSH2 0x845 SWAP2 PUSH2 0x1224 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD SWAP2 SWAP3 SWAP2 PUSH2 0xB81 SWAP1 PUSH2 0x105E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xBAD SWAP1 PUSH2 0x105E JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBFA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBCF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBFA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBDD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x2 DUP5 ADD SLOAD PUSH1 0x3 DUP6 ADD SLOAD PUSH1 0x4 SWAP1 SWAP6 ADD SLOAD SWAP4 SWAP5 SWAP1 SWAP4 SWAP1 SWAP3 POP PUSH1 0xFF DUP1 DUP3 AND SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 DUP4 DIV AND SWAP2 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV AND DUP8 JUMP JUMPDEST PUSH2 0xC82 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0xE0 DUP2 ADD SWAP1 SWAP4 MSTORE DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD SWAP2 SWAP3 DUP5 ADD SWAP2 PUSH2 0xCBF SWAP1 PUSH2 0x105E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xCEB SWAP1 PUSH2 0x105E JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD38 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD0D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD38 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD1B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x4 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 DUP4 DIV AND PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 SWAP2 DIV AND ISZERO ISZERO PUSH1 0xA0 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0xD9C SWAP1 PUSH2 0x105E JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0xDAC JUMPI POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0xDCA SWAP2 SWAP1 PUSH2 0xDCD JUMP JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xDE2 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xDCE JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xDCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x619 DUP2 PUSH2 0xDFC JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xE2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xE70 JUMPI PUSH2 0xE70 PUSH2 0xDE6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xE98 JUMPI PUSH2 0xE98 PUSH2 0xDE6 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xEB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP8 POP POP POP POP POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH2 0xEDF PUSH1 0x60 DUP7 ADD PUSH2 0xE0A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xF13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF35 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xF1D JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xF56 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xF1A JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP8 DUP2 MSTORE PUSH1 0xE0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0xF83 PUSH1 0xE0 DUP4 ADD DUP10 PUSH2 0xF3E JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP8 SWAP1 SWAP8 MSTORE POP PUSH1 0x60 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA0 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0xC0 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0xE0 PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0xFDF PUSH2 0x100 DUP5 ADD DUP3 PUSH2 0xF3E JUMP JUMPDEST SWAP1 POP PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x80 DUP5 ADD MLOAD ISZERO ISZERO PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xA0 DUP6 ADD MLOAD AND PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xC0 DUP5 ADD MLOAD ISZERO ISZERO PUSH1 0xE0 DUP5 ADD MSTORE DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x103B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1054 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0xF1A JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1072 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1092 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x10E2 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x10BF JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x10DE JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x10CB JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1101 JUMPI PUSH2 0x1101 PUSH2 0xDE6 JUMP JUMPDEST PUSH2 0x1115 DUP2 PUSH2 0x110F DUP5 SLOAD PUSH2 0x105E JUMP JUMPDEST DUP5 PUSH2 0x1098 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x114A JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1132 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x10DE JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1179 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x115A JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x1197 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x68D JUMPI PUSH2 0x68D PUSH2 0x11A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1206 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xF13 DUP2 PUSH2 0xDFC JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x68D JUMPI PUSH2 0x68D PUSH2 0x11A7 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x68D JUMPI PUSH2 0x68D PUSH2 0x11A7 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1258 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY 0xEC 0xB1 LOG2 0x25 0x2B 0xC3 0x4F PUSH22 0x39EDA3E426DBF799053F0657984A7369068E89B54860 REVERT PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "82:5690:1:-:0;;;499:21;:15;517:3;499:21;:::i;:::-;462:58;;551:1;526:26;;588:1;559:30;;626:1;595:32;;134:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;182:5;:21;;-1:-1:-1;;;;;;182:21:1;-1:-1:-1;;;;;182:21:1;;;;;;;;;;82:5690;;14:222:2;79:9;;;100:10;;;97:133;;;152:10;147:3;143:20;140:1;133:31;187:4;184:1;177:15;215:4;212:1;205:15;97:133;14:222;;;;:::o;241:308::-;329:6;382:2;370:9;361:7;357:23;353:32;350:52;;;398:1;395;388:12;350:52;424:16;;-1:-1:-1;;;;;469:31:2;;459:42;;449:70;;515:1;512;505:12;449:70;538:5;241:308;-1:-1:-1;;;241:308:2:o;:::-;82:5690:1;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@Stake_details_394": {
									"entryPoint": 2911,
									"id": 394,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@TokenBalance_838": {
									"entryPoint": 1566,
									"id": 838,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@claimedRewards_899": {
									"entryPoint": 1683,
									"id": 899,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getcontractaddress_966": {
									"entryPoint": null,
									"id": 966,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getstaking_details_955": {
									"entryPoint": 3125,
									"id": 955,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@staking_612": {
									"entryPoint": 341,
									"id": 612,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@unclaimedRewards_942": {
									"entryPoint": 1403,
									"id": 942,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@unstaking_825": {
									"entryPoint": 1895,
									"id": 825,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_bool": {
									"entryPoint": 3594,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3818,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4596,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 4137,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_string_memory_ptrt_uint256t_bool": {
									"entryPoint": 3605,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_string": {
									"entryPoint": 3902,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4162,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_98e9b9ec6ec5cb027329fb3edfd614982037165b3eb6e3801bcdb909918e55cc__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_bd1d42e9272482b0986089eea16c3cc3c47f2020739690fc4f4c79b6c318c90b__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4560,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_17ac8a1b670997c47eb5db3b275d4cfbf9a7057d7edf6c4417eb60b090de2744__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ca0a83dc10b25352d6635afca2896efe767c10156b65b75ff0e015ec9b66c32e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_Stake_$364_memory_ptr__to_t_struct$_Stake_$364_memory_ptr__fromStack_reversed": {
									"entryPoint": 4024,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_string_memory_ptr_t_uint256_t_uint256_t_bool_t_address_t_bool__to_t_uint256_t_string_memory_ptr_t_uint256_t_uint256_t_bool_t_address_t_bool__fromStack_reversed": {
									"entryPoint": 3946,
									"id": null,
									"parameterSlots": 8,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4541,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4667,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4644,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4625,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 4248,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 4327,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3866,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 4190,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4519,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 3558,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bool": {
									"entryPoint": 3580,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:11010:2",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:2",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:102:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "182:6:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "198:3:2",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "203:1:2",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "194:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "194:11:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "207:1:2",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "190:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "190:19:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "178:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "178:32:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:51:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:51:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:2",
														"type": ""
													}
												],
												"src": "14:203:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "254:95:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "271:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "278:3:2",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "283:10:2",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "274:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "274:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "264:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "264:31:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "264:31:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "311:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "314:4:2",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "304:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "304:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "304:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "335:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "338:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "328:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "328:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "328:15:2"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "222:127:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "396:76:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "450:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "459:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "462:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "452:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "452:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "452:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "419:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "440:5:2"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "433:6:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "433:13:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "426:6:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "426:21:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "416:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "416:32:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "409:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "409:40:2"
															},
															"nodeType": "YulIf",
															"src": "406:60:2"
														}
													]
												},
												"name": "validator_revert_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "385:5:2",
														"type": ""
													}
												],
												"src": "354:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "523:82:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "533:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "555:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "542:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "542:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "533:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "593:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nodeType": "YulIdentifier",
																	"src": "571:21:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "571:28:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "571:28:2"
														}
													]
												},
												"name": "abi_decode_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "502:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "513:5:2",
														"type": ""
													}
												],
												"src": "477:128:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "738:999:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "785:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "794:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "797:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "787:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "787:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "787:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "759:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "768:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "755:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "755:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "780:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "751:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "751:33:2"
															},
															"nodeType": "YulIf",
															"src": "748:53:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "810:33:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "833:9:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "820:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "820:23:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "810:6:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "852:46:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "883:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "894:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "879:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "879:18:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "866:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "866:32:2"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "856:6:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "907:28:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "917:18:2",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "911:2:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "962:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "971:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "974:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "964:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "964:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "964:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "950:6:2"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "958:2:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "947:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "947:14:2"
															},
															"nodeType": "YulIf",
															"src": "944:34:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "987:32:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1001:9:2"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1012:6:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "997:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "997:22:2"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "991:2:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1067:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1076:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1079:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1069:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1069:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1069:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1046:2:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1050:4:2",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1042:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1042:13:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1057:7:2"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1038:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1038:27:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1031:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1031:35:2"
															},
															"nodeType": "YulIf",
															"src": "1028:55:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1092:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1115:2:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1102:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1102:16:2"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "1096:2:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1141:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1143:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1143:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1143:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1133:2:2"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1137:2:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1130:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1130:10:2"
															},
															"nodeType": "YulIf",
															"src": "1127:36:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1172:17:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1186:2:2",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "1182:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1182:7:2"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "1176:2:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1198:23:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1218:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1212:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1212:9:2"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "1202:6:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1230:71:2",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1252:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "1276:2:2"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1280:4:2",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "1272:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1272:13:2"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "1287:2:2"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "1268:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1268:22:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1292:2:2",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1264:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1264:31:2"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "1297:2:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1260:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1260:40:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1248:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1248:53:2"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1234:10:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1360:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1362:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1362:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1362:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1319:10:2"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1331:2:2"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1316:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1316:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1339:10:2"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1351:6:2"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1336:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1336:22:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1313:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1313:46:2"
															},
															"nodeType": "YulIf",
															"src": "1310:72:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1398:2:2",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1402:10:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1391:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1391:22:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1391:22:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1429:6:2"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1437:2:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1422:18:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1422:18:2"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1486:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1495:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1498:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1488:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1488:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1488:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1463:2:2"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "1467:2:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1459:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1459:11:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1472:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1455:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1455:20:2"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1477:7:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1452:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1452:33:2"
															},
															"nodeType": "YulIf",
															"src": "1449:53:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1528:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1536:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1524:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1524:15:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "1545:2:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1549:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1541:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1541:11:2"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1554:2:2"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1511:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1511:46:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1511:46:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "1581:6:2"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "1589:2:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1577:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1577:15:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1594:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1573:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1573:24:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1599:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1566:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1566:35:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1566:35:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1610:16:2",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1620:6:2"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1610:6:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1635:42:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1662:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1673:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1658:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1658:18:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1645:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1645:32:2"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1635:6:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1686:45:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1716:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1727:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1712:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1712:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bool",
																	"nodeType": "YulIdentifier",
																	"src": "1696:15:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1696:35:2"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "1686:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_string_memory_ptrt_uint256t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "680:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "691:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "703:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "711:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "719:6:2",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "727:6:2",
														"type": ""
													}
												],
												"src": "610:1127:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1812:216:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1858:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1867:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1870:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1860:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1860:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1860:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1833:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1842:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1829:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1829:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1854:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1825:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1825:32:2"
															},
															"nodeType": "YulIf",
															"src": "1822:52:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1883:36:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1909:9:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1896:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1896:23:2"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1887:5:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1982:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1991:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1994:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1984:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1984:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1984:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1941:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1952:5:2"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1967:3:2",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1972:1:2",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1963:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1963:11:2"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1976:1:2",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "1959:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1959:19:2"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1948:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1948:31:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1938:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1938:42:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1931:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1931:50:2"
															},
															"nodeType": "YulIf",
															"src": "1928:70:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2007:15:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2017:5:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2007:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1778:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1789:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1801:6:2",
														"type": ""
													}
												],
												"src": "1742:286:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2134:76:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2144:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2156:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2167:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2152:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2152:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2144:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2186:9:2"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2197:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2179:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2179:25:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2179:25:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2103:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2114:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2125:4:2",
														"type": ""
													}
												],
												"src": "2033:177:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2281:184:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2291:10:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2300:1:2",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2295:1:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2360:63:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2385:3:2"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "2390:1:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2381:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2381:11:2"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "2404:3:2"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "2409:1:2"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2400:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2400:11:2"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2394:5:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2394:18:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2374:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2374:39:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2374:39:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2321:1:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2324:6:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2318:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2318:13:2"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2332:19:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2334:15:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2343:1:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2346:2:2",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2339:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2339:10:2"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2334:1:2"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2314:3:2",
																"statements": []
															},
															"src": "2310:113:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "2443:3:2"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2448:6:2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2439:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2439:16:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2457:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2432:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2432:27:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2432:27:2"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2259:3:2",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "2264:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2269:6:2",
														"type": ""
													}
												],
												"src": "2215:250:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2520:221:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2530:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2550:5:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2544:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2544:12:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2534:6:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2577:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2565:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2565:19:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2565:19:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2632:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2639:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2628:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2628:16:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2650:3:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2655:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2646:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2646:14:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2662:6:2"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2593:34:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2593:76:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2593:76:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2678:57:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2693:3:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "2706:6:2"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2714:2:2",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2702:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2702:15:2"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2723:2:2",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2719:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2719:7:2"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2698:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2698:29:2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2689:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2689:39:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2730:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2685:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2685:50:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2678:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2497:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2504:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2512:3:2",
														"type": ""
													}
												],
												"src": "2470:271:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3023:420:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3040:9:2"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3051:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3033:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3033:25:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3033:25:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3078:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3089:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3074:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3074:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3094:3:2",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3067:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3067:31:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3067:31:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3107:54:2",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3133:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3145:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3156:3:2",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3141:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3141:19:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "3115:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3115:46:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3107:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3181:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3192:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3177:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3177:18:2"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "3197:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3170:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3170:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3170:34:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3224:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3235:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3220:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3220:18:2"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "3240:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3213:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3213:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3213:34:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3267:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3278:3:2",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3263:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3263:19:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value4",
																						"nodeType": "YulIdentifier",
																						"src": "3298:6:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3291:6:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3291:14:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3284:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3284:22:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3256:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3256:51:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3256:51:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3327:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3338:3:2",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3323:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3323:19:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value5",
																				"nodeType": "YulIdentifier",
																				"src": "3348:6:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3364:3:2",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3369:1:2",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3360:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3360:11:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3373:1:2",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3356:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3356:19:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3344:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3344:32:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3316:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3316:61:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3316:61:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3397:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3408:3:2",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3393:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3393:19:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value6",
																						"nodeType": "YulIdentifier",
																						"src": "3428:6:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3421:6:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3421:14:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3414:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3414:22:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3386:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3386:51:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3386:51:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_string_memory_ptr_t_uint256_t_uint256_t_bool_t_address_t_bool__to_t_uint256_t_string_memory_ptr_t_uint256_t_uint256_t_bool_t_address_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2944:9:2",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "2955:6:2",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "2963:6:2",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2971:6:2",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2979:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2987:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2995:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3003:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3014:4:2",
														"type": ""
													}
												],
												"src": "2746:697:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3593:638:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3610:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3621:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3603:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3603:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3603:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3644:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3655:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3640:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3640:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3666:6:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3660:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3660:13:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3633:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3633:41:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3633:41:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3683:42:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3713:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3721:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3709:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3709:15:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3703:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3703:22:2"
															},
															"variables": [
																{
																	"name": "memberValue0",
																	"nodeType": "YulTypedName",
																	"src": "3687:12:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3745:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3756:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3741:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3741:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3761:4:2",
																		"type": "",
																		"value": "0xe0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3734:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3734:32:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3734:32:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3775:66:2",
															"value": {
																"arguments": [
																	{
																		"name": "memberValue0",
																		"nodeType": "YulIdentifier",
																		"src": "3807:12:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3825:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3836:3:2",
																				"type": "",
																				"value": "256"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3821:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3821:19:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "3789:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3789:52:2"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "3779:6:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3861:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3872:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3857:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3857:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "3887:6:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3895:2:2",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3883:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3883:15:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3877:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3877:22:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3850:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3850:50:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3850:50:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3920:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3931:3:2",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3916:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3916:19:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "3947:6:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3955:2:2",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3943:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3943:15:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3937:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3937:22:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3909:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3909:51:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3909:51:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3980:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3991:3:2",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3976:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3976:19:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "value0",
																										"nodeType": "YulIdentifier",
																										"src": "4021:6:2"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4029:3:2",
																										"type": "",
																										"value": "128"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4017:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4017:16:2"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "4011:5:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4011:23:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4004:6:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4004:31:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3997:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3997:39:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3969:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3969:68:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3969:68:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4057:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4068:3:2",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4053:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4053:19:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value0",
																								"nodeType": "YulIdentifier",
																								"src": "4088:6:2"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4096:3:2",
																								"type": "",
																								"value": "160"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "4084:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4084:16:2"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "4078:5:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4078:23:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4111:3:2",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4116:1:2",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4107:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4107:11:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4120:1:2",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4103:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4103:19:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4074:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4074:49:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4046:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4046:78:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4046:78:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4144:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4155:4:2",
																				"type": "",
																				"value": "0xe0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4140:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4140:20:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "value0",
																										"nodeType": "YulIdentifier",
																										"src": "4186:6:2"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4194:3:2",
																										"type": "",
																										"value": "192"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4182:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4182:16:2"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "4176:5:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4176:23:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4169:6:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4169:31:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4162:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4162:39:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4133:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4133:69:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4133:69:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4211:14:2",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "4219:6:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4211:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_Stake_$364_memory_ptr__to_t_struct$_Stake_$364_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3562:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3573:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3584:4:2",
														"type": ""
													}
												],
												"src": "3448:783:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4317:103:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4363:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4372:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4375:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4365:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4365:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4365:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4338:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4347:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4334:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4334:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4359:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4330:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4330:32:2"
															},
															"nodeType": "YulIf",
															"src": "4327:52:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4388:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4404:9:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4398:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4398:16:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4388:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4283:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4294:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4306:6:2",
														"type": ""
													}
												],
												"src": "4236:184:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4599:170:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4616:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4627:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4609:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4609:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4609:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4650:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4661:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4646:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4646:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4666:2:2",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4639:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4639:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4639:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4689:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4700:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4685:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4685:18:2"
																	},
																	{
																		"hexValue": "496e73756666696369656e742042616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4705:22:2",
																		"type": "",
																		"value": "Insufficient Balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4678:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4678:50:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4678:50:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4737:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4749:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4760:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4745:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4745:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4737:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4576:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4590:4:2",
														"type": ""
													}
												],
												"src": "4425:344:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4966:63:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4983:3:2"
																	},
																	{
																		"hexValue": "6669786564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4988:7:2",
																		"type": "",
																		"value": "fixed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4976:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4976:20:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4976:20:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5005:18:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5016:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5021:1:2",
																		"type": "",
																		"value": "5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5012:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5012:11:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5005:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_98e9b9ec6ec5cb027329fb3edfd614982037165b3eb6e3801bcdb909918e55cc__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4950:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4958:3:2",
														"type": ""
													}
												],
												"src": "4774:255:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5173:150:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5183:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5203:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5197:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5197:13:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5187:6:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5258:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5266:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5254:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5254:17:2"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5273:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5278:6:2"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "5219:34:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5219:66:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5219:66:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5294:23:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5305:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5310:6:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5301:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5301:16:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5294:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5149:3:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5154:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5165:3:2",
														"type": ""
													}
												],
												"src": "5034:289:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5502:239:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5519:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5530:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5512:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5512:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5512:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5553:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5564:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5549:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5549:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5569:2:2",
																		"type": "",
																		"value": "49"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5542:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5542:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5542:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5592:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5603:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5588:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5588:18:2"
																	},
																	{
																		"hexValue": "205374616b652063616e206e6f742062652030202c20456e74657220736f6d65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5608:34:2",
																		"type": "",
																		"value": " Stake can not be 0 , Enter some"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5581:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5581:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5581:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5663:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5674:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5659:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5659:18:2"
																	},
																	{
																		"hexValue": "20616d6f756e74206f6620746f6b656e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5679:19:2",
																		"type": "",
																		"value": " amount of tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5652:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5652:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5652:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5708:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5720:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5731:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5716:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5716:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5708:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_17ac8a1b670997c47eb5db3b275d4cfbf9a7057d7edf6c4417eb60b090de2744__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5479:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5493:4:2",
														"type": ""
													}
												],
												"src": "5328:413:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5801:325:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5811:22:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5825:1:2",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5828:4:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5821:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5821:12:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5811:6:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5842:38:2",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5872:4:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5878:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5868:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5868:12:2"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "5846:18:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5919:31:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5921:27:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "5935:6:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5943:4:2",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "5931:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5931:17:2"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5921:6:2"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5899:18:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5892:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5892:26:2"
															},
															"nodeType": "YulIf",
															"src": "5889:61:2"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6009:111:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6030:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6037:3:2",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6042:10:2",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "6033:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6033:20:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6023:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6023:31:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6023:31:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6074:1:2",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6077:4:2",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6067:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6067:15:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6067:15:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6102:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6105:4:2",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6095:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6095:15:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6095:15:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5965:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5988:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5996:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5985:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5985:14:2"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "5962:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5962:38:2"
															},
															"nodeType": "YulIf",
															"src": "5959:161:2"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5781:4:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5790:6:2",
														"type": ""
													}
												],
												"src": "5746:380:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6187:65:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6204:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "6207:3:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6197:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6197:14:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6197:14:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6220:26:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6238:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6241:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "6228:9:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6228:18:2"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "6220:4:2"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "6170:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6178:4:2",
														"type": ""
													}
												],
												"src": "6131:121:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6338:464:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6371:425:2",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6385:11:2",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "6395:1:2",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "6389:2:2",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6416:2:2"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "6420:5:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6409:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6409:17:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6409:17:2"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6439:31:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6461:2:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6465:4:2",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "6451:9:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6451:19:2"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "6443:4:2",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6483:57:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "6506:4:2"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6516:1:2",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "6523:10:2"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "6535:2:2",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "6519:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6519:19:2"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "6512:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6512:27:2"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6502:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6502:38:2"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "6487:11:2",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "6577:23:2",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "6579:19:2",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "6594:4:2"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "6579:11:2"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "6559:10:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6571:4:2",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "6556:2:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6556:20:2"
																		},
																		"nodeType": "YulIf",
																		"src": "6553:47:2"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6613:41:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "6627:4:2"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6637:1:2",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "6644:3:2"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "6649:2:2",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "6640:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6640:12:2"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "6633:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6633:20:2"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6623:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6623:31:2"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "6617:2:2",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6667:24:2",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "6680:11:2"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "6671:5:2",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "6765:21:2",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "6774:5:2"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "6781:2:2"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "6767:6:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6767:17:2"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "6767:17:2"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "6715:5:2"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "6722:2:2"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "6712:2:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6712:13:2"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "6726:26:2",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "6728:22:2",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "6741:5:2"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6748:1:2",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "6737:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6737:13:2"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "6728:5:2"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "6708:3:2",
																			"statements": []
																		},
																		"src": "6704:82:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "6354:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6359:2:2",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6351:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6351:11:2"
															},
															"nodeType": "YulIf",
															"src": "6348:448:2"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6310:5:2",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "6317:3:2",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "6322:10:2",
														"type": ""
													}
												],
												"src": "6257:545:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6892:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6902:65:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "6917:4:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "6935:1:2",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "6938:3:2"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "6931:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6931:11:2"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "6948:1:2",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "6944:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6944:6:2"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "6927:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6927:24:2"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "6923:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6923:29:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6913:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6913:40:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6959:1:2",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "6962:3:2"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6955:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6955:11:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6910:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6910:57:2"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "6902:4:2"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6869:4:2",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "6875:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "6883:4:2",
														"type": ""
													}
												],
												"src": "6807:166:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7074:1256:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7084:24:2",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7104:3:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7098:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7098:10:2"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "7088:6:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7151:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7153:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7153:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7153:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7123:6:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7131:18:2",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7120:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7120:30:2"
															},
															"nodeType": "YulIf",
															"src": "7117:56:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "7226:4:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "7264:4:2"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "7258:5:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7258:11:2"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "7232:25:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7232:38:2"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7272:6:2"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "7182:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7182:97:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7182:97:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7288:18:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7305:1:2",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "7292:9:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7315:23:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7334:4:2",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "7319:11:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7347:24:2",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "7360:11:2"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "7347:9:2"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7417:656:2",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7431:35:2",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "7450:6:2"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "7462:2:2",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "7458:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7458:7:2"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "7446:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7446:20:2"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "7435:7:2",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7479:49:2",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "7523:4:2"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "7493:29:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7493:35:2"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "7483:6:2",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7541:10:2",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7550:1:2",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "7545:1:2",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "7628:172:2",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "7653:6:2"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "7671:3:2"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "7676:9:2"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "7667:3:2"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "7667:19:2"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "7661:5:2"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "7661:26:2"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "7646:6:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7646:42:2"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "7646:42:2"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "7705:24:2",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "7719:6:2"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7727:1:2",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7715:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7715:14:2"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "7705:6:2"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "7746:40:2",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "7763:9:2"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "7774:11:2"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7759:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7759:27:2"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "7746:9:2"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "7575:1:2"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "7578:7:2"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "7572:2:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7572:14:2"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "7587:28:2",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "7589:24:2",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "7598:1:2"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "7601:11:2"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7594:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7594:19:2"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "7589:1:2"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "7568:3:2",
																					"statements": []
																				},
																				"src": "7564:236:2"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "7848:166:2",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "7866:43:2",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "7893:3:2"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "7898:9:2"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "7889:3:2"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "7889:19:2"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "7883:5:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7883:26:2"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "7870:9:2",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "7933:6:2"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "7945:9:2"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "7972:1:2",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "7975:6:2"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "7968:3:2"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "7968:14:2"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "7984:3:2",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "7964:3:2"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "7964:24:2"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "7994:1:2",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "7990:3:2"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "7990:6:2"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "7960:3:2"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "7960:37:2"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "7956:3:2"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "7956:42:2"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "7941:3:2"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "7941:58:2"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "7926:6:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7926:74:2"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "7926:74:2"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "7819:7:2"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "7828:6:2"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "7816:2:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7816:19:2"
																				},
																				"nodeType": "YulIf",
																				"src": "7813:201:2"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8034:4:2"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "8048:1:2",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "8051:6:2"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "8044:3:2"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "8044:14:2"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "8060:1:2",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "8040:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8040:22:2"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8027:6:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8027:36:2"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8027:36:2"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "7410:663:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7415:1:2",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8090:234:2",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "8104:14:2",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8117:1:2",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "8108:5:2",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8153:67:2",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "8171:35:2",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "8190:3:2"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "8195:9:2"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "8186:3:2"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8186:19:2"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "8180:5:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8180:26:2"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8171:5:2"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "8134:6:2"
																				},
																				"nodeType": "YulIf",
																				"src": "8131:89:2"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8240:4:2"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8299:5:2"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "8306:6:2"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "8246:52:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8246:67:2"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8233:6:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8233:81:2"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8233:81:2"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "8082:242:2",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7390:6:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7398:2:2",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7387:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7387:14:2"
															},
															"nodeType": "YulSwitch",
															"src": "7380:944:2"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "7059:4:2",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7065:3:2",
														"type": ""
													}
												],
												"src": "6978:1352:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8367:95:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8384:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8391:3:2",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8396:10:2",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8387:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8387:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8377:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8377:31:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8377:31:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8424:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8427:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8417:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8417:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8417:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8448:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8451:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8441:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8441:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8441:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "8335:127:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8515:77:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8525:16:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8536:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8539:1:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8532:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8532:9:2"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "8525:3:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8564:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8566:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8566:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8566:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8556:1:2"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "8559:3:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8553:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8553:10:2"
															},
															"nodeType": "YulIf",
															"src": "8550:36:2"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8498:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8501:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "8507:3:2",
														"type": ""
													}
												],
												"src": "8467:125:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8754:218:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8764:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8776:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8787:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8772:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8772:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8764:4:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8799:29:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8817:3:2",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8822:1:2",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8813:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8813:11:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8826:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "8809:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8809:19:2"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "8803:2:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8844:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "8859:6:2"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "8867:2:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8855:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8855:15:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8837:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8837:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8837:34:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8891:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8902:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8887:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8887:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "8911:6:2"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "8919:2:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8907:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8907:15:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8880:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8880:43:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8880:43:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8943:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8954:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8939:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8939:18:2"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "8959:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8932:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8932:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8932:34:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8707:9:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8718:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8726:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8734:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8745:4:2",
														"type": ""
													}
												],
												"src": "8597:375:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9055:167:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9101:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9110:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9113:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9103:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9103:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9103:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9076:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9085:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9072:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9072:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9097:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9068:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9068:32:2"
															},
															"nodeType": "YulIf",
															"src": "9065:52:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9126:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9145:9:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9139:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9139:16:2"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "9130:5:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9186:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nodeType": "YulIdentifier",
																	"src": "9164:21:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9164:28:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9164:28:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9201:15:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "9211:5:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "9201:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9021:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9032:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9044:6:2",
														"type": ""
													}
												],
												"src": "8977:245:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9384:188:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9394:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9406:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9417:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9402:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9402:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9394:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9436:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "9451:6:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9467:3:2",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9472:1:2",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "9463:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9463:11:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9476:1:2",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "9459:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9459:19:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9447:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9447:32:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9429:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9429:51:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9429:51:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9500:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9511:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9496:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9496:18:2"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9516:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9489:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9489:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9489:34:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9543:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9554:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9539:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9539:18:2"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "9559:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9532:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9532:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9532:34:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9337:9:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9348:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9356:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9364:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9375:4:2",
														"type": ""
													}
												],
												"src": "9227:345:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9769:65:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9786:3:2"
																	},
																	{
																		"hexValue": "756e6669786564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9791:9:2",
																		"type": "",
																		"value": "unfixed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9779:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9779:22:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9779:22:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9810:18:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9821:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9826:1:2",
																		"type": "",
																		"value": "7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9817:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9817:11:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9810:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_bd1d42e9272482b0986089eea16c3cc3c47f2020739690fc4f4c79b6c318c90b__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9753:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9761:3:2",
														"type": ""
													}
												],
												"src": "9577:257:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9888:79:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9898:17:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9910:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9913:1:2"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "9906:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9906:9:2"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "9898:4:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9939:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9941:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9941:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9941:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "9930:4:2"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9936:1:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9927:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9927:11:2"
															},
															"nodeType": "YulIf",
															"src": "9924:37:2"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9870:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9873:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "9879:4:2",
														"type": ""
													}
												],
												"src": "9839:128:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10146:178:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10163:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10174:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10156:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10156:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10156:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10197:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10208:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10193:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10193:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10213:2:2",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10186:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10186:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10186:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10236:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10247:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10232:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10232:18:2"
																	},
																	{
																		"hexValue": "5374616b6520686173206e6f74206265656e20696e69746961746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10252:30:2",
																		"type": "",
																		"value": "Stake has not been initiated"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10225:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10225:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10225:58:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10292:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10304:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10315:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10300:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10300:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10292:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ca0a83dc10b25352d6635afca2896efe767c10156b65b75ff0e015ec9b66c32e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10123:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10137:4:2",
														"type": ""
													}
												],
												"src": "9972:352:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10381:116:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10391:20:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10406:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10409:1:2"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "10402:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10402:9:2"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "10391:7:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10469:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10471:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10471:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10471:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "10440:1:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "10433:6:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10433:9:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "10447:1:2"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "10454:7:2"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "10463:1:2"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "10450:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10450:15:2"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "10444:2:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10444:22:2"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "10430:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10430:37:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10423:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10423:45:2"
															},
															"nodeType": "YulIf",
															"src": "10420:71:2"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10360:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10363:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "10369:7:2",
														"type": ""
													}
												],
												"src": "10329:168:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10548:171:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10579:111:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10600:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "10607:3:2",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "10612:10:2",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "10603:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10603:20:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10593:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10593:31:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10593:31:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10644:1:2",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10647:4:2",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10637:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10637:15:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10637:15:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10672:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10675:4:2",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10665:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10665:15:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10665:15:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10568:1:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10561:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10561:9:2"
															},
															"nodeType": "YulIf",
															"src": "10558:132:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10699:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10708:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10711:1:2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "10704:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10704:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "10699:1:2"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10533:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10536:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "10542:1:2",
														"type": ""
													}
												],
												"src": "10502:217:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10898:110:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10915:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10926:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10908:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10908:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10908:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10949:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10960:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10945:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10945:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10965:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10938:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10938:29:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10938:29:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10976:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10988:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10999:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10984:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10984:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10976:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10875:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10889:4:2",
														"type": ""
													}
												],
												"src": "10724:284:2"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_bool(offset) -> value\n    {\n        value := calldataload(offset)\n        validator_revert_bool(value)\n    }\n    function abi_decode_tuple_t_uint256t_string_memory_ptrt_uint256t_bool(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value1 := memPtr\n        value2 := calldataload(add(headStart, 64))\n        value3 := abi_decode_bool(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_uint256_t_string_memory_ptr_t_uint256_t_uint256_t_bool_t_address_t_bool__to_t_uint256_t_string_memory_ptr_t_uint256_t_uint256_t_bool_t_address_t_bool__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 224)\n        tail := abi_encode_string(value1, add(headStart, 224))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), iszero(iszero(value4)))\n        mstore(add(headStart, 160), and(value5, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 192), iszero(iszero(value6)))\n    }\n    function abi_encode_tuple_t_struct$_Stake_$364_memory_ptr__to_t_struct$_Stake_$364_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), mload(value0))\n        let memberValue0 := mload(add(value0, 32))\n        mstore(add(headStart, 64), 0xe0)\n        let tail_1 := abi_encode_string(memberValue0, add(headStart, 256))\n        mstore(add(headStart, 96), mload(add(value0, 64)))\n        mstore(add(headStart, 128), mload(add(value0, 96)))\n        mstore(add(headStart, 160), iszero(iszero(mload(add(value0, 128)))))\n        mstore(add(headStart, 192), and(mload(add(value0, 160)), sub(shl(160, 1), 1)))\n        mstore(add(headStart, 0xe0), iszero(iszero(mload(add(value0, 192)))))\n        tail := tail_1\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Insufficient Balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_98e9b9ec6ec5cb027329fb3edfd614982037165b3eb6e3801bcdb909918e55cc__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"fixed\")\n        end := add(pos, 5)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_17ac8a1b670997c47eb5db3b275d4cfbf9a7057d7edf6c4417eb60b090de2744__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \" Stake can not be 0 , Enter some\")\n        mstore(add(headStart, 96), \" amount of tokens\")\n        tail := add(headStart, 128)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_bd1d42e9272482b0986089eea16c3cc3c47f2020739690fc4f4c79b6c318c90b__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"unfixed\")\n        end := add(pos, 7)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_ca0a83dc10b25352d6635afca2896efe767c10156b65b75ff0e015ec9b66c32e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Stake has not been initiated\")\n        tail := add(headStart, 96)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 0)\n        tail := add(headStart, 64)\n    }\n}",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100885760003560e01c8063bd8343451161005b578063bd834345146100e9578063cb8d751a146100fc578063f42f2e821461010f578063f87c34f51461013557600080fd5b8063156213731461008d57806316f88c94146100a0578063949813b8146100b5578063b6e2b395146100d6575b600080fd5b6040513081526020015b60405180910390f35b6100b36100ae366004610e15565b610155565b005b6100c86100c3366004610eea565b61057b565b604051908152602001610097565b6100c86100e4366004610eea565b61061e565b6100c86100f7366004610eea565b610693565b6100c861010a366004610eea565b610767565b61012261011d366004610eea565b610b5f565b6040516100979796959493929190610f6a565b610148610143366004610eea565b610c35565b6040516100979190610fb8565b6000546040516370a0823160e01b815233600482015285916001600160a01b0316906370a0823190602401602060405180830381865afa15801561019d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c19190611029565b101561020b5760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742042616c616e636560601b60448201526064015b60405180910390fd5b60405164199a5e195960da1b602082015260250160405160208183030381529060405280519060200120836040516020016102469190611042565b604051602081830303815290604052805190602001200361040257600084116102cb5760405162461bcd60e51b815260206004820152603160248201527f205374616b652063616e206e6f742062652030202c20456e74657220736f6d6560448201527020616d6f756e74206f6620746f6b656e7360781b6064820152608401610202565b336000908152600a602052604090208481556001016102ea84826110e7565b50816002546102f991906111bd565b336000818152600a60205260408082206002810194909455600480850180546001600160a81b031916871515610100600160a81b0319161761010086021760ff60a81b1916905542600390950194909455905490516317d5759960e31b81526001600160a01b039091169263beabacc89261037a92909130918a91016111d0565b6020604051808303816000875af1158015610399573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103bd91906111f4565b506040805133815260208101869052428183015290517f96c68044657fcb3bea5ad282f026bd0361f647d377dfe1615a77e35dd87280a19181900360600190a1610575565b604051661d5b999a5e195960ca1b6020820152602701604051602081830303815290604052805190602001208360405160200161043f9190611042565b604051602081830303815290604052805190602001200361057557336000908152600a6020526040902084815560010161047984826110e7565b50336000818152600a6020526040808220600480820180546001600160a81b031916871515610100600160a81b0319161761010087021760ff60a81b1916905542600390920191909155915490516317d5759960e31b81526001600160a01b039091169263beabacc8926104f19230918a91016111d0565b6020604051808303816000875af1158015610510573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053491906111f4565b506040805133815260208101869052428183015290517f96c68044657fcb3bea5ad282f026bd0361f647d377dfe1615a77e35dd87280a19181900360600190a15b50505050565b6001600160a01b0381166000908152600a602052604081206004015460ff1615156001036105e2576001600160a01b0382166000908152600a6020526040902060040154600160a81b900460ff1615156001036105da57506000919050565b505060075490565b6001600160a01b0382166000908152600a6020526040902060040154600160a81b900460ff1615156001036105da57506000919050565b919050565b600080546040516370a0823160e01b81526001600160a01b038481166004830152909116906370a0823190602401602060405180830381865afa158015610669573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068d9190611029565b92915050565b6001600160a01b0381166000908152600a602052604081206004015460ff16151560010361071757336000908152600a60205260409020600201544211156106fb576007546001600160a01b0383166000908152600a602052604090205461068d91906111bd565b506001600160a01b03166000908152600a602052604090205490565b336000908152600a60205260409020600201544210156107415760085460095461068d9190611211565b6007546001600160a01b0383166000908152600a602052604090205461068d91906111bd565b6001600160a01b038082166000908152600a602052604081206004015490913361010090920416146107db5760405162461bcd60e51b815260206004820152601c60248201527f5374616b6520686173206e6f74206265656e20696e69746961746564000000006044820152606401610202565b6001600160a01b0382166000908152600a602052604090206004015460ff161515600103610b1057336000908152600a6020526040902060020154421115610966576004546001600160a01b0383166000908152600a602052604090205460649161084591611224565b61084f919061123b565b60078190556001600160a01b0383166000908152600a602052604090205461087791906111bd565b60088190556000546040516317d5759960e31b81526001600160a01b039091169163beabacc8916108af9130918791906004016111d0565b6020604051808303816000875af11580156108ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f291906111f4565b506001600160a01b0382166000908152600a602052604081208181559061091c6001830182610d90565b5060006002820181905560038201819055600491820180546001600160b01b0319169055338152600a6020526040902001805460ff60a81b1916600160a81b179055505060085490565b336000908152600a60205260409020600201544210156106195760025442106109ab5760405162461bcd60e51b81526020600482015260006024820152604401610202565b6004546001600160a01b0383166000908152600a60205260409020546064916109d391611224565b6109dd919061123b565b60078190556064906109f0906060611224565b6109fa919061123b565b60088190556001600160a01b0383166000908152600a6020526040902054610a21916111bd565b60098190556000546040516317d5759960e31b81526001600160a01b039091169163beabacc891610a599130918791906004016111d0565b6020604051808303816000875af1158015610a78573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9c91906111f4565b506001600160a01b0382166000908152600a6020526040812081815590610ac66001830182610d90565b5060006002820181905560038201819055600491820180546001600160b01b0319169055338152600a6020526040902001805460ff60a81b1916600160a81b179055505060095490565b6001600160a01b0382166000908152600a602052604081206004015460ff1615159003610619576005546001600160a01b0383166000908152600a602052604090205460649161084591611224565b600a6020526000908152604090208054600182018054919291610b819061105e565b80601f0160208091040260200160405190810160405280929190818152602001828054610bad9061105e565b8015610bfa5780601f10610bcf57610100808354040283529160200191610bfa565b820191906000526020600020905b815481529060010190602001808311610bdd57829003601f168201915b505050600284015460038501546004909501549394909390925060ff80821692506001600160a01b0361010083041691600160a81b90041687565b610c826040518060e001604052806000815260200160608152602001600081526020016000815260200160001515815260200160006001600160a01b031681526020016000151581525090565b6001600160a01b0382166000908152600a6020908152604091829020825160e08101909352805483526001810180549192840191610cbf9061105e565b80601f0160208091040260200160405190810160405280929190818152602001828054610ceb9061105e565b8015610d385780601f10610d0d57610100808354040283529160200191610d38565b820191906000526020600020905b815481529060010190602001808311610d1b57829003601f168201915b5050509183525050600282015460208201526003820154604082015260049091015460ff808216151560608401526001600160a01b036101008304166080840152600160a81b90910416151560a09091015292915050565b508054610d9c9061105e565b6000825580601f10610dac575050565b601f016020900490600052602060002090810190610dca9190610dcd565b50565b5b80821115610de25760008155600101610dce565b5090565b634e487b7160e01b600052604160045260246000fd5b8015158114610dca57600080fd5b803561061981610dfc565b60008060008060808587031215610e2b57600080fd5b84359350602085013567ffffffffffffffff80821115610e4a57600080fd5b818701915087601f830112610e5e57600080fd5b813581811115610e7057610e70610de6565b604051601f8201601f19908116603f01168101908382118183101715610e9857610e98610de6565b816040528281528a6020848701011115610eb157600080fd5b82602086016020830137600060208483010152809750505050505060408501359150610edf60608601610e0a565b905092959194509250565b600060208284031215610efc57600080fd5b81356001600160a01b0381168114610f1357600080fd5b9392505050565b60005b83811015610f35578181015183820152602001610f1d565b50506000910152565b60008151808452610f56816020860160208601610f1a565b601f01601f19169290920160200192915050565b87815260e060208201526000610f8360e0830189610f3e565b604083019790975250606081019490945291151560808401526001600160a01b031660a0830152151560c09091015292915050565b60208152815160208201526000602083015160e06040840152610fdf610100840182610f3e565b905060408401516060840152606084015160808401526080840151151560a084015260018060a01b0360a08501511660c084015260c0840151151560e08401528091505092915050565b60006020828403121561103b57600080fd5b5051919050565b60008251611054818460208701610f1a565b9190910192915050565b600181811c9082168061107257607f821691505b60208210810361109257634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156110e257600081815260208120601f850160051c810160208610156110bf5750805b601f850160051c820191505b818110156110de578281556001016110cb565b5050505b505050565b815167ffffffffffffffff81111561110157611101610de6565b6111158161110f845461105e565b84611098565b602080601f83116001811461114a57600084156111325750858301515b600019600386901b1c1916600185901b1785556110de565b600085815260208120601f198616915b828110156111795788860151825594840194600190910190840161115a565b50858210156111975787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b8082018082111561068d5761068d6111a7565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60006020828403121561120657600080fd5b8151610f1381610dfc565b8181038181111561068d5761068d6111a7565b808202811582820484141761068d5761068d6111a7565b60008261125857634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212203cecb1a2252bc34f7539eda3e426dbf799053f0657984a7369068e89b54860fd64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBD834345 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xBD834345 EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0xCB8D751A EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0xF42F2E82 EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0xF87C34F5 EQ PUSH2 0x135 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x15621373 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x16F88C94 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x949813B8 EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0xB6E2B395 EQ PUSH2 0xD6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD ADDRESS DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB3 PUSH2 0xAE CALLDATASIZE PUSH1 0x4 PUSH2 0xE15 JUMP JUMPDEST PUSH2 0x155 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC8 PUSH2 0xC3 CALLDATASIZE PUSH1 0x4 PUSH2 0xEEA JUMP JUMPDEST PUSH2 0x57B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x97 JUMP JUMPDEST PUSH2 0xC8 PUSH2 0xE4 CALLDATASIZE PUSH1 0x4 PUSH2 0xEEA JUMP JUMPDEST PUSH2 0x61E JUMP JUMPDEST PUSH2 0xC8 PUSH2 0xF7 CALLDATASIZE PUSH1 0x4 PUSH2 0xEEA JUMP JUMPDEST PUSH2 0x693 JUMP JUMPDEST PUSH2 0xC8 PUSH2 0x10A CALLDATASIZE PUSH1 0x4 PUSH2 0xEEA JUMP JUMPDEST PUSH2 0x767 JUMP JUMPDEST PUSH2 0x122 PUSH2 0x11D CALLDATASIZE PUSH1 0x4 PUSH2 0xEEA JUMP JUMPDEST PUSH2 0xB5F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x97 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF6A JUMP JUMPDEST PUSH2 0x148 PUSH2 0x143 CALLDATASIZE PUSH1 0x4 PUSH2 0xEEA JUMP JUMPDEST PUSH2 0xC35 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x97 SWAP2 SWAP1 PUSH2 0xFB8 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE DUP6 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x19D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C1 SWAP2 SWAP1 PUSH2 0x1029 JUMP JUMPDEST LT ISZERO PUSH2 0x20B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742042616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH5 0x199A5E1959 PUSH1 0xDA SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x25 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x246 SWAP2 SWAP1 PUSH2 0x1042 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SUB PUSH2 0x402 JUMPI PUSH1 0x0 DUP5 GT PUSH2 0x2CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x205374616B652063616E206E6F742062652030202C20456E74657220736F6D65 PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0x20616D6F756E74206F6620746F6B656E73 PUSH1 0x78 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x202 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP5 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2EA DUP5 DUP3 PUSH2 0x10E7 JUMP JUMPDEST POP DUP2 PUSH1 0x2 SLOAD PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x11BD JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x2 DUP2 ADD SWAP5 SWAP1 SWAP5 SSTORE PUSH1 0x4 DUP1 DUP6 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND DUP8 ISZERO ISZERO PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND OR PUSH2 0x100 DUP7 MUL OR PUSH1 0xFF PUSH1 0xA8 SHL NOT AND SWAP1 SSTORE TIMESTAMP PUSH1 0x3 SWAP1 SWAP6 ADD SWAP5 SWAP1 SWAP5 SSTORE SWAP1 SLOAD SWAP1 MLOAD PUSH4 0x17D57599 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 PUSH4 0xBEABACC8 SWAP3 PUSH2 0x37A SWAP3 SWAP1 SWAP2 ADDRESS SWAP2 DUP11 SWAP2 ADD PUSH2 0x11D0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x399 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3BD SWAP2 SWAP1 PUSH2 0x11F4 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE TIMESTAMP DUP2 DUP4 ADD MSTORE SWAP1 MLOAD PUSH32 0x96C68044657FCB3BEA5AD282F026BD0361F647D377DFE1615A77E35DD87280A1 SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 PUSH2 0x575 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH7 0x1D5B999A5E1959 PUSH1 0xCA SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x27 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x43F SWAP2 SWAP1 PUSH2 0x1042 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SUB PUSH2 0x575 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP5 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x479 DUP5 DUP3 PUSH2 0x10E7 JUMP JUMPDEST POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x4 DUP1 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND DUP8 ISZERO ISZERO PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND OR PUSH2 0x100 DUP8 MUL OR PUSH1 0xFF PUSH1 0xA8 SHL NOT AND SWAP1 SSTORE TIMESTAMP PUSH1 0x3 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP2 SLOAD SWAP1 MLOAD PUSH4 0x17D57599 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 PUSH4 0xBEABACC8 SWAP3 PUSH2 0x4F1 SWAP3 ADDRESS SWAP2 DUP11 SWAP2 ADD PUSH2 0x11D0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x510 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x534 SWAP2 SWAP1 PUSH2 0x11F4 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE TIMESTAMP DUP2 DUP4 ADD MSTORE SWAP1 MLOAD PUSH32 0x96C68044657FCB3BEA5AD282F026BD0361F647D377DFE1615A77E35DD87280A1 SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 SUB PUSH2 0x5E2 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 SUB PUSH2 0x5DA JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST POP POP PUSH1 0x7 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 SUB PUSH2 0x5DA JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x669 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x68D SWAP2 SWAP1 PUSH2 0x1029 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 SUB PUSH2 0x717 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD TIMESTAMP GT ISZERO PUSH2 0x6FB JUMPI PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x68D SWAP2 SWAP1 PUSH2 0x11BD JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x741 JUMPI PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH2 0x68D SWAP2 SWAP1 PUSH2 0x1211 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x68D SWAP2 SWAP1 PUSH2 0x11BD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 ADD SLOAD SWAP1 SWAP2 CALLER PUSH2 0x100 SWAP1 SWAP3 DIV AND EQ PUSH2 0x7DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B6520686173206E6F74206265656E20696E6974696174656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x202 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 SUB PUSH2 0xB10 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD TIMESTAMP GT ISZERO PUSH2 0x966 JUMPI PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x64 SWAP2 PUSH2 0x845 SWAP2 PUSH2 0x1224 JUMP JUMPDEST PUSH2 0x84F SWAP2 SWAP1 PUSH2 0x123B JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x877 SWAP2 SWAP1 PUSH2 0x11BD JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x17D57599 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0xBEABACC8 SWAP2 PUSH2 0x8AF SWAP2 ADDRESS SWAP2 DUP8 SWAP2 SWAP1 PUSH1 0x4 ADD PUSH2 0x11D0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8CE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8F2 SWAP2 SWAP1 PUSH2 0x11F4 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 DUP2 SSTORE SWAP1 PUSH2 0x91C PUSH1 0x1 DUP4 ADD DUP3 PUSH2 0xD90 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x2 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x4 SWAP2 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT AND SWAP1 SSTORE CALLER DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0xA8 SHL NOT AND PUSH1 0x1 PUSH1 0xA8 SHL OR SWAP1 SSTORE POP POP PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x619 JUMPI PUSH1 0x2 SLOAD TIMESTAMP LT PUSH2 0x9AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x202 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x64 SWAP2 PUSH2 0x9D3 SWAP2 PUSH2 0x1224 JUMP JUMPDEST PUSH2 0x9DD SWAP2 SWAP1 PUSH2 0x123B JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE PUSH1 0x64 SWAP1 PUSH2 0x9F0 SWAP1 PUSH1 0x60 PUSH2 0x1224 JUMP JUMPDEST PUSH2 0x9FA SWAP2 SWAP1 PUSH2 0x123B JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xA21 SWAP2 PUSH2 0x11BD JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x17D57599 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0xBEABACC8 SWAP2 PUSH2 0xA59 SWAP2 ADDRESS SWAP2 DUP8 SWAP2 SWAP1 PUSH1 0x4 ADD PUSH2 0x11D0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA78 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA9C SWAP2 SWAP1 PUSH2 0x11F4 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 DUP2 SSTORE SWAP1 PUSH2 0xAC6 PUSH1 0x1 DUP4 ADD DUP3 PUSH2 0xD90 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x2 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x4 SWAP2 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT AND SWAP1 SSTORE CALLER DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0xA8 SHL NOT AND PUSH1 0x1 PUSH1 0xA8 SHL OR SWAP1 SSTORE POP POP PUSH1 0x9 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO SWAP1 SUB PUSH2 0x619 JUMPI PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x64 SWAP2 PUSH2 0x845 SWAP2 PUSH2 0x1224 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD SWAP2 SWAP3 SWAP2 PUSH2 0xB81 SWAP1 PUSH2 0x105E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xBAD SWAP1 PUSH2 0x105E JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBFA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBCF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBFA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBDD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x2 DUP5 ADD SLOAD PUSH1 0x3 DUP6 ADD SLOAD PUSH1 0x4 SWAP1 SWAP6 ADD SLOAD SWAP4 SWAP5 SWAP1 SWAP4 SWAP1 SWAP3 POP PUSH1 0xFF DUP1 DUP3 AND SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 DUP4 DIV AND SWAP2 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV AND DUP8 JUMP JUMPDEST PUSH2 0xC82 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0xE0 DUP2 ADD SWAP1 SWAP4 MSTORE DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD SWAP2 SWAP3 DUP5 ADD SWAP2 PUSH2 0xCBF SWAP1 PUSH2 0x105E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xCEB SWAP1 PUSH2 0x105E JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD38 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD0D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD38 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD1B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x4 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 DUP4 DIV AND PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 SWAP2 DIV AND ISZERO ISZERO PUSH1 0xA0 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0xD9C SWAP1 PUSH2 0x105E JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0xDAC JUMPI POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0xDCA SWAP2 SWAP1 PUSH2 0xDCD JUMP JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xDE2 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xDCE JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xDCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x619 DUP2 PUSH2 0xDFC JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xE2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xE70 JUMPI PUSH2 0xE70 PUSH2 0xDE6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xE98 JUMPI PUSH2 0xE98 PUSH2 0xDE6 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xEB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP8 POP POP POP POP POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH2 0xEDF PUSH1 0x60 DUP7 ADD PUSH2 0xE0A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xF13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF35 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xF1D JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xF56 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xF1A JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP8 DUP2 MSTORE PUSH1 0xE0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0xF83 PUSH1 0xE0 DUP4 ADD DUP10 PUSH2 0xF3E JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP8 SWAP1 SWAP8 MSTORE POP PUSH1 0x60 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA0 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0xC0 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0xE0 PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0xFDF PUSH2 0x100 DUP5 ADD DUP3 PUSH2 0xF3E JUMP JUMPDEST SWAP1 POP PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x80 DUP5 ADD MLOAD ISZERO ISZERO PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xA0 DUP6 ADD MLOAD AND PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xC0 DUP5 ADD MLOAD ISZERO ISZERO PUSH1 0xE0 DUP5 ADD MSTORE DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x103B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1054 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0xF1A JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1072 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1092 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x10E2 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x10BF JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x10DE JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x10CB JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1101 JUMPI PUSH2 0x1101 PUSH2 0xDE6 JUMP JUMPDEST PUSH2 0x1115 DUP2 PUSH2 0x110F DUP5 SLOAD PUSH2 0x105E JUMP JUMPDEST DUP5 PUSH2 0x1098 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x114A JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1132 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x10DE JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1179 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x115A JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x1197 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x68D JUMPI PUSH2 0x68D PUSH2 0x11A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1206 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xF13 DUP2 PUSH2 0xDFC JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x68D JUMPI PUSH2 0x68D PUSH2 0x11A7 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x68D JUMPI PUSH2 0x68D PUSH2 0x11A7 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1258 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY 0xEC 0xB1 LOG2 0x25 0x2B 0xC3 0x4F PUSH22 0x39EDA3E426DBF799053F0657984A7369068E89B54860 REVERT PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "82:5690:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5673:97;;;5758:4;160:51:2;;148:2;133:18;5673:97:1;;;;;;;;866:1624;;;;;;:::i;:::-;;:::i;:::-;;5116:418;;;;;;:::i;:::-;;:::i;:::-;;;2179:25:2;;;2167:2;2152:18;5116:418:1;2033:177:2;4422:119:1;;;;;;:::i;:::-;;:::i;4548:566::-;;;;;;:::i;:::-;;:::i;2496:1920::-;;;;;;:::i;:::-;;:::i;739:46::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;:::i;5539:128::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;866:1624::-;978:5;;:27;;-1:-1:-1;;;978:27:1;;994:10;978:27;;;160:51:2;1009:7:1;;-1:-1:-1;;;;;978:5:1;;:15;;133:18:2;;978:27:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:38;;970:71;;;;-1:-1:-1;;;970:71:1;;4627:2:2;970:71:1;;;4609:21:2;4666:2;4646:18;;;4639:30;-1:-1:-1;;;4685:18:2;;;4678:50;4745:18;;970:71:1;;;;;;;;;1128:25;;-1:-1:-1;;;1128:25:1;;;4976:20:2;5012:11;;1128:25:1;;;;;;;;;;;;1118:36;;;;;;1107:5;1090:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;1080:34;;;;;;:74;1075:1409;;1190:1;1180:7;:11;1171:73;;;;-1:-1:-1;;;1171:73:1;;5530:2:2;1171:73:1;;;5512:21:2;5569:2;5549:18;;;5542:30;5608:34;5588:18;;;5581:62;-1:-1:-1;;;5659:18:2;;;5652:47;5716:19;;1171:73:1;5328:413:2;1171:73:1;1272:10;1258:25;;;;:13;:25;;;;;:48;;;1320:36;;:44;1359:5;1320:36;:44;:::i;:::-;;1446:9;1417:26;;:38;;;;:::i;:::-;1392:10;1378:25;;;;:13;:25;;;;;;:36;;;:77;;;;1469:33;;;;:44;;-1:-1:-1;;;;;;1527:43:1;1469:44;;;-1:-1:-1;;;;;;1527:43:1;;1469:44;1527:43;;;-1:-1:-1;;;;1584:42:1;;;1688:15;1640:45;;;;:63;;;;1717:5;;:50;;-1:-1:-1;;;1717:50:1;;-1:-1:-1;;;;;1717:5:1;;;;:14;;:50;;1392:10;;1752:4;;1759:7;;1717:50;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1786:50:1;;;1799:10;9429:51:2;;9511:2;9496:18;;9489:34;;;1820:15:1;9539:18:2;;;9532:34;1786:50:1;;;;;;;9417:2:2;1786:50:1;;;1075:1409;;;1941:27;;-1:-1:-1;;;1941:27:1;;;9779:22:2;9817:11;;1941:27:1;;;;;;;;;;;;1931:38;;;;;;1920:5;1903:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;1893:34;;;;;;:76;1889:595;;2000:10;1986:25;;;;:13;:25;;;;;:48;;;2048:36;;:44;2087:5;2048:36;:44;:::i;:::-;-1:-1:-1;2120:10:1;2106:25;;;;:13;:25;;;;;;:33;;;;:44;;-1:-1:-1;;;;;;2164:43:1;2106:44;;;-1:-1:-1;;;;;;2164:43:1;;2106:44;2164:43;;;-1:-1:-1;;;;2221:42:1;;;2325:15;2277:45;;;;:63;;;;2354:5;;:50;;-1:-1:-1;;;2354:50:1;;-1:-1:-1;;;;;2354:5:1;;;;:14;;:50;;2389:4;;2396:7;;2354:50;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2423:50:1;;;2436:10;9429:51:2;;9511:2;9496:18;;9489:34;;;2457:15:1;9539:18:2;;;9532:34;2423:50:1;;;;;;;9417:2:2;2423:50:1;;;1889:595;866:1624;;;;:::o;5116:418::-;-1:-1:-1;;;;;5201:23:1;;5182:7;5201:23;;;:13;:23;;;;;:31;;;;;:39;;:31;:39;5197:335;;-1:-1:-1;;;;;5256:23:1;;;;;;:13;:23;;;;;:33;;;-1:-1:-1;;;5256:33:1;;;;:41;;5293:4;5256:41;5252:126;;-1:-1:-1;5320:1:1;;5116:418;-1:-1:-1;5116:418:1:o;5252:126::-;-1:-1:-1;;5359:8:1;;;5116:418::o;5197:335::-;-1:-1:-1;;;;;5404:23:1;;;;;;:13;:23;;;;;:33;;;-1:-1:-1;;;5404:33:1;;;;:41;;5441:4;5404:41;5400:126;;-1:-1:-1;5468:1:1;;5116:418;-1:-1:-1;5116:418:1:o;5400:126::-;5116:418;;;:::o;4422:119::-;4483:7;4509:5;;:25;;-1:-1:-1;;;4509:25:1;;-1:-1:-1;;;;;178:32:2;;;4509:25:1;;;160:51:2;4509:5:1;;;;:15;;133:18:2;;4509:25:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4502:32;4422:119;-1:-1:-1;;4422:119:1:o;4548:566::-;-1:-1:-1;;;;;4630:23:1;;4611:7;4630:23;;;:13;:23;;;;;:31;;;;;:39;;:31;:39;4626:486;;4717:10;4703:25;;;;:13;:25;;;;;:36;;;4685:15;:54;4681:213;;;4801:8;;-1:-1:-1;;;;;4762:23:1;;;;;;:13;:23;;;;;:36;:47;;4801:8;4762:47;:::i;4681:213::-;-1:-1:-1;;;;;;4847:23:1;;;;;:13;:23;;;;;:36;;4548:566::o;4626:486::-;4945:10;4931:25;;;;:13;:25;;;;;:36;;;4913:15;:54;4910:202;;;5000:18;;4986:11;;:32;;;;:::i;4910:202::-;5097:8;;-1:-1:-1;;;;;5058:23:1;;;;;;:13;:23;;;;;:36;:47;;5097:8;5058:47;:::i;2496:1920::-;-1:-1:-1;;;;;2590:23:1;;;2549:7;2590:23;;;:13;:23;;;;;:29;;;2549:7;;2576:10;2590:29;;;;;2576:43;2568:83;;;;-1:-1:-1;;;2568:83:1;;10174:2:2;2568:83:1;;;10156:21:2;10213:2;10193:18;;;10186:30;10252;10232:18;;;10225:58;10300:18;;2568:83:1;9972:352:2;2568:83:1;-1:-1:-1;;;;;2665:23:1;;;;;;:13;:23;;;;;:31;;;;;:39;;:31;:39;2661:1749;;2756:10;2742:25;;;;:13;:25;;;;;:36;;;2724:15;:54;2720:1175;;;2848:18;;-1:-1:-1;;;;;2810:23:1;;;;;;:13;:23;;;;;:36;2870:3;;2810:56;;;:::i;:::-;2809:64;;;;:::i;:::-;2799:8;:74;;;-1:-1:-1;;;;;2911:23:1;;;;;;:13;:23;;;;;:36;:47;;2799:74;2911:47;:::i;:::-;2891:18;:67;;;2976:5;;:58;;-1:-1:-1;;;2976:58:1;;-1:-1:-1;;;;;2976:5:1;;;;:14;;:58;;2999:4;;3005:8;;2891:67;2976:58;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;3059:23:1;;;;;;:13;:23;;;;;3052:30;;;3059:23;3052:30;;;;3059:23;3052:30;:::i;:::-;-1:-1:-1;3052:30:1;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3052:30:1;;;3114:10;3100:25;;:13;:25;;;;;:35;:41;;-1:-1:-1;;;;3100:41:1;-1:-1:-1;;;3100:41:1;;;-1:-1:-1;;3166:18:1;;;2496:1920::o;2720:1175::-;3325:10;3311:25;;;;:13;:25;;;;;:36;;;3293:15;:54;3289:606;;;3395:26;;3376:15;:45;3367:59;;;;-1:-1:-1;;;3367:59:1;;10926:2:2;3367:59:1;;;10908:21:2;-1:-1:-1;10945:18:2;;;10938:29;10984:18;;3367:59:1;10724:284:2;3367:59:1;3495:18;;-1:-1:-1;;;;;3456:23:1;;;;;;:13;:23;;;;;:36;3517:3;;3456:57;;;:::i;:::-;3455:65;;;;:::i;:::-;3444:8;:76;;;3578:3;;3561:13;;3572:2;3561:13;:::i;:::-;3560:21;;;;:::i;:::-;3539:18;:42;;;-1:-1:-1;;;;;3632:23:1;;;;;;:13;:23;;;;;:36;3612:56;;;:::i;:::-;3599:11;:69;;;3686:5;;:51;;-1:-1:-1;;;3686:51:1;;-1:-1:-1;;;;;3686:5:1;;;;:14;;:51;;3709:4;;3715:8;;3599:69;3686:51;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;3762:23:1;;;;;;:13;:23;;;;;3755:30;;;3762:23;3755:30;;;;3762:23;3755:30;:::i;:::-;-1:-1:-1;3755:30:1;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3755:30:1;;;3817:10;3803:25;;:13;:25;;;;;:35;:41;;-1:-1:-1;;;;3803:41:1;-1:-1:-1;;;3803:41:1;;;-1:-1:-1;;3869:11:1;;;2496:1920::o;2661:1749::-;-1:-1:-1;;;;;3956:23:1;;;;;;:13;:23;;;;;:31;;;;;:40;;;;3952:458;;4061:20;;-1:-1:-1;;;;;4023:23:1;;;;;;:13;:23;;;;;:36;4084:3;;4023:58;;;:::i;739:46::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;739:46:1;;;;;;;;;;;;;;;;;;;-1:-1:-1;739:46:1;;;;;-1:-1:-1;;;;;;739:46:1;;;;;-1:-1:-1;;;739:46:1;;;;:::o;5539:128::-;5606:12;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5606:12:1;-1:-1:-1;;;;;5637:23:1;;;;;;:13;:23;;;;;;;;;5630:30;;;;;;;;;;;;;;;;;5637:23;;5630:30;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5630:30:1;;;-1:-1:-1;;5630:30:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5630:30:1;;;;;;;;-1:-1:-1;;;5630:30:1;;;;;;;;;;;;5539:128;-1:-1:-1;;5539:128:1:o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;222:127:2:-;283:10;278:3;274:20;271:1;264:31;314:4;311:1;304:15;338:4;335:1;328:15;354:118;440:5;433:13;426:21;419:5;416:32;406:60;;462:1;459;452:12;477:128;542:20;;571:28;542:20;571:28;:::i;610:1127::-;703:6;711;719;727;780:3;768:9;759:7;755:23;751:33;748:53;;;797:1;794;787:12;748:53;833:9;820:23;810:33;;894:2;883:9;879:18;866:32;917:18;958:2;950:6;947:14;944:34;;;974:1;971;964:12;944:34;1012:6;1001:9;997:22;987:32;;1057:7;1050:4;1046:2;1042:13;1038:27;1028:55;;1079:1;1076;1069:12;1028:55;1115:2;1102:16;1137:2;1133;1130:10;1127:36;;;1143:18;;:::i;:::-;1218:2;1212:9;1186:2;1272:13;;-1:-1:-1;;1268:22:2;;;1292:2;1264:31;1260:40;1248:53;;;1316:18;;;1336:22;;;1313:46;1310:72;;;1362:18;;:::i;:::-;1402:10;1398:2;1391:22;1437:2;1429:6;1422:18;1477:7;1472:2;1467;1463;1459:11;1455:20;1452:33;1449:53;;;1498:1;1495;1488:12;1449:53;1554:2;1549;1545;1541:11;1536:2;1528:6;1524:15;1511:46;1599:1;1594:2;1589;1581:6;1577:15;1573:24;1566:35;1620:6;1610:16;;;;;;;1673:2;1662:9;1658:18;1645:32;1635:42;;1696:35;1727:2;1716:9;1712:18;1696:35;:::i;:::-;1686:45;;610:1127;;;;;;;:::o;1742:286::-;1801:6;1854:2;1842:9;1833:7;1829:23;1825:32;1822:52;;;1870:1;1867;1860:12;1822:52;1896:23;;-1:-1:-1;;;;;1948:31:2;;1938:42;;1928:70;;1994:1;1991;1984:12;1928:70;2017:5;1742:286;-1:-1:-1;;;1742:286:2:o;2215:250::-;2300:1;2310:113;2324:6;2321:1;2318:13;2310:113;;;2400:11;;;2394:18;2381:11;;;2374:39;2346:2;2339:10;2310:113;;;-1:-1:-1;;2457:1:2;2439:16;;2432:27;2215:250::o;2470:271::-;2512:3;2550:5;2544:12;2577:6;2572:3;2565:19;2593:76;2662:6;2655:4;2650:3;2646:14;2639:4;2632:5;2628:16;2593:76;:::i;:::-;2723:2;2702:15;-1:-1:-1;;2698:29:2;2689:39;;;;2730:4;2685:50;;2470:271;-1:-1:-1;;2470:271:2:o;2746:697::-;3051:6;3040:9;3033:25;3094:3;3089:2;3078:9;3074:18;3067:31;3014:4;3115:46;3156:3;3145:9;3141:19;3133:6;3115:46;:::i;:::-;3192:2;3177:18;;3170:34;;;;-1:-1:-1;3235:2:2;3220:18;;3213:34;;;;3291:14;;3284:22;3278:3;3263:19;;3256:51;-1:-1:-1;;;;;3344:32:2;3364:3;3323:19;;3316:61;3421:14;3414:22;3408:3;3393:19;;;3386:51;3107:54;2746:697;-1:-1:-1;;2746:697:2:o;3448:783::-;3621:2;3610:9;3603:21;3666:6;3660:13;3655:2;3644:9;3640:18;3633:41;3584:4;3721:2;3713:6;3709:15;3703:22;3761:4;3756:2;3745:9;3741:18;3734:32;3789:52;3836:3;3825:9;3821:19;3807:12;3789:52;:::i;:::-;3775:66;;3895:2;3887:6;3883:15;3877:22;3872:2;3861:9;3857:18;3850:50;3955:2;3947:6;3943:15;3937:22;3931:3;3920:9;3916:19;3909:51;4029:3;4021:6;4017:16;4011:23;4004:31;3997:39;3991:3;3980:9;3976:19;3969:68;4120:1;4116;4111:3;4107:11;4103:19;4096:3;4088:6;4084:16;4078:23;4074:49;4068:3;4057:9;4053:19;4046:78;4194:3;4186:6;4182:16;4176:23;4169:31;4162:39;4155:4;4144:9;4140:20;4133:69;4219:6;4211:14;;;3448:783;;;;:::o;4236:184::-;4306:6;4359:2;4347:9;4338:7;4334:23;4330:32;4327:52;;;4375:1;4372;4365:12;4327:52;-1:-1:-1;4398:16:2;;4236:184;-1:-1:-1;4236:184:2:o;5034:289::-;5165:3;5203:6;5197:13;5219:66;5278:6;5273:3;5266:4;5258:6;5254:17;5219:66;:::i;:::-;5301:16;;;;;5034:289;-1:-1:-1;;5034:289:2:o;5746:380::-;5825:1;5821:12;;;;5868;;;5889:61;;5943:4;5935:6;5931:17;5921:27;;5889:61;5996:2;5988:6;5985:14;5965:18;5962:38;5959:161;;6042:10;6037:3;6033:20;6030:1;6023:31;6077:4;6074:1;6067:15;6105:4;6102:1;6095:15;5959:161;;5746:380;;;:::o;6257:545::-;6359:2;6354:3;6351:11;6348:448;;;6395:1;6420:5;6416:2;6409:17;6465:4;6461:2;6451:19;6535:2;6523:10;6519:19;6516:1;6512:27;6506:4;6502:38;6571:4;6559:10;6556:20;6553:47;;;-1:-1:-1;6594:4:2;6553:47;6649:2;6644:3;6640:12;6637:1;6633:20;6627:4;6623:31;6613:41;;6704:82;6722:2;6715:5;6712:13;6704:82;;;6767:17;;;6748:1;6737:13;6704:82;;;6708:3;;;6348:448;6257:545;;;:::o;6978:1352::-;7104:3;7098:10;7131:18;7123:6;7120:30;7117:56;;;7153:18;;:::i;:::-;7182:97;7272:6;7232:38;7264:4;7258:11;7232:38;:::i;:::-;7226:4;7182:97;:::i;:::-;7334:4;;7398:2;7387:14;;7415:1;7410:663;;;;8117:1;8134:6;8131:89;;;-1:-1:-1;8186:19:2;;;8180:26;8131:89;-1:-1:-1;;6935:1:2;6931:11;;;6927:24;6923:29;6913:40;6959:1;6955:11;;;6910:57;8233:81;;7380:944;;7410:663;6204:1;6197:14;;;6241:4;6228:18;;-1:-1:-1;;7446:20:2;;;7564:236;7578:7;7575:1;7572:14;7564:236;;;7667:19;;;7661:26;7646:42;;7759:27;;;;7727:1;7715:14;;;;7594:19;;7564:236;;;7568:3;7828:6;7819:7;7816:19;7813:201;;;7889:19;;;7883:26;-1:-1:-1;;7972:1:2;7968:14;;;7984:3;7964:24;7960:37;7956:42;7941:58;7926:74;;7813:201;-1:-1:-1;;;;;8060:1:2;8044:14;;;8040:22;8027:36;;-1:-1:-1;6978:1352:2:o;8335:127::-;8396:10;8391:3;8387:20;8384:1;8377:31;8427:4;8424:1;8417:15;8451:4;8448:1;8441:15;8467:125;8532:9;;;8553:10;;;8550:36;;;8566:18;;:::i;8597:375::-;-1:-1:-1;;;;;8855:15:2;;;8837:34;;8907:15;;;;8902:2;8887:18;;8880:43;8954:2;8939:18;;8932:34;;;;8787:2;8772:18;;8597:375::o;8977:245::-;9044:6;9097:2;9085:9;9076:7;9072:23;9068:32;9065:52;;;9113:1;9110;9103:12;9065:52;9145:9;9139:16;9164:28;9186:5;9164:28;:::i;9839:128::-;9906:9;;;9927:11;;;9924:37;;;9941:18;;:::i;10329:168::-;10402:9;;;10433;;10450:15;;;10444:22;;10430:37;10420:71;;10471:18;;:::i;10502:217::-;10542:1;10568;10558:132;;10612:10;10607:3;10603:20;10600:1;10593:31;10647:4;10644:1;10637:15;10675:4;10672:1;10665:15;10558:132;-1:-1:-1;10704:9:2;;10502:217::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "951000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"Stake_details(address)": "infinite",
								"TokenBalance(address)": "infinite",
								"claimedRewards(address)": "infinite",
								"getcontractaddress()": "166",
								"getstaking_details(address)": "infinite",
								"staking(uint256,string,uint256,bool)": "infinite",
								"unclaimedRewards(address)": "6952",
								"unstaking(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 82,
									"end": 5772,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 82,
									"end": 5772,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 82,
									"end": 5772,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 499,
									"end": 520,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 499,
									"end": 514,
									"name": "TIMESTAMP",
									"source": 1
								},
								{
									"begin": 517,
									"end": 520,
									"name": "PUSH",
									"source": 1,
									"value": "12C"
								},
								{
									"begin": 499,
									"end": 520,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 499,
									"end": 520,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 499,
									"end": 520,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 499,
									"end": 520,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 462,
									"end": 520,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 462,
									"end": 520,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 551,
									"end": 552,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 526,
									"end": 552,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 526,
									"end": 552,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 588,
									"end": 589,
									"name": "PUSH",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 559,
									"end": 589,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 559,
									"end": 589,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 626,
									"end": 627,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 595,
									"end": 627,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 595,
									"end": 627,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 134,
									"end": 210,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 134,
									"end": 210,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 134,
									"end": 210,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 134,
									"end": 210,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 134,
									"end": 210,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 134,
									"end": 210,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 134,
									"end": 210,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 134,
									"end": 210,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 134,
									"end": 210,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 134,
									"end": 210,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 134,
									"end": 210,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 134,
									"end": 210,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 134,
									"end": 210,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 134,
									"end": 210,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 134,
									"end": 210,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 134,
									"end": 210,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 134,
									"end": 210,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 134,
									"end": 210,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 134,
									"end": 210,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 134,
									"end": 210,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 134,
									"end": 210,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 134,
									"end": 210,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 134,
									"end": 210,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 134,
									"end": 210,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 134,
									"end": 210,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 134,
									"end": 210,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 134,
									"end": 210,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 134,
									"end": 210,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 134,
									"end": 210,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 134,
									"end": 210,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 134,
									"end": 210,
									"name": "tag",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 134,
									"end": 210,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 182,
									"end": 187,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 182,
									"end": 203,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 182,
									"end": 203,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 182,
									"end": 203,
									"name": "AND",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 182,
									"end": 203,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 182,
									"end": 203,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 182,
									"end": 203,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 182,
									"end": 203,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 182,
									"end": 203,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 182,
									"end": 203,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 182,
									"end": 203,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 182,
									"end": 203,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 182,
									"end": 203,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 182,
									"end": 203,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 82,
									"end": 5772,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 82,
									"end": 5772,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 236,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 14,
									"end": 236,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 79,
									"end": 88,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 79,
									"end": 88,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 79,
									"end": 88,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 100,
									"end": 110,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 100,
									"end": 110,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 100,
									"end": 110,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 97,
									"end": 230,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 97,
									"end": 230,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 97,
									"end": 230,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 152,
									"end": 162,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B71"
								},
								{
									"begin": 147,
									"end": 150,
									"name": "PUSH",
									"source": 2,
									"value": "E0"
								},
								{
									"begin": 143,
									"end": 163,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 140,
									"end": 141,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 133,
									"end": 164,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 187,
									"end": 191,
									"name": "PUSH",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 184,
									"end": 185,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 177,
									"end": 192,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 215,
									"end": 219,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 212,
									"end": 213,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 205,
									"end": 220,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 97,
									"end": 230,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 97,
									"end": 230,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 14,
									"end": 236,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 14,
									"end": 236,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 14,
									"end": 236,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 14,
									"end": 236,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 14,
									"end": 236,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 241,
									"end": 549,
									"name": "tag",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 241,
									"end": 549,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 329,
									"end": 335,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 382,
									"end": 384,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 370,
									"end": 379,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 361,
									"end": 368,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 357,
									"end": 380,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 353,
									"end": 385,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 350,
									"end": 402,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 350,
									"end": 402,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 350,
									"end": 402,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 398,
									"end": 399,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 395,
									"end": 396,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 388,
									"end": 400,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 350,
									"end": 402,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 350,
									"end": 402,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 424,
									"end": 440,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 424,
									"end": 440,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 469,
									"end": 500,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 469,
									"end": 500,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 459,
									"end": 501,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 459,
									"end": 501,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 449,
									"end": 519,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 449,
									"end": 519,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 515,
									"end": 516,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 512,
									"end": 513,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 505,
									"end": 517,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 449,
									"end": 519,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 449,
									"end": 519,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 538,
									"end": 543,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 241,
									"end": 549,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 241,
									"end": 549,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 241,
									"end": 549,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 241,
									"end": 549,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 82,
									"end": 5772,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 82,
									"end": 5772,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 82,
									"end": 5772,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 82,
									"end": 5772,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 82,
									"end": 5772,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 82,
									"end": 5772,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 82,
									"end": 5772,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203cecb1a2252bc34f7539eda3e426dbf799053f0657984a7369068e89b54860fd64736f6c63430008140033",
									".code": [
										{
											"begin": 82,
											"end": 5772,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "PUSH",
											"source": 1,
											"value": "BD834345"
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "PUSH",
											"source": 1,
											"value": "BD834345"
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "PUSH",
											"source": 1,
											"value": "CB8D751A"
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "PUSH",
											"source": 1,
											"value": "F42F2E82"
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "PUSH",
											"source": 1,
											"value": "F87C34F5"
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "PUSH",
											"source": 1,
											"value": "15621373"
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "PUSH",
											"source": 1,
											"value": "16F88C94"
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "PUSH",
											"source": 1,
											"value": "949813B8"
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "PUSH",
											"source": 1,
											"value": "B6E2B395"
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 82,
											"end": 5772,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5673,
											"end": 5770,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 5673,
											"end": 5770,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5673,
											"end": 5770,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5673,
											"end": 5770,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5758,
											"end": 5762,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 160,
											"end": 211,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5673,
											"end": 5770,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 5673,
											"end": 5770,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5673,
											"end": 5770,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5673,
											"end": 5770,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5673,
											"end": 5770,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5673,
											"end": 5770,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5673,
											"end": 5770,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5673,
											"end": 5770,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5673,
											"end": 5770,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 866,
											"end": 2490,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 866,
											"end": 2490,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 866,
											"end": 2490,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 866,
											"end": 2490,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 866,
											"end": 2490,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 866,
											"end": 2490,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 866,
											"end": 2490,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 866,
											"end": 2490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 866,
											"end": 2490,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 866,
											"end": 2490,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 866,
											"end": 2490,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 866,
											"end": 2490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 866,
											"end": 2490,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 866,
											"end": 2490,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 866,
											"end": 2490,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 5116,
											"end": 5534,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 5116,
											"end": 5534,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5116,
											"end": 5534,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5116,
											"end": 5534,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 5116,
											"end": 5534,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5116,
											"end": 5534,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5116,
											"end": 5534,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 5116,
											"end": 5534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5116,
											"end": 5534,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 5116,
											"end": 5534,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5116,
											"end": 5534,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 5116,
											"end": 5534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5116,
											"end": 5534,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5116,
											"end": 5534,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5116,
											"end": 5534,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5116,
											"end": 5534,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2204,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2179,
											"end": 2204,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2179,
											"end": 2204,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2167,
											"end": 2169,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2152,
											"end": 2170,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5116,
											"end": 5534,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2033,
											"end": 2210,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4422,
											"end": 4541,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 4422,
											"end": 4541,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4422,
											"end": 4541,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4422,
											"end": 4541,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 4422,
											"end": 4541,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4422,
											"end": 4541,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4422,
											"end": 4541,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4422,
											"end": 4541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4422,
											"end": 4541,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 4422,
											"end": 4541,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4422,
											"end": 4541,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 4422,
											"end": 4541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4548,
											"end": 5114,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 4548,
											"end": 5114,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4548,
											"end": 5114,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4548,
											"end": 5114,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4548,
											"end": 5114,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4548,
											"end": 5114,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4548,
											"end": 5114,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4548,
											"end": 5114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4548,
											"end": 5114,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4548,
											"end": 5114,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4548,
											"end": 5114,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4548,
											"end": 5114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2496,
											"end": 4416,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 2496,
											"end": 4416,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2496,
											"end": 4416,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2496,
											"end": 4416,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2496,
											"end": 4416,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2496,
											"end": 4416,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2496,
											"end": 4416,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2496,
											"end": 4416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2496,
											"end": 4416,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2496,
											"end": 4416,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2496,
											"end": 4416,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2496,
											"end": 4416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 739,
											"end": 785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 739,
											"end": 785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 739,
											"end": 785,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 739,
											"end": 785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 739,
											"end": 785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 739,
											"end": 785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 739,
											"end": 785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 739,
											"end": 785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 739,
											"end": 785,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 739,
											"end": 785,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 739,
											"end": 785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5539,
											"end": 5667,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 5539,
											"end": 5667,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5539,
											"end": 5667,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 5539,
											"end": 5667,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5539,
											"end": 5667,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5539,
											"end": 5667,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5539,
											"end": 5667,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 5539,
											"end": 5667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5539,
											"end": 5667,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5539,
											"end": 5667,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5539,
											"end": 5667,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 5539,
											"end": 5667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5539,
											"end": 5667,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 5539,
											"end": 5667,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5539,
											"end": 5667,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5539,
											"end": 5667,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5539,
											"end": 5667,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 5539,
											"end": 5667,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5539,
											"end": 5667,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5539,
											"end": 5667,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 5539,
											"end": 5667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 866,
											"end": 2490,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 866,
											"end": 2490,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 978,
											"end": 983,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 978,
											"end": 983,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1005,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 978,
											"end": 1005,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 978,
											"end": 1005,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1005,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 994,
											"end": 1004,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1005,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 978,
											"end": 1005,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1005,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1009,
											"end": 1016,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1009,
											"end": 1016,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 978,
											"end": 983,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 978,
											"end": 983,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 978,
											"end": 993,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 978,
											"end": 993,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 978,
											"end": 1005,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 978,
											"end": 1005,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 978,
											"end": 1005,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1005,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1005,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1005,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1005,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1005,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1005,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1005,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1005,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1005,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1005,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 978,
											"end": 1005,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1005,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1005,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 978,
											"end": 1005,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1005,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1005,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1005,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 978,
											"end": 1005,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1005,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 978,
											"end": 1005,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1005,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1005,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1005,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1005,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1005,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 978,
											"end": 1005,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1005,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1005,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 978,
											"end": 1005,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1005,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 978,
											"end": 1005,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1005,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1005,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1005,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1005,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1005,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1005,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 978,
											"end": 1005,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1005,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1005,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1005,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1005,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 978,
											"end": 1005,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1005,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 978,
											"end": 1005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1005,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 978,
											"end": 1005,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1016,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1016,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 970,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 970,
											"end": 1041,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 970,
											"end": 1041,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 970,
											"end": 1041,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 970,
											"end": 1041,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 970,
											"end": 1041,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4627,
											"end": 4629,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 970,
											"end": 1041,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 970,
											"end": 1041,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 970,
											"end": 1041,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4609,
											"end": 4630,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4666,
											"end": 4668,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 4646,
											"end": 4664,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4646,
											"end": 4664,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4646,
											"end": 4664,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4639,
											"end": 4669,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E73756666696369656E742042616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4685,
											"end": 4703,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4685,
											"end": 4703,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4685,
											"end": 4703,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4678,
											"end": 4728,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4745,
											"end": 4763,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 4745,
											"end": 4763,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 970,
											"end": 1041,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 970,
											"end": 1041,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 970,
											"end": 1041,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 970,
											"end": 1041,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 970,
											"end": 1041,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 970,
											"end": 1041,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 970,
											"end": 1041,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 970,
											"end": 1041,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 970,
											"end": 1041,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 970,
											"end": 1041,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 970,
											"end": 1041,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1128,
											"end": 1153,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1128,
											"end": 1153,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "199A5E1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1128,
											"end": 1153,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1128,
											"end": 1153,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1128,
											"end": 1153,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4976,
											"end": 4996,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5012,
											"end": 5023,
											"name": "PUSH",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 5012,
											"end": 5023,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1128,
											"end": 1153,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1128,
											"end": 1153,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1128,
											"end": 1153,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1128,
											"end": 1153,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1128,
											"end": 1153,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1128,
											"end": 1153,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1128,
											"end": 1153,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1128,
											"end": 1153,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1128,
											"end": 1153,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1128,
											"end": 1153,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1128,
											"end": 1153,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1128,
											"end": 1153,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1107,
											"end": 1112,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1113,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1090,
											"end": 1113,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1113,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1090,
											"end": 1113,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1113,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1090,
											"end": 1113,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1113,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1113,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1090,
											"end": 1113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1113,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1090,
											"end": 1113,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1113,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1090,
											"end": 1113,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1113,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1090,
											"end": 1113,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1113,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1113,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1113,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1113,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1113,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1113,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1113,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1090,
											"end": 1113,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1114,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1114,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1114,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1114,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1080,
											"end": 1114,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1114,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1154,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 2484,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1075,
											"end": 2484,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1190,
											"end": 1191,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1180,
											"end": 1187,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1180,
											"end": 1191,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1171,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1171,
											"end": 1244,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1171,
											"end": 1244,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1171,
											"end": 1244,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1171,
											"end": 1244,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1171,
											"end": 1244,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5530,
											"end": 5532,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1171,
											"end": 1244,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1171,
											"end": 1244,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1171,
											"end": 1244,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5512,
											"end": 5533,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5569,
											"end": 5571,
											"name": "PUSH",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 5549,
											"end": 5567,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 5549,
											"end": 5567,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5549,
											"end": 5567,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5542,
											"end": 5572,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5608,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "205374616B652063616E206E6F742062652030202C20456E74657220736F6D65"
										},
										{
											"begin": 5588,
											"end": 5606,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 5588,
											"end": 5606,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5588,
											"end": 5606,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5581,
											"end": 5643,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20616D6F756E74206F6620746F6B656E73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "78"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5659,
											"end": 5677,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 5659,
											"end": 5677,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5659,
											"end": 5677,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5652,
											"end": 5699,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5716,
											"end": 5735,
											"name": "PUSH",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 5716,
											"end": 5735,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 5328,
											"end": 5741,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1244,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1171,
											"end": 1244,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1272,
											"end": 1282,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1271,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1306,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1306,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1306,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1320,
											"end": 1356,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1320,
											"end": 1356,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1320,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1359,
											"end": 1364,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1320,
											"end": 1356,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1320,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1320,
											"end": 1364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1320,
											"end": 1364,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1320,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1320,
											"end": 1364,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1446,
											"end": 1455,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1417,
											"end": 1443,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1417,
											"end": 1443,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1417,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1417,
											"end": 1455,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1417,
											"end": 1455,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1417,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1417,
											"end": 1455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1417,
											"end": 1455,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1417,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1402,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1403,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1378,
											"end": 1403,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1403,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1403,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1391,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 1378,
											"end": 1403,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1378,
											"end": 1403,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1403,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1378,
											"end": 1403,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1403,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1403,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1414,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1378,
											"end": 1414,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1414,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1455,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1455,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1455,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1455,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1469,
											"end": 1502,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1469,
											"end": 1502,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1469,
											"end": 1502,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1469,
											"end": 1502,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1469,
											"end": 1513,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1469,
											"end": 1513,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1527,
											"end": 1570,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1469,
											"end": 1513,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1469,
											"end": 1513,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1469,
											"end": 1513,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1527,
											"end": 1570,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1570,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1469,
											"end": 1513,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1527,
											"end": 1570,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1570,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1570,
											"name": "OR",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1584,
											"end": 1626,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1584,
											"end": 1626,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1584,
											"end": 1626,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1703,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 1640,
											"end": 1685,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1640,
											"end": 1685,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1640,
											"end": 1685,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1640,
											"end": 1685,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1640,
											"end": 1703,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1640,
											"end": 1703,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1640,
											"end": 1703,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1640,
											"end": 1703,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1722,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1722,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1767,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1767,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "17D57599"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1717,
											"end": 1767,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1767,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1717,
											"end": 1722,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1722,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1722,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1722,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1731,
											"name": "PUSH",
											"source": 1,
											"value": "BEABACC8"
										},
										{
											"begin": 1717,
											"end": 1731,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1767,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1717,
											"end": 1767,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1402,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1402,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1756,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1756,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1766,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1766,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1767,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1767,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1717,
											"end": 1767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1767,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1717,
											"end": 1767,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1767,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1717,
											"end": 1767,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1717,
											"end": 1767,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1767,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1767,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1767,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1767,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1767,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1717,
											"end": 1767,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1767,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1767,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1767,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1767,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1767,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1767,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1717,
											"end": 1767,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1767,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1767,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1717,
											"end": 1767,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1767,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1767,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1767,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1717,
											"end": 1767,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1767,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1717,
											"end": 1767,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1767,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1767,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1767,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1767,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1767,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1717,
											"end": 1767,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1767,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1767,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1717,
											"end": 1767,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1767,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1717,
											"end": 1767,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1767,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1767,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1767,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1767,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1767,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1767,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1717,
											"end": 1767,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1767,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1767,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1767,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1767,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1767,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1717,
											"end": 1767,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1767,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1767,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1717,
											"end": 1767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1767,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1717,
											"end": 1767,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1786,
											"end": 1836,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1786,
											"end": 1836,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1836,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1799,
											"end": 1809,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 9429,
											"end": 9480,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9429,
											"end": 9480,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9511,
											"end": 9513,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9496,
											"end": 9514,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9496,
											"end": 9514,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9489,
											"end": 9523,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9489,
											"end": 9523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9489,
											"end": 9523,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1820,
											"end": 1835,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 9539,
											"end": 9557,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9539,
											"end": 9557,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9539,
											"end": 9557,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9532,
											"end": 9566,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1786,
											"end": 1836,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1836,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1836,
											"name": "PUSH",
											"source": 1,
											"value": "96C68044657FCB3BEA5AD282F026BD0361F647D377DFE1615A77E35DD87280A1"
										},
										{
											"begin": 1786,
											"end": 1836,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1836,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1836,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1836,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9417,
											"end": 9419,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1786,
											"end": 1836,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1836,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1836,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 2484,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 1075,
											"end": 2484,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 2484,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1075,
											"end": 2484,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1941,
											"end": 1968,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1941,
											"end": 1968,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1D5B999A5E1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1941,
											"end": 1968,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1941,
											"end": 1968,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1941,
											"end": 1968,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9779,
											"end": 9801,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9817,
											"end": 9828,
											"name": "PUSH",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 9817,
											"end": 9828,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1941,
											"end": 1968,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1941,
											"end": 1968,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1941,
											"end": 1968,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1941,
											"end": 1968,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1941,
											"end": 1968,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1941,
											"end": 1968,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1941,
											"end": 1968,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1941,
											"end": 1968,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1941,
											"end": 1968,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1941,
											"end": 1968,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1941,
											"end": 1968,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1941,
											"end": 1968,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 1969,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 1969,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 1969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 1969,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1931,
											"end": 1969,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 1969,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1925,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1903,
											"end": 1926,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1903,
											"end": 1926,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1903,
											"end": 1926,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1903,
											"end": 1926,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1903,
											"end": 1926,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 1903,
											"end": 1926,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1903,
											"end": 1926,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1903,
											"end": 1926,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1903,
											"end": 1926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1903,
											"end": 1926,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 1903,
											"end": 1926,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1903,
											"end": 1926,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1903,
											"end": 1926,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1903,
											"end": 1926,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1903,
											"end": 1926,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1903,
											"end": 1926,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1903,
											"end": 1926,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1903,
											"end": 1926,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1903,
											"end": 1926,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1903,
											"end": 1926,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1903,
											"end": 1926,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1903,
											"end": 1926,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1903,
											"end": 1926,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1893,
											"end": 1927,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1893,
											"end": 1927,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1893,
											"end": 1927,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1893,
											"end": 1927,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1893,
											"end": 1927,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1893,
											"end": 1927,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1893,
											"end": 1969,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2484,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 1889,
											"end": 2484,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2010,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1986,
											"end": 2011,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1986,
											"end": 2011,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1986,
											"end": 2011,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1986,
											"end": 2011,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1986,
											"end": 1999,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 1986,
											"end": 2011,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1986,
											"end": 2011,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1986,
											"end": 2011,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1986,
											"end": 2011,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1986,
											"end": 2011,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1986,
											"end": 2034,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1986,
											"end": 2034,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1986,
											"end": 2034,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2084,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2048,
											"end": 2084,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2092,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2087,
											"end": 2092,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2084,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2092,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2048,
											"end": 2092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2092,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2048,
											"end": 2092,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2120,
											"end": 2130,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2131,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2106,
											"end": 2131,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2131,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2131,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2119,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 2106,
											"end": 2131,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2106,
											"end": 2131,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2131,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2106,
											"end": 2131,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2131,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2131,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2139,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2106,
											"end": 2139,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2139,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2139,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2150,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2150,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2164,
											"end": 2207,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2150,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2150,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2150,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2164,
											"end": 2207,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2164,
											"end": 2207,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2150,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2164,
											"end": 2207,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2164,
											"end": 2207,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2164,
											"end": 2207,
											"name": "OR",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2221,
											"end": 2263,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2221,
											"end": 2263,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2221,
											"end": 2263,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2325,
											"end": 2340,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 2277,
											"end": 2322,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2277,
											"end": 2322,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2277,
											"end": 2322,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2277,
											"end": 2322,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2277,
											"end": 2340,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2277,
											"end": 2340,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2277,
											"end": 2340,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2277,
											"end": 2340,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2354,
											"end": 2359,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2354,
											"end": 2359,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2354,
											"end": 2404,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2354,
											"end": 2404,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "17D57599"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2354,
											"end": 2404,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2354,
											"end": 2404,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2354,
											"end": 2359,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2354,
											"end": 2359,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2354,
											"end": 2359,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2354,
											"end": 2359,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2354,
											"end": 2368,
											"name": "PUSH",
											"source": 1,
											"value": "BEABACC8"
										},
										{
											"begin": 2354,
											"end": 2368,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2354,
											"end": 2404,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2354,
											"end": 2404,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2389,
											"end": 2393,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 2389,
											"end": 2393,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2396,
											"end": 2403,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 2396,
											"end": 2403,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2354,
											"end": 2404,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2354,
											"end": 2404,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2354,
											"end": 2404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2354,
											"end": 2404,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2354,
											"end": 2404,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2354,
											"end": 2404,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2354,
											"end": 2404,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2354,
											"end": 2404,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2354,
											"end": 2404,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2354,
											"end": 2404,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2354,
											"end": 2404,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2354,
											"end": 2404,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2354,
											"end": 2404,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2354,
											"end": 2404,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2354,
											"end": 2404,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 2354,
											"end": 2404,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 2354,
											"end": 2404,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2354,
											"end": 2404,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2354,
											"end": 2404,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2354,
											"end": 2404,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2354,
											"end": 2404,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2354,
											"end": 2404,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2354,
											"end": 2404,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2354,
											"end": 2404,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2354,
											"end": 2404,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 2354,
											"end": 2404,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2354,
											"end": 2404,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2354,
											"end": 2404,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2354,
											"end": 2404,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2354,
											"end": 2404,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2354,
											"end": 2404,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2354,
											"end": 2404,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2354,
											"end": 2404,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2354,
											"end": 2404,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2354,
											"end": 2404,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2354,
											"end": 2404,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2354,
											"end": 2404,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2354,
											"end": 2404,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2354,
											"end": 2404,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2354,
											"end": 2404,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2354,
											"end": 2404,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2354,
											"end": 2404,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2354,
											"end": 2404,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2354,
											"end": 2404,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2354,
											"end": 2404,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2354,
											"end": 2404,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2354,
											"end": 2404,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2354,
											"end": 2404,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2354,
											"end": 2404,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2354,
											"end": 2404,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2354,
											"end": 2404,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2354,
											"end": 2404,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2354,
											"end": 2404,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2354,
											"end": 2404,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2354,
											"end": 2404,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2354,
											"end": 2404,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2354,
											"end": 2404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2354,
											"end": 2404,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2354,
											"end": 2404,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2423,
											"end": 2473,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2423,
											"end": 2473,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2473,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2436,
											"end": 2446,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 9429,
											"end": 9480,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9429,
											"end": 9480,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9511,
											"end": 9513,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9496,
											"end": 9514,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9496,
											"end": 9514,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9489,
											"end": 9523,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9489,
											"end": 9523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9489,
											"end": 9523,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2457,
											"end": 2472,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 9539,
											"end": 9557,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9539,
											"end": 9557,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9539,
											"end": 9557,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9532,
											"end": 9566,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2423,
											"end": 2473,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2473,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2473,
											"name": "PUSH",
											"source": 1,
											"value": "96C68044657FCB3BEA5AD282F026BD0361F647D377DFE1615A77E35DD87280A1"
										},
										{
											"begin": 2423,
											"end": 2473,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2473,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2473,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2473,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9417,
											"end": 9419,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2423,
											"end": 2473,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2473,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2473,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2484,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 1889,
											"end": 2484,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 866,
											"end": 2490,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 866,
											"end": 2490,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 866,
											"end": 2490,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 866,
											"end": 2490,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 866,
											"end": 2490,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5116,
											"end": 5534,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 5116,
											"end": 5534,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5201,
											"end": 5224,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5201,
											"end": 5224,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5182,
											"end": 5189,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5201,
											"end": 5224,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5201,
											"end": 5224,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5201,
											"end": 5224,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5201,
											"end": 5214,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 5201,
											"end": 5224,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5201,
											"end": 5224,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5201,
											"end": 5224,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5201,
											"end": 5224,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5201,
											"end": 5224,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5201,
											"end": 5232,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5201,
											"end": 5232,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5201,
											"end": 5232,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5201,
											"end": 5232,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5201,
											"end": 5232,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5201,
											"end": 5240,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5201,
											"end": 5240,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5201,
											"end": 5232,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5201,
											"end": 5240,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5197,
											"end": 5532,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 5197,
											"end": 5532,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5256,
											"end": 5279,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5256,
											"end": 5279,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5256,
											"end": 5279,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5256,
											"end": 5279,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5256,
											"end": 5279,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5256,
											"end": 5279,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5256,
											"end": 5269,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 5256,
											"end": 5279,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5256,
											"end": 5279,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5256,
											"end": 5279,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5256,
											"end": 5279,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5256,
											"end": 5279,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5256,
											"end": 5289,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5256,
											"end": 5289,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5256,
											"end": 5289,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5256,
											"end": 5289,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5256,
											"end": 5289,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 5256,
											"end": 5289,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5256,
											"end": 5289,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5256,
											"end": 5297,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5256,
											"end": 5297,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5293,
											"end": 5297,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5256,
											"end": 5297,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5252,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 5252,
											"end": 5378,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5320,
											"end": 5321,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5320,
											"end": 5321,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5116,
											"end": 5534,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5116,
											"end": 5534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5252,
											"end": 5378,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 5252,
											"end": 5378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5359,
											"end": 5367,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 5359,
											"end": 5367,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5359,
											"end": 5367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5116,
											"end": 5534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5197,
											"end": 5532,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 5197,
											"end": 5532,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5404,
											"end": 5427,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5404,
											"end": 5427,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5404,
											"end": 5427,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5404,
											"end": 5427,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5404,
											"end": 5427,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5404,
											"end": 5427,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5404,
											"end": 5417,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 5404,
											"end": 5427,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5404,
											"end": 5427,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5404,
											"end": 5427,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5404,
											"end": 5427,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5404,
											"end": 5427,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5404,
											"end": 5437,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5404,
											"end": 5437,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5404,
											"end": 5437,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5404,
											"end": 5437,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5404,
											"end": 5437,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 5404,
											"end": 5437,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5404,
											"end": 5437,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5404,
											"end": 5445,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5404,
											"end": 5445,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5441,
											"end": 5445,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5404,
											"end": 5445,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5400,
											"end": 5526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 5400,
											"end": 5526,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5468,
											"end": 5469,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5468,
											"end": 5469,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5116,
											"end": 5534,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5116,
											"end": 5534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5400,
											"end": 5526,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 5400,
											"end": 5526,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5116,
											"end": 5534,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5116,
											"end": 5534,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5116,
											"end": 5534,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5116,
											"end": 5534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4422,
											"end": 4541,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 4422,
											"end": 4541,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4483,
											"end": 4490,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4509,
											"end": 4514,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4509,
											"end": 4514,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4509,
											"end": 4534,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4509,
											"end": 4534,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4509,
											"end": 4534,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4509,
											"end": 4534,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 178,
											"end": 210,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 178,
											"end": 210,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4509,
											"end": 4534,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4509,
											"end": 4534,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4509,
											"end": 4534,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4509,
											"end": 4514,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4509,
											"end": 4514,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4509,
											"end": 4514,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4509,
											"end": 4514,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4509,
											"end": 4524,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 4509,
											"end": 4524,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4509,
											"end": 4534,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4509,
											"end": 4534,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4509,
											"end": 4534,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4509,
											"end": 4534,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4509,
											"end": 4534,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4509,
											"end": 4534,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4509,
											"end": 4534,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4509,
											"end": 4534,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4509,
											"end": 4534,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 4509,
											"end": 4534,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 4509,
											"end": 4534,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4509,
											"end": 4534,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4509,
											"end": 4534,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4509,
											"end": 4534,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 4509,
											"end": 4534,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4509,
											"end": 4534,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 4509,
											"end": 4534,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4509,
											"end": 4534,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4509,
											"end": 4534,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 4509,
											"end": 4534,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 4509,
											"end": 4534,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4509,
											"end": 4534,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4509,
											"end": 4534,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 4509,
											"end": 4534,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4509,
											"end": 4534,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4509,
											"end": 4534,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4509,
											"end": 4534,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4509,
											"end": 4534,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4509,
											"end": 4534,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4509,
											"end": 4534,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4509,
											"end": 4534,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 4509,
											"end": 4534,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4509,
											"end": 4534,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 4509,
											"end": 4534,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4509,
											"end": 4534,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4509,
											"end": 4534,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4509,
											"end": 4534,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4509,
											"end": 4534,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4509,
											"end": 4534,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4509,
											"end": 4534,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4509,
											"end": 4534,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4509,
											"end": 4534,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4509,
											"end": 4534,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4509,
											"end": 4534,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4509,
											"end": 4534,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4509,
											"end": 4534,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4509,
											"end": 4534,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4509,
											"end": 4534,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4509,
											"end": 4534,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4509,
											"end": 4534,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 4509,
											"end": 4534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4509,
											"end": 4534,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4509,
											"end": 4534,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4502,
											"end": 4534,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4422,
											"end": 4541,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4422,
											"end": 4541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4548,
											"end": 5114,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4548,
											"end": 5114,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4630,
											"end": 4653,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4630,
											"end": 4653,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4611,
											"end": 4618,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4630,
											"end": 4653,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4630,
											"end": 4653,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4630,
											"end": 4653,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4630,
											"end": 4643,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 4630,
											"end": 4653,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4630,
											"end": 4653,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4630,
											"end": 4653,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4630,
											"end": 4653,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4630,
											"end": 4653,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4630,
											"end": 4661,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4630,
											"end": 4661,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4630,
											"end": 4661,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4630,
											"end": 4661,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4630,
											"end": 4661,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4630,
											"end": 4669,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4630,
											"end": 4669,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4630,
											"end": 4661,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4630,
											"end": 4669,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4626,
											"end": 5112,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 4626,
											"end": 5112,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4727,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 4703,
											"end": 4728,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4703,
											"end": 4728,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4703,
											"end": 4728,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4703,
											"end": 4728,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4703,
											"end": 4716,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 4703,
											"end": 4728,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4703,
											"end": 4728,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4703,
											"end": 4728,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4703,
											"end": 4728,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4703,
											"end": 4728,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4703,
											"end": 4739,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 4703,
											"end": 4739,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4703,
											"end": 4739,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4685,
											"end": 4700,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 4685,
											"end": 4739,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4681,
											"end": 4894,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4681,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 4681,
											"end": 4894,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4801,
											"end": 4809,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 4801,
											"end": 4809,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4762,
											"end": 4785,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4762,
											"end": 4785,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4762,
											"end": 4785,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4762,
											"end": 4785,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4762,
											"end": 4785,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4762,
											"end": 4785,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4762,
											"end": 4775,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 4762,
											"end": 4785,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4762,
											"end": 4785,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4762,
											"end": 4785,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4762,
											"end": 4785,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4762,
											"end": 4785,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4762,
											"end": 4798,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4762,
											"end": 4809,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4762,
											"end": 4809,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4801,
											"end": 4809,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4762,
											"end": 4809,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 4762,
											"end": 4809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4681,
											"end": 4894,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 4681,
											"end": 4894,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4847,
											"end": 4870,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4847,
											"end": 4870,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4847,
											"end": 4870,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4847,
											"end": 4870,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4847,
											"end": 4870,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4847,
											"end": 4860,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 4847,
											"end": 4870,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4847,
											"end": 4870,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4847,
											"end": 4870,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4847,
											"end": 4870,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4847,
											"end": 4870,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4847,
											"end": 4883,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4847,
											"end": 4883,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4548,
											"end": 5114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4626,
											"end": 5112,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 4626,
											"end": 5112,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4945,
											"end": 4955,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 4931,
											"end": 4956,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4931,
											"end": 4956,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4931,
											"end": 4956,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4931,
											"end": 4956,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4931,
											"end": 4944,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 4931,
											"end": 4956,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4931,
											"end": 4956,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4931,
											"end": 4956,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4931,
											"end": 4956,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4931,
											"end": 4956,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4931,
											"end": 4967,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 4931,
											"end": 4967,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4931,
											"end": 4967,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4913,
											"end": 4928,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 4913,
											"end": 4967,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 5112,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 5112,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 4910,
											"end": 5112,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5000,
											"end": 5018,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5000,
											"end": 5018,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4986,
											"end": 4997,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 4986,
											"end": 4997,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4986,
											"end": 5018,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4986,
											"end": 5018,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4986,
											"end": 5018,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4986,
											"end": 5018,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 4986,
											"end": 5018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 5112,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 4910,
											"end": 5112,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5105,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 5097,
											"end": 5105,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5058,
											"end": 5081,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5058,
											"end": 5081,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5058,
											"end": 5081,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5058,
											"end": 5081,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5058,
											"end": 5081,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5058,
											"end": 5081,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5058,
											"end": 5071,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 5058,
											"end": 5081,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5058,
											"end": 5081,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5058,
											"end": 5081,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5058,
											"end": 5081,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5058,
											"end": 5081,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5058,
											"end": 5094,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5058,
											"end": 5105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5058,
											"end": 5105,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5105,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5058,
											"end": 5105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 5058,
											"end": 5105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2496,
											"end": 4416,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2496,
											"end": 4416,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2590,
											"end": 2613,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2613,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2613,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2549,
											"end": 2556,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2613,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2613,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2613,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2603,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 2590,
											"end": 2613,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2613,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2613,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2613,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2613,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2619,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2590,
											"end": 2619,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2619,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2549,
											"end": 2556,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2549,
											"end": 2556,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2576,
											"end": 2586,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2619,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2590,
											"end": 2619,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2619,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2619,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2619,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2576,
											"end": 2619,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2568,
											"end": 2651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 2568,
											"end": 2651,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2568,
											"end": 2651,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2568,
											"end": 2651,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2568,
											"end": 2651,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2568,
											"end": 2651,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10174,
											"end": 10176,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2568,
											"end": 2651,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2568,
											"end": 2651,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2568,
											"end": 2651,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10156,
											"end": 10177,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10213,
											"end": 10215,
											"name": "PUSH",
											"source": 2,
											"value": "1C"
										},
										{
											"begin": 10193,
											"end": 10211,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 10193,
											"end": 10211,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10193,
											"end": 10211,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10186,
											"end": 10216,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10252,
											"end": 10282,
											"name": "PUSH",
											"source": 2,
											"value": "5374616B6520686173206E6F74206265656E20696E6974696174656400000000"
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10225,
											"end": 10283,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10300,
											"end": 10318,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 10300,
											"end": 10318,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2568,
											"end": 2651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 9972,
											"end": 10324,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2568,
											"end": 2651,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 2568,
											"end": 2651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2665,
											"end": 2688,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2665,
											"end": 2688,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2665,
											"end": 2688,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2665,
											"end": 2688,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2665,
											"end": 2688,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2665,
											"end": 2688,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2665,
											"end": 2678,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 2665,
											"end": 2688,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2665,
											"end": 2688,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2665,
											"end": 2688,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2665,
											"end": 2688,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2665,
											"end": 2688,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2665,
											"end": 2696,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2665,
											"end": 2696,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2665,
											"end": 2696,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2665,
											"end": 2696,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 2665,
											"end": 2696,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2665,
											"end": 2704,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2665,
											"end": 2704,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2665,
											"end": 2696,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2665,
											"end": 2704,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2661,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2661,
											"end": 4410,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2756,
											"end": 2766,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2742,
											"end": 2767,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2742,
											"end": 2767,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2742,
											"end": 2767,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2742,
											"end": 2767,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2742,
											"end": 2755,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 2742,
											"end": 2767,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2742,
											"end": 2767,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2742,
											"end": 2767,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2742,
											"end": 2767,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2742,
											"end": 2767,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2742,
											"end": 2778,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2742,
											"end": 2778,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2742,
											"end": 2778,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2739,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2778,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2720,
											"end": 3895,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2720,
											"end": 3895,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2720,
											"end": 3895,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2848,
											"end": 2866,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2848,
											"end": 2866,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2810,
											"end": 2833,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2810,
											"end": 2833,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2810,
											"end": 2833,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2810,
											"end": 2833,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2810,
											"end": 2833,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2810,
											"end": 2833,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2810,
											"end": 2823,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 2810,
											"end": 2833,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2810,
											"end": 2833,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2810,
											"end": 2833,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2810,
											"end": 2833,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2810,
											"end": 2833,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2810,
											"end": 2846,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2870,
											"end": 2873,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2870,
											"end": 2873,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2810,
											"end": 2866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 2810,
											"end": 2866,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2810,
											"end": 2866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 2810,
											"end": 2866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2810,
											"end": 2866,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 2810,
											"end": 2866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2873,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 2809,
											"end": 2873,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2873,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2873,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 2809,
											"end": 2873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2873,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 2809,
											"end": 2873,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2799,
											"end": 2807,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 2799,
											"end": 2873,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2799,
											"end": 2873,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2799,
											"end": 2873,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2911,
											"end": 2934,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2911,
											"end": 2934,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2911,
											"end": 2934,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2911,
											"end": 2934,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2911,
											"end": 2934,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2911,
											"end": 2934,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2911,
											"end": 2924,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 2911,
											"end": 2934,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2911,
											"end": 2934,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2911,
											"end": 2934,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2911,
											"end": 2934,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2911,
											"end": 2934,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2911,
											"end": 2947,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2911,
											"end": 2958,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 2911,
											"end": 2958,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2799,
											"end": 2873,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2911,
											"end": 2958,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2911,
											"end": 2958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2911,
											"end": 2958,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 2911,
											"end": 2958,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2891,
											"end": 2909,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 2891,
											"end": 2958,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2891,
											"end": 2958,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2891,
											"end": 2958,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2976,
											"end": 2981,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2976,
											"end": 2981,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2976,
											"end": 3034,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2976,
											"end": 3034,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "17D57599"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2976,
											"end": 3034,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2976,
											"end": 3034,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2976,
											"end": 2981,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2976,
											"end": 2981,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2976,
											"end": 2981,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2976,
											"end": 2981,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2976,
											"end": 2990,
											"name": "PUSH",
											"source": 1,
											"value": "BEABACC8"
										},
										{
											"begin": 2976,
											"end": 2990,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2976,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2976,
											"end": 3034,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2999,
											"end": 3003,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 2999,
											"end": 3003,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3005,
											"end": 3013,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3005,
											"end": 3013,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2891,
											"end": 2958,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2976,
											"end": 3034,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2976,
											"end": 3034,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2976,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2976,
											"end": 3034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2976,
											"end": 3034,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2976,
											"end": 3034,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2976,
											"end": 3034,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2976,
											"end": 3034,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2976,
											"end": 3034,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2976,
											"end": 3034,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2976,
											"end": 3034,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2976,
											"end": 3034,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2976,
											"end": 3034,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2976,
											"end": 3034,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2976,
											"end": 3034,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2976,
											"end": 3034,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 2976,
											"end": 3034,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 2976,
											"end": 3034,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2976,
											"end": 3034,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2976,
											"end": 3034,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2976,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 2976,
											"end": 3034,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2976,
											"end": 3034,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2976,
											"end": 3034,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2976,
											"end": 3034,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2976,
											"end": 3034,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 2976,
											"end": 3034,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2976,
											"end": 3034,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2976,
											"end": 3034,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2976,
											"end": 3034,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 2976,
											"end": 3034,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2976,
											"end": 3034,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2976,
											"end": 3034,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2976,
											"end": 3034,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2976,
											"end": 3034,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2976,
											"end": 3034,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2976,
											"end": 3034,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2976,
											"end": 3034,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2976,
											"end": 3034,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2976,
											"end": 3034,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2976,
											"end": 3034,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2976,
											"end": 3034,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2976,
											"end": 3034,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2976,
											"end": 3034,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2976,
											"end": 3034,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2976,
											"end": 3034,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2976,
											"end": 3034,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2976,
											"end": 3034,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2976,
											"end": 3034,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2976,
											"end": 3034,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2976,
											"end": 3034,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2976,
											"end": 3034,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2976,
											"end": 3034,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2976,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 2976,
											"end": 3034,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2976,
											"end": 3034,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2976,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2976,
											"end": 3034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2976,
											"end": 3034,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 2976,
											"end": 3034,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3059,
											"end": 3082,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3059,
											"end": 3082,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3059,
											"end": 3082,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3059,
											"end": 3082,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3059,
											"end": 3082,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3059,
											"end": 3082,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3059,
											"end": 3072,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 3059,
											"end": 3082,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3059,
											"end": 3082,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3059,
											"end": 3082,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3059,
											"end": 3082,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3059,
											"end": 3082,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3082,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3082,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3082,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3059,
											"end": 3082,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 3052,
											"end": 3082,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3052,
											"end": 3082,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3082,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3059,
											"end": 3082,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 3052,
											"end": 3082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3082,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 3052,
											"end": 3082,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3052,
											"end": 3082,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3082,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3052,
											"end": 3082,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3082,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3082,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3082,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3082,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3082,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 3052,
											"end": 3082,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3082,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3082,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3082,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3082,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3082,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3052,
											"end": 3082,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3082,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3082,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3082,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3082,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3052,
											"end": 3082,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3082,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3082,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3114,
											"end": 3124,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3125,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3125,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3113,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 3100,
											"end": 3125,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3100,
											"end": 3125,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3125,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3100,
											"end": 3125,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3125,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3135,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3141,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3141,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3100,
											"end": 3141,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3100,
											"end": 3141,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3141,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3141,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3166,
											"end": 3184,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 3166,
											"end": 3184,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3166,
											"end": 3184,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2496,
											"end": 4416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2720,
											"end": 3895,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2720,
											"end": 3895,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3325,
											"end": 3335,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3311,
											"end": 3336,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3311,
											"end": 3336,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3311,
											"end": 3336,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3311,
											"end": 3336,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3311,
											"end": 3324,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 3311,
											"end": 3336,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3311,
											"end": 3336,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3311,
											"end": 3336,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3311,
											"end": 3336,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3311,
											"end": 3336,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3311,
											"end": 3347,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3311,
											"end": 3347,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3311,
											"end": 3347,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3293,
											"end": 3308,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 3293,
											"end": 3347,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3289,
											"end": 3895,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3289,
											"end": 3895,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 3289,
											"end": 3895,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3421,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3395,
											"end": 3421,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3376,
											"end": 3391,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 3376,
											"end": 3421,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 3367,
											"end": 3426,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3426,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3367,
											"end": 3426,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3367,
											"end": 3426,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3426,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10926,
											"end": 10928,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3367,
											"end": 3426,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3367,
											"end": 3426,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3426,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10908,
											"end": 10929,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 10945,
											"end": 10963,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 10945,
											"end": 10963,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10945,
											"end": 10963,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10938,
											"end": 10967,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10984,
											"end": 11002,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 10984,
											"end": 11002,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 10724,
											"end": 11008,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3426,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 3367,
											"end": 3426,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3495,
											"end": 3513,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3495,
											"end": 3513,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3456,
											"end": 3479,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3456,
											"end": 3479,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3456,
											"end": 3479,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3456,
											"end": 3479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3456,
											"end": 3479,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3456,
											"end": 3479,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3456,
											"end": 3469,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 3456,
											"end": 3479,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3456,
											"end": 3479,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3456,
											"end": 3479,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3456,
											"end": 3479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3456,
											"end": 3479,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3456,
											"end": 3492,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3517,
											"end": 3520,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3517,
											"end": 3520,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3456,
											"end": 3513,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 3456,
											"end": 3513,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3456,
											"end": 3513,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 3456,
											"end": 3513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3456,
											"end": 3513,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 3456,
											"end": 3513,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 3455,
											"end": 3520,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 3455,
											"end": 3520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3520,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 3455,
											"end": 3520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3444,
											"end": 3452,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3444,
											"end": 3520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3444,
											"end": 3520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3444,
											"end": 3520,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3578,
											"end": 3581,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3578,
											"end": 3581,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 3561,
											"end": 3574,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3572,
											"end": 3574,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3561,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 3561,
											"end": 3574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3574,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 3561,
											"end": 3574,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3560,
											"end": 3581,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 3560,
											"end": 3581,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3560,
											"end": 3581,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3560,
											"end": 3581,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 3560,
											"end": 3581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3560,
											"end": 3581,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 3560,
											"end": 3581,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3539,
											"end": 3557,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 3539,
											"end": 3581,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3539,
											"end": 3581,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3539,
											"end": 3581,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3632,
											"end": 3655,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3632,
											"end": 3655,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3632,
											"end": 3655,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3632,
											"end": 3655,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3632,
											"end": 3655,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3632,
											"end": 3655,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3632,
											"end": 3645,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 3632,
											"end": 3655,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3632,
											"end": 3655,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3632,
											"end": 3655,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3632,
											"end": 3655,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3632,
											"end": 3655,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3632,
											"end": 3668,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3612,
											"end": 3668,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 3612,
											"end": 3668,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3612,
											"end": 3668,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 3612,
											"end": 3668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3612,
											"end": 3668,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 3612,
											"end": 3668,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3610,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3599,
											"end": 3668,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3668,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3668,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3691,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3686,
											"end": 3691,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3737,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3686,
											"end": 3737,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "17D57599"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3686,
											"end": 3737,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3737,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3686,
											"end": 3691,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3691,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3691,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3691,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3700,
											"name": "PUSH",
											"source": 1,
											"value": "BEABACC8"
										},
										{
											"begin": 3686,
											"end": 3700,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 3686,
											"end": 3737,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3709,
											"end": 3713,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 3709,
											"end": 3713,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3715,
											"end": 3723,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3715,
											"end": 3723,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3668,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3737,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3686,
											"end": 3737,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 3686,
											"end": 3737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3737,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 3686,
											"end": 3737,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3737,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3686,
											"end": 3737,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3686,
											"end": 3737,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3737,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3737,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3737,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3737,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3737,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3686,
											"end": 3737,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3737,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3737,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3737,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3737,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3737,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 3686,
											"end": 3737,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3737,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3737,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3686,
											"end": 3737,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3737,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3737,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3737,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3686,
											"end": 3737,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3737,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 3686,
											"end": 3737,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3737,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3737,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3737,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3737,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3737,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3686,
											"end": 3737,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3737,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3737,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3686,
											"end": 3737,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3737,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3686,
											"end": 3737,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3737,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3737,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3737,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3737,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3737,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3737,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3686,
											"end": 3737,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3737,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3737,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3737,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3737,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 3686,
											"end": 3737,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3737,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 3686,
											"end": 3737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3737,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 3686,
											"end": 3737,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3762,
											"end": 3785,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3762,
											"end": 3785,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3762,
											"end": 3785,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3762,
											"end": 3785,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3762,
											"end": 3785,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3762,
											"end": 3785,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3762,
											"end": 3775,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 3762,
											"end": 3785,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3762,
											"end": 3785,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3762,
											"end": 3785,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3762,
											"end": 3785,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3762,
											"end": 3785,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3785,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3785,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3785,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3762,
											"end": 3785,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 3755,
											"end": 3785,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3755,
											"end": 3785,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3785,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3762,
											"end": 3785,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 3755,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3785,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 3755,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3755,
											"end": 3785,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3755,
											"end": 3785,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3755,
											"end": 3785,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3785,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3785,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3785,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3785,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3785,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 3755,
											"end": 3785,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3785,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3785,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3785,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3785,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3785,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3755,
											"end": 3785,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3785,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3785,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3785,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3785,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3755,
											"end": 3785,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3785,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3785,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3817,
											"end": 3827,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3803,
											"end": 3828,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3803,
											"end": 3828,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3803,
											"end": 3816,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 3803,
											"end": 3828,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3803,
											"end": 3828,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3803,
											"end": 3828,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3803,
											"end": 3828,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3803,
											"end": 3828,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3803,
											"end": 3838,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3803,
											"end": 3844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3803,
											"end": 3844,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3803,
											"end": 3844,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3803,
											"end": 3844,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3803,
											"end": 3844,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3803,
											"end": 3844,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3869,
											"end": 3880,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3869,
											"end": 3880,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3880,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2496,
											"end": 4416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2661,
											"end": 4410,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2661,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3956,
											"end": 3979,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3956,
											"end": 3979,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3956,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3956,
											"end": 3979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3956,
											"end": 3979,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3956,
											"end": 3979,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3956,
											"end": 3969,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 3956,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3956,
											"end": 3979,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3956,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3956,
											"end": 3979,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3956,
											"end": 3979,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3956,
											"end": 3987,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3956,
											"end": 3987,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3956,
											"end": 3987,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3956,
											"end": 3987,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3956,
											"end": 3987,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3956,
											"end": 3996,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3956,
											"end": 3996,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3956,
											"end": 3996,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3956,
											"end": 3996,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 3952,
											"end": 4410,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4061,
											"end": 4081,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 4061,
											"end": 4081,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4023,
											"end": 4046,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4023,
											"end": 4046,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4023,
											"end": 4046,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4023,
											"end": 4046,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4023,
											"end": 4046,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4023,
											"end": 4046,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4023,
											"end": 4036,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 4023,
											"end": 4046,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4023,
											"end": 4046,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4023,
											"end": 4046,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4023,
											"end": 4046,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4023,
											"end": 4046,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4023,
											"end": 4059,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4084,
											"end": 4087,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4084,
											"end": 4087,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4023,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 4023,
											"end": 4081,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4023,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 4023,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 739,
											"end": 785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 739,
											"end": 785,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 739,
											"end": 785,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 739,
											"end": 785,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 739,
											"end": 785,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 739,
											"end": 785,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 739,
											"end": 785,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 739,
											"end": 785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 739,
											"end": 785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 739,
											"end": 785,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 739,
											"end": 785,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 739,
											"end": 785,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 739,
											"end": 785,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 739,
											"end": 785,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 739,
											"end": 785,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 739,
											"end": 785,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 739,
											"end": 785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 739,
											"end": 785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 739,
											"end": 785,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 739,
											"end": 785,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 739,
											"end": 785,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 739,
											"end": 785,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 739,
											"end": 785,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 739,
											"end": 785,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 739,
											"end": 785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 739,
											"end": 785,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 739,
											"end": 785,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 739,
											"end": 785,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 739,
											"end": 785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 739,
											"end": 785,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 739,
											"end": 785,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 739,
											"end": 785,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 739,
											"end": 785,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 739,
											"end": 785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 739,
											"end": 785,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 739,
											"end": 785,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 739,
											"end": 785,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 739,
											"end": 785,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 739,
											"end": 785,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 739,
											"end": 785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5539,
											"end": 5667,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 5539,
											"end": 5667,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5606,
											"end": 5618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 5606,
											"end": 5618,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 5606,
											"end": 5618,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5637,
											"end": 5660,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5637,
											"end": 5660,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5637,
											"end": 5660,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5637,
											"end": 5660,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5637,
											"end": 5660,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5637,
											"end": 5660,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5637,
											"end": 5650,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 5637,
											"end": 5660,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5637,
											"end": 5660,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5637,
											"end": 5660,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5637,
											"end": 5660,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5637,
											"end": 5660,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5637,
											"end": 5660,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5637,
											"end": 5660,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5637,
											"end": 5660,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5637,
											"end": 5660,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5637,
											"end": 5660,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5637,
											"end": 5660,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 5630,
											"end": 5660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 5630,
											"end": 5660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5660,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5539,
											"end": 5667,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5539,
											"end": 5667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "128"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "168"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "155"
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "168"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "170"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "170"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "171"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "172"
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "171"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "172"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "173"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "174"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "173"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "174"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 222,
											"end": 349,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 222,
											"end": 349,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 283,
											"end": 293,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B71"
										},
										{
											"begin": 278,
											"end": 281,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 274,
											"end": 294,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 271,
											"end": 272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 264,
											"end": 295,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 314,
											"end": 318,
											"name": "PUSH",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 311,
											"end": 312,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 304,
											"end": 319,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 338,
											"end": 342,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 335,
											"end": 336,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 328,
											"end": 343,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 354,
											"end": 472,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 354,
											"end": 472,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 440,
											"end": 445,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 433,
											"end": 446,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 426,
											"end": 447,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 419,
											"end": 424,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 416,
											"end": 448,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 406,
											"end": 466,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 406,
											"end": 466,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 462,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 459,
											"end": 460,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 452,
											"end": 464,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 477,
											"end": 605,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 477,
											"end": 605,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 542,
											"end": 562,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 542,
											"end": 562,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 571,
											"end": 599,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 542,
											"end": 562,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 571,
											"end": 599,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 571,
											"end": 599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 610,
											"end": 1737,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 610,
											"end": 1737,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 703,
											"end": 709,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 717,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 719,
											"end": 725,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 733,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 780,
											"end": 783,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 768,
											"end": 777,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 759,
											"end": 766,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 755,
											"end": 778,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 751,
											"end": 784,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 748,
											"end": 801,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 748,
											"end": 801,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 748,
											"end": 801,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 797,
											"end": 798,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 794,
											"end": 795,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 787,
											"end": 799,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 748,
											"end": 801,
											"name": "tag",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 748,
											"end": 801,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 833,
											"end": 842,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 820,
											"end": 843,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 810,
											"end": 843,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 810,
											"end": 843,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 894,
											"end": 896,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 883,
											"end": 892,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 879,
											"end": 897,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 866,
											"end": 898,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 917,
											"end": 935,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 958,
											"end": 960,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 950,
											"end": 956,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 947,
											"end": 961,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 944,
											"end": 978,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 944,
											"end": 978,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 944,
											"end": 978,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 974,
											"end": 975,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 971,
											"end": 972,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 964,
											"end": 976,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 944,
											"end": 978,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 944,
											"end": 978,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1018,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1010,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 997,
											"end": 1019,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 987,
											"end": 1019,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 987,
											"end": 1019,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1064,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1050,
											"end": 1054,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1046,
											"end": 1048,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1042,
											"end": 1055,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1038,
											"end": 1065,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1028,
											"end": 1083,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 1028,
											"end": 1083,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1080,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1076,
											"end": 1077,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1069,
											"end": 1081,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1028,
											"end": 1083,
											"name": "tag",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 1028,
											"end": 1083,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1115,
											"end": 1117,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1102,
											"end": 1118,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1137,
											"end": 1139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1133,
											"end": 1135,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1130,
											"end": 1140,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1127,
											"end": 1163,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1127,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 1127,
											"end": 1163,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 1143,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 1143,
											"end": 1161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1161,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 1143,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1220,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1212,
											"end": 1221,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1188,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1272,
											"end": 1285,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1272,
											"end": 1285,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1268,
											"end": 1290,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1290,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1290,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1294,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 1264,
											"end": 1295,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1260,
											"end": 1300,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1248,
											"end": 1301,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1248,
											"end": 1301,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1248,
											"end": 1301,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1316,
											"end": 1334,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1316,
											"end": 1334,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1316,
											"end": 1334,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1336,
											"end": 1358,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1336,
											"end": 1358,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1336,
											"end": 1358,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1313,
											"end": 1359,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1382,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 1310,
											"end": 1382,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1362,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 1362,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 1362,
											"end": 1380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1362,
											"end": 1380,
											"name": "tag",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 1362,
											"end": 1380,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1402,
											"end": 1412,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1398,
											"end": 1400,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1437,
											"end": 1439,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1429,
											"end": 1435,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1422,
											"end": 1440,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1477,
											"end": 1484,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 1472,
											"end": 1474,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1467,
											"end": 1469,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1463,
											"end": 1465,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 1470,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1455,
											"end": 1475,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1452,
											"end": 1485,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1502,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 1449,
											"end": 1502,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1498,
											"end": 1499,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1495,
											"end": 1496,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1488,
											"end": 1500,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1502,
											"name": "tag",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 1449,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1554,
											"end": 1556,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1549,
											"end": 1551,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1545,
											"end": 1547,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1541,
											"end": 1552,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1536,
											"end": 1538,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1528,
											"end": 1534,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1524,
											"end": 1539,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1511,
											"end": 1557,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 1599,
											"end": 1600,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1594,
											"end": 1596,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1589,
											"end": 1591,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1581,
											"end": 1587,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1577,
											"end": 1592,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1597,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1566,
											"end": 1601,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1620,
											"end": 1626,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1610,
											"end": 1626,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": 1610,
											"end": 1626,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1610,
											"end": 1626,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1610,
											"end": 1626,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1610,
											"end": 1626,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1610,
											"end": 1626,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1610,
											"end": 1626,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1673,
											"end": 1675,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1662,
											"end": 1671,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1658,
											"end": 1676,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1645,
											"end": 1677,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1635,
											"end": 1677,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1635,
											"end": 1677,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1696,
											"end": 1731,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 1727,
											"end": 1729,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1716,
											"end": 1725,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1712,
											"end": 1730,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1696,
											"end": 1731,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 1696,
											"end": 1731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1696,
											"end": 1731,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 1696,
											"end": 1731,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1686,
											"end": 1731,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1686,
											"end": 1731,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 610,
											"end": 1737,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 610,
											"end": 1737,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 610,
											"end": 1737,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 610,
											"end": 1737,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 610,
											"end": 1737,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 610,
											"end": 1737,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 610,
											"end": 1737,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 610,
											"end": 1737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1742,
											"end": 2028,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1742,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1807,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1854,
											"end": 1856,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1842,
											"end": 1851,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1833,
											"end": 1840,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1852,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1825,
											"end": 1857,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1822,
											"end": 1874,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1822,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 1822,
											"end": 1874,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1870,
											"end": 1871,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1867,
											"end": 1868,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1860,
											"end": 1872,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1822,
											"end": 1874,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 1822,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1919,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1919,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1948,
											"end": 1979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1948,
											"end": 1979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1938,
											"end": 1980,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1938,
											"end": 1980,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1928,
											"end": 1998,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 1928,
											"end": 1998,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 1995,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1991,
											"end": 1992,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1984,
											"end": 1996,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1928,
											"end": 1998,
											"name": "tag",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 1928,
											"end": 1998,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2017,
											"end": 2022,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1742,
											"end": 2028,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1742,
											"end": 2028,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2215,
											"end": 2465,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 2215,
											"end": 2465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2300,
											"end": 2301,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2310,
											"end": 2423,
											"name": "tag",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 2310,
											"end": 2423,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2324,
											"end": 2330,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2318,
											"end": 2331,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2310,
											"end": 2423,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2310,
											"end": 2423,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 2310,
											"end": 2423,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2400,
											"end": 2411,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2400,
											"end": 2411,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2400,
											"end": 2411,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2394,
											"end": 2412,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2381,
											"end": 2392,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2381,
											"end": 2392,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2381,
											"end": 2392,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2374,
											"end": 2413,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2346,
											"end": 2348,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2339,
											"end": 2349,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2310,
											"end": 2423,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 2310,
											"end": 2423,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2310,
											"end": 2423,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 2310,
											"end": 2423,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2457,
											"end": 2458,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2439,
											"end": 2455,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2439,
											"end": 2455,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2432,
											"end": 2459,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2215,
											"end": 2465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2470,
											"end": 2741,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 2470,
											"end": 2741,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2512,
											"end": 2515,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2550,
											"end": 2555,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2544,
											"end": 2556,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2577,
											"end": 2583,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2575,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2584,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2593,
											"end": 2669,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 2662,
											"end": 2668,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2655,
											"end": 2659,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2650,
											"end": 2653,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2646,
											"end": 2660,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2639,
											"end": 2643,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2632,
											"end": 2637,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2644,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2593,
											"end": 2669,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 2593,
											"end": 2669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2593,
											"end": 2669,
											"name": "tag",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 2593,
											"end": 2669,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2723,
											"end": 2725,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2702,
											"end": 2717,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2698,
											"end": 2727,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2689,
											"end": 2728,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2689,
											"end": 2728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2689,
											"end": 2728,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2689,
											"end": 2728,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2730,
											"end": 2734,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2685,
											"end": 2735,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2685,
											"end": 2735,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2470,
											"end": 2741,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2470,
											"end": 2741,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 3443,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2746,
											"end": 3443,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3051,
											"end": 3057,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 3040,
											"end": 3049,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3058,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3094,
											"end": 3097,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 3089,
											"end": 3091,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3078,
											"end": 3087,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3074,
											"end": 3092,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3067,
											"end": 3098,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3018,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3115,
											"end": 3161,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 3156,
											"end": 3159,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 3145,
											"end": 3154,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3141,
											"end": 3160,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3133,
											"end": 3139,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 3115,
											"end": 3161,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 3115,
											"end": 3161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3115,
											"end": 3161,
											"name": "tag",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 3115,
											"end": 3161,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3192,
											"end": 3194,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3177,
											"end": 3195,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3177,
											"end": 3195,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3170,
											"end": 3204,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": 3170,
											"end": 3204,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3170,
											"end": 3204,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": 3170,
											"end": 3204,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3235,
											"end": 3237,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3220,
											"end": 3238,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3238,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3247,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3247,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3247,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3247,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3291,
											"end": 3305,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3291,
											"end": 3305,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3284,
											"end": 3306,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3278,
											"end": 3281,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3263,
											"end": 3282,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3263,
											"end": 3282,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3256,
											"end": 3307,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3344,
											"end": 3376,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3364,
											"end": 3367,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 3323,
											"end": 3342,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3342,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3316,
											"end": 3377,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3421,
											"end": 3435,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3414,
											"end": 3436,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3408,
											"end": 3411,
											"name": "PUSH",
											"source": 2,
											"value": "C0"
										},
										{
											"begin": 3393,
											"end": 3412,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3412,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3412,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3386,
											"end": 3437,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3107,
											"end": 3161,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 3443,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2746,
											"end": 3443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3448,
											"end": 4231,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3448,
											"end": 4231,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3621,
											"end": 3623,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3610,
											"end": 3619,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3603,
											"end": 3624,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3666,
											"end": 3672,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3660,
											"end": 3673,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3655,
											"end": 3657,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3644,
											"end": 3653,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3640,
											"end": 3658,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3633,
											"end": 3674,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3584,
											"end": 3588,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3721,
											"end": 3723,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3713,
											"end": 3719,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3709,
											"end": 3724,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3703,
											"end": 3725,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3761,
											"end": 3765,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 3756,
											"end": 3758,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3745,
											"end": 3754,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3741,
											"end": 3759,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3734,
											"end": 3766,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3789,
											"end": 3841,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 3836,
											"end": 3839,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3825,
											"end": 3834,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3821,
											"end": 3840,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3807,
											"end": 3819,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3789,
											"end": 3841,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 3789,
											"end": 3841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3789,
											"end": 3841,
											"name": "tag",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 3789,
											"end": 3841,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3775,
											"end": 3841,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3775,
											"end": 3841,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3895,
											"end": 3897,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3887,
											"end": 3893,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3883,
											"end": 3898,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3872,
											"end": 3874,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3861,
											"end": 3870,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3857,
											"end": 3875,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 3900,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3955,
											"end": 3957,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3947,
											"end": 3953,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3943,
											"end": 3958,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3937,
											"end": 3959,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3931,
											"end": 3934,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3920,
											"end": 3929,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3916,
											"end": 3935,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3909,
											"end": 3960,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4029,
											"end": 4032,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 4021,
											"end": 4027,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4017,
											"end": 4033,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4011,
											"end": 4034,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4004,
											"end": 4035,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3997,
											"end": 4036,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3991,
											"end": 3994,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 3980,
											"end": 3989,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3976,
											"end": 3995,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3969,
											"end": 4037,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4120,
											"end": 4121,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4116,
											"end": 4117,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4111,
											"end": 4114,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 4107,
											"end": 4118,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 4103,
											"end": 4122,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4096,
											"end": 4099,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 4088,
											"end": 4094,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4084,
											"end": 4100,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4078,
											"end": 4101,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4074,
											"end": 4123,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4068,
											"end": 4071,
											"name": "PUSH",
											"source": 2,
											"value": "C0"
										},
										{
											"begin": 4057,
											"end": 4066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4053,
											"end": 4072,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4046,
											"end": 4124,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4194,
											"end": 4197,
											"name": "PUSH",
											"source": 2,
											"value": "C0"
										},
										{
											"begin": 4186,
											"end": 4192,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4182,
											"end": 4198,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4176,
											"end": 4199,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4162,
											"end": 4201,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4155,
											"end": 4159,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 4144,
											"end": 4153,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4140,
											"end": 4160,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4133,
											"end": 4202,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4225,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4211,
											"end": 4225,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4211,
											"end": 4225,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4211,
											"end": 4225,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3448,
											"end": 4231,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3448,
											"end": 4231,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3448,
											"end": 4231,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3448,
											"end": 4231,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3448,
											"end": 4231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4236,
											"end": 4420,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 4236,
											"end": 4420,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4306,
											"end": 4312,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4359,
											"end": 4361,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4347,
											"end": 4356,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4338,
											"end": 4345,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4334,
											"end": 4357,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4330,
											"end": 4362,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 4327,
											"end": 4379,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4327,
											"end": 4379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 4327,
											"end": 4379,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4375,
											"end": 4376,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4372,
											"end": 4373,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4365,
											"end": 4377,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4327,
											"end": 4379,
											"name": "tag",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 4327,
											"end": 4379,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4398,
											"end": 4414,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4398,
											"end": 4414,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4236,
											"end": 4420,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4236,
											"end": 4420,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5034,
											"end": 5323,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 5034,
											"end": 5323,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5165,
											"end": 5168,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5203,
											"end": 5209,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5197,
											"end": 5210,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5219,
											"end": 5285,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 5278,
											"end": 5284,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5273,
											"end": 5276,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5266,
											"end": 5270,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5258,
											"end": 5264,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5254,
											"end": 5271,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5219,
											"end": 5285,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 5219,
											"end": 5285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5219,
											"end": 5285,
											"name": "tag",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 5219,
											"end": 5285,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5301,
											"end": 5317,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5301,
											"end": 5317,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5301,
											"end": 5317,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5301,
											"end": 5317,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5301,
											"end": 5317,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5034,
											"end": 5323,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5034,
											"end": 5323,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5746,
											"end": 6126,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 5746,
											"end": 6126,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5825,
											"end": 5826,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5821,
											"end": 5833,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5821,
											"end": 5833,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5821,
											"end": 5833,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 5821,
											"end": 5833,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5868,
											"end": 5880,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5868,
											"end": 5880,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5868,
											"end": 5880,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5889,
											"end": 5950,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 5889,
											"end": 5950,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5943,
											"end": 5947,
											"name": "PUSH",
											"source": 2,
											"value": "7F"
										},
										{
											"begin": 5935,
											"end": 5941,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5931,
											"end": 5948,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5921,
											"end": 5948,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5921,
											"end": 5948,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5889,
											"end": 5950,
											"name": "tag",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 5889,
											"end": 5950,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5996,
											"end": 5998,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5988,
											"end": 5994,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5985,
											"end": 5999,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5965,
											"end": 5983,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5962,
											"end": 6000,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5959,
											"end": 6120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 5959,
											"end": 6120,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6042,
											"end": 6052,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B71"
										},
										{
											"begin": 6037,
											"end": 6040,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 6033,
											"end": 6053,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 6030,
											"end": 6031,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6023,
											"end": 6054,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6077,
											"end": 6081,
											"name": "PUSH",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 6074,
											"end": 6075,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6067,
											"end": 6082,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6105,
											"end": 6109,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 6102,
											"end": 6103,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6095,
											"end": 6110,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5959,
											"end": 6120,
											"name": "tag",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 5959,
											"end": 6120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5959,
											"end": 6120,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5746,
											"end": 6126,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5746,
											"end": 6126,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5746,
											"end": 6126,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5746,
											"end": 6126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6257,
											"end": 6802,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 6257,
											"end": 6802,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6359,
											"end": 6361,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 6354,
											"end": 6357,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6351,
											"end": 6362,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 6348,
											"end": 6796,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6348,
											"end": 6796,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 6348,
											"end": 6796,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6395,
											"end": 6396,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6420,
											"end": 6425,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6416,
											"end": 6418,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6409,
											"end": 6426,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6465,
											"end": 6469,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6461,
											"end": 6463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6451,
											"end": 6470,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6535,
											"end": 6537,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 6523,
											"end": 6533,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6519,
											"end": 6538,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6516,
											"end": 6517,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 6512,
											"end": 6539,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 6506,
											"end": 6510,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6502,
											"end": 6540,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6575,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6559,
											"end": 6569,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6556,
											"end": 6576,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6553,
											"end": 6600,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6553,
											"end": 6600,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 6553,
											"end": 6600,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6594,
											"end": 6598,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6553,
											"end": 6600,
											"name": "tag",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 6553,
											"end": 6600,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6651,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 6644,
											"end": 6647,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6640,
											"end": 6652,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6637,
											"end": 6638,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 6633,
											"end": 6653,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 6627,
											"end": 6631,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6623,
											"end": 6654,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6613,
											"end": 6654,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6613,
											"end": 6654,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6704,
											"end": 6786,
											"name": "tag",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 6704,
											"end": 6786,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6722,
											"end": 6724,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6715,
											"end": 6720,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6712,
											"end": 6725,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6704,
											"end": 6786,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6704,
											"end": 6786,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 6704,
											"end": 6786,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6767,
											"end": 6784,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6767,
											"end": 6784,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6767,
											"end": 6784,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6748,
											"end": 6749,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6737,
											"end": 6750,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6704,
											"end": 6786,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 6704,
											"end": 6786,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6704,
											"end": 6786,
											"name": "tag",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 6704,
											"end": 6786,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6708,
											"end": 6711,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6708,
											"end": 6711,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6708,
											"end": 6711,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6348,
											"end": 6796,
											"name": "tag",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 6348,
											"end": 6796,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6257,
											"end": 6802,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6257,
											"end": 6802,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6257,
											"end": 6802,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6257,
											"end": 6802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6978,
											"end": 8330,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 6978,
											"end": 8330,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7104,
											"end": 7107,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7098,
											"end": 7108,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7131,
											"end": 7149,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7123,
											"end": 7129,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7120,
											"end": 7150,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 7117,
											"end": 7173,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7117,
											"end": 7173,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 7117,
											"end": 7173,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7153,
											"end": 7171,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 7153,
											"end": 7171,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 7153,
											"end": 7171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7153,
											"end": 7171,
											"name": "tag",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 7153,
											"end": 7171,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7182,
											"end": 7279,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 7272,
											"end": 7278,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7232,
											"end": 7270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 7264,
											"end": 7268,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7258,
											"end": 7269,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7232,
											"end": 7270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 7232,
											"end": 7270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7232,
											"end": 7270,
											"name": "tag",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 7232,
											"end": 7270,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7226,
											"end": 7230,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7182,
											"end": 7279,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 7182,
											"end": 7279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7182,
											"end": 7279,
											"name": "tag",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 7182,
											"end": 7279,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7334,
											"end": 7338,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7334,
											"end": 7338,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7398,
											"end": 7400,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 7387,
											"end": 7401,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7387,
											"end": 7401,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 7415,
											"end": 7416,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 7410,
											"end": 8073,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7410,
											"end": 8073,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 7410,
											"end": 8073,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 7410,
											"end": 8073,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8117,
											"end": 8118,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8134,
											"end": 8140,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8131,
											"end": 8220,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8131,
											"end": 8220,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 8131,
											"end": 8220,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8186,
											"end": 8205,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8186,
											"end": 8205,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8186,
											"end": 8205,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8180,
											"end": 8206,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8131,
											"end": 8220,
											"name": "tag",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 8131,
											"end": 8220,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6935,
											"end": 6936,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 6931,
											"end": 6942,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 6942,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 6942,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 6927,
											"end": 6951,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 6923,
											"end": 6952,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 6913,
											"end": 6953,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6959,
											"end": 6960,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6955,
											"end": 6966,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6955,
											"end": 6966,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6955,
											"end": 6966,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6967,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 8233,
											"end": 8314,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8233,
											"end": 8314,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7380,
											"end": 8324,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 7380,
											"end": 8324,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7410,
											"end": 8073,
											"name": "tag",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 7410,
											"end": 8073,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6204,
											"end": 6205,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6197,
											"end": 6211,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6197,
											"end": 6211,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6197,
											"end": 6211,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6241,
											"end": 6245,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6228,
											"end": 6246,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6228,
											"end": 6246,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7446,
											"end": 7466,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 7446,
											"end": 7466,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7446,
											"end": 7466,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7564,
											"end": 7800,
											"name": "tag",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 7564,
											"end": 7800,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7578,
											"end": 7585,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7575,
											"end": 7576,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7586,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 7564,
											"end": 7800,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7564,
											"end": 7800,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 7564,
											"end": 7800,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7667,
											"end": 7686,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 7667,
											"end": 7686,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 7667,
											"end": 7686,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7661,
											"end": 7687,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7646,
											"end": 7688,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7646,
											"end": 7688,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7759,
											"end": 7786,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 7759,
											"end": 7786,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7759,
											"end": 7786,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7759,
											"end": 7786,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 7727,
											"end": 7728,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 7715,
											"end": 7729,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7715,
											"end": 7729,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7715,
											"end": 7729,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7715,
											"end": 7729,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7594,
											"end": 7613,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7594,
											"end": 7613,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7564,
											"end": 7800,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 7564,
											"end": 7800,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7564,
											"end": 7800,
											"name": "tag",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 7564,
											"end": 7800,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7571,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7828,
											"end": 7834,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7819,
											"end": 7826,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7816,
											"end": 7835,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 7813,
											"end": 8014,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7813,
											"end": 8014,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 7813,
											"end": 8014,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7889,
											"end": 7908,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7889,
											"end": 7908,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7889,
											"end": 7908,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7883,
											"end": 7909,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7972,
											"end": 7973,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 7968,
											"end": 7982,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 7968,
											"end": 7982,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7968,
											"end": 7982,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 7984,
											"end": 7987,
											"name": "PUSH",
											"source": 2,
											"value": "F8"
										},
										{
											"begin": 7964,
											"end": 7988,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7960,
											"end": 7997,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 7956,
											"end": 7998,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 7941,
											"end": 7999,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8000,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8000,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7813,
											"end": 8014,
											"name": "tag",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 7813,
											"end": 8014,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8060,
											"end": 8061,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8044,
											"end": 8058,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8044,
											"end": 8058,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8044,
											"end": 8058,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 8040,
											"end": 8062,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8027,
											"end": 8063,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8027,
											"end": 8063,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6978,
											"end": 8330,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8335,
											"end": 8462,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 8335,
											"end": 8462,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8396,
											"end": 8406,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B71"
										},
										{
											"begin": 8391,
											"end": 8394,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 8387,
											"end": 8407,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 8384,
											"end": 8385,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8377,
											"end": 8408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8427,
											"end": 8431,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 8424,
											"end": 8425,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8417,
											"end": 8432,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8451,
											"end": 8455,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 8448,
											"end": 8449,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8441,
											"end": 8456,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8467,
											"end": 8592,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 8467,
											"end": 8592,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8532,
											"end": 8541,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8532,
											"end": 8541,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8532,
											"end": 8541,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8553,
											"end": 8563,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8553,
											"end": 8563,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8553,
											"end": 8563,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 8550,
											"end": 8586,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8550,
											"end": 8586,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 8550,
											"end": 8586,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8566,
											"end": 8584,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 8566,
											"end": 8584,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 8566,
											"end": 8584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8597,
											"end": 8972,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 8597,
											"end": 8972,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8855,
											"end": 8870,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 8855,
											"end": 8870,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8855,
											"end": 8870,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8837,
											"end": 8871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8837,
											"end": 8871,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8907,
											"end": 8922,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8907,
											"end": 8922,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8907,
											"end": 8922,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8907,
											"end": 8922,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8902,
											"end": 8904,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8887,
											"end": 8905,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8887,
											"end": 8905,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8880,
											"end": 8923,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8954,
											"end": 8956,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8939,
											"end": 8957,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8939,
											"end": 8957,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8932,
											"end": 8966,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8932,
											"end": 8966,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8932,
											"end": 8966,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8932,
											"end": 8966,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8787,
											"end": 8789,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 8772,
											"end": 8790,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8772,
											"end": 8790,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8597,
											"end": 8972,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8977,
											"end": 9222,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 8977,
											"end": 9222,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9044,
											"end": 9050,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9097,
											"end": 9099,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9085,
											"end": 9094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9076,
											"end": 9083,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9072,
											"end": 9095,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9068,
											"end": 9100,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 9065,
											"end": 9117,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9065,
											"end": 9117,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 9065,
											"end": 9117,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9113,
											"end": 9114,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9110,
											"end": 9111,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9103,
											"end": 9115,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9065,
											"end": 9117,
											"name": "tag",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 9065,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9145,
											"end": 9154,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9139,
											"end": 9155,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9164,
											"end": 9192,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 9186,
											"end": 9191,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9164,
											"end": 9192,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 9164,
											"end": 9192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9839,
											"end": 9967,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 9839,
											"end": 9967,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9906,
											"end": 9915,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9906,
											"end": 9915,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9906,
											"end": 9915,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9927,
											"end": 9938,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9927,
											"end": 9938,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9927,
											"end": 9938,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 9924,
											"end": 9961,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9924,
											"end": 9961,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 9924,
											"end": 9961,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9941,
											"end": 9959,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 9941,
											"end": 9959,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 9941,
											"end": 9959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10329,
											"end": 10497,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 10329,
											"end": 10497,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10402,
											"end": 10411,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10402,
											"end": 10411,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10402,
											"end": 10411,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 10433,
											"end": 10442,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10433,
											"end": 10442,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10450,
											"end": 10465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10450,
											"end": 10465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10450,
											"end": 10465,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 10444,
											"end": 10466,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10444,
											"end": 10466,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10430,
											"end": 10467,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 10420,
											"end": 10491,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 10420,
											"end": 10491,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10471,
											"end": 10489,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 10471,
											"end": 10489,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 10471,
											"end": 10489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10502,
											"end": 10719,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 10502,
											"end": 10719,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10542,
											"end": 10543,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10568,
											"end": 10569,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10558,
											"end": 10690,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 10558,
											"end": 10690,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10612,
											"end": 10622,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B71"
										},
										{
											"begin": 10607,
											"end": 10610,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 10603,
											"end": 10623,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 10600,
											"end": 10601,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10593,
											"end": 10624,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10647,
											"end": 10651,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 10644,
											"end": 10645,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10637,
											"end": 10652,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10675,
											"end": 10679,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 10672,
											"end": 10673,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10665,
											"end": 10680,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10558,
											"end": 10690,
											"name": "tag",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 10558,
											"end": 10690,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10704,
											"end": 10713,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 10704,
											"end": 10713,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10502,
											"end": 10719,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"Final Assignment/ERC-20.sol",
								"Final Assignment/final_assignment_staking 1.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"Stake_details(address)": "f42f2e82",
							"TokenBalance(address)": "b6e2b395",
							"claimedRewards(address)": "bd834345",
							"getcontractaddress()": "15621373",
							"getstaking_details(address)": "f87c34f5",
							"staking(uint256,string,uint256,bool)": "16f88c94",
							"unclaimedRewards(address)": "949813b8",
							"unstaking(address)": "cb8d751a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ERC20Basic\",\"name\":\"_addressERC20\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"}],\"name\":\"tokensStaked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"Stake_details\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"stake_amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"stake_type\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"stake_time\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"starting_stake_time\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isFixed\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isClaimed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"TokenBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"claimedRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getcontractaddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getstaking_details\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake_amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"stake_type\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"stake_time\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"starting_stake_time\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isFixed\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isClaimed\",\"type\":\"bool\"}],\"internalType\":\"struct Staking_Token.Stake\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_type\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isFixed\",\"type\":\"bool\"}],\"name\":\"staking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"unclaimedRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"unstaking\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Final Assignment/final_assignment_staking 1.sol\":\"Staking_Token\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Final Assignment/ERC-20.sol\":{\"keccak256\":\"0xbd38bf37f4420ee85a9e3e33cf19872d33f0a7d7d5794ad62fa3a066f37f53f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f73eac771641f2e8f5e9c2e15acbcc6f6726cbc572ea82ed1e703e961bfdcaf\",\"dweb:/ipfs/QmTBE8L2sHeBEzg4Rxz5LeDbBEWxDgEWXqQF4JaaewbVV3\"]},\"Final Assignment/final_assignment_staking 1.sol\":{\"keccak256\":\"0x0c832c9f3eee08eb7cfb3d384be5db80bb7c179101667d5864c10108e136ca5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://398187dc607bb4ef262d43e4feaad3621a3671bdacf6fae2aa51b903894d5cbf\",\"dweb:/ipfs/QmXDXwPooyttWWULoSAfdypWfamqYKHxaGm7nZtFA5w6qP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 338,
								"contract": "Final Assignment/final_assignment_staking 1.sol:Staking_Token",
								"label": "Token",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(ERC20Basic)332"
							},
							{
								"astId": 366,
								"contract": "Final Assignment/final_assignment_staking 1.sol:Staking_Token",
								"label": "mapping_address",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 372,
								"contract": "Final Assignment/final_assignment_staking 1.sol:Staking_Token",
								"label": "expirytime_forfixedstaking",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 375,
								"contract": "Final Assignment/final_assignment_staking 1.sol:Staking_Token",
								"label": "penality_stake",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 378,
								"contract": "Final Assignment/final_assignment_staking 1.sol:Staking_Token",
								"label": "fixedinterest_rate",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 381,
								"contract": "Final Assignment/final_assignment_staking 1.sol:Staking_Token",
								"label": "unfixedinterest_rate",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 383,
								"contract": "Final Assignment/final_assignment_staking 1.sol:Staking_Token",
								"label": "stake_reward",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 385,
								"contract": "Final Assignment/final_assignment_staking 1.sol:Staking_Token",
								"label": "Interest",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 387,
								"contract": "Final Assignment/final_assignment_staking 1.sol:Staking_Token",
								"label": "totalIntrestAmount",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 389,
								"contract": "Final Assignment/final_assignment_staking 1.sol:Staking_Token",
								"label": "finalAmount",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 394,
								"contract": "Final Assignment/final_assignment_staking 1.sol:Staking_Token",
								"label": "Stake_details",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_address,t_struct(Stake)364_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(ERC20Basic)332": {
								"encoding": "inplace",
								"label": "contract ERC20Basic",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(Stake)364_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Staking_Token.Stake)",
								"numberOfBytes": "32",
								"value": "t_struct(Stake)364_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Stake)364_storage": {
								"encoding": "inplace",
								"label": "struct Staking_Token.Stake",
								"members": [
									{
										"astId": 351,
										"contract": "Final Assignment/final_assignment_staking 1.sol:Staking_Token",
										"label": "stake_amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 353,
										"contract": "Final Assignment/final_assignment_staking 1.sol:Staking_Token",
										"label": "stake_type",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									},
									{
										"astId": 355,
										"contract": "Final Assignment/final_assignment_staking 1.sol:Staking_Token",
										"label": "stake_time",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 357,
										"contract": "Final Assignment/final_assignment_staking 1.sol:Staking_Token",
										"label": "starting_stake_time",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 359,
										"contract": "Final Assignment/final_assignment_staking 1.sol:Staking_Token",
										"label": "isFixed",
										"offset": 0,
										"slot": "4",
										"type": "t_bool"
									},
									{
										"astId": 361,
										"contract": "Final Assignment/final_assignment_staking 1.sol:Staking_Token",
										"label": "owner",
										"offset": 1,
										"slot": "4",
										"type": "t_address"
									},
									{
										"astId": 363,
										"contract": "Final Assignment/final_assignment_staking 1.sol:Staking_Token",
										"label": "isClaimed",
										"offset": 21,
										"slot": "4",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "160"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "6321",
				"formattedMessage": "Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n  --> Final Assignment/final_assignment_staking 1.sol:65:58:\n   |\n65 |     function unstaking(address _address) public returns (uint256) {\n   |                                                          ^^^^^^^\n\n",
				"message": "Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 2556,
					"file": "Final Assignment/final_assignment_staking 1.sol",
					"start": 2549
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to view\n  --> Final Assignment/ERC-20.sol:82:5:\n   |\n82 |     function getcontractaddress() public returns(address){\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to view",
				"severity": "warning",
				"sourceLocation": {
					"end": 2907,
					"file": "Final Assignment/ERC-20.sol",
					"start": 2815
				},
				"type": "Warning"
			}
		],
		"sources": {
			"Final Assignment/ERC-20.sol": {
				"ast": {
					"absolutePath": "Final Assignment/ERC-20.sol",
					"exportedSymbols": {
						"ERC20Basic": [
							332
						],
						"IERC20": [
							70
						]
					},
					"id": 333,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 70,
							"linearizedBaseContracts": [
								70
							],
							"name": "IERC20",
							"nameLocation": "70:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "18160ddd",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "95:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "106:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "132:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "132:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "131:9:0"
									},
									"scope": 70,
									"src": "86:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 13,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "156:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "174:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "166:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "166:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "165:17:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "206:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 10,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "206:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "205:9:0"
									},
									"scope": 70,
									"src": "147:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 22,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "230:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "248:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "240:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 14,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "240:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "263:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "255:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 16,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "255:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "239:32:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "295:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 19,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "295:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "294:9:0"
									},
									"scope": 70,
									"src": "221:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "beabacc8",
									"id": 33,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "321:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "338:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "330:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "330:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "355:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "347:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 25,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "347:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "374:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "366:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "366:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "329:52:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "400:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 30,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "400:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "399:6:0"
									},
									"scope": 70,
									"src": "312:94:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 42,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "421:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "437:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "429:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "429:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "454:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "446:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "428:33:0"
									},
									"returnParameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "480:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 39,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "480:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "479:6:0"
									},
									"scope": 70,
									"src": "412:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 53,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "501:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "522:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "514:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "514:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "538:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "530:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "530:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "557:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "549:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 47,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "549:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "513:51:0"
									},
									"returnParameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "583:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 50,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "583:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "582:6:0"
									},
									"scope": 70,
									"src": "492:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 61,
									"name": "Transfer",
									"nameLocation": "605:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "630:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "614:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "614:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "652:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "636:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "664:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "656:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "656:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "613:57:0"
									},
									"src": "599:72:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 69,
									"name": "Approval",
									"nameLocation": "683:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "708:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "692:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "692:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "731:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "715:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 64,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "715:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "748:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "740:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "740:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "691:63:0"
									},
									"src": "677:78:0"
								}
							],
							"scope": 333,
							"src": "60:698:0",
							"usedErrors": [],
							"usedEvents": [
								61,
								69
							]
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 71,
										"name": "IERC20",
										"nameLocations": [
											"787:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 70,
										"src": "787:6:0"
									},
									"id": 72,
									"nodeType": "InheritanceSpecifier",
									"src": "787:6:0"
								}
							],
							"canonicalName": "ERC20Basic",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 332,
							"linearizedBaseContracts": [
								332,
								70
							],
							"name": "ERC20Basic",
							"nameLocation": "773:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "06fdde03",
									"id": 75,
									"mutability": "constant",
									"name": "name",
									"nameLocation": "826:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 332,
									"src": "803:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 73,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "803:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "45524332304261736963",
										"id": 74,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "833:12:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_a79e33b9dc0a948bb61d947e9b93ca6444308158c71b1fc39c80594dbec233e5",
											"typeString": "literal_string \"ERC20Basic\""
										},
										"value": "ERC20Basic"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "95d89b41",
									"id": 78,
									"mutability": "constant",
									"name": "symbol",
									"nameLocation": "875:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 332,
									"src": "852:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 76,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "852:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "455243",
										"id": 77,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "884:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_aba1fbc2bbf2303cc281eb9028edd772ae6c0c8a2b10b48e871a8884819f04df",
											"typeString": "literal_string \"ERC\""
										},
										"value": "ERC"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "313ce567",
									"id": 81,
									"mutability": "constant",
									"name": "decimals",
									"nameLocation": "918:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 332,
									"src": "896:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 79,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "896:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3138",
										"id": 80,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "929:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 85,
									"mutability": "mutable",
									"name": "balances",
									"nameLocation": "970:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 332,
									"src": "942:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 84,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 82,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "950:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "942:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 83,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "961:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 91,
									"mutability": "mutable",
									"name": "allowed",
									"nameLocation": "1036:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 332,
									"src": "987:56:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 90,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 86,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "995:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "987:48:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 89,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 87,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1015:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1006:28:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 88,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1026:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 94,
									"mutability": "mutable",
									"name": "totalSupply_",
									"nameLocation": "1060:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 332,
									"src": "1052:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 92,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1052:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 93,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1075:8:0",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000000000000000000_by_1",
											"typeString": "int_const 10000000000000000000"
										},
										"value": "10"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "1107:50:0",
										"statements": [
											{
												"expression": {
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 97,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 85,
															"src": "1114:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 100,
														"indexExpression": {
															"expression": {
																"id": 98,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1123:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 99,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1127:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1123:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1114:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 101,
														"name": "totalSupply_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "1137:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1114:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 103,
												"nodeType": "ExpressionStatement",
												"src": "1114:35:0"
											}
										]
									},
									"id": 105,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1104:2:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1107:0:0"
									},
									"scope": 332,
									"src": "1093:64:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "1214:121:0",
										"statements": [
											{
												"expression": {
													"id": 114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 112,
														"name": "totalSupply_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "1225:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 113,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 107,
														"src": "1241:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1225:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 115,
												"nodeType": "ExpressionStatement",
												"src": "1225:23:0"
											},
											{
												"expression": {
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 116,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 85,
															"src": "1259:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 119,
														"indexExpression": {
															"expression": {
																"id": 117,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1268:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1272:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1268:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1259:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 120,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 107,
														"src": "1283:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1259:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 122,
												"nodeType": "ExpressionStatement",
												"src": "1259:31:0"
											},
											{
												"expression": {
													"id": 123,
													"name": "totalSupply_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 94,
													"src": "1308:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 111,
												"id": 124,
												"nodeType": "Return",
												"src": "1301:19:0"
											}
										]
									},
									"functionSelector": "a0712d68",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "1176:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1186:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1181:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1181:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1180:14:0"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1209:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 109,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1209:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1208:6:0"
									},
									"scope": 332,
									"src": "1167:168:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										6
									],
									"body": {
										"id": 134,
										"nodeType": "Block",
										"src": "1405:34:0",
										"statements": [
											{
												"expression": {
													"id": 132,
													"name": "totalSupply_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 94,
													"src": "1419:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 131,
												"id": 133,
												"nodeType": "Return",
												"src": "1412:19:0"
											}
										]
									},
									"functionSelector": "18160ddd",
									"id": 135,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "1352:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 128,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1373:8:0"
									},
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1363:2:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "1396:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1396:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1395:9:0"
									},
									"scope": 332,
									"src": "1343:96:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										13
									],
									"body": {
										"id": 147,
										"nodeType": "Block",
										"src": "1525:46:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 143,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 85,
														"src": "1543:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 145,
													"indexExpression": {
														"id": 144,
														"name": "tokenOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 137,
														"src": "1552:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1543:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 142,
												"id": 146,
												"nodeType": "Return",
												"src": "1536:27:0"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 148,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1456:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 139,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1493:8:0"
									},
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "tokenOwner",
												"nameLocation": "1474:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "1466:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1466:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1465:20:0"
									},
									"returnParameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "1516:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1516:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1515:9:0"
									},
									"scope": 332,
									"src": "1447:124:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										33
									],
									"body": {
										"id": 197,
										"nodeType": "Block",
										"src": "1680:269:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 161,
																"name": "numTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 154,
																"src": "1699:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"baseExpression": {
																	"id": 162,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 85,
																	"src": "1712:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 164,
																"indexExpression": {
																	"id": 163,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "1721:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1712:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1699:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "62616c616e6365206e6f7420656e6f756768",
															"id": 166,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1729:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_10a5c1b95c8118e7a9a5e100b5db3e9810aa46855d52cd9bc67c5625dd900658",
																"typeString": "literal_string \"balance not enough\""
															},
															"value": "balance not enough"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_10a5c1b95c8118e7a9a5e100b5db3e9810aa46855d52cd9bc67c5625dd900658",
																"typeString": "literal_string \"balance not enough\""
															}
														],
														"id": 160,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1691:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1691:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 168,
												"nodeType": "ExpressionStatement",
												"src": "1691:59:0"
											},
											{
												"expression": {
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 169,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 85,
															"src": "1761:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 171,
														"indexExpression": {
															"id": 170,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "1770:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1761:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 172,
																"name": "balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 85,
																"src": "1780:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 174,
															"indexExpression": {
																"id": 173,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 150,
																"src": "1789:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1780:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 175,
															"name": "numTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 154,
															"src": "1797:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1780:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1761:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 178,
												"nodeType": "ExpressionStatement",
												"src": "1761:45:0"
											},
											{
												"expression": {
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 179,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 85,
															"src": "1817:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 181,
														"indexExpression": {
															"id": 180,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "1826:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1817:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 186,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 182,
																"name": "balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 85,
																"src": "1838:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 184,
															"indexExpression": {
																"id": 183,
																"name": "receiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 152,
																"src": "1847:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1838:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 185,
															"name": "numTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 154,
															"src": "1857:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1838:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1817:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "1817:49:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 190,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "1891:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 191,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "1899:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 192,
															"name": "numTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 154,
															"src": "1909:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 189,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 61,
														"src": "1882:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1882:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 194,
												"nodeType": "EmitStatement",
												"src": "1877:42:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1937:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 159,
												"id": 196,
												"nodeType": "Return",
												"src": "1930:11:0"
											}
										]
									},
									"functionSelector": "beabacc8",
									"id": 198,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1588:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 156,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1656:8:0"
									},
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1605:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "1597:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1597:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1620:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "1612:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "numTokens",
												"nameLocation": "1638:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "1630:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1630:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1596:52:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "1674:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 157,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1674:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1673:6:0"
									},
									"scope": 332,
									"src": "1579:370:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										42
									],
									"body": {
										"id": 226,
										"nodeType": "Block",
										"src": "2042:139:0",
										"statements": [
											{
												"expression": {
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 208,
																"name": "allowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 91,
																"src": "2053:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 212,
															"indexExpression": {
																"expression": {
																	"id": 209,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2061:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 210,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2065:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2061:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2053:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 213,
														"indexExpression": {
															"id": 211,
															"name": "delegate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 200,
															"src": "2073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2053:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 214,
														"name": "numTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 202,
														"src": "2085:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2053:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 216,
												"nodeType": "ExpressionStatement",
												"src": "2053:41:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 218,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2119:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2123:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2119:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 220,
															"name": "delegate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 200,
															"src": "2131:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 221,
															"name": "numTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "2141:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 217,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 69,
														"src": "2110:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2110:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 223,
												"nodeType": "EmitStatement",
												"src": "2105:46:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2169:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 207,
												"id": 225,
												"nodeType": "Return",
												"src": "2162:11:0"
											}
										]
									},
									"functionSelector": "095ea7b3",
									"id": 227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1966:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 204,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2018:8:0"
									},
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "delegate",
												"nameLocation": "1982:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "1974:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1974:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "numTokens",
												"nameLocation": "2000:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "1992:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1992:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1973:37:0"
									},
									"returnParameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "2036:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 205,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2036:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2035:6:0"
									},
									"scope": 332,
									"src": "1957:224:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										22
									],
									"body": {
										"id": 243,
										"nodeType": "Block",
										"src": "2277:50:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 237,
															"name": "allowed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 91,
															"src": "2295:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 239,
														"indexExpression": {
															"id": 238,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 229,
															"src": "2303:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2295:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 241,
													"indexExpression": {
														"id": 240,
														"name": "delegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 231,
														"src": "2310:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2295:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 236,
												"id": 242,
												"nodeType": "Return",
												"src": "2288:31:0"
											}
										]
									},
									"functionSelector": "dd62ed3e",
									"id": 244,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "2198:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 233,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2248:8:0"
									},
									"parameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2216:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "2208:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2208:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "delegate",
												"nameLocation": "2231:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "2223:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2223:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2207:33:0"
									},
									"returnParameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "2271:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2271:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2270:6:0"
									},
									"scope": 332,
									"src": "2189:138:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										53
									],
									"body": {
										"id": 319,
										"nodeType": "Block",
										"src": "2437:370:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 257,
																"name": "numTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 250,
																"src": "2456:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"baseExpression": {
																	"id": 258,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 85,
																	"src": "2469:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 260,
																"indexExpression": {
																	"id": 259,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 246,
																	"src": "2478:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2469:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2456:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 256,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2448:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2448:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 263,
												"nodeType": "ExpressionStatement",
												"src": "2448:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 265,
																"name": "numTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 250,
																"src": "2504:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 266,
																		"name": "allowed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 91,
																		"src": "2517:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 268,
																	"indexExpression": {
																		"id": 267,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 246,
																		"src": "2525:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2517:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 271,
																"indexExpression": {
																	"expression": {
																		"id": 269,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2532:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 270,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2536:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2532:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2517:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2504:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 264,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2496:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2496:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 274,
												"nodeType": "ExpressionStatement",
												"src": "2496:48:0"
											},
											{
												"expression": {
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 275,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 85,
															"src": "2555:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 277,
														"indexExpression": {
															"id": 276,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 246,
															"src": "2564:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2555:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 282,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 278,
																"name": "balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 85,
																"src": "2573:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 280,
															"indexExpression": {
																"id": 279,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 246,
																"src": "2582:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2573:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 281,
															"name": "numTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 250,
															"src": "2589:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2573:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2555:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 284,
												"nodeType": "ExpressionStatement",
												"src": "2555:43:0"
											},
											{
												"expression": {
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 285,
																"name": "allowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 91,
																"src": "2609:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 289,
															"indexExpression": {
																"id": 286,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 246,
																"src": "2617:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2609:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 290,
														"indexExpression": {
															"expression": {
																"id": 287,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2624:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2628:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2624:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2609:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 298,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 291,
																	"name": "allowed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 91,
																	"src": "2638:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(address => uint256))"
																	}
																},
																"id": 293,
																"indexExpression": {
																	"id": 292,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 246,
																	"src": "2646:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2638:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 296,
															"indexExpression": {
																"expression": {
																	"id": 294,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2653:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 295,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2657:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2653:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2638:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 297,
															"name": "numTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 250,
															"src": "2665:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2638:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2609:65:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 300,
												"nodeType": "ExpressionStatement",
												"src": "2609:65:0"
											},
											{
												"expression": {
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 301,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 85,
															"src": "2685:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 303,
														"indexExpression": {
															"id": 302,
															"name": "buyer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "2694:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2685:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 308,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 304,
																"name": "balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 85,
																"src": "2703:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 306,
															"indexExpression": {
																"id": 305,
																"name": "buyer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 248,
																"src": "2712:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2703:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 307,
															"name": "numTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 250,
															"src": "2719:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2703:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2685:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 310,
												"nodeType": "ExpressionStatement",
												"src": "2685:43:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 312,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 246,
															"src": "2753:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 313,
															"name": "buyer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "2760:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 314,
															"name": "numTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 250,
															"src": "2767:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 311,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 61,
														"src": "2744:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2744:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 316,
												"nodeType": "EmitStatement",
												"src": "2739:38:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2795:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 255,
												"id": 318,
												"nodeType": "Return",
												"src": "2788:11:0"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 320,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2344:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 252,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2413:8:0"
									},
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2365:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "2357:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "2380:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "2372:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2372:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "numTokens",
												"nameLocation": "2395:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "2387:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2387:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2356:49:0"
									},
									"returnParameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "2431:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 253,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2431:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:6:0"
									},
									"scope": 332,
									"src": "2335:472:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 330,
										"nodeType": "Block",
										"src": "2868:39:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 327,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "2892:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20Basic_$332",
																"typeString": "contract ERC20Basic"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_ERC20Basic_$332",
																"typeString": "contract ERC20Basic"
															}
														],
														"id": 326,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2884:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 325,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2884:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2884:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 324,
												"id": 329,
												"nodeType": "Return",
												"src": "2877:20:0"
											}
										]
									},
									"functionSelector": "15621373",
									"id": 331,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getcontractaddress",
									"nameLocation": "2824:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2842:2:0"
									},
									"returnParameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "2860:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2860:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2859:9:0"
									},
									"scope": 332,
									"src": "2815:92:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 333,
							"src": "764:2146:0",
							"usedErrors": [],
							"usedEvents": [
								61,
								69
							]
						}
					],
					"src": "33:2879:0"
				},
				"id": 0
			},
			"Final Assignment/final_assignment_staking 1.sol": {
				"ast": {
					"absolutePath": "Final Assignment/final_assignment_staking 1.sol",
					"exportedSymbols": {
						"ERC20Basic": [
							332
						],
						"IERC20": [
							70
						],
						"Staking_Token": [
							967
						]
					},
					"id": 968,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 334,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:1"
						},
						{
							"absolutePath": "Final Assignment/ERC-20.sol",
							"file": "./ERC-20.sol",
							"id": 335,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 968,
							"sourceUnit": 333,
							"src": "58:22:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Staking_Token",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 967,
							"linearizedBaseContracts": [
								967
							],
							"name": "Staking_Token",
							"nameLocation": "91:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 338,
									"mutability": "mutable",
									"name": "Token",
									"nameLocation": "122:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 967,
									"src": "111:16:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ERC20Basic_$332",
										"typeString": "contract ERC20Basic"
									},
									"typeName": {
										"id": 337,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 336,
											"name": "ERC20Basic",
											"nameLocations": [
												"111:10:1"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 332,
											"src": "111:10:1"
										},
										"referencedDeclaration": 332,
										"src": "111:10:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20Basic_$332",
											"typeString": "contract ERC20Basic"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "172:38:1",
										"statements": [
											{
												"expression": {
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 344,
														"name": "Token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 338,
														"src": "182:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20Basic_$332",
															"typeString": "contract ERC20Basic"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 345,
														"name": "_addressERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "190:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20Basic_$332",
															"typeString": "contract ERC20Basic"
														}
													},
													"src": "182:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20Basic_$332",
														"typeString": "contract ERC20Basic"
													}
												},
												"id": 347,
												"nodeType": "ExpressionStatement",
												"src": "182:21:1"
											}
										]
									},
									"id": 349,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "_addressERC20",
												"nameLocation": "157:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "146:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ERC20Basic_$332",
													"typeString": "contract ERC20Basic"
												},
												"typeName": {
													"id": 340,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 339,
														"name": "ERC20Basic",
														"nameLocations": [
															"146:10:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 332,
														"src": "146:10:1"
													},
													"referencedDeclaration": 332,
													"src": "146:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20Basic_$332",
														"typeString": "contract ERC20Basic"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "145:26:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "172:0:1"
									},
									"scope": 967,
									"src": "134:76:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"canonicalName": "Staking_Token.Stake",
									"id": 364,
									"members": [
										{
											"constant": false,
											"id": 351,
											"mutability": "mutable",
											"name": "stake_amount",
											"nameLocation": "247:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 364,
											"src": "239:20:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 350,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "239:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 353,
											"mutability": "mutable",
											"name": "stake_type",
											"nameLocation": "276:10:1",
											"nodeType": "VariableDeclaration",
											"scope": 364,
											"src": "269:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 352,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "269:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 355,
											"mutability": "mutable",
											"name": "stake_time",
											"nameLocation": "304:10:1",
											"nodeType": "VariableDeclaration",
											"scope": 364,
											"src": "296:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 354,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "296:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 357,
											"mutability": "mutable",
											"name": "starting_stake_time",
											"nameLocation": "332:19:1",
											"nodeType": "VariableDeclaration",
											"scope": 364,
											"src": "324:27:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 356,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "324:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 359,
											"mutability": "mutable",
											"name": "isFixed",
											"nameLocation": "366:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 364,
											"src": "361:12:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 358,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "361:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 361,
											"mutability": "mutable",
											"name": "owner",
											"nameLocation": "391:5:1",
											"nodeType": "VariableDeclaration",
											"scope": 364,
											"src": "383:13:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 360,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "383:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 363,
											"mutability": "mutable",
											"name": "isClaimed",
											"nameLocation": "411:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 364,
											"src": "406:14:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 362,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "406:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Stake",
									"nameLocation": "223:5:1",
									"nodeType": "StructDefinition",
									"scope": 967,
									"src": "216:211:1",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 366,
									"mutability": "mutable",
									"name": "mapping_address",
									"nameLocation": "441:15:1",
									"nodeType": "VariableDeclaration",
									"scope": 967,
									"src": "433:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 365,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "433:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 372,
									"mutability": "mutable",
									"name": "expirytime_forfixedstaking",
									"nameLocation": "470:26:1",
									"nodeType": "VariableDeclaration",
									"scope": 967,
									"src": "462:58:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 367,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "462:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 371,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"expression": {
												"id": 368,
												"name": "block",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967292,
												"src": "499:5:1",
												"typeDescriptions": {
													"typeIdentifier": "t_magic_block",
													"typeString": "block"
												}
											},
											"id": 369,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberLocation": "505:9:1",
											"memberName": "timestamp",
											"nodeType": "MemberAccess",
											"src": "499:15:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "+",
										"rightExpression": {
											"hexValue": "333030",
											"id": 370,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "517:3:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_300_by_1",
												"typeString": "int_const 300"
											},
											"value": "300"
										},
										"src": "499:21:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 375,
									"mutability": "mutable",
									"name": "penality_stake",
									"nameLocation": "534:14:1",
									"nodeType": "VariableDeclaration",
									"scope": 967,
									"src": "526:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 373,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "526:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "34",
										"id": 374,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "551:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4_by_1",
											"typeString": "int_const 4"
										},
										"value": "4"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 378,
									"mutability": "mutable",
									"name": "fixedinterest_rate",
									"nameLocation": "567:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 967,
									"src": "559:30:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 376,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "559:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "36",
										"id": 377,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "588:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6_by_1",
											"typeString": "int_const 6"
										},
										"value": "6"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 381,
									"mutability": "mutable",
									"name": "unfixedinterest_rate",
									"nameLocation": "603:20:1",
									"nodeType": "VariableDeclaration",
									"scope": 967,
									"src": "595:32:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 379,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "595:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 380,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "626:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 383,
									"mutability": "mutable",
									"name": "stake_reward",
									"nameLocation": "641:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 967,
									"src": "633:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 382,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "633:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 385,
									"mutability": "mutable",
									"name": "Interest",
									"nameLocation": "667:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 967,
									"src": "659:16:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 384,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "659:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 387,
									"mutability": "mutable",
									"name": "totalIntrestAmount",
									"nameLocation": "689:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 967,
									"src": "681:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 386,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "681:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 389,
									"mutability": "mutable",
									"name": "finalAmount",
									"nameLocation": "721:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 967,
									"src": "713:19:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 388,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "713:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "f42f2e82",
									"id": 394,
									"mutability": "mutable",
									"name": "Stake_details",
									"nameLocation": "772:13:1",
									"nodeType": "VariableDeclaration",
									"scope": 967,
									"src": "739:46:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$364_storage_$",
										"typeString": "mapping(address => struct Staking_Token.Stake)"
									},
									"typeName": {
										"id": 393,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 390,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "747:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "739:25:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$364_storage_$",
											"typeString": "mapping(address => struct Staking_Token.Stake)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 392,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 391,
												"name": "Stake",
												"nameLocations": [
													"758:5:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 364,
												"src": "758:5:1"
											},
											"referencedDeclaration": 364,
											"src": "758:5:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Stake_$364_storage_ptr",
												"typeString": "struct Staking_Token.Stake"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "96c68044657fcb3bea5ad282f026bd0361f647d377dfe1615a77e35dd87280a1",
									"id": 402,
									"name": "tokensStaked",
									"nameLocation": "798:12:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"indexed": false,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "819:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "811:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "811:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "833:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "825:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "825:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 400,
												"indexed": false,
												"mutability": "mutable",
												"name": "_duration",
												"nameLocation": "849:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "841:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "841:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "810:49:1"
									},
									"src": "792:68:1"
								},
								{
									"body": {
										"id": 611,
										"nodeType": "Block",
										"src": "960:1530:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 416,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "994:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 417,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "998:6:1",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "994:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 414,
																		"name": "Token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 338,
																		"src": "978:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ERC20Basic_$332",
																			"typeString": "contract ERC20Basic"
																		}
																	},
																	"id": 415,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "984:9:1",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 148,
																	"src": "978:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 418,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "978:27:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 419,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 404,
																"src": "1009:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "978:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742042616c616e6365",
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1018:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82",
																"typeString": "literal_string \"Insufficient Balance\""
															},
															"value": "Insufficient Balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82",
																"typeString": "literal_string \"Insufficient Balance\""
															}
														],
														"id": 413,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "970:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "970:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 423,
												"nodeType": "ExpressionStatement",
												"src": "970:71:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 427,
																		"name": "_type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 406,
																		"src": "1107:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 425,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "1090:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 426,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "1094:12:1",
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "1090:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 428,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1090:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 424,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "1080:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 429,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1080:34:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"hexValue": "6669786564",
																		"id": 433,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1145:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_98e9b9ec6ec5cb027329fb3edfd614982037165b3eb6e3801bcdb909918e55cc",
																			"typeString": "literal_string \"fixed\""
																		},
																		"value": "fixed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_98e9b9ec6ec5cb027329fb3edfd614982037165b3eb6e3801bcdb909918e55cc",
																			"typeString": "literal_string \"fixed\""
																		}
																	],
																	"expression": {
																		"id": 431,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "1128:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 432,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "1132:12:1",
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "1128:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 434,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1128:25:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 430,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "1118:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 435,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1118:36:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "1080:74:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 537,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 528,
																			"name": "_type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 406,
																			"src": "1920:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"expression": {
																			"id": 526,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "1903:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 527,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "1907:12:1",
																		"memberName": "encodePacked",
																		"nodeType": "MemberAccess",
																		"src": "1903:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function () pure returns (bytes memory)"
																		}
																	},
																	"id": 529,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1903:23:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 525,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "1893:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1893:34:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"hexValue": "756e6669786564",
																			"id": 534,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1958:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_bd1d42e9272482b0986089eea16c3cc3c47f2020739690fc4f4c79b6c318c90b",
																				"typeString": "literal_string \"unfixed\""
																			},
																			"value": "unfixed"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_bd1d42e9272482b0986089eea16c3cc3c47f2020739690fc4f4c79b6c318c90b",
																				"typeString": "literal_string \"unfixed\""
																			}
																		],
																		"expression": {
																			"id": 532,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "1941:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 533,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "1945:12:1",
																		"memberName": "encodePacked",
																		"nodeType": "MemberAccess",
																		"src": "1941:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function () pure returns (bytes memory)"
																		}
																	},
																	"id": 535,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1941:27:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 531,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "1931:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 536,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1931:38:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "1893:76:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 609,
													"nodeType": "IfStatement",
													"src": "1889:595:1",
													"trueBody": {
														"id": 608,
														"nodeType": "Block",
														"src": "1972:512:1",
														"statements": [
															{
																"expression": {
																	"id": 544,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"expression": {
																			"baseExpression": {
																				"id": 538,
																				"name": "Stake_details",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 394,
																				"src": "1986:13:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$364_storage_$",
																					"typeString": "mapping(address => struct Staking_Token.Stake storage ref)"
																				}
																			},
																			"id": 541,
																			"indexExpression": {
																				"expression": {
																					"id": 539,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "2000:3:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 540,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2004:6:1",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "2000:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1986:25:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$364_storage",
																				"typeString": "struct Staking_Token.Stake storage ref"
																			}
																		},
																		"id": 542,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"memberLocation": "2012:12:1",
																		"memberName": "stake_amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 351,
																		"src": "1986:38:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"id": 543,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 404,
																		"src": "2027:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1986:48:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 545,
																"nodeType": "ExpressionStatement",
																"src": "1986:48:1"
															},
															{
																"expression": {
																	"id": 552,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"expression": {
																			"baseExpression": {
																				"id": 546,
																				"name": "Stake_details",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 394,
																				"src": "2048:13:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$364_storage_$",
																					"typeString": "mapping(address => struct Staking_Token.Stake storage ref)"
																				}
																			},
																			"id": 549,
																			"indexExpression": {
																				"expression": {
																					"id": 547,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "2062:3:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 548,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2066:6:1",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "2062:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2048:25:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$364_storage",
																				"typeString": "struct Staking_Token.Stake storage ref"
																			}
																		},
																		"id": 550,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"memberLocation": "2074:10:1",
																		"memberName": "stake_type",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 353,
																		"src": "2048:36:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_storage",
																			"typeString": "string storage ref"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"id": 551,
																		"name": "_type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 406,
																		"src": "2087:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	"src": "2048:44:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																},
																"id": 553,
																"nodeType": "ExpressionStatement",
																"src": "2048:44:1"
															},
															{
																"expression": {
																	"id": 560,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"expression": {
																			"baseExpression": {
																				"id": 554,
																				"name": "Stake_details",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 394,
																				"src": "2106:13:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$364_storage_$",
																					"typeString": "mapping(address => struct Staking_Token.Stake storage ref)"
																				}
																			},
																			"id": 557,
																			"indexExpression": {
																				"expression": {
																					"id": 555,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "2120:3:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 556,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2124:6:1",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "2120:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2106:25:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$364_storage",
																				"typeString": "struct Staking_Token.Stake storage ref"
																			}
																		},
																		"id": 558,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"memberLocation": "2132:7:1",
																		"memberName": "isFixed",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 359,
																		"src": "2106:33:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"id": 559,
																		"name": "_isFixed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 410,
																		"src": "2142:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "2106:44:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 561,
																"nodeType": "ExpressionStatement",
																"src": "2106:44:1"
															},
															{
																"expression": {
																	"id": 569,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"expression": {
																			"baseExpression": {
																				"id": 562,
																				"name": "Stake_details",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 394,
																				"src": "2164:13:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$364_storage_$",
																					"typeString": "mapping(address => struct Staking_Token.Stake storage ref)"
																				}
																			},
																			"id": 565,
																			"indexExpression": {
																				"expression": {
																					"id": 563,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "2178:3:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 564,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2182:6:1",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "2178:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2164:25:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$364_storage",
																				"typeString": "struct Staking_Token.Stake storage ref"
																			}
																		},
																		"id": 566,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"memberLocation": "2190:5:1",
																		"memberName": "owner",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 361,
																		"src": "2164:31:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"expression": {
																			"id": 567,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2197:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 568,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2201:6:1",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2197:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "2164:43:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 570,
																"nodeType": "ExpressionStatement",
																"src": "2164:43:1"
															},
															{
																"expression": {
																	"id": 577,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"expression": {
																			"baseExpression": {
																				"id": 571,
																				"name": "Stake_details",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 394,
																				"src": "2221:13:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$364_storage_$",
																					"typeString": "mapping(address => struct Staking_Token.Stake storage ref)"
																				}
																			},
																			"id": 574,
																			"indexExpression": {
																				"expression": {
																					"id": 572,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "2235:3:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 573,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2239:6:1",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "2235:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2221:25:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$364_storage",
																				"typeString": "struct Staking_Token.Stake storage ref"
																			}
																		},
																		"id": 575,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"memberLocation": "2247:9:1",
																		"memberName": "isClaimed",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 363,
																		"src": "2221:35:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "66616c7365",
																		"id": 576,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2258:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	"src": "2221:42:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 578,
																"nodeType": "ExpressionStatement",
																"src": "2221:42:1"
															},
															{
																"expression": {
																	"id": 586,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"expression": {
																			"baseExpression": {
																				"id": 579,
																				"name": "Stake_details",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 394,
																				"src": "2277:13:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$364_storage_$",
																					"typeString": "mapping(address => struct Staking_Token.Stake storage ref)"
																				}
																			},
																			"id": 582,
																			"indexExpression": {
																				"expression": {
																					"id": 580,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "2291:3:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 581,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2295:6:1",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "2291:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2277:25:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$364_storage",
																				"typeString": "struct Staking_Token.Stake storage ref"
																			}
																		},
																		"id": 583,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"memberLocation": "2303:19:1",
																		"memberName": "starting_stake_time",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 357,
																		"src": "2277:45:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"expression": {
																			"id": 584,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "2325:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 585,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2331:9:1",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "2325:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2277:63:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 587,
																"nodeType": "ExpressionStatement",
																"src": "2277:63:1"
															},
															{
																"expression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 591,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "2370:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 592,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2374:6:1",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "2370:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"arguments": [
																				{
																					"id": 595,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "2389:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Staking_Token_$967",
																						"typeString": "contract Staking_Token"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Staking_Token_$967",
																						"typeString": "contract Staking_Token"
																					}
																				],
																				"id": 594,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "2381:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 593,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "2381:7:1",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 596,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2381:13:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 597,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 404,
																			"src": "2396:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 588,
																			"name": "Token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 338,
																			"src": "2354:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ERC20Basic_$332",
																				"typeString": "contract ERC20Basic"
																			}
																		},
																		"id": 590,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2360:8:1",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 198,
																		"src": "2354:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 598,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2354:50:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 599,
																"nodeType": "ExpressionStatement",
																"src": "2354:50:1"
															},
															{
																"eventCall": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 601,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "2436:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 602,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2440:6:1",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "2436:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 603,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 404,
																			"src": "2448:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"expression": {
																				"id": 604,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "2457:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 605,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2463:9:1",
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "2457:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 600,
																		"name": "tokensStaked",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 402,
																		"src": "2423:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																			"typeString": "function (address,uint256,uint256)"
																		}
																	},
																	"id": 606,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2423:50:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 607,
																"nodeType": "EmitStatement",
																"src": "2418:55:1"
															}
														]
													}
												},
												"id": 610,
												"nodeType": "IfStatement",
												"src": "1075:1409:1",
												"trueBody": {
													"id": 524,
													"nodeType": "Block",
													"src": "1157:690:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 440,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 438,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 404,
																			"src": "1180:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 439,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1190:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1180:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "205374616b652063616e206e6f742062652030202c20456e74657220736f6d6520616d6f756e74206f6620746f6b656e73",
																		"id": 441,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1192:51:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_17ac8a1b670997c47eb5db3b275d4cfbf9a7057d7edf6c4417eb60b090de2744",
																			"typeString": "literal_string \" Stake can not be 0 , Enter some amount of tokens\""
																		},
																		"value": " Stake can not be 0 , Enter some amount of tokens"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_17ac8a1b670997c47eb5db3b275d4cfbf9a7057d7edf6c4417eb60b090de2744",
																			"typeString": "literal_string \" Stake can not be 0 , Enter some amount of tokens\""
																		}
																	],
																	"id": 437,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "1171:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 442,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1171:73:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 443,
															"nodeType": "ExpressionStatement",
															"src": "1171:73:1"
														},
														{
															"expression": {
																"id": 450,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 444,
																			"name": "Stake_details",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 394,
																			"src": "1258:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$364_storage_$",
																				"typeString": "mapping(address => struct Staking_Token.Stake storage ref)"
																			}
																		},
																		"id": 447,
																		"indexExpression": {
																			"expression": {
																				"id": 445,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1272:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 446,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1276:6:1",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "1272:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1258:25:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$364_storage",
																			"typeString": "struct Staking_Token.Stake storage ref"
																		}
																	},
																	"id": 448,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "1284:12:1",
																	"memberName": "stake_amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 351,
																	"src": "1258:38:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 449,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 404,
																	"src": "1299:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1258:48:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 451,
															"nodeType": "ExpressionStatement",
															"src": "1258:48:1"
														},
														{
															"expression": {
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 452,
																			"name": "Stake_details",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 394,
																			"src": "1320:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$364_storage_$",
																				"typeString": "mapping(address => struct Staking_Token.Stake storage ref)"
																			}
																		},
																		"id": 455,
																		"indexExpression": {
																			"expression": {
																				"id": 453,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1334:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 454,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1338:6:1",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "1334:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1320:25:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$364_storage",
																			"typeString": "struct Staking_Token.Stake storage ref"
																		}
																	},
																	"id": 456,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "1346:10:1",
																	"memberName": "stake_type",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 353,
																	"src": "1320:36:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 457,
																	"name": "_type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "1359:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																"src": "1320:44:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															},
															"id": 459,
															"nodeType": "ExpressionStatement",
															"src": "1320:44:1"
														},
														{
															"expression": {
																"id": 468,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 460,
																			"name": "Stake_details",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 394,
																			"src": "1378:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$364_storage_$",
																				"typeString": "mapping(address => struct Staking_Token.Stake storage ref)"
																			}
																		},
																		"id": 463,
																		"indexExpression": {
																			"expression": {
																				"id": 461,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1392:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 462,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1396:6:1",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "1392:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1378:25:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$364_storage",
																			"typeString": "struct Staking_Token.Stake storage ref"
																		}
																	},
																	"id": 464,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "1404:10:1",
																	"memberName": "stake_time",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 355,
																	"src": "1378:36:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 467,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 465,
																		"name": "expirytime_forfixedstaking",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 372,
																		"src": "1417:26:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 466,
																		"name": "_duration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 408,
																		"src": "1446:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1417:38:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1378:77:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 469,
															"nodeType": "ExpressionStatement",
															"src": "1378:77:1"
														},
														{
															"expression": {
																"id": 476,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 470,
																			"name": "Stake_details",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 394,
																			"src": "1469:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$364_storage_$",
																				"typeString": "mapping(address => struct Staking_Token.Stake storage ref)"
																			}
																		},
																		"id": 473,
																		"indexExpression": {
																			"expression": {
																				"id": 471,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1483:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 472,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1487:6:1",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "1483:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1469:25:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$364_storage",
																			"typeString": "struct Staking_Token.Stake storage ref"
																		}
																	},
																	"id": 474,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "1495:7:1",
																	"memberName": "isFixed",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 359,
																	"src": "1469:33:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 475,
																	"name": "_isFixed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 410,
																	"src": "1505:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "1469:44:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 477,
															"nodeType": "ExpressionStatement",
															"src": "1469:44:1"
														},
														{
															"expression": {
																"id": 485,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 478,
																			"name": "Stake_details",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 394,
																			"src": "1527:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$364_storage_$",
																				"typeString": "mapping(address => struct Staking_Token.Stake storage ref)"
																			}
																		},
																		"id": 481,
																		"indexExpression": {
																			"expression": {
																				"id": 479,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1541:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 480,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1545:6:1",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "1541:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1527:25:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$364_storage",
																			"typeString": "struct Staking_Token.Stake storage ref"
																		}
																	},
																	"id": 482,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "1553:5:1",
																	"memberName": "owner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 361,
																	"src": "1527:31:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 483,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1560:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1564:6:1",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1560:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1527:43:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 486,
															"nodeType": "ExpressionStatement",
															"src": "1527:43:1"
														},
														{
															"expression": {
																"id": 493,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 487,
																			"name": "Stake_details",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 394,
																			"src": "1584:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$364_storage_$",
																				"typeString": "mapping(address => struct Staking_Token.Stake storage ref)"
																			}
																		},
																		"id": 490,
																		"indexExpression": {
																			"expression": {
																				"id": 488,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1598:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 489,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1602:6:1",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "1598:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1584:25:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$364_storage",
																			"typeString": "struct Staking_Token.Stake storage ref"
																		}
																	},
																	"id": 491,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "1610:9:1",
																	"memberName": "isClaimed",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 363,
																	"src": "1584:35:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 492,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1621:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "1584:42:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 494,
															"nodeType": "ExpressionStatement",
															"src": "1584:42:1"
														},
														{
															"expression": {
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 495,
																			"name": "Stake_details",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 394,
																			"src": "1640:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$364_storage_$",
																				"typeString": "mapping(address => struct Staking_Token.Stake storage ref)"
																			}
																		},
																		"id": 498,
																		"indexExpression": {
																			"expression": {
																				"id": 496,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1654:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 497,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1658:6:1",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "1654:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1640:25:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$364_storage",
																			"typeString": "struct Staking_Token.Stake storage ref"
																		}
																	},
																	"id": 499,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "1666:19:1",
																	"memberName": "starting_stake_time",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 357,
																	"src": "1640:45:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 500,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "1688:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 501,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1694:9:1",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "1688:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1640:63:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 503,
															"nodeType": "ExpressionStatement",
															"src": "1640:63:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 507,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1733:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 508,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1737:6:1",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1733:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 511,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1752:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Staking_Token_$967",
																					"typeString": "contract Staking_Token"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Staking_Token_$967",
																					"typeString": "contract Staking_Token"
																				}
																			],
																			"id": 510,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1744:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 509,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1744:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 512,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1744:13:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 513,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 404,
																		"src": "1759:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 504,
																		"name": "Token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 338,
																		"src": "1717:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ERC20Basic_$332",
																			"typeString": "contract ERC20Basic"
																		}
																	},
																	"id": 506,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1723:8:1",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 198,
																	"src": "1717:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																"id": 514,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1717:50:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 515,
															"nodeType": "ExpressionStatement",
															"src": "1717:50:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 517,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1799:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 518,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1803:6:1",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1799:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 519,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 404,
																		"src": "1811:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 520,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "1820:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 521,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1826:9:1",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "1820:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 516,
																	"name": "tokensStaked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 402,
																	"src": "1786:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256,uint256)"
																	}
																},
																"id": 522,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1786:50:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 523,
															"nodeType": "EmitStatement",
															"src": "1781:55:1"
														}
													]
												}
											}
										]
									},
									"functionSelector": "16f88c94",
									"id": 612,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "staking",
									"nameLocation": "875:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "891:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "883:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "883:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "_type",
												"nameLocation": "913:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "899:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 405,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "899:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "_duration",
												"nameLocation": "927:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "919:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "919:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "_isFixed",
												"nameLocation": "943:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "938:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 409,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "938:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "882:70:1"
									},
									"returnParameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "960:0:1"
									},
									"scope": 967,
									"src": "866:1624:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 824,
										"nodeType": "Block",
										"src": "2558:1858:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 620,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2576:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 621,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2580:6:1",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2576:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 622,
																		"name": "Stake_details",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 394,
																		"src": "2590:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$364_storage_$",
																			"typeString": "mapping(address => struct Staking_Token.Stake storage ref)"
																		}
																	},
																	"id": 624,
																	"indexExpression": {
																		"id": 623,
																		"name": "_address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 614,
																		"src": "2604:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2590:23:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$364_storage",
																		"typeString": "struct Staking_Token.Stake storage ref"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2614:5:1",
																"memberName": "owner",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 361,
																"src": "2590:29:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2576:43:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b6520686173206e6f74206265656e20696e69746961746564",
															"id": 627,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2620:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ca0a83dc10b25352d6635afca2896efe767c10156b65b75ff0e015ec9b66c32e",
																"typeString": "literal_string \"Stake has not been initiated\""
															},
															"value": "Stake has not been initiated"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ca0a83dc10b25352d6635afca2896efe767c10156b65b75ff0e015ec9b66c32e",
																"typeString": "literal_string \"Stake has not been initiated\""
															}
														],
														"id": 619,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2568:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2568:83:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 629,
												"nodeType": "ExpressionStatement",
												"src": "2568:83:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 630,
																"name": "Stake_details",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 394,
																"src": "2665:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$364_storage_$",
																	"typeString": "mapping(address => struct Staking_Token.Stake storage ref)"
																}
															},
															"id": 632,
															"indexExpression": {
																"id": 631,
																"name": "_address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 614,
																"src": "2679:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2665:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$364_storage",
																"typeString": "struct Staking_Token.Stake storage ref"
															}
														},
														"id": 633,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2689:7:1",
														"memberName": "isFixed",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 359,
														"src": "2665:31:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "74727565",
														"id": 634,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2700:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2665:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 773,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"baseExpression": {
																	"id": 768,
																	"name": "Stake_details",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 394,
																	"src": "3956:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$364_storage_$",
																		"typeString": "mapping(address => struct Staking_Token.Stake storage ref)"
																	}
																},
																"id": 770,
																"indexExpression": {
																	"id": 769,
																	"name": "_address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 614,
																	"src": "3970:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3956:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$364_storage",
																	"typeString": "struct Staking_Token.Stake storage ref"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3980:7:1",
															"memberName": "isFixed",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 359,
															"src": "3956:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "66616c7365",
															"id": 772,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3991:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														},
														"src": "3956:40:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 822,
													"nodeType": "IfStatement",
													"src": "3952:458:1",
													"trueBody": {
														"id": 821,
														"nodeType": "Block",
														"src": "3998:412:1",
														"statements": [
															{
																"expression": {
																	"id": 784,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 774,
																		"name": "Interest",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 385,
																		"src": "4012:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 783,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 780,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"baseExpression": {
																								"id": 775,
																								"name": "Stake_details",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 394,
																								"src": "4023:13:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$364_storage_$",
																									"typeString": "mapping(address => struct Staking_Token.Stake storage ref)"
																								}
																							},
																							"id": 777,
																							"indexExpression": {
																								"id": 776,
																								"name": "_address",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 614,
																								"src": "4037:8:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "4023:23:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Stake_$364_storage",
																								"typeString": "struct Staking_Token.Stake storage ref"
																							}
																						},
																						"id": 778,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "4047:12:1",
																						"memberName": "stake_amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 351,
																						"src": "4023:36:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 779,
																						"name": "unfixedinterest_rate",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 381,
																						"src": "4061:20:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "4023:58:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 781,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "4022:60:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"hexValue": "313030",
																			"id": 782,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4084:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"value": "100"
																		},
																		"src": "4022:65:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4012:75:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 785,
																"nodeType": "ExpressionStatement",
																"src": "4012:75:1"
															},
															{
																"expression": {
																	"id": 793,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 786,
																		"name": "totalIntrestAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 387,
																		"src": "4106:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 787,
																					"name": "Stake_details",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 394,
																					"src": "4126:13:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$364_storage_$",
																						"typeString": "mapping(address => struct Staking_Token.Stake storage ref)"
																					}
																				},
																				"id": 789,
																				"indexExpression": {
																					"id": 788,
																					"name": "_address",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 614,
																					"src": "4140:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "4126:23:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Stake_$364_storage",
																					"typeString": "struct Staking_Token.Stake storage ref"
																				}
																			},
																			"id": 790,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4150:12:1",
																			"memberName": "stake_amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 351,
																			"src": "4126:36:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 791,
																			"name": "Interest",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 385,
																			"src": "4165:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4126:47:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4106:67:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 794,
																"nodeType": "ExpressionStatement",
																"src": "4106:67:1"
															},
															{
																"expression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 800,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "4214:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Staking_Token_$967",
																						"typeString": "contract Staking_Token"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Staking_Token_$967",
																						"typeString": "contract Staking_Token"
																					}
																				],
																				"id": 799,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "4206:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 798,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "4206:7:1",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 801,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4206:13:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 802,
																			"name": "_address",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 614,
																			"src": "4220:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 803,
																			"name": "totalIntrestAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 387,
																			"src": "4230:18:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 795,
																			"name": "Token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 338,
																			"src": "4191:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ERC20Basic_$332",
																				"typeString": "contract ERC20Basic"
																			}
																		},
																		"id": 797,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4197:8:1",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 198,
																		"src": "4191:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 804,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4191:58:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 805,
																"nodeType": "ExpressionStatement",
																"src": "4191:58:1"
															},
															{
																"expression": {
																	"id": 809,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "delete",
																	"prefix": true,
																	"src": "4267:30:1",
																	"subExpression": {
																		"baseExpression": {
																			"id": 806,
																			"name": "Stake_details",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 394,
																			"src": "4274:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$364_storage_$",
																				"typeString": "mapping(address => struct Staking_Token.Stake storage ref)"
																			}
																		},
																		"id": 808,
																		"indexExpression": {
																			"id": 807,
																			"name": "_address",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 614,
																			"src": "4288:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"nodeType": "IndexAccess",
																		"src": "4274:23:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$364_storage",
																			"typeString": "struct Staking_Token.Stake storage ref"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 810,
																"nodeType": "ExpressionStatement",
																"src": "4267:30:1"
															},
															{
																"expression": {
																	"id": 817,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"expression": {
																			"baseExpression": {
																				"id": 811,
																				"name": "Stake_details",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 394,
																				"src": "4315:13:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$364_storage_$",
																					"typeString": "mapping(address => struct Staking_Token.Stake storage ref)"
																				}
																			},
																			"id": 814,
																			"indexExpression": {
																				"expression": {
																					"id": 812,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "4329:3:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 813,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4333:6:1",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "4329:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4315:25:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$364_storage",
																				"typeString": "struct Staking_Token.Stake storage ref"
																			}
																		},
																		"id": 815,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"memberLocation": "4341:9:1",
																		"memberName": "isClaimed",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 363,
																		"src": "4315:35:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "74727565",
																		"id": 816,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4352:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	"src": "4315:41:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 818,
																"nodeType": "ExpressionStatement",
																"src": "4315:41:1"
															},
															{
																"expression": {
																	"id": 819,
																	"name": "totalIntrestAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 387,
																	"src": "4381:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 618,
																"id": 820,
																"nodeType": "Return",
																"src": "4374:25:1"
															}
														]
													}
												},
												"id": 823,
												"nodeType": "IfStatement",
												"src": "2661:1749:1",
												"trueBody": {
													"id": 767,
													"nodeType": "Block",
													"src": "2706:1199:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 643,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 636,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "2724:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 637,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2730:9:1",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "2724:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 638,
																			"name": "Stake_details",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 394,
																			"src": "2742:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$364_storage_$",
																				"typeString": "mapping(address => struct Staking_Token.Stake storage ref)"
																			}
																		},
																		"id": 641,
																		"indexExpression": {
																			"expression": {
																				"id": 639,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "2756:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 640,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2760:6:1",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "2756:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2742:25:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$364_storage",
																			"typeString": "struct Staking_Token.Stake storage ref"
																		}
																	},
																	"id": 642,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2768:10:1",
																	"memberName": "stake_time",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 355,
																	"src": "2742:36:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2724:54:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 699,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 692,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "3293:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 693,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3299:9:1",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "3293:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 694,
																				"name": "Stake_details",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 394,
																				"src": "3311:13:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$364_storage_$",
																					"typeString": "mapping(address => struct Staking_Token.Stake storage ref)"
																				}
																			},
																			"id": 697,
																			"indexExpression": {
																				"expression": {
																					"id": 695,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "3325:3:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 696,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3329:6:1",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "3325:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3311:25:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$364_storage",
																				"typeString": "struct Staking_Token.Stake storage ref"
																			}
																		},
																		"id": 698,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3337:10:1",
																		"memberName": "stake_time",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 355,
																		"src": "3311:36:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3293:54:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 765,
																"nodeType": "IfStatement",
																"src": "3289:606:1",
																"trueBody": {
																	"id": 764,
																	"nodeType": "Block",
																	"src": "3349:546:1",
																	"statements": [
																		{
																			"expression": {
																				"arguments": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 704,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"id": 701,
																								"name": "block",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967292,
																								"src": "3376:5:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_block",
																									"typeString": "block"
																								}
																							},
																							"id": 702,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "3382:9:1",
																							"memberName": "timestamp",
																							"nodeType": "MemberAccess",
																							"src": "3376:15:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<",
																						"rightExpression": {
																							"id": 703,
																							"name": "expirytime_forfixedstaking",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 372,
																							"src": "3395:26:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "3376:45:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					{
																						"hexValue": "",
																						"id": 705,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3422:2:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																							"typeString": "literal_string \"\""
																						},
																						"value": ""
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						},
																						{
																							"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																							"typeString": "literal_string \"\""
																						}
																					],
																					"id": 700,
																					"name": "require",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [
																						4294967278,
																						4294967278
																					],
																					"referencedDeclaration": 4294967278,
																					"src": "3367:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																						"typeString": "function (bool,string memory) pure"
																					}
																				},
																				"id": 706,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3367:59:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$__$",
																					"typeString": "tuple()"
																				}
																			},
																			"id": 707,
																			"nodeType": "ExpressionStatement",
																			"src": "3367:59:1"
																		},
																		{
																			"expression": {
																				"id": 718,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 708,
																					"name": "Interest",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 385,
																					"src": "3444:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 717,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 714,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"expression": {
																										"baseExpression": {
																											"id": 709,
																											"name": "Stake_details",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 394,
																											"src": "3456:13:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$364_storage_$",
																												"typeString": "mapping(address => struct Staking_Token.Stake storage ref)"
																											}
																										},
																										"id": 711,
																										"indexExpression": {
																											"id": 710,
																											"name": "_address",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 614,
																											"src": "3470:8:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "IndexAccess",
																										"src": "3456:23:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_Stake_$364_storage",
																											"typeString": "struct Staking_Token.Stake storage ref"
																										}
																									},
																									"id": 712,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "3480:12:1",
																									"memberName": "stake_amount",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 351,
																									"src": "3456:36:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "*",
																								"rightExpression": {
																									"id": 713,
																									"name": "fixedinterest_rate",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 378,
																									"src": "3495:18:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "3456:57:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 715,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "3455:60:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "/",
																					"rightExpression": {
																						"hexValue": "313030",
																						"id": 716,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3517:3:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_100_by_1",
																							"typeString": "int_const 100"
																						},
																						"value": "100"
																					},
																					"src": "3455:65:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3444:76:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 719,
																			"nodeType": "ExpressionStatement",
																			"src": "3444:76:1"
																		},
																		{
																			"expression": {
																				"id": 727,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 720,
																					"name": "totalIntrestAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 387,
																					"src": "3539:18:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 726,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 723,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 721,
																									"name": "Interest",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 385,
																									"src": "3561:8:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "*",
																								"rightExpression": {
																									"hexValue": "3936",
																									"id": 722,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "3572:2:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_96_by_1",
																										"typeString": "int_const 96"
																									},
																									"value": "96"
																								},
																								"src": "3561:13:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 724,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "3560:15:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "/",
																					"rightExpression": {
																						"hexValue": "313030",
																						"id": 725,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3578:3:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_100_by_1",
																							"typeString": "int_const 100"
																						},
																						"value": "100"
																					},
																					"src": "3560:21:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3539:42:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 728,
																			"nodeType": "ExpressionStatement",
																			"src": "3539:42:1"
																		},
																		{
																			"expression": {
																				"id": 736,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 729,
																					"name": "finalAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 389,
																					"src": "3599:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 735,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 730,
																						"name": "totalIntrestAmount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 387,
																						"src": "3612:18:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"expression": {
																							"baseExpression": {
																								"id": 731,
																								"name": "Stake_details",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 394,
																								"src": "3632:13:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$364_storage_$",
																									"typeString": "mapping(address => struct Staking_Token.Stake storage ref)"
																								}
																							},
																							"id": 733,
																							"indexExpression": {
																								"id": 732,
																								"name": "_address",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 614,
																								"src": "3646:8:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "3632:23:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Stake_$364_storage",
																								"typeString": "struct Staking_Token.Stake storage ref"
																							}
																						},
																						"id": 734,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "3656:12:1",
																						"memberName": "stake_amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 351,
																						"src": "3632:36:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "3612:56:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3599:69:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 737,
																			"nodeType": "ExpressionStatement",
																			"src": "3599:69:1"
																		},
																		{
																			"expression": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"id": 743,
																								"name": "this",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967268,
																								"src": "3709:4:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_Staking_Token_$967",
																									"typeString": "contract Staking_Token"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_contract$_Staking_Token_$967",
																									"typeString": "contract Staking_Token"
																								}
																							],
																							"id": 742,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3701:7:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": {
																								"id": 741,
																								"name": "address",
																								"nodeType": "ElementaryTypeName",
																								"src": "3701:7:1",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 744,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3701:13:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"id": 745,
																						"name": "_address",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 614,
																						"src": "3715:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"id": 746,
																						"name": "finalAmount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 389,
																						"src": "3725:11:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 738,
																						"name": "Token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 338,
																						"src": "3686:5:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_ERC20Basic_$332",
																							"typeString": "contract ERC20Basic"
																						}
																					},
																					"id": 740,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3692:8:1",
																					"memberName": "transfer",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 198,
																					"src": "3686:14:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																						"typeString": "function (address,address,uint256) external returns (bool)"
																					}
																				},
																				"id": 747,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3686:51:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"id": 748,
																			"nodeType": "ExpressionStatement",
																			"src": "3686:51:1"
																		},
																		{
																			"expression": {
																				"id": 752,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "delete",
																				"prefix": true,
																				"src": "3755:30:1",
																				"subExpression": {
																					"baseExpression": {
																						"id": 749,
																						"name": "Stake_details",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 394,
																						"src": "3762:13:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$364_storage_$",
																							"typeString": "mapping(address => struct Staking_Token.Stake storage ref)"
																						}
																					},
																					"id": 751,
																					"indexExpression": {
																						"id": 750,
																						"name": "_address",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 614,
																						"src": "3776:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": true,
																					"nodeType": "IndexAccess",
																					"src": "3762:23:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Stake_$364_storage",
																						"typeString": "struct Staking_Token.Stake storage ref"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$__$",
																					"typeString": "tuple()"
																				}
																			},
																			"id": 753,
																			"nodeType": "ExpressionStatement",
																			"src": "3755:30:1"
																		},
																		{
																			"expression": {
																				"id": 760,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"expression": {
																						"baseExpression": {
																							"id": 754,
																							"name": "Stake_details",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 394,
																							"src": "3803:13:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$364_storage_$",
																								"typeString": "mapping(address => struct Staking_Token.Stake storage ref)"
																							}
																						},
																						"id": 757,
																						"indexExpression": {
																							"expression": {
																								"id": 755,
																								"name": "msg",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967281,
																								"src": "3817:3:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_message",
																									"typeString": "msg"
																								}
																							},
																							"id": 756,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "3821:6:1",
																							"memberName": "sender",
																							"nodeType": "MemberAccess",
																							"src": "3817:10:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "3803:25:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Stake_$364_storage",
																							"typeString": "struct Staking_Token.Stake storage ref"
																						}
																					},
																					"id": 758,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": true,
																					"memberLocation": "3829:9:1",
																					"memberName": "isClaimed",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 363,
																					"src": "3803:35:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"hexValue": "74727565",
																					"id": 759,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "bool",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3840:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"value": "true"
																				},
																				"src": "3803:41:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"id": 761,
																			"nodeType": "ExpressionStatement",
																			"src": "3803:41:1"
																		},
																		{
																			"expression": {
																				"id": 762,
																				"name": "finalAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 389,
																				"src": "3869:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"functionReturnParameters": 618,
																			"id": 763,
																			"nodeType": "Return",
																			"src": "3862:18:1"
																		}
																	]
																}
															},
															"id": 766,
															"nodeType": "IfStatement",
															"src": "2720:1175:1",
															"trueBody": {
																"id": 691,
																"nodeType": "Block",
																"src": "2781:418:1",
																"statements": [
																	{
																		"expression": {
																			"id": 654,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 644,
																				"name": "Interest",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 385,
																				"src": "2799:8:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 653,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 650,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"expression": {
																									"baseExpression": {
																										"id": 645,
																										"name": "Stake_details",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 394,
																										"src": "2810:13:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$364_storage_$",
																											"typeString": "mapping(address => struct Staking_Token.Stake storage ref)"
																										}
																									},
																									"id": 647,
																									"indexExpression": {
																										"id": 646,
																										"name": "_address",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 614,
																										"src": "2824:8:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "2810:23:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_Stake_$364_storage",
																										"typeString": "struct Staking_Token.Stake storage ref"
																									}
																								},
																								"id": 648,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "2834:12:1",
																								"memberName": "stake_amount",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 351,
																								"src": "2810:36:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "*",
																							"rightExpression": {
																								"id": 649,
																								"name": "fixedinterest_rate",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 378,
																								"src": "2848:18:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "2810:56:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 651,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "2809:59:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"hexValue": "313030",
																					"id": 652,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2870:3:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_100_by_1",
																						"typeString": "int_const 100"
																					},
																					"value": "100"
																				},
																				"src": "2809:64:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2799:74:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 655,
																		"nodeType": "ExpressionStatement",
																		"src": "2799:74:1"
																	},
																	{
																		"expression": {
																			"id": 663,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 656,
																				"name": "totalIntrestAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 387,
																				"src": "2891:18:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 662,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"baseExpression": {
																							"id": 657,
																							"name": "Stake_details",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 394,
																							"src": "2911:13:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$364_storage_$",
																								"typeString": "mapping(address => struct Staking_Token.Stake storage ref)"
																							}
																						},
																						"id": 659,
																						"indexExpression": {
																							"id": 658,
																							"name": "_address",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 614,
																							"src": "2925:8:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "2911:23:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Stake_$364_storage",
																							"typeString": "struct Staking_Token.Stake storage ref"
																						}
																					},
																					"id": 660,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "2935:12:1",
																					"memberName": "stake_amount",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 351,
																					"src": "2911:36:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"id": 661,
																					"name": "Interest",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 385,
																					"src": "2950:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "2911:47:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2891:67:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 664,
																		"nodeType": "ExpressionStatement",
																		"src": "2891:67:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 670,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "2999:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_Staking_Token_$967",
																								"typeString": "contract Staking_Token"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_Staking_Token_$967",
																								"typeString": "contract Staking_Token"
																							}
																						],
																						"id": 669,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "2991:7:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 668,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "2991:7:1",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 671,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2991:13:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 672,
																					"name": "_address",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 614,
																					"src": "3005:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 673,
																					"name": "totalIntrestAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 387,
																					"src": "3015:18:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 665,
																					"name": "Token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 338,
																					"src": "2976:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_ERC20Basic_$332",
																						"typeString": "contract ERC20Basic"
																					}
																				},
																				"id": 667,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2982:8:1",
																				"memberName": "transfer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 198,
																				"src": "2976:14:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,address,uint256) external returns (bool)"
																				}
																			},
																			"id": 674,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2976:58:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 675,
																		"nodeType": "ExpressionStatement",
																		"src": "2976:58:1"
																	},
																	{
																		"expression": {
																			"id": 679,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "delete",
																			"prefix": true,
																			"src": "3052:30:1",
																			"subExpression": {
																				"baseExpression": {
																					"id": 676,
																					"name": "Stake_details",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 394,
																					"src": "3059:13:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$364_storage_$",
																						"typeString": "mapping(address => struct Staking_Token.Stake storage ref)"
																					}
																				},
																				"id": 678,
																				"indexExpression": {
																					"id": 677,
																					"name": "_address",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 614,
																					"src": "3073:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3059:23:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Stake_$364_storage",
																					"typeString": "struct Staking_Token.Stake storage ref"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 680,
																		"nodeType": "ExpressionStatement",
																		"src": "3052:30:1"
																	},
																	{
																		"expression": {
																			"id": 687,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 681,
																						"name": "Stake_details",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 394,
																						"src": "3100:13:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$364_storage_$",
																							"typeString": "mapping(address => struct Staking_Token.Stake storage ref)"
																						}
																					},
																					"id": 684,
																					"indexExpression": {
																						"expression": {
																							"id": 682,
																							"name": "msg",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967281,
																							"src": "3114:3:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_message",
																								"typeString": "msg"
																							}
																						},
																						"id": 683,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "3118:6:1",
																						"memberName": "sender",
																						"nodeType": "MemberAccess",
																						"src": "3114:10:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "3100:25:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Stake_$364_storage",
																						"typeString": "struct Staking_Token.Stake storage ref"
																					}
																				},
																				"id": 685,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "3126:9:1",
																				"memberName": "isClaimed",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 363,
																				"src": "3100:35:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "74727565",
																				"id": 686,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3137:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "true"
																			},
																			"src": "3100:41:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 688,
																		"nodeType": "ExpressionStatement",
																		"src": "3100:41:1"
																	},
																	{
																		"expression": {
																			"id": 689,
																			"name": "totalIntrestAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 387,
																			"src": "3166:18:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"functionReturnParameters": 618,
																		"id": 690,
																		"nodeType": "Return",
																		"src": "3159:25:1"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"functionSelector": "cb8d751a",
									"id": 825,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unstaking",
									"nameLocation": "2505:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "2523:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "2515:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2515:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2514:18:1"
									},
									"returnParameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "2549:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2549:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2548:9:1"
									},
									"scope": 967,
									"src": "2496:1920:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 837,
										"nodeType": "Block",
										"src": "4492:49:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 834,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 827,
															"src": "4525:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 832,
															"name": "Token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 338,
															"src": "4509:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20Basic_$332",
																"typeString": "contract ERC20Basic"
															}
														},
														"id": 833,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4515:9:1",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 148,
														"src": "4509:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4509:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 831,
												"id": 836,
												"nodeType": "Return",
												"src": "4502:32:1"
											}
										]
									},
									"functionSelector": "b6e2b395",
									"id": 838,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "TokenBalance",
									"nameLocation": "4431:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "4452:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "4444:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 826,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4444:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4443:18:1"
									},
									"returnParameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "4483:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 829,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4483:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4482:9:1"
									},
									"scope": 967,
									"src": "4422:119:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 898,
										"nodeType": "Block",
										"src": "4620:494:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 845,
																"name": "Stake_details",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 394,
																"src": "4630:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$364_storage_$",
																	"typeString": "mapping(address => struct Staking_Token.Stake storage ref)"
																}
															},
															"id": 847,
															"indexExpression": {
																"id": 846,
																"name": "_address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 840,
																"src": "4644:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4630:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$364_storage",
																"typeString": "struct Staking_Token.Stake storage ref"
															}
														},
														"id": 848,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4654:7:1",
														"memberName": "isFixed",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 359,
														"src": "4630:31:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "74727565",
														"id": 849,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4665:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4630:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 882,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 875,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "4913:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 876,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4919:9:1",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "4913:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"expression": {
																"baseExpression": {
																	"id": 877,
																	"name": "Stake_details",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 394,
																	"src": "4931:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$364_storage_$",
																		"typeString": "mapping(address => struct Staking_Token.Stake storage ref)"
																	}
																},
																"id": 880,
																"indexExpression": {
																	"expression": {
																		"id": 878,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4945:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 879,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4949:6:1",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4945:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4931:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$364_storage",
																	"typeString": "struct Staking_Token.Stake storage ref"
																}
															},
															"id": 881,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4957:10:1",
															"memberName": "stake_time",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 355,
															"src": "4931:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4913:54:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 895,
														"nodeType": "Block",
														"src": "5041:71:1",
														"statements": [
															{
																"expression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 893,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 888,
																				"name": "Stake_details",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 394,
																				"src": "5058:13:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$364_storage_$",
																					"typeString": "mapping(address => struct Staking_Token.Stake storage ref)"
																				}
																			},
																			"id": 890,
																			"indexExpression": {
																				"id": 889,
																				"name": "_address",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 840,
																				"src": "5072:8:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5058:23:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$364_storage",
																				"typeString": "struct Staking_Token.Stake storage ref"
																			}
																		},
																		"id": 891,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5082:12:1",
																		"memberName": "stake_amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 351,
																		"src": "5058:36:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 892,
																		"name": "Interest",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 385,
																		"src": "5097:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5058:47:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 844,
																"id": 894,
																"nodeType": "Return",
																"src": "5051:54:1"
															}
														]
													},
													"id": 896,
													"nodeType": "IfStatement",
													"src": "4910:202:1",
													"trueBody": {
														"id": 887,
														"nodeType": "Block",
														"src": "4968:62:1",
														"statements": [
															{
																"expression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 885,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 883,
																		"name": "finalAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 389,
																		"src": "4986:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 884,
																		"name": "totalIntrestAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 387,
																		"src": "5000:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4986:32:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 844,
																"id": 886,
																"nodeType": "Return",
																"src": "4979:39:1"
															}
														]
													}
												},
												"id": 897,
												"nodeType": "IfStatement",
												"src": "4626:486:1",
												"trueBody": {
													"id": 874,
													"nodeType": "Block",
													"src": "4671:229:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 858,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 851,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "4685:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 852,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4691:9:1",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "4685:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 853,
																			"name": "Stake_details",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 394,
																			"src": "4703:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$364_storage_$",
																				"typeString": "mapping(address => struct Staking_Token.Stake storage ref)"
																			}
																		},
																		"id": 856,
																		"indexExpression": {
																			"expression": {
																				"id": 854,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "4717:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 855,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4721:6:1",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "4717:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4703:25:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$364_storage",
																			"typeString": "struct Staking_Token.Stake storage ref"
																		}
																	},
																	"id": 857,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4729:10:1",
																	"memberName": "stake_time",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 355,
																	"src": "4703:36:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4685:54:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 872,
																"nodeType": "Block",
																"src": "4826:68:1",
																"statements": [
																	{
																		"expression": {
																			"expression": {
																				"baseExpression": {
																					"id": 867,
																					"name": "Stake_details",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 394,
																					"src": "4847:13:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$364_storage_$",
																						"typeString": "mapping(address => struct Staking_Token.Stake storage ref)"
																					}
																				},
																				"id": 869,
																				"indexExpression": {
																					"id": 868,
																					"name": "_address",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 840,
																					"src": "4861:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "4847:23:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Stake_$364_storage",
																					"typeString": "struct Staking_Token.Stake storage ref"
																				}
																			},
																			"id": 870,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4871:12:1",
																			"memberName": "stake_amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 351,
																			"src": "4847:36:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"functionReturnParameters": 844,
																		"id": 871,
																		"nodeType": "Return",
																		"src": "4840:43:1"
																	}
																]
															},
															"id": 873,
															"nodeType": "IfStatement",
															"src": "4681:213:1",
															"trueBody": {
																"id": 866,
																"nodeType": "Block",
																"src": "4741:79:1",
																"statements": [
																	{
																		"expression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 864,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 859,
																						"name": "Stake_details",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 394,
																						"src": "4762:13:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$364_storage_$",
																							"typeString": "mapping(address => struct Staking_Token.Stake storage ref)"
																						}
																					},
																					"id": 861,
																					"indexExpression": {
																						"id": 860,
																						"name": "_address",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 840,
																						"src": "4776:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "4762:23:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Stake_$364_storage",
																						"typeString": "struct Staking_Token.Stake storage ref"
																					}
																				},
																				"id": 862,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4786:12:1",
																				"memberName": "stake_amount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 351,
																				"src": "4762:36:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 863,
																				"name": "Interest",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 385,
																				"src": "4801:8:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4762:47:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"functionReturnParameters": 844,
																		"id": 865,
																		"nodeType": "Return",
																		"src": "4755:54:1"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"functionSelector": "bd834345",
									"id": 899,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimedRewards",
									"nameLocation": "4557:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "4580:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "4572:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 839,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4571:18:1"
									},
									"returnParameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "4611:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 842,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4611:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4610:9:1"
									},
									"scope": 967,
									"src": "4548:566:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 941,
										"nodeType": "Block",
										"src": "5191:343:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 906,
																"name": "Stake_details",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 394,
																"src": "5201:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$364_storage_$",
																	"typeString": "mapping(address => struct Staking_Token.Stake storage ref)"
																}
															},
															"id": 908,
															"indexExpression": {
																"id": 907,
																"name": "_address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 901,
																"src": "5215:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5201:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$364_storage",
																"typeString": "struct Staking_Token.Stake storage ref"
															}
														},
														"id": 909,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5225:7:1",
														"memberName": "isFixed",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 359,
														"src": "5201:31:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "74727565",
														"id": 910,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5236:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "5201:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 939,
													"nodeType": "Block",
													"src": "5390:142:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 931,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 926,
																			"name": "Stake_details",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 394,
																			"src": "5404:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$364_storage_$",
																				"typeString": "mapping(address => struct Staking_Token.Stake storage ref)"
																			}
																		},
																		"id": 928,
																		"indexExpression": {
																			"id": 927,
																			"name": "_address",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 901,
																			"src": "5418:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5404:23:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$364_storage",
																			"typeString": "struct Staking_Token.Stake storage ref"
																		}
																	},
																	"id": 929,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5428:9:1",
																	"memberName": "isClaimed",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 363,
																	"src": "5404:33:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "74727565",
																	"id": 930,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5441:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5404:41:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 937,
																"nodeType": "Block",
																"src": "5486:40:1",
																"statements": [
																	{
																		"expression": {
																			"id": 935,
																			"name": "Interest",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 385,
																			"src": "5507:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"functionReturnParameters": 905,
																		"id": 936,
																		"nodeType": "Return",
																		"src": "5500:15:1"
																	}
																]
															},
															"id": 938,
															"nodeType": "IfStatement",
															"src": "5400:126:1",
															"trueBody": {
																"id": 934,
																"nodeType": "Block",
																"src": "5447:33:1",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "30",
																			"id": 932,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5468:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"functionReturnParameters": 905,
																		"id": 933,
																		"nodeType": "Return",
																		"src": "5461:8:1"
																	}
																]
															}
														}
													]
												},
												"id": 940,
												"nodeType": "IfStatement",
												"src": "5197:335:1",
												"trueBody": {
													"id": 925,
													"nodeType": "Block",
													"src": "5242:142:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 917,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 912,
																			"name": "Stake_details",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 394,
																			"src": "5256:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$364_storage_$",
																				"typeString": "mapping(address => struct Staking_Token.Stake storage ref)"
																			}
																		},
																		"id": 914,
																		"indexExpression": {
																			"id": 913,
																			"name": "_address",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 901,
																			"src": "5270:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5256:23:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$364_storage",
																			"typeString": "struct Staking_Token.Stake storage ref"
																		}
																	},
																	"id": 915,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5280:9:1",
																	"memberName": "isClaimed",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 363,
																	"src": "5256:33:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "74727565",
																	"id": 916,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5293:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5256:41:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 923,
																"nodeType": "Block",
																"src": "5338:40:1",
																"statements": [
																	{
																		"expression": {
																			"id": 921,
																			"name": "Interest",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 385,
																			"src": "5359:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"functionReturnParameters": 905,
																		"id": 922,
																		"nodeType": "Return",
																		"src": "5352:15:1"
																	}
																]
															},
															"id": 924,
															"nodeType": "IfStatement",
															"src": "5252:126:1",
															"trueBody": {
																"id": 920,
																"nodeType": "Block",
																"src": "5299:33:1",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "30",
																			"id": 918,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5320:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"functionReturnParameters": 905,
																		"id": 919,
																		"nodeType": "Return",
																		"src": "5313:8:1"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"functionSelector": "949813b8",
									"id": 942,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unclaimedRewards",
									"nameLocation": "5125:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "5150:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "5142:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 900,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5142:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5141:18:1"
									},
									"returnParameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "5182:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5182:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5181:9:1"
									},
									"scope": 967,
									"src": "5116:418:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 954,
										"nodeType": "Block",
										"src": "5620:47:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 950,
														"name": "Stake_details",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 394,
														"src": "5637:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$364_storage_$",
															"typeString": "mapping(address => struct Staking_Token.Stake storage ref)"
														}
													},
													"id": 952,
													"indexExpression": {
														"id": 951,
														"name": "_address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "5651:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5637:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$364_storage",
														"typeString": "struct Staking_Token.Stake storage ref"
													}
												},
												"functionReturnParameters": 949,
												"id": 953,
												"nodeType": "Return",
												"src": "5630:30:1"
											}
										]
									},
									"functionSelector": "f87c34f5",
									"id": 955,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getstaking_details",
									"nameLocation": "5548:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "5575:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "5567:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 943,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5567:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5566:18:1"
									},
									"returnParameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "5606:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Stake_$364_memory_ptr",
													"typeString": "struct Staking_Token.Stake"
												},
												"typeName": {
													"id": 947,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 946,
														"name": "Stake",
														"nameLocations": [
															"5606:5:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 364,
														"src": "5606:5:1"
													},
													"referencedDeclaration": 364,
													"src": "5606:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$364_storage_ptr",
														"typeString": "struct Staking_Token.Stake"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5605:14:1"
									},
									"scope": 967,
									"src": "5539:128:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 965,
										"nodeType": "Block",
										"src": "5733:37:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 962,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "5758:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Staking_Token_$967",
																"typeString": "contract Staking_Token"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_Staking_Token_$967",
																"typeString": "contract Staking_Token"
															}
														],
														"id": 961,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5750:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 960,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5750:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5750:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 959,
												"id": 964,
												"nodeType": "Return",
												"src": "5743:20:1"
											}
										]
									},
									"functionSelector": "15621373",
									"id": 966,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getcontractaddress",
									"nameLocation": "5682:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5700:2:1"
									},
									"returnParameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "5724:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 957,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5724:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5723:9:1"
									},
									"scope": 967,
									"src": "5673:97:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 968,
							"src": "82:5690:1",
							"usedErrors": [],
							"usedEvents": [
								402
							]
						}
					],
					"src": "32:5741:1"
				},
				"id": 1
			}
		}
	}
}