{
	"id": "9c34c11e5122576fd1f0cfdedb485fd7",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.10",
	"solcLongVersion": "0.8.10+commit.fc410830",
	"input": {
		"language": "Solidity",
		"sources": {
			"CrossChain/utils/ExcessivelySafeCall.sol": {
				"content": "// SPDX-License-Identifier: MIT OR Apache-2.0\npragma solidity >=0.7.6;\n\nlibrary ExcessivelySafeCall {\n    uint256 constant LOW_28_MASK =\n        0x00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff;\n\n    /// @notice Use when you _really_ really _really_ don't trust the called\n    /// contract. This prevents the called contract from causing reversion of\n    /// the caller in as many ways as we can.\n    /// @dev The main difference between this and a solidity low-level call is\n    /// that we limit the number of bytes that the callee can cause to be\n    /// copied to caller memory. This prevents stupid things like malicious\n    /// contracts returning 10,000,000 bytes causing a local OOG when copying\n    /// to memory.\n    /// @param _target The address to call\n    /// @param _gas The amount of gas to forward to the remote contract\n    /// @param _maxCopy The maximum number of bytes of returndata to copy\n    /// to memory.\n    /// @param _calldata The data to send to the remote contract\n    /// @return success and returndata, as `.call()`. Returndata is capped to\n    /// `_maxCopy` bytes.\n    function excessivelySafeCall(\n        address _target,\n        uint256 _gas,\n        uint16 _maxCopy,\n        bytes memory _calldata\n    ) internal returns (bool, bytes memory) {\n        // set up for assembly call\n        uint256 _toCopy;\n        bool _success;\n        bytes memory _returnData = new bytes(_maxCopy);\n        // dispatch message to recipient\n        // by assembly calling \"handle\" function\n        // we call via assembly to avoid memcopying a very large returndata\n        // returned by a malicious contract\n        assembly {\n            _success := call(\n                _gas, // gas\n                _target, // recipient\n                0, // ether value\n                add(_calldata, 0x20), // inloc\n                mload(_calldata), // inlen\n                0, // outloc\n                0 // outlen\n            )\n            // limit our copy to 256 bytes\n            _toCopy := returndatasize()\n            if gt(_toCopy, _maxCopy) {\n                _toCopy := _maxCopy\n            }\n            // Store the length of the copied bytes\n            mstore(_returnData, _toCopy)\n            // copy the bytes from returndata[0:_toCopy]\n            returndatacopy(add(_returnData, 0x20), 0, _toCopy)\n        }\n        return (_success, _returnData);\n    }\n\n    /// @notice Use when you _really_ really _really_ don't trust the called\n    /// contract. This prevents the called contract from causing reversion of\n    /// the caller in as many ways as we can.\n    /// @dev The main difference between this and a solidity low-level call is\n    /// that we limit the number of bytes that the callee can cause to be\n    /// copied to caller memory. This prevents stupid things like malicious\n    /// contracts returning 10,000,000 bytes causing a local OOG when copying\n    /// to memory.\n    /// @param _target The address to call\n    /// @param _gas The amount of gas to forward to the remote contract\n    /// @param _maxCopy The maximum number of bytes of returndata to copy\n    /// to memory.\n    /// @param _calldata The data to send to the remote contract\n    /// @return success and returndata, as `.call()`. Returndata is capped to\n    /// `_maxCopy` bytes.\n    function excessivelySafeStaticCall(\n        address _target,\n        uint256 _gas,\n        uint16 _maxCopy,\n        bytes memory _calldata\n    ) internal view returns (bool, bytes memory) {\n        // set up for assembly call\n        uint256 _toCopy;\n        bool _success;\n        bytes memory _returnData = new bytes(_maxCopy);\n        // dispatch message to recipient\n        // by assembly calling \"handle\" function\n        // we call via assembly to avoid memcopying a very large returndata\n        // returned by a malicious contract\n        assembly {\n            _success := staticcall(\n                _gas, // gas\n                _target, // recipient\n                add(_calldata, 0x20), // inloc\n                mload(_calldata), // inlen\n                0, // outloc\n                0 // outlen\n            )\n            // limit our copy to 256 bytes\n            _toCopy := returndatasize()\n            if gt(_toCopy, _maxCopy) {\n                _toCopy := _maxCopy\n            }\n            // Store the length of the copied bytes\n            mstore(_returnData, _toCopy)\n            // copy the bytes from returndata[0:_toCopy]\n            returndatacopy(add(_returnData, 0x20), 0, _toCopy)\n        }\n        return (_success, _returnData);\n    }\n\n    /**\n     * @notice Swaps function selectors in encoded contract calls\n     * @dev Allows reuse of encoded calldata for functions with identical\n     * argument types but different names. It simply swaps out the first 4 bytes\n     * for the new selector. This function modifies memory in place, and should\n     * only be used with caution.\n     * @param _newSelector The new 4-byte selector\n     * @param _buf The encoded contract args\n     */\n    function swapSelector(\n        bytes4 _newSelector,\n        bytes memory _buf\n    ) internal pure {\n        require(_buf.length >= 4);\n        uint256 _mask = LOW_28_MASK;\n        assembly {\n            // load the first word of\n            let _word := mload(add(_buf, 0x20))\n            // mask out the top 4 bytes\n            // /x\n            _word := and(_word, _mask)\n            _word := or(_newSelector, _word)\n            mstore(add(_buf, 0x20), _word)\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"CrossChain/utils/ExcessivelySafeCall.sol": {
				"ExcessivelySafeCall": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"CrossChain/utils/ExcessivelySafeCall.sol\":72:5507  library ExcessivelySafeCall {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"CrossChain/utils/ExcessivelySafeCall.sol\":72:5507  library ExcessivelySafeCall {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bb4793d8ef0952ae64d93b25f9694812094d94c5e27092d3cbbae0e32538b89664736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bb4793d8ef0952ae64d93b25f9694812094d94c5e27092d3cbbae0e32538b89664736f6c634300080a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB SELFBALANCE SWAP4 0xD8 0xEF MULMOD MSTORE 0xAE PUSH5 0xD93B25F969 BASEFEE SLT MULMOD 0x4D SWAP5 0xC5 0xE2 PUSH17 0x92D3CBBAE0E32538B89664736F6C634300 ADDMOD EXP STOP CALLER ",
							"sourceMap": "72:5435:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;72:5435:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bb4793d8ef0952ae64d93b25f9694812094d94c5e27092d3cbbae0e32538b89664736f6c634300080a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB SELFBALANCE SWAP4 0xD8 0xEF MULMOD MSTORE 0xAE PUSH5 0xD93B25F969 BASEFEE SLT MULMOD 0x4D SWAP5 0xC5 0xE2 PUSH17 0x92D3CBBAE0E32538B89664736F6C634300 ADDMOD EXP STOP CALLER ",
							"sourceMap": "72:5435:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"excessivelySafeCall(address,uint256,uint16,bytes memory)": "infinite",
								"excessivelySafeStaticCall(address,uint256,uint16,bytes memory)": "infinite",
								"swapSelector(bytes4,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 72,
									"end": 5507,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 72,
									"end": 5507,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 72,
									"end": 5507,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 72,
									"end": 5507,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 72,
									"end": 5507,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 72,
									"end": 5507,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 72,
									"end": 5507,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 72,
									"end": 5507,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 72,
									"end": 5507,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 72,
									"end": 5507,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 72,
									"end": 5507,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 72,
									"end": 5507,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 72,
									"end": 5507,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 72,
									"end": 5507,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 72,
									"end": 5507,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 72,
									"end": 5507,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 72,
									"end": 5507,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 72,
									"end": 5507,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 72,
									"end": 5507,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 72,
									"end": 5507,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 72,
									"end": 5507,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 72,
									"end": 5507,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 72,
									"end": 5507,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 72,
									"end": 5507,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 72,
									"end": 5507,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 72,
									"end": 5507,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 72,
									"end": 5507,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 72,
									"end": 5507,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 72,
									"end": 5507,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 72,
									"end": 5507,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 72,
									"end": 5507,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 72,
									"end": 5507,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 72,
									"end": 5507,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 72,
									"end": 5507,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bb4793d8ef0952ae64d93b25f9694812094d94c5e27092d3cbbae0e32538b89664736f6c634300080a0033",
									".code": [
										{
											"begin": 72,
											"end": 5507,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 72,
											"end": 5507,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 72,
											"end": 5507,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 72,
											"end": 5507,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 72,
											"end": 5507,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 72,
											"end": 5507,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 72,
											"end": 5507,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 72,
											"end": 5507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72,
											"end": 5507,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"CrossChain/utils/ExcessivelySafeCall.sol\":\"ExcessivelySafeCall\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"CrossChain/utils/ExcessivelySafeCall.sol\":{\"keccak256\":\"0xca098dfa0d4b2c06921b5d4dec815027ca7a8d0326198b26a3a8fabcf3eda8c5\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://2b346b8bb66923691641940a2ffeecb8d0fa96cbd0ea9daf0086ba401426cbf9\",\"dweb:/ipfs/QmcKcD8xuEGias1UcMfeCfqauMyG6NyA37YnHN44rLGjX7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"CrossChain/utils/ExcessivelySafeCall.sol": {
				"ast": {
					"absolutePath": "CrossChain/utils/ExcessivelySafeCall.sol",
					"exportedSymbols": {
						"ExcessivelySafeCall": [
							96
						]
					},
					"id": 97,
					"license": "MIT OR Apache-2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "46:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ExcessivelySafeCall",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 96,
							"linearizedBaseContracts": [
								96
							],
							"name": "ExcessivelySafeCall",
							"nameLocation": "80:19:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 4,
									"mutability": "constant",
									"name": "LOW_28_MASK",
									"nameLocation": "123:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 96,
									"src": "106:105:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "106:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "307830303030303030306666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666",
										"id": 3,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "145:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_26959946667150639794667015087019630673637144422540572481103610249215_by_1",
											"typeString": "int_const 2695...(60 digits omitted)...9215"
										},
										"value": "0x00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 38,
										"nodeType": "Block",
										"src": "1299:1103:0",
										"statements": [
											{
												"assignments": [
													21
												],
												"declarations": [
													{
														"constant": false,
														"id": 21,
														"mutability": "mutable",
														"name": "_toCopy",
														"nameLocation": "1353:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 38,
														"src": "1345:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 20,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1345:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 22,
												"nodeType": "VariableDeclarationStatement",
												"src": "1345:15:0"
											},
											{
												"assignments": [
													24
												],
												"declarations": [
													{
														"constant": false,
														"id": 24,
														"mutability": "mutable",
														"name": "_success",
														"nameLocation": "1375:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 38,
														"src": "1370:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 23,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1370:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 25,
												"nodeType": "VariableDeclarationStatement",
												"src": "1370:13:0"
											},
											{
												"assignments": [
													27
												],
												"declarations": [
													{
														"constant": false,
														"id": 27,
														"mutability": "mutable",
														"name": "_returnData",
														"nameLocation": "1406:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 38,
														"src": "1393:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 26,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1393:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 32,
												"initialValue": {
													"arguments": [
														{
															"id": 30,
															"name": "_maxCopy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "1430:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														],
														"id": 29,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1420:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 28,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1424:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 31,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1420:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1393:46:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1668:688:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1682:279:0",
															"value": {
																"arguments": [
																	{
																		"name": "_gas",
																		"nodeType": "YulIdentifier",
																		"src": "1716:4:0"
																	},
																	{
																		"name": "_target",
																		"nodeType": "YulIdentifier",
																		"src": "1745:7:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1783:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_calldata",
																				"nodeType": "YulIdentifier",
																				"src": "1821:9:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1832:4:0",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1817:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1817:20:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_calldata",
																				"nodeType": "YulIdentifier",
																				"src": "1870:9:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1864:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1864:16:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1907:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1936:1:0",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nodeType": "YulIdentifier",
																	"src": "1694:4:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1694:267:0"
															},
															"variableNames": [
																{
																	"name": "_success",
																	"nodeType": "YulIdentifier",
																	"src": "1682:8:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2017:27:0",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "2028:14:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "2028:16:0"
															},
															"variableNames": [
																{
																	"name": "_toCopy",
																	"nodeType": "YulIdentifier",
																	"src": "2017:7:0"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2082:51:0",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2100:19:0",
																		"value": {
																			"name": "_maxCopy",
																			"nodeType": "YulIdentifier",
																			"src": "2111:8:0"
																		},
																		"variableNames": [
																			{
																				"name": "_toCopy",
																				"nodeType": "YulIdentifier",
																				"src": "2100:7:0"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_toCopy",
																		"nodeType": "YulIdentifier",
																		"src": "2063:7:0"
																	},
																	{
																		"name": "_maxCopy",
																		"nodeType": "YulIdentifier",
																		"src": "2072:8:0"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2060:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "2060:21:0"
															},
															"nodeType": "YulIf",
															"src": "2057:76:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_returnData",
																		"nodeType": "YulIdentifier",
																		"src": "2205:11:0"
																	},
																	{
																		"name": "_toCopy",
																		"nodeType": "YulIdentifier",
																		"src": "2218:7:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2198:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "2198:28:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2198:28:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_returnData",
																				"nodeType": "YulIdentifier",
																				"src": "2315:11:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2328:4:0",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2311:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2311:22:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2335:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "_toCopy",
																		"nodeType": "YulIdentifier",
																		"src": "2338:7:0"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "2296:14:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "2296:50:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2296:50:0"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 13,
														"isOffset": false,
														"isSlot": false,
														"src": "1821:9:0",
														"valueSize": 1
													},
													{
														"declaration": 13,
														"isOffset": false,
														"isSlot": false,
														"src": "1870:9:0",
														"valueSize": 1
													},
													{
														"declaration": 9,
														"isOffset": false,
														"isSlot": false,
														"src": "1716:4:0",
														"valueSize": 1
													},
													{
														"declaration": 11,
														"isOffset": false,
														"isSlot": false,
														"src": "2072:8:0",
														"valueSize": 1
													},
													{
														"declaration": 11,
														"isOffset": false,
														"isSlot": false,
														"src": "2111:8:0",
														"valueSize": 1
													},
													{
														"declaration": 27,
														"isOffset": false,
														"isSlot": false,
														"src": "2205:11:0",
														"valueSize": 1
													},
													{
														"declaration": 27,
														"isOffset": false,
														"isSlot": false,
														"src": "2315:11:0",
														"valueSize": 1
													},
													{
														"declaration": 24,
														"isOffset": false,
														"isSlot": false,
														"src": "1682:8:0",
														"valueSize": 1
													},
													{
														"declaration": 7,
														"isOffset": false,
														"isSlot": false,
														"src": "1745:7:0",
														"valueSize": 1
													},
													{
														"declaration": 21,
														"isOffset": false,
														"isSlot": false,
														"src": "2017:7:0",
														"valueSize": 1
													},
													{
														"declaration": 21,
														"isOffset": false,
														"isSlot": false,
														"src": "2063:7:0",
														"valueSize": 1
													},
													{
														"declaration": 21,
														"isOffset": false,
														"isSlot": false,
														"src": "2100:7:0",
														"valueSize": 1
													},
													{
														"declaration": 21,
														"isOffset": false,
														"isSlot": false,
														"src": "2218:7:0",
														"valueSize": 1
													},
													{
														"declaration": 21,
														"isOffset": false,
														"isSlot": false,
														"src": "2338:7:0",
														"valueSize": 1
													}
												],
												"id": 33,
												"nodeType": "InlineAssembly",
												"src": "1659:697:0"
											},
											{
												"expression": {
													"components": [
														{
															"id": 34,
															"name": "_success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "2373:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 35,
															"name": "_returnData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "2383:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"id": 36,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2372:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"functionReturnParameters": 19,
												"id": 37,
												"nodeType": "Return",
												"src": "2365:30:0"
											}
										]
									},
									"documentation": {
										"id": 5,
										"nodeType": "StructuredDocumentation",
										"src": "218:899:0",
										"text": "@notice Use when you _really_ really _really_ don't trust the called\n contract. This prevents the called contract from causing reversion of\n the caller in as many ways as we can.\n @dev The main difference between this and a solidity low-level call is\n that we limit the number of bytes that the callee can cause to be\n copied to caller memory. This prevents stupid things like malicious\n contracts returning 10,000,000 bytes causing a local OOG when copying\n to memory.\n @param _target The address to call\n @param _gas The amount of gas to forward to the remote contract\n @param _maxCopy The maximum number of bytes of returndata to copy\n to memory.\n @param _calldata The data to send to the remote contract\n @return success and returndata, as `.call()`. Returndata is capped to\n `_maxCopy` bytes."
									},
									"id": 39,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "excessivelySafeCall",
									"nameLocation": "1131:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "_target",
												"nameLocation": "1168:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "1160:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1160:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "_gas",
												"nameLocation": "1193:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "1185:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "_maxCopy",
												"nameLocation": "1214:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "1207:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 10,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1207:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "_calldata",
												"nameLocation": "1245:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "1232:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 12,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1232:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1150:110:0"
									},
									"returnParameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "1279:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 15,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1279:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "1285:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 17,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1285:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1278:20:0"
									},
									"scope": 96,
									"src": "1122:1280:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "3500:1075:0",
										"statements": [
											{
												"assignments": [
													56
												],
												"declarations": [
													{
														"constant": false,
														"id": 56,
														"mutability": "mutable",
														"name": "_toCopy",
														"nameLocation": "3554:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 73,
														"src": "3546:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 55,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3546:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 57,
												"nodeType": "VariableDeclarationStatement",
												"src": "3546:15:0"
											},
											{
												"assignments": [
													59
												],
												"declarations": [
													{
														"constant": false,
														"id": 59,
														"mutability": "mutable",
														"name": "_success",
														"nameLocation": "3576:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 73,
														"src": "3571:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 58,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3571:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 60,
												"nodeType": "VariableDeclarationStatement",
												"src": "3571:13:0"
											},
											{
												"assignments": [
													62
												],
												"declarations": [
													{
														"constant": false,
														"id": 62,
														"mutability": "mutable",
														"name": "_returnData",
														"nameLocation": "3607:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 73,
														"src": "3594:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 61,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3594:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 67,
												"initialValue": {
													"arguments": [
														{
															"id": 65,
															"name": "_maxCopy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 46,
															"src": "3631:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														],
														"id": 64,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "3621:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 63,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3625:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3621:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3594:46:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3869:660:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3883:251:0",
															"value": {
																"arguments": [
																	{
																		"name": "_gas",
																		"nodeType": "YulIdentifier",
																		"src": "3923:4:0"
																	},
																	{
																		"name": "_target",
																		"nodeType": "YulIdentifier",
																		"src": "3952:7:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_calldata",
																				"nodeType": "YulIdentifier",
																				"src": "3994:9:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4005:4:0",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3990:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3990:20:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_calldata",
																				"nodeType": "YulIdentifier",
																				"src": "4043:9:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "4037:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4037:16:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4080:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4109:1:0",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "staticcall",
																	"nodeType": "YulIdentifier",
																	"src": "3895:10:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "3895:239:0"
															},
															"variableNames": [
																{
																	"name": "_success",
																	"nodeType": "YulIdentifier",
																	"src": "3883:8:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4190:27:0",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "4201:14:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "4201:16:0"
															},
															"variableNames": [
																{
																	"name": "_toCopy",
																	"nodeType": "YulIdentifier",
																	"src": "4190:7:0"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4255:51:0",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4273:19:0",
																		"value": {
																			"name": "_maxCopy",
																			"nodeType": "YulIdentifier",
																			"src": "4284:8:0"
																		},
																		"variableNames": [
																			{
																				"name": "_toCopy",
																				"nodeType": "YulIdentifier",
																				"src": "4273:7:0"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_toCopy",
																		"nodeType": "YulIdentifier",
																		"src": "4236:7:0"
																	},
																	{
																		"name": "_maxCopy",
																		"nodeType": "YulIdentifier",
																		"src": "4245:8:0"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4233:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "4233:21:0"
															},
															"nodeType": "YulIf",
															"src": "4230:76:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_returnData",
																		"nodeType": "YulIdentifier",
																		"src": "4378:11:0"
																	},
																	{
																		"name": "_toCopy",
																		"nodeType": "YulIdentifier",
																		"src": "4391:7:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4371:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "4371:28:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4371:28:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_returnData",
																				"nodeType": "YulIdentifier",
																				"src": "4488:11:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4501:4:0",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4484:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4484:22:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4508:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "_toCopy",
																		"nodeType": "YulIdentifier",
																		"src": "4511:7:0"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "4469:14:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "4469:50:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4469:50:0"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 48,
														"isOffset": false,
														"isSlot": false,
														"src": "3994:9:0",
														"valueSize": 1
													},
													{
														"declaration": 48,
														"isOffset": false,
														"isSlot": false,
														"src": "4043:9:0",
														"valueSize": 1
													},
													{
														"declaration": 44,
														"isOffset": false,
														"isSlot": false,
														"src": "3923:4:0",
														"valueSize": 1
													},
													{
														"declaration": 46,
														"isOffset": false,
														"isSlot": false,
														"src": "4245:8:0",
														"valueSize": 1
													},
													{
														"declaration": 46,
														"isOffset": false,
														"isSlot": false,
														"src": "4284:8:0",
														"valueSize": 1
													},
													{
														"declaration": 62,
														"isOffset": false,
														"isSlot": false,
														"src": "4378:11:0",
														"valueSize": 1
													},
													{
														"declaration": 62,
														"isOffset": false,
														"isSlot": false,
														"src": "4488:11:0",
														"valueSize": 1
													},
													{
														"declaration": 59,
														"isOffset": false,
														"isSlot": false,
														"src": "3883:8:0",
														"valueSize": 1
													},
													{
														"declaration": 42,
														"isOffset": false,
														"isSlot": false,
														"src": "3952:7:0",
														"valueSize": 1
													},
													{
														"declaration": 56,
														"isOffset": false,
														"isSlot": false,
														"src": "4190:7:0",
														"valueSize": 1
													},
													{
														"declaration": 56,
														"isOffset": false,
														"isSlot": false,
														"src": "4236:7:0",
														"valueSize": 1
													},
													{
														"declaration": 56,
														"isOffset": false,
														"isSlot": false,
														"src": "4273:7:0",
														"valueSize": 1
													},
													{
														"declaration": 56,
														"isOffset": false,
														"isSlot": false,
														"src": "4391:7:0",
														"valueSize": 1
													},
													{
														"declaration": 56,
														"isOffset": false,
														"isSlot": false,
														"src": "4511:7:0",
														"valueSize": 1
													}
												],
												"id": 68,
												"nodeType": "InlineAssembly",
												"src": "3860:669:0"
											},
											{
												"expression": {
													"components": [
														{
															"id": 69,
															"name": "_success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 59,
															"src": "4546:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 70,
															"name": "_returnData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 62,
															"src": "4556:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"id": 71,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "4545:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"functionReturnParameters": 54,
												"id": 72,
												"nodeType": "Return",
												"src": "4538:30:0"
											}
										]
									},
									"documentation": {
										"id": 40,
										"nodeType": "StructuredDocumentation",
										"src": "2408:899:0",
										"text": "@notice Use when you _really_ really _really_ don't trust the called\n contract. This prevents the called contract from causing reversion of\n the caller in as many ways as we can.\n @dev The main difference between this and a solidity low-level call is\n that we limit the number of bytes that the callee can cause to be\n copied to caller memory. This prevents stupid things like malicious\n contracts returning 10,000,000 bytes causing a local OOG when copying\n to memory.\n @param _target The address to call\n @param _gas The amount of gas to forward to the remote contract\n @param _maxCopy The maximum number of bytes of returndata to copy\n to memory.\n @param _calldata The data to send to the remote contract\n @return success and returndata, as `.call()`. Returndata is capped to\n `_maxCopy` bytes."
									},
									"id": 74,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "excessivelySafeStaticCall",
									"nameLocation": "3321:25:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "_target",
												"nameLocation": "3364:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "3356:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 41,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3356:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "_gas",
												"nameLocation": "3389:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "3381:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3381:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "_maxCopy",
												"nameLocation": "3410:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "3403:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 45,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "3403:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "_calldata",
												"nameLocation": "3441:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "3428:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 47,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3428:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3346:110:0"
									},
									"returnParameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "3480:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 50,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3480:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "3486:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 52,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3486:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3479:20:0"
									},
									"scope": 96,
									"src": "3312:1263:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 94,
										"nodeType": "Block",
										"src": "5126:379:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 83,
																	"name": "_buf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 79,
																	"src": "5144:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 84,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "5144:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "34",
																"id": 85,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5159:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4_by_1",
																	"typeString": "int_const 4"
																},
																"value": "4"
															},
															"src": "5144:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 82,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5136:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5136:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 88,
												"nodeType": "ExpressionStatement",
												"src": "5136:25:0"
											},
											{
												"assignments": [
													90
												],
												"declarations": [
													{
														"constant": false,
														"id": 90,
														"mutability": "mutable",
														"name": "_mask",
														"nameLocation": "5179:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 94,
														"src": "5171:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 89,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5171:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 92,
												"initialValue": {
													"id": 91,
													"name": "LOW_28_MASK",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4,
													"src": "5187:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5171:27:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5217:282:0",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5269:35:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_buf",
																				"nodeType": "YulIdentifier",
																				"src": "5292:4:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5298:4:0",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5288:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5288:15:0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5282:5:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "5282:22:0"
															},
															"variables": [
																{
																	"name": "_word",
																	"nodeType": "YulTypedName",
																	"src": "5273:5:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5375:26:0",
															"value": {
																"arguments": [
																	{
																		"name": "_word",
																		"nodeType": "YulIdentifier",
																		"src": "5388:5:0"
																	},
																	{
																		"name": "_mask",
																		"nodeType": "YulIdentifier",
																		"src": "5395:5:0"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5384:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "5384:17:0"
															},
															"variableNames": [
																{
																	"name": "_word",
																	"nodeType": "YulIdentifier",
																	"src": "5375:5:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5414:32:0",
															"value": {
																"arguments": [
																	{
																		"name": "_newSelector",
																		"nodeType": "YulIdentifier",
																		"src": "5426:12:0"
																	},
																	{
																		"name": "_word",
																		"nodeType": "YulIdentifier",
																		"src": "5440:5:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5423:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "5423:23:0"
															},
															"variableNames": [
																{
																	"name": "_word",
																	"nodeType": "YulIdentifier",
																	"src": "5414:5:0"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_buf",
																				"nodeType": "YulIdentifier",
																				"src": "5470:4:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5476:4:0",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5466:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5466:15:0"
																	},
																	{
																		"name": "_word",
																		"nodeType": "YulIdentifier",
																		"src": "5483:5:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5459:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "5459:30:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5459:30:0"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 79,
														"isOffset": false,
														"isSlot": false,
														"src": "5292:4:0",
														"valueSize": 1
													},
													{
														"declaration": 79,
														"isOffset": false,
														"isSlot": false,
														"src": "5470:4:0",
														"valueSize": 1
													},
													{
														"declaration": 90,
														"isOffset": false,
														"isSlot": false,
														"src": "5395:5:0",
														"valueSize": 1
													},
													{
														"declaration": 77,
														"isOffset": false,
														"isSlot": false,
														"src": "5426:12:0",
														"valueSize": 1
													}
												],
												"id": 93,
												"nodeType": "InlineAssembly",
												"src": "5208:291:0"
											}
										]
									},
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "4581:442:0",
										"text": " @notice Swaps function selectors in encoded contract calls\n @dev Allows reuse of encoded calldata for functions with identical\n argument types but different names. It simply swaps out the first 4 bytes\n for the new selector. This function modifies memory in place, and should\n only be used with caution.\n @param _newSelector The new 4-byte selector\n @param _buf The encoded contract args"
									},
									"id": 95,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapSelector",
									"nameLocation": "5037:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "_newSelector",
												"nameLocation": "5066:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "5059:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 76,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "5059:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "_buf",
												"nameLocation": "5101:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "5088:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 78,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5088:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5049:62:0"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5126:0:0"
									},
									"scope": 96,
									"src": "5028:477:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 97,
							"src": "72:5435:0",
							"usedErrors": []
						}
					],
					"src": "46:5462:0"
				},
				"id": 0
			}
		}
	}
}